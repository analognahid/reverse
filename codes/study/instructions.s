0x4f20:	mov	byte ptr [rsp + 8], 0
0x4f25:	jmp	0x107fa
0x4f2a:	call	0x4850
0x4f2f:	nop	
0x4f30:	endbr64	
0x4f34:	push	r15
0x4f36:	push	r14
0x4f38:	lea	r14, [rip + 0x1b669]
0x4f3f:	push	r13
0x4f41:	lea	r13, [rip + 0x1b2b4]
0x4f48:	push	r12
0x4f4a:	push	rbp
0x4f4b:	mov	ebp, edi
0x4f4d:	push	rbx
0x4f4e:	mov	rbx, rsi
0x4f51:	sub	rsp, 0x88
0x4f58:	mov	rax, qword ptr fs:[0x28]
0x4f61:	mov	qword ptr [rsp + 0x78], rax
0x4f66:	xor	eax, eax
0x4f68:	mov	dword ptr [rsp + 0x34], 0
0x4f70:	mov	qword ptr [rsp + 0x50], 0
0x4f79:	mov	qword ptr [rsp + 0x58], 0
0x4f82:	call	0x18c50
0x4f87:	lea	rsi, [rip + 0x1d457]
0x4f8e:	mov	edi, 6
0x4f93:	call	0x4d00
0x4f98:	mov	rax, qword ptr [rbx]
0x4f9b:	lea	rdi, [rip + 0x1b5be]
0x4fa2:	mov	qword ptr [rip + 0x2593f], rax
0x4fa9:	call	0x47e0
0x4fae:	lea	rdx, [rip + 0x1c729]
0x4fb5:	test	rax, rax
0x4fb8:	cmove	rax, rdx
0x4fbc:	mov	qword ptr [rip + 0x2592d], rax
0x4fc3:	xor	eax, eax
0x4fc5:	call	0x17660
0x4fca:	xor	eax, eax
0x4fcc:	call	0x18420
0x4fd1:	xor	eax, eax
0x4fd3:	call	0x18160
0x4fd8:	mov	edi, 0x25
0x4fdd:	call	0x1d670
0x4fe2:	lea	r8, [rip + 0x1b57c]
0x4fe9:	mov	esi, 1
0x4fee:	lea	rcx, [rip + 0x1b586]
0x4ff5:	mov	rdi, rax
0x4ff8:	mov	qword ptr [rip + 0x258d1], rax
0x4fff:	xor	eax, eax
0x5001:	mov	rdx, -1
0x5008:	call	0x4f10
0x500d:	lea	rdi, [rip + 0x1b571]
0x5014:	call	0x47e0
0x5019:	mov	dword ptr [rsp], 1
0x5020:	cmp	rax, 1
0x5024:	sbb	r12d, r12d
0x5027:	xor	r15d, r15d
0x502a:	or	r12d, 1
0x502e:	mov	rdx, r14
0x5031:	mov	rsi, rbx
0x5034:	mov	edi, ebp
0x5036:	call	0x4de0
0x503b:	cmp	eax, -1
0x503e:	je	0x510e
0x5044:	sub	eax, 0x3f
0x5047:	cmp	eax, 0x37
0x504a:	ja	0x5057
0x504c:	movsxd	rax, dword ptr [r13 + rax*4]
0x5051:	add	rax, r13
0x5054:	jmp	rax
0x5057:	mov	rcx, qword ptr [rip + 0x2588a]
0x505e:	mov	rdi, qword ptr [rip + 0x2581b]
0x5065:	lea	rdx, [rip + 0x1b529]
0x506c:	xor	eax, eax
0x506e:	mov	esi, 1
0x5073:	mov	r15d, 1
0x5079:	call	0x4e60
0x507e:	mov	rax, qword ptr [rsp + 0x78]
0x5083:	sub	rax, qword ptr fs:[0x28]
0x508c:	jne	0x7475
0x5092:	add	rsp, 0x88
0x5099:	mov	eax, r15d
0x509c:	pop	rbx
0x509d:	pop	rbp
0x509e:	pop	r12
0x50a0:	pop	r13
0x50a2:	pop	r14
0x50a4:	pop	r15
0x50a6:	ret	
0x50a7:	lea	rcx, [rip + 0x1b4e1]
0x50ae:	mov	edi, 1
0x50b3:	xor	eax, eax
0x50b5:	xor	r15d, r15d
0x50b8:	lea	rdx, [rip + 0x1b4a6]
0x50bf:	lea	rsi, [rip + 0x1b517]
0x50c6:	call	0x4d20
0x50cb:	jmp	0x507e
0x50cd:	mov	r15d, 1
0x50d3:	jmp	0x502e
0x50d8:	xor	eax, eax
0x50da:	xor	r15d, r15d
0x50dd:	call	0x9720
0x50e2:	jmp	0x507e
0x50e4:	mov	r12d, 1
0x50ea:	jmp	0x502e
0x50ef:	mov	dword ptr [rsp], 0
0x50f6:	jmp	0x502e
0x50fb:	mov	r15d, 1
0x5101:	jmp	0x507e
0x5106:	xor	r12d, r12d
0x5109:	jmp	0x502e
0x510e:	movsxd	rax, dword ptr [rip + 0x25733]
0x5115:	lea	r13, [rip + 0x1c5c2]
0x511c:	cmp	eax, ebp
0x511e:	jl	0x6f96
0x5124:	mov	r14, r13
0x5127:	mov	edi, 0xa
0x512c:	lea	rbp, [rip + 0x1b51c]
0x5133:	call	0x4810
0x5138:	lea	rax, [rip + 0x1b4a5]
0x513f:	lea	r9, [rip + 0x1b469]
0x5146:	mov	edi, 1
0x514b:	push	rsi
0x514c:	lea	r8, [rip + 0x1b465]
0x5153:	lea	rcx, [rip + 0x1b435]
0x515a:	push	rax
0x515b:	lea	rdx, [rip + 0x1b403]
0x5162:	lea	rsi, [rip + 0x1b468]
0x5169:	xor	eax, eax
0x516b:	call	0x4d20
0x5170:	mov	rsi, qword ptr [rip + 0x24b09]
0x5177:	mov	edi, 1
0x517c:	xor	eax, eax
0x517e:	call	0x4d20
0x5183:	xor	eax, eax
0x5185:	lea	rdx, [rip + 0x1b464]
0x518c:	lea	rsi, [rip + 0x1b464]
0x5193:	lea	rdi, [rip + 0x1b459]
0x519a:	call	0x92b0
0x519f:	xor	eax, eax
0x51a1:	lea	rdx, [rip + 0x1b456]
0x51a8:	lea	rsi, [rip + 0x1b458]
0x51af:	lea	rdi, [rip + 0x1b44d]
0x51b6:	call	0x92b0
0x51bb:	xor	esi, esi
0x51bd:	xor	eax, eax
0x51bf:	lea	rdx, [rip + 0x1b447]
0x51c6:	lea	rdi, [rip + 0x1b445]
0x51cd:	call	0x92b0
0x51d2:	xor	eax, eax
0x51d4:	lea	rdx, [rip + 0x1b443]
0x51db:	lea	rsi, [rip + 0x1b448]
0x51e2:	lea	rdi, [rip + 0x1b43d]
0x51e9:	call	0x92b0
0x51ee:	xor	esi, esi
0x51f0:	xor	eax, eax
0x51f2:	lea	rdx, [rip + 0x1b437]
0x51f9:	lea	rdi, [rip + 0x1b435]
0x5200:	call	0x92b0
0x5205:	lea	rdx, [rip + 0x1b433]
0x520c:	xor	esi, esi
0x520e:	xor	eax, eax
0x5210:	lea	rdi, [rip + 0x1b42d]
0x5217:	call	0x92b0
0x521c:	xor	edi, edi
0x521e:	call	0xc3d0
0x5223:	xor	eax, eax
0x5225:	call	0x179a0
0x522a:	mov	rdi, rbp
0x522d:	call	0x17c50
0x5232:	xor	eax, eax
0x5234:	call	0x18660
0x5239:	lea	rdi, [rip + 0x1b41b]
0x5240:	call	0x17c50
0x5245:	lea	rax, [rsp + 0x44]
0x524a:	xor	edi, edi
0x524c:	mov	rsi, rax
0x524f:	mov	qword ptr [rsp + 0x20], rax
0x5254:	xor	eax, eax
0x5256:	call	0x9310
0x525b:	mov	dword ptr [rsp + 0x1c], eax
0x525f:	mov	eax, dword ptr [rsp + 0x44]
0x5263:	add	dword ptr [rip + 0x25673], eax
0x5269:	xor	eax, eax
0x526b:	call	0x17280
0x5270:	xor	eax, eax
0x5272:	call	0x17a30
0x5277:	pop	rdi
0x5278:	lea	rdi, [rip + 0x1b3e9]
0x527f:	pop	r8
0x5281:	cmp	eax, 1
0x5284:	adc	dword ptr [rip + 0x25651], 0
0x528b:	call	0x47e0
0x5290:	mov	rbx, rax
0x5293:	test	rax, rax
0x5296:	je	0x7011
0x529c:	mov	rdi, rbx
0x529f:	call	0x49b0
0x52a4:	lea	rdi, [rax + 0x21]
0x52a8:	call	0x1d670
0x52ad:	mov	rdi, rbx
0x52b0:	mov	qword ptr [rip + 0x26819], rax
0x52b7:	call	0x49b0
0x52bc:	lea	rdi, [rax + 0x21]
0x52c0:	call	0x1d670
0x52c5:	xor	edi, edi
0x52c7:	mov	qword ptr [rip + 0x267fa], rax
0x52ce:	call	0x4be0
0x52d3:	mov	edi, eax
0x52d5:	call	0x4ae0
0x52da:	call	0x4ee0
0x52df:	mov	dword ptr [rsp + 0x1c], eax
0x52e3:	call	0x4ee0
0x52e8:	mov	dword ptr [rsp + 0x18], eax
0x52ec:	call	0x4920
0x52f1:	pxor	xmm0, xmm0
0x52f5:	mov	r8, rbx
0x52f8:	mov	rdi, qword ptr [rip + 0x267d1]
0x52ff:	mov	r9d, eax
0x5302:	push	rax
0x5303:	mov	edx, dword ptr [rsp + 0x24]
0x5307:	lea	rcx, [rip + 0x1b361]
0x530e:	mov	esi, 1
0x5313:	xor	eax, eax
0x5315:	cvtsi2sd	xmm0, edx
0x5319:	mulsd	xmm0, qword ptr [rip + 0x1b89f]
0x5321:	mulsd	xmm0, qword ptr [rip + 0x1b89f]
0x5329:	cvttsd2si	edx, xmm0
0x532d:	add	edx, 1
0x5330:	push	rdx
0x5331:	or	rdx, 0xffffffffffffffff
0x5335:	call	0x4f10
0x533a:	call	0x4920
0x533f:	mov	r10d, dword ptr [rsp + 0x28]
0x5344:	pxor	xmm0, xmm0
0x5348:	mov	rdi, qword ptr [rip + 0x26779]
0x534f:	mov	r9d, eax
0x5352:	mov	r8, rbx
0x5355:	mov	esi, 1
0x535a:	xor	eax, eax
0x535c:	cvtsi2sd	xmm0, r10d
0x5361:	mulsd	xmm0, qword ptr [rip + 0x1b857]
0x5369:	lea	rcx, [rip + 0x1b30e]
0x5370:	mulsd	xmm0, qword ptr [rip + 0x1b850]
0x5378:	cvttsd2si	edx, xmm0
0x537c:	add	edx, 1
0x537f:	mov	dword ptr [rsp], edx
0x5382:	or	rdx, 0xffffffffffffffff
0x5386:	call	0x4f10
0x538b:	lea	rdi, [rip + 0x1b2fb]
0x5392:	call	0x17c50
0x5397:	pop	rdx
0x5398:	pop	rcx
0x5399:	cmp	r12d, -1
0x539d:	je	0x7092
0x53a3:	cmp	dword ptr [rsp], 0
0x53a7:	mov	dword ptr [rip + 0x248b2], r12d
0x53ae:	jne	0x6f80
0x53b4:	mov	eax, dword ptr [rsp]
0x53b7:	mov	edi, eax
0x53b9:	mov	dword ptr [rip + 0x25519], eax
0x53bf:	call	0x9af0
0x53c4:	lea	rdi, [rip + 0x1b2e7]
0x53cb:	call	0x17c50
0x53d0:	xor	eax, eax
0x53d2:	cmp	dword ptr [rip + 0x24887], 1
0x53d9:	je	0x7050
0x53df:	xor	esi, esi
0x53e1:	lea	rdi, [rip + 0x1b2e8]
0x53e8:	mov	dword ptr [rip + 0x2486e], eax
0x53ee:	call	0x17e50
0x53f3:	lea	rsi, [rip + 0x1cfeb]
0x53fa:	lea	rdi, [rip + 0x1b2dd]
0x5401:	mov	dword ptr [rip + 0x25501], eax
0x5407:	call	0x17f10
0x540c:	lea	rsi, [rip + 0x1cfd2]
0x5413:	lea	rdi, [rip + 0x1b2d3]
0x541a:	mov	qword ptr [rip + 0x2484f], rax
0x5421:	call	0x17f10
0x5426:	cmp	dword ptr [rip + 0x24833], 0
0x542d:	lea	rdi, [rip + 0x24814]
0x5434:	mov	qword ptr [rip + 0x2482d], rax
0x543b:	lea	rax, [rip + 0x247ee]
0x5442:	cmove	rdi, rax
0x5446:	call	0x17c50
0x544b:	mov	edx, 8
0x5450:	lea	rsi, [rip + 0x25229]
0x5457:	lea	rdi, [rip + 0x251e2]
0x545e:	call	0x17f70
0x5463:	mov	rdi, rbp
0x5466:	call	0x17c50
0x546b:	xor	eax, eax
0x546d:	call	0x18660
0x5472:	lea	rdi, [rip + 0x1b1e2]
0x5479:	call	0x17c50
0x547e:	mov	rsi, qword ptr [rsp + 0x10]
0x5483:	mov	edi, dword ptr [rsp + 0xc]
0x5487:	xor	eax, eax
0x5489:	call	0x9310
0x548e:	mov	edx, dword ptr [rsp + 0x34]
0x5492:	add	dword ptr [rip + 0x25444], edx
0x5498:	cmp	eax, 0x800
0x549d:	je	0x7066
0x54a3:	call	0x49e0
0x54a8:	test	eax, eax
0x54aa:	jne	0x54b3
0x54ac:	mov	byte ptr [rip + 0x24753], 0x23
0x54b3:	xor	eax, eax
0x54b5:	call	0x18fe0
0x54ba:	mov	rbp, rax
0x54bd:	test	rax, rax
0x54c0:	je	0x73ec
0x54c6:	xor	eax, eax
0x54c8:	call	0x9e00
0x54cd:	xor	eax, eax
0x54cf:	call	0x16c10
0x54d4:	xor	eax, eax
0x54d6:	call	0xd060
0x54db:	mov	rdi, qword ptr [rip + 0x2478e]
0x54e2:	call	0xddc0
0x54e7:	cmp	byte ptr [r13], 0x2f
0x54ec:	je	0x7001
0x54f2:	mov	rdi, rbp
0x54f5:	call	0x49b0
0x54fa:	mov	rdi, r13
0x54fd:	mov	r12, rax
0x5500:	call	0x49b0
0x5505:	lea	rdi, [r12 + rax + 2]
0x550a:	call	0x1d670
0x550f:	mov	r9, r13
0x5512:	mov	r8, rbp
0x5515:	or	rdx, 0xffffffffffffffff
0x5519:	mov	r12, rax
0x551c:	mov	rdi, rax
0x551f:	mov	esi, 1
0x5524:	xor	eax, eax
0x5526:	lea	rcx, [rip + 0x1b1d4]
0x552d:	call	0x4f10
0x5532:	mov	rdi, r12
0x5535:	call	0xf160
0x553a:	mov	rdi, r12
0x553d:	mov	qword ptr [rip + 0x2537c], rax
0x5544:	call	0x18d10
0x5549:	cmp	byte ptr [r14], 0x2f
0x554d:	je	0x6f70
0x5553:	mov	rdi, rbp
0x5556:	call	0x49b0
0x555b:	mov	rdi, r14
0x555e:	mov	r12, rax
0x5561:	call	0x49b0
0x5566:	lea	rdi, [r12 + rax + 2]
0x556b:	call	0x1d670
0x5570:	mov	r9, r14
0x5573:	mov	r8, rbp
0x5576:	or	rdx, 0xffffffffffffffff
0x557a:	mov	r12, rax
0x557d:	mov	rdi, rax
0x5580:	mov	esi, 1
0x5585:	xor	eax, eax
0x5587:	lea	rcx, [rip + 0x1b173]
0x558e:	call	0x4f10
0x5593:	mov	rdi, r12
0x5596:	xor	r14d, r14d
0x5599:	lea	rbx, [rsp + 0x28]
0x559e:	call	0xf160
0x55a3:	mov	rdi, r12
0x55a6:	mov	qword ptr [rip + 0x2530b], rax
0x55ad:	call	0x18d10
0x55b2:	mov	rdi, rbp
0x55b5:	mov	ebp, 1
0x55ba:	call	0x18d10
0x55bf:	xor	eax, eax
0x55c1:	call	0x17280
0x55c6:	mov	rax, qword ptr [rip + 0x252f3]
0x55cd:	xor	edi, edi
0x55cf:	mov	qword ptr [rip + 0x252da], rax
0x55d6:	mov	rax, qword ptr [rip + 0x252db]
0x55dd:	mov	qword ptr [rip + 0x252c4], rax
0x55e4:	xor	eax, eax
0x55e6:	call	0x7890
0x55eb:	mov	rdi, qword ptr [rip + 0x252d6]
0x55f2:	call	0xbb10
0x55f7:	mov	edi, 1
0x55fc:	call	0x9b00
0x5601:	xor	eax, eax
0x5603:	call	0xa6c0
0x5608:	mov	edi, 1
0x560d:	mov	qword ptr [rip + 0x25280], 0
0x5618:	mov	dword ptr [rip + 0x25272], 0
0x5622:	mov	dword ptr [rip + 0x25264], 0
0x562c:	call	0x18b90
0x5631:	mov	rdi, qword ptr [rip + 0x25278]
0x5638:	call	0x11100
0x563d:	mov	rdi, rax
0x5640:	call	0xc4b0
0x5645:	lea	rax, [rsp + 0x50]
0x564a:	mov	dword ptr [rsp + 0x10], r15d
0x564f:	mov	qword ptr [rsp], 0
0x5657:	mov	r15, rax
0x565a:	cmp	dword ptr [rip + 0x2527b], 0
0x5661:	jne	0x6d10
0x5667:	mov	rdi, qword ptr [rip + 0x25242]
0x566e:	call	0x11100
0x5673:	mov	rdi, rax
0x5676:	call	0xc4b0
0x567b:	xor	eax, eax
0x567d:	call	0x18330
0x5682:	mov	edi, 0x3c
0x5687:	sub	edi, dword ptr [rax]
0x5689:	call	0x4aa0
0x568e:	cmp	dword ptr [rip + 0x2524b], 0
0x5695:	je	0x6ba2
0x569b:	mov	rax, qword ptr [rip + 0x25216]
0x56a2:	mov	qword ptr [rip + 0x25207], rax
0x56a9:	mov	rax, qword ptr [rip + 0x25210]
0x56b0:	cmp	dword ptr [rip + 0x252e5], 6
0x56b7:	mov	qword ptr [rip + 0x251ea], rax
0x56be:	jle	0x6d75
0x56c4:	xor	eax, eax
0x56c6:	call	0x16d50
0x56cb:	xor	eax, eax
0x56cd:	call	0xe4e0
0x56d2:	mov	rdi, r14
0x56d5:	call	0xc970
0x56da:	xor	eax, eax
0x56dc:	call	0xa820
0x56e1:	xor	eax, eax
0x56e3:	call	0xc8c0
0x56e8:	mov	r12, rax
0x56eb:	xor	eax, eax
0x56ed:	call	0x96c0
0x56f2:	xor	edi, edi
0x56f4:	xor	eax, eax
0x56f6:	call	0x7bd0
0x56fb:	mov	rdi, r12
0x56fe:	call	0xc970
0x5703:	mov	rdi, qword ptr [rip + 0x251a6]
0x570a:	mov	esi, 1
0x570f:	call	0x14d90
0x5714:	test	ebp, ebp
0x5716:	jne	0x6d5a
0x571c:	xor	eax, eax
0x571e:	call	0x9640
0x5723:	xor	eax, eax
0x5725:	call	0xc8c0
0x572a:	mov	r14, rax
0x572d:	nop	dword ptr [rax]
0x5730:	mov	rdi, r14
0x5733:	call	0xc970
0x5738:	xor	eax, eax
0x573a:	call	0xc8c0
0x573f:	mov	r14, rax
0x5742:	xor	eax, eax
0x5744:	call	0xd870
0x5749:	xor	eax, eax
0x574b:	call	0xd740
0x5750:	xor	eax, eax
0x5752:	call	0xa820
0x5757:	mov	rdi, r15
0x575a:	call	0xdb10
0x575f:	mov	dword ptr [rip + 0x26347], 0
0x5769:	jmp	0x5779
0x576b:	nop	dword ptr [rax + rax]
0x5770:	xor	edi, edi
0x5772:	xor	eax, eax
0x5774:	call	0x7d10
0x5779:	mov	rdi, rbx
0x577c:	call	0xb180
0x5781:	test	rax, rax
0x5784:	je	0x5770
0x5786:	mov	r12, rax
0x5789:	xor	eax, eax
0x578b:	call	0xdea0
0x5790:	mov	rax, qword ptr [r12]
0x5794:	mov	r13, qword ptr [r12 + 0x10]
0x5799:	movzx	ebp, byte ptr [rax]
0x579c:	test	r13, r13
0x579f:	je	0x57dc
0x57a1:	cmp	byte ptr [r13 + 0x1b], 0
0x57a6:	mov	rax, qword ptr [r13]
0x57aa:	je	0x67c0
0x57b0:	lea	rdx, [rip + 0x23869]
0x57b7:	sub	rax, rdx
0x57ba:	movabs	rdx, 0xea0ea0ea0ea0ea1
0x57c4:	mov	rcx, rax
0x57c7:	imul	rdx
0x57ca:	mov	rax, rcx
0x57cd:	sar	rax, 0x3f
0x57d1:	sar	rdx, 1
0x57d4:	mov	rbp, rdx
0x57d7:	sub	rbp, rax
0x57da:	not	ebp
0x57dc:	lea	eax, [rbp + 0x57]
0x57df:	cmp	eax, 0x5e
0x57e2:	ja	0x57f5
0x57e4:	lea	rcx, [rip + 0x1aaf1]
0x57eb:	movsxd	rax, dword ptr [rcx + rax*4]
0x57ef:	add	rax, rcx
0x57f2:	jmp	rax
0x57f5:	test	ebp, ebp
0x57f7:	je	0x5730
0x57fd:	mov	rdi, r14
0x5800:	call	0xc7e0
0x5805:	jmp	0x5813
0x5807:	mov	esi, 3
0x580c:	mov	edi, ebp
0x580e:	call	0x7570
0x5813:	mov	eax, dword ptr [rsp + 0x28]
0x5817:	lea	edx, [rax - 1]
0x581a:	mov	dword ptr [rsp + 0x28], edx
0x581e:	test	eax, eax
0x5820:	jne	0x5807
0x5822:	jmp	0x5725
0x5827:	mov	esi, 0xfffffffe
0x582c:	mov	rdi, qword ptr [rip + 0x2507d]
0x5833:	sub	esi, ebp
0x5835:	xor	ecx, ecx
0x5837:	xor	edx, edx
0x5839:	mov	r8d, 1
0x583f:	call	0x13e30
0x5844:	jmp	0x5730
0x5849:	mov	esi, 0xfffffffd
0x584e:	jmp	0x582c
0x5850:	mov	rdi, qword ptr [rip + 0x25059]
0x5857:	xor	esi, esi
0x5859:	call	0x14d90
0x585e:	mov	rax, qword ptr [rip + 0x2504b]
0x5865:	mov	esi, 1
0x586a:	mov	rdi, qword ptr [rip + 0x25037]
0x5871:	mov	qword ptr [rip + 0x25028], rax
0x5878:	mov	qword ptr [rip + 0x25029], rax
0x587f:	xor	eax, eax
0x5881:	cmp	dword ptr [rip + 0x25058], 0
0x5888:	sete	al
0x588b:	mov	qword ptr [rip + 0x2501e], rdi
0x5892:	mov	dword ptr [rip + 0x25048], eax
0x5898:	call	0x14d90
0x589d:	mov	rdi, qword ptr [rip + 0x2500c]
0x58a4:	call	0xf570
0x58a9:	mov	rdi, r14
0x58ac:	call	0xc7e0
0x58b1:	xor	eax, eax
0x58b3:	call	0x9640
0x58b8:	xor	eax, eax
0x58ba:	call	0xc8c0
0x58bf:	mov	rdi, qword ptr [rip + 0x24fea]
0x58c6:	mov	r14, rax
0x58c9:	call	0x11100
0x58ce:	mov	rdi, rax
0x58d1:	call	0xc4b0
0x58d6:	mov	rdi, qword ptr [rip + 0x24fd3]
0x58dd:	call	0xf480
0x58e2:	mov	rdi, qword ptr [rip + 0x24fbf]
0x58e9:	call	0xf480
0x58ee:	xor	eax, eax
0x58f0:	call	0xa480
0x58f5:	mov	rdi, qword ptr [rip + 0x24fac]
0x58fc:	call	0xf580
0x5901:	xor	eax, eax
0x5903:	mov	edi, 1
0x5908:	mov	dword ptr [rip + 0x24346], 0
0x5912:	call	0x7890
0x5917:	mov	rdi, qword ptr [rip + 0x24f92]
0x591e:	xor	ecx, ecx
0x5920:	xor	edx, edx
0x5922:	mov	r8d, 1
0x5928:	mov	esi, 0xe
0x592d:	call	0x13e30
0x5932:	mov	rdi, qword ptr [rip + 0x24f6f]
0x5939:	xor	ecx, ecx
0x593b:	xor	edx, edx
0x593d:	mov	r8d, 1
0x5943:	mov	esi, 0xe
0x5948:	call	0x13e30
0x594d:	mov	rdi, qword ptr [rip + 0x24f5c]
0x5954:	call	0x11010
0x5959:	jmp	0x5730
0x595e:	xor	eax, eax
0x5960:	call	0x8960
0x5965:	mov	rdi, qword ptr [rip + 0x24f44]
0x596c:	call	0x11100
0x5971:	mov	rdi, rax
0x5974:	xor	eax, eax
0x5976:	call	0x89d0
0x597b:	jmp	0x5730
0x5980:	mov	rdi, qword ptr [rip + 0x24f29]
0x5987:	call	0xf480
0x598c:	mov	rdi, qword ptr [rip + 0x24f15]
0x5993:	call	0xf480
0x5998:	xor	eax, eax
0x599a:	call	0xa480
0x599f:	mov	rdi, qword ptr [rip + 0x24f02]
0x59a6:	call	0xf570
0x59ab:	xor	eax, eax
0x59ad:	mov	edi, 1
0x59b2:	mov	dword ptr [rip + 0x2429c], 1
0x59bc:	call	0x7890
0x59c1:	cmp	dword ptr [rip + 0x24fd0], 0xb
0x59c8:	jle	0x703f
0x59ce:	mov	rdi, qword ptr [rip + 0x24edb]
0x59d5:	xor	ecx, ecx
0x59d7:	xor	edx, edx
0x59d9:	mov	esi, 0xb
0x59de:	mov	r8d, 1
0x59e4:	call	0x13e30
0x59e9:	mov	rdi, qword ptr [rip + 0x24eb8]
0x59f0:	xor	ecx, ecx
0x59f2:	xor	edx, edx
0x59f4:	mov	r8d, 1
0x59fa:	mov	esi, 0xb
0x59ff:	call	0x13e30
0x5a04:	mov	rdi, qword ptr [rip + 0x24ea5]
0x5a0b:	call	0x11010
0x5a10:	mov	rdi, qword ptr [rip + 0x24e91]
0x5a17:	call	0x11010
0x5a1c:	jmp	0x5730
0x5a21:	xor	edi, edi
0x5a23:	call	0xca20
0x5a28:	lea	rsi, [rsp + 0x38]
0x5a2d:	xor	ecx, ecx
0x5a2f:	xor	edx, edx
0x5a31:	mov	qword ptr [rsp + 0x38], 0
0x5a3a:	lea	rdi, [rip + 0x1ad44]
0x5a41:	call	0x83e0
0x5a46:	mov	rax, qword ptr [rsp + 0x38]
0x5a4b:	test	rax, rax
0x5a4e:	je	0x5a59
0x5a50:	cmp	byte ptr [rax], 0
0x5a53:	jne	0x7114
0x5a59:	mov	edi, 1
0x5a5e:	call	0xca20
0x5a63:	jmp	0x5730
0x5a68:	mov	dword ptr [rsp + 0x30], 0
0x5a70:	lea	rcx, [rsp + 0x30]
0x5a75:	mov	rdx, qword ptr [rip + 0x24e2c]
0x5a7c:	mov	esi, 0x2b
0x5a81:	mov	rdi, qword ptr [rip + 0x24e28]
0x5a88:	mov	r8d, 1
0x5a8e:	call	0x13e30
0x5a93:	jmp	0x5730
0x5a98:	mov	dword ptr [rsp + 0x2c], 0
0x5aa0:	lea	rcx, [rsp + 0x2c]
0x5aa5:	mov	rdx, qword ptr [rip + 0x24dfc]
0x5aac:	mov	esi, 0x2c
0x5ab1:	mov	rdi, qword ptr [rip + 0x24df8]
0x5ab8:	mov	r8d, 1
0x5abe:	call	0x13e30
0x5ac3:	jmp	0x5730
0x5ac8:	mov	dword ptr [rsp + 0x30], 1
0x5ad0:	jmp	0x5a70
0x5ad2:	mov	dword ptr [rsp + 0x2c], 1
0x5ada:	jmp	0x5aa0
0x5adc:	mov	rdx, qword ptr [rip + 0x24dc5]
0x5ae3:	mov	rdi, qword ptr [rip + 0x24dc6]
0x5aea:	xor	ecx, ecx
0x5aec:	mov	esi, 0x2d
0x5af1:	mov	r8d, 1
0x5af7:	call	0x13e30
0x5afc:	mov	rdi, r14
0x5aff:	call	0xc970
0x5b04:	xor	eax, eax
0x5b06:	call	0x9640
0x5b0b:	xor	eax, eax
0x5b0d:	call	0xc8c0
0x5b12:	mov	rdi, qword ptr [rip + 0x24d97]
0x5b19:	mov	r14, rax
0x5b1c:	call	0x11100
0x5b21:	mov	rdi, rax
0x5b24:	call	0xc4b0
0x5b29:	jmp	0x5730
0x5b2e:	mov	rdx, qword ptr [rip + 0x24d73]
0x5b35:	mov	rdi, qword ptr [rip + 0x24d74]
0x5b3c:	xor	ecx, ecx
0x5b3e:	mov	esi, 0x2e
0x5b43:	mov	r8d, 1
0x5b49:	call	0x13e30
0x5b4e:	jmp	0x5730
0x5b53:	lea	r12, [rsp + 0x58]
0x5b58:	mov	rcx, qword ptr [r13 + 0x28]
0x5b5c:	lea	rdx, [rip + 0x1b230]
0x5b63:	mov	rsi, r12
0x5b66:	lea	rdi, [rip + 0x1ac46]
0x5b6d:	call	0x83e0
0x5b72:	test	rax, rax
0x5b75:	je	0x5730
0x5b7b:	mov	rcx, qword ptr [rsp + 0x58]
0x5b80:	cmp	byte ptr [rcx], 0
0x5b83:	je	0x5730
0x5b89:	mov	rdx, qword ptr [rip + 0x24d18]
0x5b90:	mov	r8d, 1
0x5b96:	mov	esi, 0x2f
0x5b9b:	mov	rdi, qword ptr [rip + 0x24d0e]
0x5ba2:	call	0x13e30
0x5ba7:	mov	rdi, qword ptr [rsp + 0x58]
0x5bac:	call	0x18d10
0x5bb1:	mov	qword ptr [rsp + 0x58], 0
0x5bba:	jmp	0x5730
0x5bbf:	mov	r8d, dword ptr [rsp + 0x28]
0x5bc4:	mov	rcx, qword ptr [rsp + 0x58]
0x5bc9:	mov	esi, 0x30
0x5bce:	mov	rdx, qword ptr [rip + 0x24cd3]
0x5bd5:	mov	rdi, qword ptr [rip + 0x24cd4]
0x5bdc:	call	0x13e30
0x5be1:	jmp	0x5730
0x5be6:	mov	r8d, dword ptr [rsp + 0x28]
0x5beb:	mov	rcx, qword ptr [rsp + 0x58]
0x5bf0:	mov	esi, 0x31
0x5bf5:	mov	rdx, qword ptr [rip + 0x24cac]
0x5bfc:	mov	rdi, qword ptr [rip + 0x24cad]
0x5c03:	call	0x13e30
0x5c08:	jmp	0x5730
0x5c0d:	mov	rdx, qword ptr [rip + 0x24c94]
0x5c14:	mov	rdi, qword ptr [rip + 0x24c95]
0x5c1b:	xor	ecx, ecx
0x5c1d:	mov	esi, 0x32
0x5c22:	mov	r8d, 1
0x5c28:	call	0x13e30
0x5c2d:	jmp	0x5730
0x5c32:	mov	rdx, qword ptr [rip + 0x24c6f]
0x5c39:	mov	rdi, qword ptr [rip + 0x24c70]
0x5c40:	xor	ecx, ecx
0x5c42:	mov	esi, 0x33
0x5c47:	mov	r8d, 1
0x5c4d:	call	0x13e30
0x5c52:	jmp	0x5730
0x5c57:	mov	r8d, dword ptr [rsp + 0x28]
0x5c5c:	mov	rdx, qword ptr [rip + 0x24c45]
0x5c63:	xor	ecx, ecx
0x5c65:	mov	esi, 0x1b
0x5c6a:	mov	rdi, qword ptr [rip + 0x24c3f]
0x5c71:	call	0x13e30
0x5c76:	jmp	0x5730
0x5c7b:	mov	r8d, dword ptr [rsp + 0x28]
0x5c80:	mov	rdx, qword ptr [rip + 0x24c21]
0x5c87:	xor	ecx, ecx
0x5c89:	mov	esi, 0x1c
0x5c8e:	mov	rdi, qword ptr [rip + 0x24c1b]
0x5c95:	call	0x13e30
0x5c9a:	jmp	0x5730
0x5c9f:	cmp	dword ptr [rip + 0x23fb2], 0
0x5ca6:	je	0x5850
0x5cac:	test	byte ptr [rsp + 0x28], 1
0x5cb1:	je	0x5730
0x5cb7:	mov	rdi, qword ptr [rip + 0x24bf2]
0x5cbe:	xor	esi, esi
0x5cc0:	call	0x14d90
0x5cc5:	mov	rax, qword ptr [rip + 0x24be4]
0x5ccc:	mov	esi, 1
0x5cd1:	mov	rdi, qword ptr [rip + 0x24bd0]
0x5cd8:	mov	qword ptr [rip + 0x24bc1], rax
0x5cdf:	mov	qword ptr [rip + 0x24bc2], rax
0x5ce6:	xor	eax, eax
0x5ce8:	cmp	dword ptr [rip + 0x24bf1], 0
0x5cef:	sete	al
0x5cf2:	mov	qword ptr [rip + 0x24bb7], rdi
0x5cf9:	mov	dword ptr [rip + 0x24be1], eax
0x5cff:	call	0x14d90
0x5d04:	mov	rdi, r14
0x5d07:	call	0xc7e0
0x5d0c:	jmp	0x5b04
0x5d11:	lea	r12, [rsp + 0x58]
0x5d16:	mov	rcx, qword ptr [r13 + 0x28]
0x5d1a:	xor	edx, edx
0x5d1c:	lea	rdi, [rip + 0x1aa29]
0x5d23:	mov	rsi, r12
0x5d26:	call	0x83e0
0x5d2b:	test	rax, rax
0x5d2e:	je	0x5730
0x5d34:	mov	rdi, qword ptr [rsp + 0x58]
0x5d39:	cmp	byte ptr [rdi], 0
0x5d3c:	je	0x5730
0x5d42:	xor	eax, eax
0x5d44:	call	0x19940
0x5d49:	mov	r8d, 1
0x5d4f:	mov	esi, 0x21
0x5d54:	mov	rdx, qword ptr [rip + 0x24b4d]
0x5d5b:	mov	rdi, qword ptr [rip + 0x24b4e]
0x5d62:	mov	rcx, rax
0x5d65:	mov	rbp, rax
0x5d68:	call	0x13e30
0x5d6d:	mov	rdi, qword ptr [rip + 0x24b3c]
0x5d74:	call	0x11100
0x5d79:	mov	rdi, rax
0x5d7c:	xor	eax, eax
0x5d7e:	call	0x89d0
0x5d83:	mov	rdi, rbp
0x5d86:	call	0x18d10
0x5d8b:	mov	rdi, qword ptr [rsp + 0x58]
0x5d90:	call	0x18d10
0x5d95:	mov	qword ptr [rsp + 0x58], 0
0x5d9e:	jmp	0x5afc
0x5da3:	lea	r12, [rsp + 0x58]
0x5da8:	mov	rcx, qword ptr [r13 + 0x28]
0x5dac:	xor	edx, edx
0x5dae:	lea	rdi, [rip + 0x1ac3b]
0x5db5:	mov	rsi, r12
0x5db8:	call	0x83e0
0x5dbd:	test	rax, rax
0x5dc0:	je	0x5730
0x5dc6:	mov	rcx, qword ptr [rsp + 0x58]
0x5dcb:	cmp	byte ptr [rcx], 0
0x5dce:	je	0x5730
0x5dd4:	mov	rdx, qword ptr [rip + 0x24acd]
0x5ddb:	mov	r8d, 1
0x5de1:	mov	esi, 0x24
0x5de6:	jmp	0x5b9b
0x5deb:	lea	r12, [rsp + 0x58]
0x5df0:	mov	rcx, qword ptr [r13 + 0x28]
0x5df4:	xor	edx, edx
0x5df6:	lea	rdi, [rip + 0x1ac23]
0x5dfd:	mov	rsi, r12
0x5e00:	call	0x83e0
0x5e05:	test	rax, rax
0x5e08:	je	0x5730
0x5e0e:	mov	rcx, qword ptr [rsp + 0x58]
0x5e13:	cmp	byte ptr [rcx], 0
0x5e16:	je	0x5730
0x5e1c:	mov	rdx, qword ptr [rip + 0x24a85]
0x5e23:	mov	r8d, 1
0x5e29:	mov	esi, 0x25
0x5e2e:	jmp	0x5b9b
0x5e33:	mov	rdx, qword ptr [rip + 0x24a6e]
0x5e3a:	mov	r8d, 1
0x5e40:	mov	esi, 0x21
0x5e45:	mov	rdi, qword ptr [rip + 0x24a64]
0x5e4c:	mov	rcx, qword ptr [rdx + 0x18]
0x5e50:	call	0x13e30
0x5e55:	mov	rdi, qword ptr [rip + 0x24a54]
0x5e5c:	call	0x11100
0x5e61:	mov	rdi, rax
0x5e64:	xor	eax, eax
0x5e66:	call	0x89d0
0x5e6b:	mov	rdi, r14
0x5e6e:	call	0xc7e0
0x5e73:	jmp	0x5b04
0x5e78:	mov	rdx, qword ptr [rip + 0x24a31]
0x5e7f:	mov	r8d, 1
0x5e85:	mov	esi, 0x21
0x5e8a:	mov	rdi, qword ptr [rip + 0x24a17]
0x5e91:	mov	rcx, qword ptr [rdx + 0x18]
0x5e95:	call	0x13e30
0x5e9a:	mov	rdi, qword ptr [rip + 0x24a07]
0x5ea1:	call	0x11100
0x5ea6:	mov	rdi, rax
0x5ea9:	xor	eax, eax
0x5eab:	call	0x89d0
0x5eb0:	jmp	0x5730
0x5eb5:	mov	rax, qword ptr [rip + 0x249ec]
0x5ebc:	mov	rdi, qword ptr [rax + 0x78]
0x5ec0:	mov	r12, qword ptr [rax + 0x18]
0x5ec4:	add	rdi, 5
0x5ec8:	call	0x1d670
0x5ecd:	mov	rbp, rax
0x5ed0:	mov	rdi, qword ptr [rsp + 0x50]
0x5ed5:	call	0x49b0
0x5eda:	mov	rdi, r14
0x5edd:	mov	r13, rax
0x5ee0:	call	0xc7e0
0x5ee5:	test	r13, r13
0x5ee8:	je	0x5f1a
0x5eea:	mov	r13, qword ptr [rsp + 0x50]
0x5eef:	xor	eax, eax
0x5ef1:	call	0xca00
0x5ef6:	cmp	byte ptr [r13 + rax - 1], 0x2f
0x5efc:	je	0x6f46
0x5f02:	mov	r13, qword ptr [rsp + 0x50]
0x5f07:	xor	eax, eax
0x5f09:	call	0xca00
0x5f0e:	cmp	byte ptr [r13 + rax - 1], 0x20
0x5f14:	je	0x6f46
0x5f1a:	mov	rdi, r12
0x5f1d:	call	0x49b0
0x5f22:	mov	rdi, r12
0x5f25:	mov	rsi, rax
0x5f28:	call	0x18530
0x5f2d:	mov	r8, r12
0x5f30:	lea	rcx, [rip + 0x1a809]
0x5f37:	test	eax, eax
0x5f39:	jne	0x5f42
0x5f3b:	lea	rcx, [rip + 0x1a805]
0x5f42:	or	rdx, 0xffffffffffffffff
0x5f46:	mov	esi, 1
0x5f4b:	mov	rdi, rbp
0x5f4e:	xor	eax, eax
0x5f50:	call	0x4f10
0x5f55:	mov	rdi, rbp
0x5f58:	call	0x49b0
0x5f5d:	mov	rdi, rbp
0x5f60:	mov	rsi, rax
0x5f63:	call	0x184d0
0x5f68:	mov	rdi, rbp
0x5f6b:	call	0xd610
0x5f70:	mov	rdi, rbp
0x5f73:	call	0x18d10
0x5f78:	xor	eax, eax
0x5f7a:	call	0xc8c0
0x5f7f:	mov	r14, rax
0x5f82:	jmp	0x5730
0x5f87:	mov	rdi, r14
0x5f8a:	lea	r12, [rip + 0x1b488]
0x5f91:	lea	rbp, [rip + 0x1b2fc]
0x5f98:	call	0xc7e0
0x5f9d:	mov	rdi, qword ptr [rip + 0x2490c]
0x5fa4:	call	0x100c0
0x5fa9:	jmp	0x6029
0x5fab:	mov	rdx, qword ptr [rip + 0x248fe]
0x5fb2:	cdqe	
0x5fb4:	imul	rax, rax, 0x50
0x5fb8:	add	rax, qword ptr [rdx + 0x38]
0x5fbc:	mov	r14, qword ptr [rax]
0x5fbf:	mov	rdi, r14
0x5fc2:	call	0x49b0
0x5fc7:	lea	rdi, [rax + 5]
0x5fcb:	call	0x1d670
0x5fd0:	mov	rdi, r14
0x5fd3:	mov	r13, rax
0x5fd6:	call	0x49b0
0x5fdb:	mov	rdi, r14
0x5fde:	mov	rsi, rax
0x5fe1:	call	0x18530
0x5fe6:	mov	r8, r14
0x5fe9:	mov	rcx, rbp
0x5fec:	test	eax, eax
0x5fee:	jne	0x5ff3
0x5ff0:	mov	rcx, r12
0x5ff3:	or	rdx, 0xffffffffffffffff
0x5ff7:	mov	esi, 1
0x5ffc:	mov	rdi, r13
0x5fff:	xor	eax, eax
0x6001:	call	0x4f10
0x6006:	mov	rdi, r13
0x6009:	call	0x49b0
0x600e:	mov	rdi, r13
0x6011:	mov	rsi, rax
0x6014:	call	0x184d0
0x6019:	mov	rdi, r13
0x601c:	call	0xd610
0x6021:	mov	rdi, r13
0x6024:	call	0x18d10
0x6029:	mov	rdi, qword ptr [rip + 0x24880]
0x6030:	call	0x100e0
0x6035:	cmp	eax, -1
0x6038:	jne	0x5fab
0x603e:	lea	rdi, [rip + 0x1a700]
0x6045:	call	0xd610
0x604a:	xor	eax, eax
0x604c:	call	0xc8c0
0x6051:	mov	r14, rax
0x6054:	jmp	0x5730
0x6059:	mov	rdi, r14
0x605c:	call	0xc7e0
0x6061:	mov	rdi, r15
0x6064:	call	0xdb10
0x6069:	mov	rbp, qword ptr [rsp + 0x50]
0x606e:	mov	rdi, rbp
0x6071:	call	0x49b0
0x6076:	sub	eax, 1
0x6079:	movsxd	rdx, eax
0x607c:	jmp	0x6097
0x607e:	lea	rcx, [rbp + rdx]
0x6083:	sub	rdx, 1
0x6087:	cmp	byte ptr [rcx], 0x20
0x608a:	jne	0x609b
0x608c:	mov	byte ptr [rcx], 0
0x608f:	mov	rbp, qword ptr [rsp + 0x50]
0x6094:	sub	eax, 1
0x6097:	test	eax, eax
0x6099:	jns	0x607e
0x609b:	movzx	eax, byte ptr [rbp]
0x609f:	cmp	al, 0x2b
0x60a1:	je	0x71c7
0x60a7:	jg	0x6edf
0x60ad:	test	al, al
0x60af:	je	0x71f6
0x60b5:	cmp	al, 0x2a
0x60b7:	jne	0x60c3
0x60b9:	cmp	byte ptr [rbp + 1], 0
0x60bd:	je	0x72fd
0x60c3:	xor	eax, eax
0x60c5:	lea	rsi, [rsp + 0x48]
0x60ca:	mov	rdi, rbp
0x60cd:	call	0x1b5b0
0x60d2:	test	eax, eax
0x60d4:	js	0x7258
0x60da:	mov	rdi, qword ptr [rsp + 0x48]
0x60df:	call	0x18620
0x60e4:	test	eax, eax
0x60e6:	je	0x72c0
0x60ec:	xor	eax, eax
0x60ee:	call	0xc8c0
0x60f3:	mov	edx, 0x1c
0x60f8:	xor	esi, esi
0x60fa:	lea	rdi, [rip + 0x1a631]
0x6101:	call	0x8070
0x6106:	jmp	0x5723
0x610b:	lea	r12, [rsp + 0x58]
0x6110:	mov	rcx, qword ptr [r13 + 0x28]
0x6114:	xor	edx, edx
0x6116:	lea	rdi, [rip + 0x1a63b]
0x611d:	mov	rsi, r12
0x6120:	call	0x83e0
0x6125:	test	rax, rax
0x6128:	je	0x5730
0x612e:	mov	rcx, qword ptr [rsp + 0x58]
0x6133:	cmp	byte ptr [rcx], 0
0x6136:	je	0x5730
0x613c:	mov	rdx, qword ptr [rip + 0x24765]
0x6143:	mov	r8d, 1
0x6149:	mov	esi, 0x26
0x614e:	jmp	0x5b9b
0x6153:	xor	ecx, ecx
0x6155:	xor	edx, edx
0x6157:	xor	esi, esi
0x6159:	xor	r13d, r13d
0x615c:	lea	rdi, [rip + 0x1a603]
0x6163:	lea	rbp, [rsp + 0x60]
0x6168:	call	0x86c0
0x616d:	mov	rdx, qword ptr [rip + 0x24734]
0x6174:	mov	rdi, qword ptr [rip + 0x24735]
0x617b:	xor	ecx, ecx
0x617d:	mov	r8d, 1
0x6183:	mov	esi, 0x27
0x6188:	lea	r12, [rsp + 0x58]
0x618d:	call	0x13e30
0x6192:	mov	dword ptr [rsp + 0xc], 0
0x619a:	xor	edi, edi
0x619c:	mov	rcx, rbp
0x619f:	mov	edx, 1
0x61a4:	mov	rsi, r12
0x61a7:	call	0x86c0
0x61ac:	test	rax, rax
0x61af:	je	0x6c72
0x61b5:	mov	rdi, qword ptr [rsp + 0x58]
0x61ba:	cmp	byte ptr [rdi], 0
0x61bd:	jne	0x61d1
0x61bf:	mov	rax, qword ptr [rsp]
0x61c3:	test	rax, rax
0x61c6:	je	0x61d1
0x61c8:	cmp	byte ptr [rax], 0
0x61cb:	jne	0x6b0b
0x61d1:	cmp	dword ptr [rsp + 0x60], 2
0x61d6:	je	0x6bf1
0x61dc:	mov	qword ptr [rsp + 0x68], rdi
0x61e1:	mov	rdx, qword ptr [rip + 0x246c0]
0x61e8:	mov	r8d, 1
0x61ee:	mov	rcx, rbp
0x61f1:	mov	rdi, qword ptr [rip + 0x246b8]
0x61f8:	mov	esi, 0x28
0x61fd:	call	0x13e30
0x6202:	cmp	dword ptr [rsp + 0x60], -1
0x6207:	je	0x6d8e
0x620d:	test	r13d, r13d
0x6210:	jne	0x6b64
0x6216:	mov	rdi, qword ptr [rsp + 0x58]
0x621b:	call	0x49b0
0x6220:	cmp	rax, qword ptr [rsp + 0x70]
0x6225:	jbe	0x619a
0x622b:	xor	eax, eax
0x622d:	call	0xce70
0x6232:	xor	eax, eax
0x6234:	call	0xd870
0x6239:	xor	eax, eax
0x623b:	call	0xd740
0x6240:	xor	eax, eax
0x6242:	call	0xa820
0x6247:	jmp	0x619a
0x624c:	xor	ecx, ecx
0x624e:	xor	edx, edx
0x6250:	xor	esi, esi
0x6252:	xor	r13d, r13d
0x6255:	lea	rdi, [rip + 0x1a51e]
0x625c:	lea	rbp, [rsp + 0x60]
0x6261:	call	0x86c0
0x6266:	mov	rdx, qword ptr [rip + 0x2463b]
0x626d:	mov	rdi, qword ptr [rip + 0x2463c]
0x6274:	xor	ecx, ecx
0x6276:	mov	r8d, 1
0x627c:	mov	esi, 0x27
0x6281:	lea	r12, [rsp + 0x58]
0x6286:	call	0x13e30
0x628b:	mov	dword ptr [rsp + 0xc], 0
0x6293:	xor	edi, edi
0x6295:	mov	rcx, rbp
0x6298:	mov	edx, 2
0x629d:	mov	rsi, r12
0x62a0:	call	0x86c0
0x62a5:	test	rax, rax
0x62a8:	je	0x6c72
0x62ae:	mov	rdi, qword ptr [rsp + 0x58]
0x62b3:	cmp	byte ptr [rdi], 0
0x62b6:	jne	0x62ca
0x62b8:	mov	rax, qword ptr [rsp]
0x62bc:	test	rax, rax
0x62bf:	je	0x62ca
0x62c1:	cmp	byte ptr [rax], 0
0x62c4:	jne	0x6a74
0x62ca:	cmp	dword ptr [rsp + 0x60], 2
0x62cf:	je	0x6bbc
0x62d5:	mov	qword ptr [rsp + 0x68], rdi
0x62da:	mov	rdx, qword ptr [rip + 0x245c7]
0x62e1:	mov	r8d, 1
0x62e7:	mov	rcx, rbp
0x62ea:	mov	rdi, qword ptr [rip + 0x245bf]
0x62f1:	mov	esi, 0x29
0x62f6:	call	0x13e30
0x62fb:	cmp	dword ptr [rsp + 0x60], -1
0x6300:	je	0x6da8
0x6306:	test	r13d, r13d
0x6309:	jne	0x6acd
0x630f:	mov	rdi, qword ptr [rsp + 0x58]
0x6314:	call	0x49b0
0x6319:	cmp	rax, qword ptr [rsp + 0x70]
0x631e:	jbe	0x6293
0x6324:	xor	eax, eax
0x6326:	call	0xce70
0x632b:	xor	eax, eax
0x632d:	call	0xd870
0x6332:	xor	eax, eax
0x6334:	call	0xd740
0x6339:	xor	eax, eax
0x633b:	call	0xa820
0x6340:	jmp	0x6293
0x6345:	mov	rsi, qword ptr [rip + 0x2455c]
0x634c:	mov	rdi, qword ptr [rip + 0x2455d]
0x6353:	xor	eax, eax
0x6355:	call	0x8a80
0x635a:	jmp	0x5afc
0x635f:	mov	rsi, qword ptr [rip + 0x24542]
0x6366:	mov	rdi, qword ptr [rip + 0x24543]
0x636d:	xor	eax, eax
0x636f:	call	0x8a30
0x6374:	jmp	0x5afc
0x6379:	mov	rdi, qword ptr [rip + 0x24530]
0x6380:	call	0xf490
0x6385:	mov	rdi, rax
0x6388:	mov	r12, rax
0x638b:	call	0x49b0
0x6390:	lea	rdi, [rax + 5]
0x6394:	call	0x1d670
0x6399:	mov	rbp, rax
0x639c:	jmp	0x5ed0
0x63a1:	mov	rdx, qword ptr [rip + 0x24500]
0x63a8:	mov	rdi, qword ptr [rip + 0x24501]
0x63af:	xor	ecx, ecx
0x63b1:	mov	esi, 0x1f
0x63b6:	mov	r8d, 1
0x63bc:	call	0x13e30
0x63c1:	jmp	0x5730
0x63c6:	mov	rdx, qword ptr [rip + 0x244db]
0x63cd:	mov	rdi, qword ptr [rip + 0x244dc]
0x63d4:	xor	ecx, ecx
0x63d6:	mov	esi, 0x20
0x63db:	mov	r8d, 1
0x63e1:	call	0x13e30
0x63e6:	jmp	0x5730
0x63eb:	mov	rdx, qword ptr [rip + 0x244b6]
0x63f2:	mov	rdi, qword ptr [rip + 0x244b7]
0x63f9:	xor	ecx, ecx
0x63fb:	mov	esi, 0x19
0x6400:	mov	r8d, 1
0x6406:	call	0x13e30
0x640b:	jmp	0x5730
0x6410:	mov	rdx, qword ptr [rip + 0x24491]
0x6417:	mov	rdi, qword ptr [rip + 0x24492]
0x641e:	xor	ecx, ecx
0x6420:	mov	esi, 3
0x6425:	mov	r8d, 1
0x642b:	call	0x13e30
0x6430:	jmp	0x5730
0x6435:	cmp	dword ptr [rip + 0x244cc], 0
0x643c:	jne	0x701d
0x6442:	mov	r15d, dword ptr [rsp + 0x10]
0x6447:	mov	rdi, qword ptr [rip + 0x24462]
0x644e:	call	0x11100
0x6453:	mov	rdi, qword ptr [rip + 0x24466]
0x645a:	mov	rbp, rax
0x645d:	call	0xf3e0
0x6462:	mov	rdi, qword ptr [rip + 0x2444f]
0x6469:	call	0xf3e0
0x646e:	xor	edi, edi
0x6470:	call	0x9b00
0x6475:	xor	eax, eax
0x6477:	call	0xa6c0
0x647c:	cmp	qword ptr [rip + 0x24f84], 0
0x6484:	je	0x648d
0x6486:	xor	eax, eax
0x6488:	call	0xc820
0x648d:	xor	eax, eax
0x648f:	call	0xde40
0x6494:	xor	eax, eax
0x6496:	call	0x19580
0x649b:	mov	rdi, qword ptr [rip + 0x24426]
0x64a2:	call	0xbbc0
0x64a7:	test	r15d, r15d
0x64aa:	je	0x507e
0x64b0:	mov	rdi, rbp
0x64b3:	xor	r15d, r15d
0x64b6:	call	0x49b0
0x64bb:	mov	rsi, rbp
0x64be:	mov	edi, 3
0x64c3:	mov	rdx, rax
0x64c6:	call	0x4790
0x64cb:	jmp	0x507e
0x64d0:	mov	rdi, r14
0x64d3:	xor	ebp, ebp
0x64d5:	call	0xc7e0
0x64da:	jmp	0x64f0
0x64dc:	mov	edi, 1
0x64e1:	add	ebp, 1
0x64e4:	call	0xdbb0
0x64e9:	xor	eax, eax
0x64eb:	call	0xa820
0x64f0:	cmp	dword ptr [rsp + 0x28], ebp
0x64f4:	jg	0x64dc
0x64f6:	jmp	0x5723
0x64fb:	test	byte ptr [rsp + 0x28], 1
0x6500:	je	0x5730
0x6506:	xor	edi, edi
0x6508:	lea	rbp, [rip + 0x19f49]
0x650f:	lea	r13, [rip + 0x22b0a]
0x6516:	call	0x4aa0
0x651b:	mov	rdi, qword ptr [rip + 0x243a6]
0x6522:	call	0xbb40
0x6527:	mov	rdi, qword ptr [rip + 0x2373a]
0x652e:	xor	edx, edx
0x6530:	xor	esi, esi
0x6532:	call	0xe480
0x6537:	xor	eax, eax
0x6539:	call	0xa820
0x653e:	mov	rdi, r14
0x6541:	call	0xc970
0x6546:	xor	eax, eax
0x6548:	call	0xc8c0
0x654d:	mov	r14, rax
0x6550:	xor	eax, eax
0x6552:	call	0xd870
0x6557:	xor	eax, eax
0x6559:	call	0xd740
0x655e:	xor	eax, eax
0x6560:	call	0xa820
0x6565:	mov	rdi, r15
0x6568:	call	0xdb10
0x656d:	mov	dword ptr [rip + 0x2436d], 1
0x6577:	jmp	0x658e
0x6579:	nop	dword ptr [rax]
0x6580:	mov	rdi, qword ptr [rip + 0x236e1]
0x6587:	xor	eax, eax
0x6589:	call	0x7d10
0x658e:	mov	rdi, rbx
0x6591:	call	0xb180
0x6596:	test	rax, rax
0x6599:	je	0x6580
0x659b:	mov	rdx, qword ptr [rax]
0x659e:	mov	rax, qword ptr [rax + 0x10]
0x65a2:	movzx	r12d, byte ptr [rdx]
0x65a6:	test	rax, rax
0x65a9:	je	0x696f
0x65af:	cmp	byte ptr [rax + 0x1b], 0
0x65b3:	je	0x696f
0x65b9:	mov	rax, qword ptr [rax]
0x65bc:	mov	esi, 0x23
0x65c1:	sub	rax, r13
0x65c4:	cqo	
0x65c6:	idiv	rsi
0x65c9:	mov	r12d, eax
0x65cc:	not	r12d
0x65cf:	cmp	eax, 6
0x65d2:	jne	0x6e1f
0x65d8:	test	byte ptr [rsp + 0x28], 1
0x65dd:	jne	0x7383
0x65e3:	mov	rdi, r14
0x65e6:	call	0xc7e0
0x65eb:	jmp	0x65fa
0x65ed:	mov	esi, 3
0x65f2:	mov	edi, r12d
0x65f5:	call	0x7570
0x65fa:	mov	eax, dword ptr [rsp + 0x28]
0x65fe:	lea	edx, [rax - 1]
0x6601:	mov	dword ptr [rsp + 0x28], edx
0x6605:	test	eax, eax
0x6607:	jne	0x65ed
0x6609:	call	0xc8c0
0x660e:	mov	r14, rax
0x6611:	xor	eax, eax
0x6613:	call	0xdea0
0x6618:	jmp	0x653e
0x661d:	xor	eax, eax
0x661f:	call	0x96c0
0x6624:	mov	rdi, qword ptr [rip + 0x24285]
0x662b:	call	0x11100
0x6630:	mov	rdi, rax
0x6633:	call	0xc4b0
0x6638:	xor	edi, edi
0x663a:	xor	eax, eax
0x663c:	call	0x7bd0
0x6641:	jmp	0x5730
0x6646:	test	byte ptr [rsp + 0x28], 1
0x664b:	je	0x5730
0x6651:	cmp	dword ptr [rip + 0x23600], 0
0x6658:	je	0x5730
0x665e:	mov	rdi, qword ptr [rip + 0x2424b]
0x6665:	call	0xf480
0x666a:	mov	rdi, qword ptr [rip + 0x24237]
0x6671:	call	0xf480
0x6676:	mov	rdx, qword ptr [rip + 0x2422b]
0x667d:	mov	rdi, qword ptr [rip + 0x2422c]
0x6684:	xor	ecx, ecx
0x6686:	mov	r8d, 1
0x668c:	mov	esi, 0x23
0x6691:	jmp	0x59ff
0x6696:	mov	rdi, r14
0x6699:	xor	ebp, ebp
0x669b:	call	0xc7e0
0x66a0:	jmp	0x66b6
0x66a2:	mov	edi, 2
0x66a7:	add	ebp, 1
0x66aa:	call	0xdbb0
0x66af:	xor	eax, eax
0x66b1:	call	0xa820
0x66b6:	cmp	dword ptr [rsp + 0x28], ebp
0x66ba:	jg	0x66a2
0x66bc:	jmp	0x5723
0x66c1:	mov	rdi, r14
0x66c4:	call	0xc7e0
0x66c9:	xor	edi, edi
0x66cb:	call	0xd1a0
0x66d0:	xor	eax, eax
0x66d2:	call	0xc8c0
0x66d7:	mov	r14, rax
0x66da:	jmp	0x5730
0x66df:	mov	rdx, qword ptr [rip + 0x241c2]
0x66e6:	mov	rdi, qword ptr [rip + 0x241c3]
0x66ed:	xor	ecx, ecx
0x66ef:	mov	esi, 2
0x66f4:	mov	r8d, 1
0x66fa:	call	0x13e30
0x66ff:	jmp	0x5730
0x6704:	mov	rdx, qword ptr [rip + 0x2419d]
0x670b:	mov	rdi, qword ptr [rip + 0x2419e]
0x6712:	xor	ecx, ecx
0x6714:	mov	esi, 0x1a
0x6719:	mov	r8d, 1
0x671f:	call	0x13e30
0x6724:	jmp	0x5730
0x6729:	xor	ebp, ebp
0x672b:	jmp	0x6750
0x672d:	mov	r8d, 1
0x6733:	xor	ecx, ecx
0x6735:	mov	esi, 4
0x673a:	add	ebp, 1
0x673d:	mov	rdx, qword ptr [rip + 0x24164]
0x6744:	mov	rdi, qword ptr [rip + 0x24165]
0x674b:	call	0x13e30
0x6750:	cmp	dword ptr [rsp + 0x28], ebp
0x6754:	jg	0x672d
0x6756:	jmp	0x5730
0x675b:	xor	ebp, ebp
0x675d:	jmp	0x6782
0x675f:	mov	r8d, 1
0x6765:	xor	ecx, ecx
0x6767:	mov	esi, 0x1d
0x676c:	add	ebp, 1
0x676f:	mov	rdx, qword ptr [rip + 0x24132]
0x6776:	mov	rdi, qword ptr [rip + 0x24133]
0x677d:	call	0x13e30
0x6782:	cmp	dword ptr [rsp + 0x28], ebp
0x6786:	jg	0x675f
0x6788:	jmp	0x5730
0x678d:	xor	ebp, ebp
0x678f:	jmp	0x67b4
0x6791:	mov	r8d, 1
0x6797:	xor	ecx, ecx
0x6799:	mov	esi, 0x1e
0x679e:	add	ebp, 1
0x67a1:	mov	rdx, qword ptr [rip + 0x24100]
0x67a8:	mov	rdi, qword ptr [rip + 0x24101]
0x67af:	call	0x13e30
0x67b4:	cmp	dword ptr [rsp + 0x28], ebp
0x67b8:	jg	0x6791
0x67ba:	jmp	0x5730
0x67bf:	nop	
0x67c0:	test	rax, rax
0x67c3:	je	0x57dc
0x67c9:	mov	rdi, qword ptr [rip + 0x240e0]
0x67d0:	call	0xf480
0x67d5:	mov	rdi, qword ptr [rip + 0x240cc]
0x67dc:	call	0xf480
0x67e1:	cmp	qword ptr [r13 + 8], 0
0x67e6:	je	0x70b7
0x67ec:	lea	rbp, [rsp + 0x60]
0x67f1:	mov	rcx, qword ptr [rip + 0x240b0]
0x67f8:	xor	eax, eax
0x67fa:	mov	rdi, r13
0x67fd:	mov	rdx, qword ptr [rip + 0x240ac]
0x6804:	mov	rsi, rbp
0x6807:	mov	qword ptr [rsp + 0x60], 0
0x6810:	call	0x8b50
0x6815:	test	eax, eax
0x6817:	je	0x6c1f
0x681d:	jle	0x5730
0x6823:	mov	rdi, qword ptr [r13]
0x6827:	mov	dword ptr [rsp + 0xc], eax
0x682b:	call	0x49b0
0x6830:	mov	rbp, qword ptr [rsp + 0x60]
0x6835:	mov	r12, rax
0x6838:	mov	rdi, rbp
0x683b:	call	0x49b0
0x6840:	lea	rdi, [r12 + rax + 0x21]
0x6845:	call	0x1d670
0x684a:	mov	r8, qword ptr [r13]
0x684e:	mov	r9, rbp
0x6851:	or	rdx, 0xffffffffffffffff
0x6855:	lea	rcx, [rip + 0x19cd9]
0x685c:	mov	r12, rax
0x685f:	mov	rdi, rax
0x6862:	mov	esi, 1
0x6867:	xor	eax, eax
0x6869:	call	0x4f10
0x686e:	mov	edx, 1
0x6873:	mov	esi, 1
0x6878:	mov	rdi, r12
0x687b:	call	0xe480
0x6880:	xor	eax, eax
0x6882:	call	0xa820
0x6887:	mov	rdi, r12
0x688a:	call	0x18d10
0x688f:	cmp	byte ptr [r13 + 0x1a], 0
0x6894:	jne	0x6dc9
0x689a:	mov	rdi, rbp
0x689d:	call	0x185d0
0x68a2:	test	eax, eax
0x68a4:	je	0x6dbc
0x68aa:	movsx	esi, byte ptr [r13 + 0x1a]
0x68af:	mov	rdi, rbp
0x68b2:	call	0x193f0
0x68b7:	mov	rdi, rbp
0x68ba:	mov	r12d, eax
0x68bd:	call	0x18d10
0x68c2:	cmp	byte ptr [r13 + 0x1a], 0
0x68c7:	je	0x6ccf
0x68cd:	mov	eax, r12d
0x68d0:	and	eax, 0x7f
0x68d3:	add	eax, 1
0x68d6:	sub	al, 1
0x68d8:	jg	0x6f1d
0x68de:	test	r12b, 0x7f
0x68e2:	jne	0x6955
0x68e4:	and	r12d, 0xff00
0x68eb:	jne	0x719d
0x68f1:	mov	rdi, qword ptr [r13 + 0x10]
0x68f5:	test	rdi, rdi
0x68f8:	je	0x6943
0x68fa:	xor	eax, eax
0x68fc:	call	0x19940
0x6901:	mov	r8d, 1
0x6907:	mov	esi, 0x21
0x690c:	mov	rdx, qword ptr [rip + 0x23f95]
0x6913:	mov	rdi, qword ptr [rip + 0x23f96]
0x691a:	mov	rcx, rax
0x691d:	mov	r12, rax
0x6920:	call	0x13e30
0x6925:	mov	rdi, qword ptr [rip + 0x23f84]
0x692c:	call	0x11100
0x6931:	mov	rdi, rax
0x6934:	xor	eax, eax
0x6936:	call	0x89d0
0x693b:	mov	rdi, r12
0x693e:	call	0x18d10
0x6943:	cmp	dword ptr [rsp + 0xc], 2
0x6948:	je	0x71b4
0x694e:	cmp	dword ptr [rsp + 0xc], 3
0x6953:	je	0x695c
0x6955:	xor	ebp, ebp
0x6957:	jmp	0x565a
0x695c:	mov	rdi, qword ptr [rip + 0x23f45]
0x6963:	xor	ebp, ebp
0x6965:	call	0x110b0
0x696a:	jmp	0x565a
0x696f:	lea	eax, [r12 + 0x22]
0x6974:	cmp	eax, 0x29
0x6977:	ja	0x65e3
0x697d:	movsxd	rax, dword ptr [rbp + rax*4]
0x6982:	add	rax, rbp
0x6985:	jmp	rax
0x6988:	 ----------
0x6a73:	 ----------
0x6a74:	call	0x18d10
0x6a79:	mov	rdi, qword ptr [rsp]
0x6a7d:	call	0x4e70
0x6a82:	mov	rdi, rax
0x6a85:	mov	qword ptr [rsp + 0x58], rax
0x6a8a:	call	0xd610
0x6a8f:	mov	rax, qword ptr [rsp + 0x58]
0x6a94:	mov	rcx, rbp
0x6a97:	mov	rdx, qword ptr [rip + 0x23e0a]
0x6a9e:	mov	rdi, qword ptr [rip + 0x23e0b]
0x6aa5:	mov	r8d, 1
0x6aab:	mov	esi, 0x29
0x6ab0:	mov	qword ptr [rsp + 0x68], rax
0x6ab5:	call	0x13e30
0x6aba:	cmp	dword ptr [rsp + 0x60], -1
0x6abf:	je	0x6da2
0x6ac5:	mov	dword ptr [rsp + 0xc], 0
0x6acd:	mov	rdi, qword ptr [rsp]
0x6ad1:	mov	r13d, 1
0x6ad7:	call	0x49b0
0x6adc:	cmp	qword ptr [rsp + 0x70], rax
0x6ae1:	jae	0x630f
0x6ae7:	xor	edi, edi
0x6ae9:	xor	r13d, r13d
0x6aec:	call	0xd1a0
0x6af1:	mov	rdi, qword ptr [rsp + 0x58]
0x6af6:	call	0x49b0
0x6afb:	cmp	rax, qword ptr [rsp + 0x70]
0x6b00:	jbe	0x632b
0x6b06:	jmp	0x6324
0x6b0b:	call	0x18d10
0x6b10:	mov	rdi, qword ptr [rsp]
0x6b14:	call	0x4e70
0x6b19:	mov	rdi, rax
0x6b1c:	mov	qword ptr [rsp + 0x58], rax
0x6b21:	call	0xd610
0x6b26:	mov	rax, qword ptr [rsp + 0x58]
0x6b2b:	mov	rcx, rbp
0x6b2e:	mov	rdx, qword ptr [rip + 0x23d73]
0x6b35:	mov	rdi, qword ptr [rip + 0x23d74]
0x6b3c:	mov	r8d, 1
0x6b42:	mov	esi, 0x28
0x6b47:	mov	qword ptr [rsp + 0x68], rax
0x6b4c:	call	0x13e30
0x6b51:	cmp	dword ptr [rsp + 0x60], -1
0x6b56:	je	0x6d88
0x6b5c:	mov	dword ptr [rsp + 0xc], 0
0x6b64:	mov	rdi, qword ptr [rsp]
0x6b68:	mov	r13d, 1
0x6b6e:	call	0x49b0
0x6b73:	cmp	qword ptr [rsp + 0x70], rax
0x6b78:	jae	0x6216
0x6b7e:	xor	edi, edi
0x6b80:	xor	r13d, r13d
0x6b83:	call	0xd1a0
0x6b88:	mov	rdi, qword ptr [rsp + 0x58]
0x6b8d:	call	0x49b0
0x6b92:	cmp	rax, qword ptr [rsp + 0x70]
0x6b97:	jbe	0x6232
0x6b9d:	jmp	0x622b
0x6ba2:	mov	rax, qword ptr [rip + 0x23d17]
0x6ba9:	mov	qword ptr [rip + 0x23d00], rax
0x6bb0:	mov	rax, qword ptr [rip + 0x23d01]
0x6bb7:	jmp	0x56b0
0x6bbc:	cmp	dword ptr [rsp + 0xc], 0
0x6bc1:	je	0x62d5
0x6bc7:	xor	eax, eax
0x6bc9:	call	0xa5a0
0x6bce:	mov	rdi, qword ptr [rip + 0x23cdb]
0x6bd5:	mov	esi, 1
0x6bda:	call	0xf660
0x6bdf:	mov	dword ptr [rsp + 0xc], 0
0x6be7:	mov	rdi, qword ptr [rsp + 0x58]
0x6bec:	jmp	0x62d5
0x6bf1:	cmp	dword ptr [rsp + 0xc], 0
0x6bf6:	je	0x61dc
0x6bfc:	mov	rdi, qword ptr [rip + 0x23cad]
0x6c03:	mov	esi, 1
0x6c08:	call	0xf660
0x6c0d:	mov	dword ptr [rsp + 0xc], 0
0x6c15:	mov	rdi, qword ptr [rsp + 0x58]
0x6c1a:	jmp	0x61dc
0x6c1f:	mov	rdi, qword ptr [r12]
0x6c23:	call	0x49b0
0x6c28:	lea	rdi, [rax + 0x51]
0x6c2c:	call	0x1d670
0x6c31:	mov	r9, qword ptr [r13 + 0x20]
0x6c35:	mov	r8, qword ptr [r13]
0x6c39:	lea	rcx, [rip + 0x19d80]
0x6c40:	mov	rbp, rax
0x6c43:	or	rdx, 0xffffffffffffffff
0x6c47:	mov	rdi, rax
0x6c4a:	mov	esi, 1
0x6c4f:	xor	eax, eax
0x6c51:	call	0x4f10
0x6c56:	mov	rdi, rbp
0x6c59:	mov	edx, 0x1c
0x6c5e:	xor	esi, esi
0x6c60:	call	0x8070
0x6c65:	mov	rdi, rbp
0x6c68:	call	0x18d10
0x6c6d:	jmp	0x5730
0x6c72:	mov	rax, qword ptr [rsp]
0x6c76:	test	rax, rax
0x6c79:	je	0x6c83
0x6c7b:	mov	rdi, rax
0x6c7e:	call	0x18d10
0x6c83:	mov	rdi, qword ptr [rsp + 0x58]
0x6c88:	test	rdi, rdi
0x6c8b:	je	0x5730
0x6c91:	call	0x4e70
0x6c96:	mov	rdx, qword ptr [rip + 0x23c0b]
0x6c9d:	xor	ecx, ecx
0x6c9f:	mov	rdi, qword ptr [rip + 0x23c0a]
0x6ca6:	mov	r8d, 1
0x6cac:	mov	esi, 0x2a
0x6cb1:	mov	qword ptr [rsp], rax
0x6cb5:	call	0x13e30
0x6cba:	xor	ecx, ecx
0x6cbc:	mov	edx, 3
0x6cc1:	xor	esi, esi
0x6cc3:	xor	edi, edi
0x6cc5:	call	0x86c0
0x6cca:	jmp	0x5730
0x6ccf:	cmp	byte ptr [r13 + 0x18], 0
0x6cd4:	jne	0x6f35
0x6cda:	xor	eax, eax
0x6cdc:	call	0xa480
0x6ce1:	cmp	byte ptr [r13 + 0x19], 0
0x6ce6:	je	0x6cf2
0x6ce8:	mov	dword ptr [rip + 0x23bea], 1
0x6cf2:	test	r12b, 0x7f
0x6cf6:	jne	0x6955
0x6cfc:	and	r12d, 0xff00
0x6d03:	je	0x68f1
0x6d09:	xor	ebp, ebp
0x6d0b:	jmp	0x565a
0x6d10:	xor	edi, edi
0x6d12:	call	0x4aa0
0x6d17:	mov	edx, 0x21
0x6d1c:	mov	rcx, qword ptr [rip + 0x23b1d]
0x6d23:	mov	esi, 1
0x6d28:	lea	rdi, [rip + 0x19c49]
0x6d2f:	call	0x4e40
0x6d34:	mov	eax, dword ptr [rip + 0x23c62]
0x6d3a:	xor	esi, esi
0x6d3c:	lea	edi, [rax - 1]
0x6d3f:	call	0xa4b0
0x6d44:	xor	edi, edi
0x6d46:	call	0xb180
0x6d4b:	mov	dword ptr [rip + 0x23b87], 0
0x6d55:	jmp	0x5667
0x6d5a:	mov	rdi, qword ptr [rip + 0x23b4f]
0x6d61:	call	0x11100
0x6d66:	mov	rdi, rax
0x6d69:	xor	eax, eax
0x6d6b:	call	0x89d0
0x6d70:	jmp	0x571c
0x6d75:	xor	eax, eax
0x6d77:	call	0xa6c0
0x6d7c:	xor	eax, eax
0x6d7e:	call	0xa300
0x6d83:	jmp	0x56c4
0x6d88:	mov	r13d, 1
0x6d8e:	xor	eax, eax
0x6d90:	call	0xa5a0
0x6d95:	mov	dword ptr [rsp + 0xc], 1
0x6d9d:	jmp	0x619a
0x6da2:	mov	r13d, 1
0x6da8:	xor	eax, eax
0x6daa:	call	0xa5a0
0x6daf:	mov	dword ptr [rsp + 0xc], 1
0x6db7:	jmp	0x6293
0x6dbc:	mov	rdi, rbp
0x6dbf:	call	0xc4b0
0x6dc4:	jmp	0x68aa
0x6dc9:	mov	rdi, qword ptr [r13]
0x6dcd:	call	0x49b0
0x6dd2:	lea	rdi, [rax + 0x41]
0x6dd6:	call	0x1d670
0x6ddb:	mov	r9, qword ptr [r13]
0x6ddf:	lea	r8, [rip + 0x19921]
0x6de6:	lea	rcx, [rip + 0x19bb3]
0x6ded:	mov	r12, rax
0x6df0:	or	rdx, 0xffffffffffffffff
0x6df4:	mov	esi, 1
0x6df9:	mov	rdi, rax
0x6dfc:	xor	eax, eax
0x6dfe:	call	0x4f10
0x6e03:	mov	rdi, r12
0x6e06:	call	0xdb60
0x6e0b:	xor	eax, eax
0x6e0d:	call	0xa820
0x6e12:	mov	rdi, r12
0x6e15:	call	0x18d10
0x6e1a:	jmp	0x689a
0x6e1f:	cmp	r12d, -0x3d
0x6e23:	jne	0x696f
0x6e29:	mov	rax, qword ptr [rsp + 0x50]
0x6e2e:	cmp	byte ptr [rax], 0
0x6e31:	je	0x6611
0x6e37:	mov	rdi, r14
0x6e3a:	call	0xc7e0
0x6e3f:	mov	rdi, qword ptr [rsp + 0x50]
0x6e44:	xor	eax, eax
0x6e46:	lea	rsi, [rsp + 0x48]
0x6e4b:	call	0x1b5b0
0x6e50:	test	eax, eax
0x6e52:	js	0x7287
0x6e58:	mov	rdi, qword ptr [rip + 0x23a69]
0x6e5f:	call	0xbb40
0x6e64:	xor	edi, edi
0x6e66:	call	0xd1a0
0x6e6b:	mov	rdi, qword ptr [rsp + 0x48]
0x6e70:	call	0xd610
0x6e75:	mov	rdi, qword ptr [rsp + 0x48]
0x6e7a:	call	0xc4b0
0x6e7f:	mov	rdi, qword ptr [rsp + 0x48]
0x6e84:	xor	esi, esi
0x6e86:	call	0x193f0
0x6e8b:	mov	rdi, qword ptr [rip + 0x23a36]
0x6e92:	call	0xbb10
0x6e97:	xor	edi, edi
0x6e99:	call	0xdbb0
0x6e9e:	mov	rdi, qword ptr [rip + 0x22dc3]
0x6ea5:	xor	edx, edx
0x6ea7:	xor	esi, esi
0x6ea9:	call	0xe480
0x6eae:	xor	edi, edi
0x6eb0:	call	0xd1a0
0x6eb5:	xor	eax, eax
0x6eb7:	call	0xc8c0
0x6ebc:	mov	rdi, qword ptr [rip + 0x239ed]
0x6ec3:	mov	r14, rax
0x6ec6:	call	0x11100
0x6ecb:	mov	rdi, rax
0x6ece:	call	0xc4b0
0x6ed3:	xor	eax, eax
0x6ed5:	call	0xa820
0x6eda:	jmp	0x6611
0x6edf:	cmp	al, 0x2d
0x6ee1:	jne	0x60c3
0x6ee7:	cmp	byte ptr [rbp + 1], 0
0x6eeb:	mov	rdx, qword ptr [rip + 0x239b6]
0x6ef2:	mov	rdi, qword ptr [rip + 0x239b7]
0x6ef9:	jne	0x726e
0x6eff:	mov	r8d, 1
0x6f05:	xor	ecx, ecx
0x6f07:	mov	esi, 6
0x6f0c:	call	0x13e30
0x6f11:	xor	edi, edi
0x6f13:	call	0xd1a0
0x6f18:	jmp	0x5723
0x6f1d:	mov	edx, 0xc
0x6f22:	xor	esi, esi
0x6f24:	lea	rdi, [rip + 0x197e9]
0x6f2b:	call	0x8070
0x6f30:	jmp	0x6cf2
0x6f35:	mov	rdi, qword ptr [rip + 0x2398c]
0x6f3c:	call	0xbb10
0x6f41:	jmp	0x6cda
0x6f46:	mov	rdi, r12
0x6f49:	call	0x49b0
0x6f4e:	mov	rdi, r12
0x6f51:	mov	rsi, rax
0x6f54:	call	0x18530
0x6f59:	test	eax, eax
0x6f5b:	je	0x70a8
0x6f61:	mov	r8, r12
0x6f64:	lea	rcx, [rip + 0x197d6]
0x6f6b:	jmp	0x5f42
0x6f70:	mov	rdi, r14
0x6f73:	call	0x1d7a0
0x6f78:	mov	r12, rax
0x6f7b:	jmp	0x5593
0x6f80:	xor	esi, esi
0x6f82:	lea	rdi, [rip + 0x19717]
0x6f89:	call	0x17e50
0x6f8e:	mov	dword ptr [rsp], eax
0x6f91:	jmp	0x53b4
0x6f96:	mov	rdi, qword ptr [rbx + rax*8]
0x6f9a:	lea	edx, [rax + 1]
0x6f9d:	mov	dword ptr [rip + 0x238a5], edx
0x6fa3:	call	0x1d7a0
0x6fa8:	mov	r13, rax
0x6fab:	movsxd	rax, dword ptr [rip + 0x23896]
0x6fb2:	cmp	eax, ebp
0x6fb4:	jge	0x5124
0x6fba:	mov	rdi, qword ptr [rbx + rax*8]
0x6fbe:	lea	edx, [rax + 1]
0x6fc1:	mov	dword ptr [rip + 0x23881], edx
0x6fc7:	call	0x1d7a0
0x6fcc:	cmp	dword ptr [rip + 0x23876], ebp
0x6fd2:	mov	r14, rax
0x6fd5:	jge	0x5127
0x6fdb:	mov	rcx, qword ptr [rip + 0x23906]
0x6fe2:	mov	rdi, qword ptr [rip + 0x23897]
0x6fe9:	lea	rdx, [rip + 0x198f8]
0x6ff0:	xor	eax, eax
0x6ff2:	mov	esi, 1
0x6ff7:	call	0x4e60
0x6ffc:	jmp	0x5127
0x7001:	mov	rdi, r13
0x7004:	call	0x1d7a0
0x7009:	mov	r12, rax
0x700c:	jmp	0x5532
0x7011:	lea	rbx, [rip + 0x19543]
0x7018:	jmp	0x529c
0x701d:	mov	rdi, qword ptr [rip + 0x238ac]
0x7024:	xor	edx, edx
0x7026:	lea	rsi, [rip + 0x19505]
0x702d:	call	0x8070
0x7032:	cmp	al, 0x79
0x7034:	jne	0x5730
0x703a:	jmp	0x6442
0x703f:	mov	edi, 1
0x7044:	xor	eax, eax
0x7046:	call	0x7bd0
0x704b:	jmp	0x59ce
0x7050:	mov	esi, 1
0x7055:	lea	rdi, [rip + 0x19664]
0x705c:	call	0x17e50
0x7061:	jmp	0x53df
0x7066:	mov	rcx, qword ptr [rip + 0x2387b]
0x706d:	mov	rdi, qword ptr [rip + 0x2380c]
0x7074:	xor	eax, eax
0x7076:	mov	r8d, 0x800
0x707c:	lea	rdx, [rip + 0x19895]
0x7083:	mov	esi, 1
0x7088:	call	0x4e60
0x708d:	jmp	0x54a3
0x7092:	xor	esi, esi
0x7094:	lea	rdi, [rip + 0x195fa]
0x709b:	call	0x17e50
0x70a0:	mov	r12d, eax
0x70a3:	jmp	0x53a3
0x70a8:	mov	r8, r12
0x70ab:	lea	rcx, [rip + 0x19696]
0x70b2:	jmp	0x5f42
0x70b7:	mov	rdi, qword ptr [r13 + 0x10]
0x70bb:	test	rdi, rdi
0x70be:	je	0x6955
0x70c4:	xor	eax, eax
0x70c6:	call	0x19940
0x70cb:	mov	r8d, 1
0x70d1:	mov	esi, 0x21
0x70d6:	mov	rdx, qword ptr [rip + 0x237cb]
0x70dd:	mov	rdi, qword ptr [rip + 0x237cc]
0x70e4:	mov	rcx, rax
0x70e7:	mov	rbp, rax
0x70ea:	call	0x13e30
0x70ef:	mov	rdi, qword ptr [rip + 0x237ba]
0x70f6:	call	0x11100
0x70fb:	mov	rdi, rax
0x70fe:	xor	eax, eax
0x7100:	call	0x89d0
0x7105:	mov	rdi, rbp
0x7108:	xor	ebp, ebp
0x710a:	call	0x18d10
0x710f:	jmp	0x565a
0x7114:	mov	qword ptr [rsp + 0x40], 0
0x711d:	lea	r12, [rsp + 0x40]
0x7122:	lea	rbp, [rip + 0x1966f]
0x7129:	jmp	0x714f
0x712b:	lea	rdi, [rip + 0x22ade]
0x7132:	call	0xdb60
0x7137:	xor	eax, eax
0x7139:	call	0xa5a0
0x713e:	xor	eax, eax
0x7140:	call	0xa820
0x7145:	mov	edi, 2
0x714a:	call	0x4ea0
0x714f:	mov	rsi, r12
0x7152:	xor	ecx, ecx
0x7154:	xor	edx, edx
0x7156:	mov	rdi, rbp
0x7159:	call	0x83e0
0x715e:	xor	eax, eax
0x7160:	call	0xa820
0x7165:	mov	rsi, qword ptr [rsp + 0x40]
0x716a:	test	rsi, rsi
0x716d:	je	0x712b
0x716f:	mov	rdi, qword ptr [rsp + 0x38]
0x7174:	call	0x4b30
0x7179:	test	eax, eax
0x717b:	jne	0x712b
0x717d:	xor	eax, eax
0x717f:	call	0xa820
0x7184:	mov	rdi, qword ptr [rsp + 0x38]
0x7189:	call	0x18d10
0x718e:	mov	rdi, qword ptr [rsp + 0x40]
0x7193:	call	0x18d10
0x7198:	jmp	0x5a59
0x719d:	xor	eax, eax
0x719f:	xor	ebp, ebp
0x71a1:	call	0xa5a0
0x71a6:	mov	rdi, qword ptr [r13]
0x71aa:	call	0x195e0
0x71af:	jmp	0x565a
0x71b4:	mov	rdi, qword ptr [rip + 0x236f5]
0x71bb:	xor	ebp, ebp
0x71bd:	call	0x110b0
0x71c2:	jmp	0x565a
0x71c7:	cmp	byte ptr [rbp + 1], 0
0x71cb:	mov	rdx, qword ptr [rip + 0x236d6]
0x71d2:	mov	rdi, qword ptr [rip + 0x236d7]
0x71d9:	jne	0x72a7
0x71df:	mov	r8d, 1
0x71e5:	xor	ecx, ecx
0x71e7:	mov	esi, 5
0x71ec:	call	0x13e30
0x71f1:	jmp	0x6f11
0x71f6:	mov	rcx, qword ptr [rip + 0x236cb]
0x71fd:	mov	rdx, qword ptr [rip + 0x236a4]
0x7204:	mov	esi, 1
0x7209:	mov	r8d, 1
0x720f:	mov	rdi, qword ptr [rip + 0x2369a]
0x7216:	call	0x13e30
0x721b:	mov	rdi, qword ptr [rip + 0x2368e]
0x7222:	mov	ebp, eax
0x7224:	call	0x11100
0x7229:	mov	rdi, rax
0x722c:	call	0xc4b0
0x7231:	xor	edi, edi
0x7233:	call	0xd1a0
0x7238:	xor	eax, eax
0x723a:	call	0x9640
0x723f:	xor	eax, eax
0x7241:	call	0xc8c0
0x7246:	mov	r14, rax
0x7249:	test	ebp, ebp
0x724b:	je	0x5730
0x7251:	xor	ebp, ebp
0x7253:	jmp	0x565a
0x7258:	mov	rdi, qword ptr [rsp + 0x48]
0x725d:	mov	edx, 0x1c
0x7262:	xor	esi, esi
0x7264:	call	0x8070
0x7269:	jmp	0x5723
0x726e:	lea	rcx, [rbp + 1]
0x7272:	mov	r8d, 1
0x7278:	mov	esi, 0x25
0x727d:	call	0x13e30
0x7282:	jmp	0x6f11
0x7287:	mov	rdi, qword ptr [rsp + 0x48]
0x728c:	mov	edx, 0x1c
0x7291:	xor	esi, esi
0x7293:	call	0x8070
0x7298:	xor	eax, eax
0x729a:	call	0xc8c0
0x729f:	mov	r14, rax
0x72a2:	jmp	0x6611
0x72a7:	lea	rcx, [rbp + 1]
0x72ab:	mov	r8d, 1
0x72b1:	mov	esi, 0x24
0x72b6:	call	0x13e30
0x72bb:	jmp	0x6f11
0x72c0:	mov	rdi, qword ptr [rsp + 0x48]
0x72c5:	call	0x185d0
0x72ca:	mov	ebp, eax
0x72cc:	test	eax, eax
0x72ce:	je	0x73fa
0x72d4:	xor	edi, edi
0x72d6:	call	0xd1a0
0x72db:	mov	rdi, qword ptr [rsp + 0x48]
0x72e0:	call	0xd610
0x72e5:	mov	rdi, qword ptr [rsp + 0x48]
0x72ea:	mov	esi, ebp
0x72ec:	call	0x193f0
0x72f1:	xor	edi, edi
0x72f3:	call	0xdbb0
0x72f8:	jmp	0x6f11
0x72fd:	mov	rdx, qword ptr [rip + 0x235a4]
0x7304:	mov	rdi, qword ptr [rip + 0x235a5]
0x730b:	xor	ecx, ecx
0x730d:	mov	esi, 7
0x7312:	mov	r8d, 1
0x7318:	call	0x13e30
0x731d:	xor	edi, edi
0x731f:	call	0xd1a0
0x7324:	jmp	0x5723
0x7329:	mov	rdi, qword ptr [rip + 0x23580]
0x7330:	mov	r15d, dword ptr [rsp + 0x10]
0x7335:	call	0xf480
0x733a:	mov	rdi, qword ptr [rip + 0x23567]
0x7341:	call	0xf480
0x7346:	xor	eax, eax
0x7348:	call	0xa480
0x734d:	xor	eax, eax
0x734f:	call	0xe4e0
0x7354:	xor	eax, eax
0x7356:	call	0xa820
0x735b:	xor	eax, eax
0x735d:	call	0x18330
0x7362:	mov	r8, rax
0x7365:	mov	eax, 0x3c
0x736a:	sub	eax, dword ptr [r8]
0x736d:	mov	edi, eax
0x736f:	call	0x4aa0
0x7374:	mov	dword ptr [rip + 0x23566], 0
0x737e:	jmp	0x6447
0x7383:	mov	rdi, r14
0x7386:	xor	ebp, ebp
0x7388:	call	0xc7e0
0x738d:	xor	eax, eax
0x738f:	call	0xc8c0
0x7394:	mov	rdi, qword ptr [rip + 0x23515]
0x739b:	mov	r14, rax
0x739e:	call	0xf480
0x73a3:	mov	rdi, qword ptr [rip + 0x234fe]
0x73aa:	call	0xf480
0x73af:	xor	eax, eax
0x73b1:	call	0xa480
0x73b6:	xor	eax, eax
0x73b8:	call	0xe4e0
0x73bd:	xor	eax, eax
0x73bf:	call	0xa820
0x73c4:	xor	eax, eax
0x73c6:	call	0x18330
0x73cb:	mov	r8, rax
0x73ce:	mov	eax, 0x3c
0x73d3:	sub	eax, dword ptr [r8]
0x73d6:	mov	edi, eax
0x73d8:	call	0x4aa0
0x73dd:	mov	dword ptr [rip + 0x234fd], 0
0x73e7:	jmp	0x565a
0x73ec:	lea	rdi, [rip + 0x1955d]
0x73f3:	xor	eax, eax
0x73f5:	call	0x8b00
0x73fa:	mov	rdi, qword ptr [rsp + 0x48]
0x73ff:	xor	ebp, ebp
0x7401:	call	0xc4b0
0x7406:	xor	edi, edi
0x7408:	call	0xd1a0
0x740d:	mov	rdi, qword ptr [rsp + 0x48]
0x7412:	call	0xd610
0x7417:	mov	rdi, qword ptr [rsp + 0x48]
0x741c:	xor	esi, esi
0x741e:	call	0x193f0
0x7423:	xor	edi, edi
0x7425:	call	0xdbb0
0x742a:	xor	edi, edi
0x742c:	call	0xd1a0
0x7431:	mov	rdi, qword ptr [rip + 0x23478]
0x7438:	call	0xf480
0x743d:	mov	rdi, qword ptr [rip + 0x23464]
0x7444:	call	0xf480
0x7449:	xor	eax, eax
0x744b:	call	0xa480
0x7450:	mov	rdi, qword ptr [rip + 0x23471]
0x7457:	call	0xbb10
0x745c:	xor	eax, eax
0x745e:	mov	dword ptr [rip + 0x23474], 1
0x7468:	call	0xc8c0
0x746d:	mov	r14, rax
0x7470:	jmp	0x565a
0x7475:	call	0x49d0
0x747a:	nop	word ptr [rax + rax]
0x7480:	endbr64	
0x7484:	xor	ebp, ebp
0x7486:	mov	r9, rdx
0x7489:	pop	rsi
0x748a:	mov	rdx, rsp
0x748d:	and	rsp, 0xfffffffffffffff0
0x7491:	push	rax
0x7492:	push	rsp
0x7493:	xor	r8d, r8d
0x7496:	xor	ecx, ecx
0x7498:	lea	rdi, [rip - 0x256f]
0x749f:	call	qword ptr [rip + 0x21b23]
0x74a5:	hlt	
0x74a6:	nop	word ptr cs:[rax + rax]
0x74b0:	lea	rdi, [rip + 0x23379]
0x74b7:	lea	rax, [rip + 0x23372]
0x74be:	cmp	rax, rdi
0x74c1:	je	0x74d8
0x74c3:	mov	rax, qword ptr [rip + 0x21b06]
0x74ca:	test	rax, rax
0x74cd:	je	0x74d8
0x74cf:	jmp	rax
0x74d1:	 ----------
0x74d7:	 ----------
0x74d8:	ret	
0x74d9:	nop	dword ptr [rax]
0x74e0:	lea	rdi, [rip + 0x23349]
0x74e7:	lea	rsi, [rip + 0x23342]
0x74ee:	sub	rsi, rdi
0x74f1:	mov	rax, rsi
0x74f4:	shr	rsi, 0x3f
0x74f8:	sar	rax, 3
0x74fc:	add	rsi, rax
0x74ff:	sar	rsi, 1
0x7502:	je	0x7518
0x7504:	mov	rax, qword ptr [rip + 0x21ae5]
0x750b:	test	rax, rax
0x750e:	je	0x7518
0x7510:	jmp	rax
0x7512:	 ----------
0x7517:	 ----------
0x7518:	ret	
0x7519:	nop	dword ptr [rax]
0x7520:	endbr64	
0x7524:	cmp	byte ptr [rip + 0x2335d], 0
0x752b:	jne	0x7558
0x752d:	push	rbp
0x752e:	cmp	qword ptr [rip + 0x21ac2], 0
0x7536:	mov	rbp, rsp
0x7539:	je	0x7547
0x753b:	mov	rdi, qword ptr [rip + 0x21ac6]
0x7542:	call	0x47b0
0x7547:	call	0x74b0
0x754c:	mov	byte ptr [rip + 0x23335], 1
0x7553:	pop	rbp
0x7554:	ret	
0x7555:	nop	dword ptr [rax]
0x7558:	ret	
0x7559:	nop	dword ptr [rax]
0x7560:	endbr64	
0x7564:	jmp	0x74e0
0x7569:	nop	dword ptr [rax]
0x7570:	push	r12
0x7572:	lea	eax, [rdi + 0x42]
0x7575:	mov	r12d, esi
0x7578:	sub	rsp, 0x10
0x757c:	cmp	eax, 0x17
0x757f:	ja	0x77e0
0x7585:	lea	rdx, [rip + 0x18a78]
0x758c:	movsxd	rax, dword ptr [rdx + rax*4]
0x7590:	add	rax, rdx
0x7593:	jmp	rax
0x7596:	 ----------
0x75ac:	 ----------
0x75ad:	add	rsp, 0x10
0x75b1:	mov	eax, r12d
0x75b4:	pop	r12
0x75b6:	ret	
0x75b7:	nop	word ptr [rax + rax]
0x75c0:	xor	eax, eax
0x75c2:	mov	r12d, 1
0x75c8:	call	0xcb30
0x75cd:	jmp	0x75ad
0x75cf:	nop	
0x75d0:	xor	eax, eax
0x75d2:	mov	r12d, 1
0x75d8:	call	0xcb60
0x75dd:	jmp	0x75ad
0x75df:	nop	
0x75e0:	xor	eax, eax
0x75e2:	mov	r12d, 1
0x75e8:	call	0xcc30
0x75ed:	jmp	0x75ad
0x75ef:	nop	
0x75f0:	xor	eax, eax
0x75f2:	mov	r12d, 1
0x75f8:	call	0xccf0
0x75fd:	jmp	0x75ad
0x75ff:	nop	
0x7600:	xor	eax, eax
0x7602:	mov	r12d, 1
0x7608:	call	0xcd10
0x760d:	jmp	0x75ad
0x760f:	nop	
0x7610:	and	r12d, 1
0x7614:	jne	0x7820
0x761a:	mov	r12d, 1
0x7620:	add	rsp, 0x10
0x7624:	mov	eax, r12d
0x7627:	pop	r12
0x7629:	ret	
0x762a:	nop	word ptr [rax + rax]
0x7630:	and	r12d, 1
0x7634:	je	0x761a
0x7636:	xor	eax, eax
0x7638:	call	0xce70
0x763d:	jmp	0x75ad
0x7642:	nop	word ptr [rax + rax]
0x7648:	and	r12d, 1
0x764c:	je	0x761a
0x764e:	xor	eax, eax
0x7650:	call	0xd380
0x7655:	jmp	0x75ad
0x765a:	nop	word ptr [rax + rax]
0x7660:	and	r12d, 1
0x7664:	je	0x761a
0x7666:	xor	eax, eax
0x7668:	call	0xd400
0x766d:	jmp	0x75ad
0x7672:	nop	word ptr [rax + rax]
0x7678:	and	r12d, 1
0x767c:	je	0x761a
0x767e:	xor	eax, eax
0x7680:	call	0xd480
0x7685:	jmp	0x75ad
0x768a:	nop	word ptr [rax + rax]
0x7690:	xor	eax, eax
0x7692:	mov	r12d, 1
0x7698:	call	0xca60
0x769d:	jmp	0x75ad
0x76a2:	nop	word ptr [rax + rax]
0x76a8:	and	r12d, 1
0x76ac:	je	0x761a
0x76b2:	xor	eax, eax
0x76b4:	call	0xca80
0x76b9:	jmp	0x75ad
0x76be:	nop	
0x76c0:	xor	eax, eax
0x76c2:	mov	r12d, 1
0x76c8:	call	0xcab0
0x76cd:	jmp	0x75ad
0x76d2:	nop	word ptr [rax + rax]
0x76d8:	and	r12d, 1
0x76dc:	je	0x761a
0x76e2:	xor	eax, eax
0x76e4:	call	0xd700
0x76e9:	jmp	0x75ad
0x76ee:	nop	
0x76f0:	xor	eax, eax
0x76f2:	mov	r12d, 1
0x76f8:	call	0xcae0
0x76fd:	jmp	0x75ad
0x7702:	nop	word ptr [rax + rax]
0x7708:	and	r12d, 1
0x770c:	je	0x761a
0x7712:	xor	eax, eax
0x7714:	call	0xd1f0
0x7719:	jmp	0x75ad
0x771e:	nop	
0x7720:	and	r12d, 1
0x7724:	je	0x761a
0x772a:	xor	eax, eax
0x772c:	call	0xd250
0x7731:	jmp	0x75ad
0x7736:	nop	word ptr cs:[rax + rax]
0x7740:	and	r12d, 1
0x7744:	je	0x761a
0x774a:	xor	eax, eax
0x774c:	call	0xd330
0x7751:	jmp	0x75ad
0x7756:	nop	word ptr cs:[rax + rax]
0x7760:	and	r12d, 1
0x7764:	je	0x761a
0x776a:	xor	eax, eax
0x776c:	call	0xd2b0
0x7771:	jmp	0x75ad
0x7776:	nop	word ptr cs:[rax + rax]
0x7780:	and	r12d, 1
0x7784:	je	0x761a
0x778a:	xor	eax, eax
0x778c:	call	0xcf80
0x7791:	jmp	0x75ad
0x7796:	nop	word ptr cs:[rax + rax]
0x77a0:	and	r12d, 1
0x77a4:	je	0x761a
0x77aa:	mov	edi, 1
0x77af:	call	0xd1a0
0x77b4:	jmp	0x75ad
0x77b9:	nop	dword ptr [rax]
0x77c0:	and	r12d, 1
0x77c4:	je	0x761a
0x77ca:	xor	eax, eax
0x77cc:	call	0xcf10
0x77d1:	jmp	0x75ad
0x77d6:	nop	word ptr cs:[rax + rax]
0x77e0:	mov	dword ptr [rsp + 0xc], edi
0x77e4:	and	r12d, 1
0x77e8:	je	0x75ad
0x77ee:	call	0x4f00
0x77f3:	mov	r8, rax
0x77f6:	movsxd	rax, dword ptr [rsp + 0xc]
0x77fb:	mov	rdx, qword ptr [r8]
0x77fe:	mov	rdi, rax
0x7801:	test	byte ptr [rdx + rax*2 + 1], 0x40
0x7806:	je	0x7818
0x7808:	call	0xcd30
0x780d:	jmp	0x75ad
0x7812:	nop	word ptr [rax + rax]
0x7818:	xor	r12d, r12d
0x781b:	jmp	0x75ad
0x7820:	xor	eax, eax
0x7822:	call	0xcde0
0x7827:	jmp	0x75ad
0x782c:	nop	dword ptr [rax]
0x7830:	endbr64	
0x7834:	xor	eax, eax
0x7836:	cmp	dword ptr [rip + 0x2315f], 6
0x783d:	jle	0x7869
0x783f:	mov	edx, dword ptr [rip + 0x22413]
0x7845:	mov	eax, dword ptr [rip + 0x2314d]
0x784b:	test	edx, edx
0x784d:	je	0x7860
0x784f:	cmp	eax, 0xb
0x7852:	setg	al
0x7855:	movzx	eax, al
0x7858:	ret	
0x7859:	nop	dword ptr [rax]
0x7860:	cmp	eax, 5
0x7863:	setg	al
0x7866:	movzx	eax, al
0x7869:	ret	
0x786a:	nop	word ptr [rax + rax]
0x7870:	endbr64	
0x7874:	xor	eax, eax
0x7876:	cmp	dword ptr [rip + 0x23067], 1
0x787d:	sete	al
0x7880:	ret	
0x7881:	nop	word ptr cs:[rax + rax]
0x788c:	nop	dword ptr [rax]
0x7890:	endbr64	
0x7894:	push	r13
0x7896:	xor	eax, eax
0x7898:	push	r12
0x789a:	push	rbp
0x789b:	push	rbx
0x789c:	mov	ebx, edi
0x789e:	sub	rsp, 8
0x78a2:	mov	ebp, dword ptr [rip + 0x230f4]
0x78a8:	mov	r12d, dword ptr [rip + 0x230e9]
0x78af:	call	0xb520
0x78b4:	mov	ecx, dword ptr [rip + 0x230e2]
0x78ba:	test	ebx, ebx
0x78bc:	jne	0x78c6
0x78be:	cmp	ecx, ebp
0x78c0:	je	0x7b00
0x78c6:	mov	edx, dword ptr [rip + 0x230bc]
0x78cc:	test	edx, edx
0x78ce:	jne	0x7a60
0x78d4:	mov	rdi, qword ptr [rip + 0x22fd5]
0x78db:	cmp	ecx, 1
0x78de:	jle	0x79e0
0x78e4:	cmp	ecx, 2
0x78e7:	je	0x7b70
0x78ed:	cmp	ecx, 6
0x78f0:	jle	0x790d
0x78f2:	mov	eax, dword ptr [rip + 0x22360]
0x78f8:	movsxd	r8, dword ptr [rip + 0x23099]
0x78ff:	test	eax, eax
0x7901:	je	0x7a90
0x7907:	cmp	r8d, 0xb
0x790b:	jg	0x7950
0x790d:	mov	r8d, 0x50
0x7913:	mov	ecx, 2
0x7918:	mov	edx, 0x10000
0x791d:	mov	esi, 0x10000
0x7922:	call	0xf590
0x7927:	mov	r8d, 0x50
0x792d:	mov	ecx, 2
0x7932:	mov	rdi, qword ptr [rip + 0x22f6f]
0x7939:	mov	edx, 0x10000
0x793e:	mov	esi, 0x10000
0x7943:	call	0xf590
0x7948:	jmp	0x7ad2
0x794d:	nop	dword ptr [rax]
0x7950:	mov	ebp, r8d
0x7953:	and	r8d, 1
0x7957:	sar	ebp, 1
0x7959:	lea	r13d, [r8 + rbp]
0x795d:	movsxd	rbp, ebp
0x7960:	call	0xf470
0x7965:	movsxd	r13, r13d
0x7968:	mov	rdi, rax
0x796b:	call	0xc6a0
0x7970:	mov	rdi, qword ptr [rip + 0x22f31]
0x7977:	mov	r12d, eax
0x797a:	call	0xf470
0x797f:	mov	rdi, rax
0x7982:	call	0xc6a0
0x7987:	cmp	r12d, eax
0x798a:	jg	0x7b20
0x7990:	mov	eax, dword ptr [rip + 0x23006]
0x7996:	mov	r8, r13
0x7999:	xor	esi, esi
0x799b:	mov	edx, 1
0x79a0:	mov	rdi, qword ptr [rip + 0x22f09]
0x79a7:	lea	ecx, [rax - 3]
0x79aa:	movsxd	rcx, ecx
0x79ad:	call	0xf590
0x79b2:	mov	r8, rbp
0x79b5:	mov	edx, 1
0x79ba:	mov	rsi, r13
0x79bd:	mov	eax, dword ptr [rip + 0x22fd9]
0x79c3:	mov	rdi, qword ptr [rip + 0x22ede]
0x79ca:	lea	ecx, [rax - 3]
0x79cd:	movsxd	rcx, ecx
0x79d0:	call	0xf590
0x79d5:	jmp	0x7ad2
0x79da:	nop	word ptr [rax + rax]
0x79e0:	mov	r8d, 0x50
0x79e6:	mov	ecx, 2
0x79eb:	mov	edx, 0x10000
0x79f0:	mov	esi, 0x10000
0x79f5:	call	0xf590
0x79fa:	mov	r8d, 0x50
0x7a00:	mov	ecx, 2
0x7a05:	mov	rdi, qword ptr [rip + 0x22e9c]
0x7a0c:	mov	edx, 0x10000
0x7a11:	mov	esi, 0x10000
0x7a16:	call	0xf590
0x7a1b:	xor	esi, esi
0x7a1d:	xor	edi, edi
0x7a1f:	call	0x16d30
0x7a24:	mov	eax, dword ptr [rip + 0x22f72]
0x7a2a:	xor	edi, edi
0x7a2c:	lea	esi, [rax - 1]
0x7a2f:	movsxd	rsi, esi
0x7a32:	call	0xde50
0x7a37:	mov	eax, dword ptr [rip + 0x22f5f]
0x7a3d:	mov	edi, dword ptr [rip + 0x22f55]
0x7a43:	cmp	eax, 1
0x7a46:	lea	esi, [rax - 2]
0x7a49:	mov	eax, 0
0x7a4e:	cmove	esi, eax
0x7a51:	add	rsp, 8
0x7a55:	pop	rbx
0x7a56:	pop	rbp
0x7a57:	pop	r12
0x7a59:	pop	r13
0x7a5b:	jmp	0xc890
0x7a60:	imul	ecx, dword ptr [rip + 0x22f31]
0x7a67:	mov	rdi, qword ptr [rip + 0x22e5a]
0x7a6e:	lea	esi, [rcx + rcx + 4]
0x7a72:	movsxd	rsi, esi
0x7a75:	call	0x1d690
0x7a7a:	mov	ecx, dword ptr [rip + 0x22f1c]
0x7a80:	mov	qword ptr [rip + 0x22e41], rax
0x7a87:	jmp	0x78d4
0x7a8c:	nop	dword ptr [rax]
0x7a90:	cmp	r8d, 5
0x7a94:	jle	0x790d
0x7a9a:	sub	ecx, 3
0x7a9d:	mov	edx, 1
0x7aa2:	xor	esi, esi
0x7aa4:	movsxd	rcx, ecx
0x7aa7:	call	0xf590
0x7aac:	mov	eax, dword ptr [rip + 0x22eea]
0x7ab2:	mov	edx, 1
0x7ab7:	xor	esi, esi
0x7ab9:	movsxd	r8, dword ptr [rip + 0x22ed8]
0x7ac0:	mov	rdi, qword ptr [rip + 0x22de1]
0x7ac7:	lea	ecx, [rax - 3]
0x7aca:	movsxd	rcx, ecx
0x7acd:	call	0xf590
0x7ad2:	movsxd	rdi, dword ptr [rip + 0x22ebf]
0x7ad9:	xor	esi, esi
0x7adb:	call	0x16d30
0x7ae0:	mov	eax, dword ptr [rip + 0x22eb6]
0x7ae6:	lea	esi, [rax - 1]
0x7ae9:	movsxd	rsi, esi
0x7aec:	movsxd	rdi, dword ptr [rip + 0x22ea5]
0x7af3:	jmp	0x7a32
0x7af8:	nop	dword ptr [rax + rax]
0x7b00:	cmp	dword ptr [rip + 0x22e91], r12d
0x7b07:	jne	0x78c6
0x7b0d:	add	rsp, 8
0x7b11:	pop	rbx
0x7b12:	pop	rbp
0x7b13:	pop	r12
0x7b15:	pop	r13
0x7b17:	ret	
0x7b18:	nop	dword ptr [rax + rax]
0x7b20:	mov	eax, dword ptr [rip + 0x22e76]
0x7b26:	mov	rdi, qword ptr [rip + 0x22d83]
0x7b2d:	mov	r8, rbp
0x7b30:	mov	rsi, r13
0x7b33:	mov	edx, 1
0x7b38:	lea	ecx, [rax - 3]
0x7b3b:	movsxd	rcx, ecx
0x7b3e:	call	0xf590
0x7b43:	mov	eax, dword ptr [rip + 0x22e53]
0x7b49:	mov	r8, r13
0x7b4c:	xor	esi, esi
0x7b4e:	mov	rdi, qword ptr [rip + 0x22d53]
0x7b55:	mov	edx, 1
0x7b5a:	lea	ecx, [rax - 3]
0x7b5d:	movsxd	rcx, ecx
0x7b60:	call	0xf590
0x7b65:	jmp	0x7ad2
0x7b6a:	nop	word ptr [rax + rax]
0x7b70:	mov	r8d, 0x50
0x7b76:	mov	ecx, 2
0x7b7b:	mov	edx, 0x10000
0x7b80:	mov	esi, 0x10000
0x7b85:	call	0xf590
0x7b8a:	mov	r8d, 0x50
0x7b90:	mov	ecx, 2
0x7b95:	mov	rdi, qword ptr [rip + 0x22d0c]
0x7b9c:	mov	edx, 0x10000
0x7ba1:	mov	esi, 0x10000
0x7ba6:	call	0xf590
0x7bab:	xor	esi, esi
0x7bad:	xor	edi, edi
0x7baf:	call	0x16d30
0x7bb4:	mov	eax, dword ptr [rip + 0x22de2]
0x7bba:	lea	esi, [rax - 1]
0x7bbd:	movsxd	rsi, esi
0x7bc0:	jmp	0x7aec
0x7bc5:	nop	word ptr cs:[rax + rax]
0x7bd0:	endbr64	
0x7bd4:	push	rbx
0x7bd5:	xor	eax, eax
0x7bd7:	mov	ebx, edi
0x7bd9:	xor	edi, edi
0x7bdb:	call	0x7890
0x7be0:	cmp	ebx, 0x12
0x7be3:	je	0x7cc8
0x7be9:	mov	esi, dword ptr [rip + 0x22ced]
0x7bef:	test	esi, esi
0x7bf1:	je	0x7bf8
0x7bf3:	pop	rbx
0x7bf4:	ret	
0x7bf5:	nop	dword ptr [rax]
0x7bf8:	mov	rdi, qword ptr [rip + 0x22cb1]
0x7bff:	call	0xf480
0x7c04:	mov	rdi, qword ptr [rip + 0x22c9d]
0x7c0b:	call	0xf480
0x7c10:	mov	rdi, qword ptr [rip + 0x22c99]
0x7c17:	call	0xf530
0x7c1c:	mov	rdi, qword ptr [rip + 0x22c85]
0x7c23:	call	0xf530
0x7c28:	mov	ecx, dword ptr [rip + 0x22cb6]
0x7c2e:	test	ecx, ecx
0x7c30:	jne	0x7ce0
0x7c36:	cmp	dword ptr [rip + 0x22d5f], 6
0x7c3d:	jle	0x7c60
0x7c3f:	mov	edx, dword ptr [rip + 0x22013]
0x7c45:	mov	eax, dword ptr [rip + 0x22d4d]
0x7c4b:	test	edx, edx
0x7c4d:	je	0x7d00
0x7c53:	cmp	eax, 0xb
0x7c56:	jg	0x7c6e
0x7c58:	nop	dword ptr [rax + rax]
0x7c60:	xor	eax, eax
0x7c62:	call	0xa6c0
0x7c67:	xor	eax, eax
0x7c69:	call	0xa300
0x7c6e:	xor	eax, eax
0x7c70:	call	0x16d50
0x7c75:	mov	rdi, qword ptr [rip + 0x22c34]
0x7c7c:	call	0x11010
0x7c81:	mov	eax, dword ptr [rip + 0x21fd1]
0x7c87:	test	eax, eax
0x7c89:	jne	0x7cf0
0x7c8b:	xor	eax, eax
0x7c8d:	call	0xdea0
0x7c92:	xor	eax, eax
0x7c94:	call	0xd870
0x7c99:	xor	eax, eax
0x7c9b:	call	0xd740
0x7ca0:	xor	eax, eax
0x7ca2:	call	0xa820
0x7ca7:	cmp	ebx, 0x12
0x7caa:	jne	0x7bf3
0x7cb0:	mov	rdi, qword ptr [rip + 0x22bf9]
0x7cb7:	call	0x11100
0x7cbc:	pop	rbx
0x7cbd:	mov	rdi, rax
0x7cc0:	jmp	0xc4b0
0x7cc5:	nop	dword ptr [rax]
0x7cc8:	mov	edi, 1
0x7ccd:	call	0x9b00
0x7cd2:	xor	eax, eax
0x7cd4:	call	0xa6c0
0x7cd9:	jmp	0x7be9
0x7cde:	nop	
0x7ce0:	mov	rdi, qword ptr [rip + 0x22be1]
0x7ce7:	call	0xbb40
0x7cec:	jmp	0x7c8b
0x7cee:	nop	
0x7cf0:	mov	rdi, qword ptr [rip + 0x22bb1]
0x7cf7:	call	0x11010
0x7cfc:	jmp	0x7c8b
0x7cfe:	nop	
0x7d00:	cmp	eax, 5
0x7d03:	jle	0x7c60
0x7d09:	jmp	0x7c6e
0x7d0e:	nop	
0x7d10:	endbr64	
0x7d14:	push	r12
0x7d16:	xor	eax, eax
0x7d18:	mov	r12, rdi
0x7d1b:	push	rbp
0x7d1c:	push	rbx
0x7d1d:	call	0xb510
0x7d22:	mov	rdi, rax
0x7d25:	mov	rbp, rax
0x7d28:	call	0x49b0
0x7d2d:	test	rax, rax
0x7d30:	je	0x7d39
0x7d32:	cmp	byte ptr [rbp + rax - 1], 7
0x7d37:	jne	0x7d70
0x7d39:	xor	eax, eax
0x7d3b:	call	0xa5a0
0x7d40:	test	r12, r12
0x7d43:	je	0x7ded
0x7d49:	xor	edx, edx
0x7d4b:	xor	esi, esi
0x7d4d:	mov	rdi, r12
0x7d50:	call	0xe480
0x7d55:	xor	eax, eax
0x7d57:	call	0xd740
0x7d5c:	pop	rbx
0x7d5d:	xor	eax, eax
0x7d5f:	pop	rbp
0x7d60:	pop	r12
0x7d62:	jmp	0xa820
0x7d67:	nop	word ptr [rax + rax]
0x7d70:	mov	rdi, rbp
0x7d73:	call	0x9fe0
0x7d78:	mov	rdi, rax
0x7d7b:	mov	rbx, rax
0x7d7e:	call	0x49b0
0x7d83:	lea	rdi, [rax + 0x80]
0x7d8a:	call	0x1d670
0x7d8f:	mov	r8, rbx
0x7d92:	mov	esi, 1
0x7d97:	lea	rcx, [rip + 0x18762]
0x7d9e:	mov	rbp, rax
0x7da1:	mov	rdi, rax
0x7da4:	mov	rdx, -1
0x7dab:	xor	eax, eax
0x7dad:	call	0x4f10
0x7db2:	mov	edx, 1
0x7db7:	mov	esi, 2
0x7dbc:	mov	rdi, rbp
0x7dbf:	call	0xe480
0x7dc4:	mov	rdi, rbp
0x7dc7:	call	0x18d10
0x7dcc:	xor	eax, eax
0x7dce:	call	0xa5a0
0x7dd3:	xor	eax, eax
0x7dd5:	call	0xa820
0x7dda:	mov	edi, 1
0x7ddf:	call	0x4ea0
0x7de4:	test	r12, r12
0x7de7:	jne	0x7d49
0x7ded:	xor	eax, eax
0x7def:	call	0xe4e0
0x7df4:	jmp	0x7d55
0x7df9:	nop	dword ptr [rax]
0x7e00:	endbr64	
0x7e04:	push	r13
0x7e06:	mov	edx, 1
0x7e0b:	push	r12
0x7e0d:	mov	r12, rsi
0x7e10:	push	rbp
0x7e11:	mov	rbp, rdi
0x7e14:	sub	rsp, 0x10
0x7e18:	mov	rax, qword ptr fs:[0x28]
0x7e21:	mov	qword ptr [rsp + 8], rax
0x7e26:	xor	eax, eax
0x7e28:	mov	r13, rsp
0x7e2b:	mov	rsi, r13
0x7e2e:	call	0x19200
0x7e33:	test	rax, rax
0x7e36:	je	0x7e48
0x7e38:	mov	rdi, qword ptr [rsp]
0x7e3c:	mov	rsi, r12
0x7e3f:	call	0x4b30
0x7e44:	test	eax, eax
0x7e46:	je	0x7e5f
0x7e48:	mov	rdi, r12
0x7e4b:	call	0x1d7a0
0x7e50:	mov	rsi, r13
0x7e53:	mov	rdi, rbp
0x7e56:	mov	qword ptr [rsp], rax
0x7e5a:	call	0x19150
0x7e5f:	mov	rax, qword ptr [rsp + 8]
0x7e64:	sub	rax, qword ptr fs:[0x28]
0x7e6d:	jne	0x7e79
0x7e6f:	add	rsp, 0x10
0x7e73:	pop	rbp
0x7e74:	pop	r12
0x7e76:	pop	r13
0x7e78:	ret	
0x7e79:	call	0x49d0
0x7e7e:	nop	
0x7e80:	endbr64	
0x7e84:	sub	rsp, 0x18
0x7e88:	mov	edx, esi
0x7e8a:	mov	rax, qword ptr fs:[0x28]
0x7e93:	mov	qword ptr [rsp + 8], rax
0x7e98:	xor	eax, eax
0x7e9a:	mov	rsi, rsp
0x7e9d:	call	0x19200
0x7ea2:	test	rax, rax
0x7ea5:	cmovne	rax, qword ptr [rsp]
0x7eaa:	mov	rdx, qword ptr [rsp + 8]
0x7eaf:	sub	rdx, qword ptr fs:[0x28]
0x7eb8:	jne	0x7ebf
0x7eba:	add	rsp, 0x18
0x7ebe:	ret	
0x7ebf:	call	0x49d0
0x7ec4:	nop	word ptr cs:[rax + rax]
0x7ecf:	nop	
0x7ed0:	endbr64	
0x7ed4:	test	sil, 2
0x7ed8:	je	0x7ee0
0x7eda:	jmp	0x7570
0x7edf:	nop	
0x7ee0:	xor	eax, eax
0x7ee2:	ret	
0x7ee3:	nop	word ptr cs:[rax + rax]
0x7eee:	nop	
0x7ef0:	endbr64	
0x7ef4:	push	r15
0x7ef6:	push	r14
0x7ef8:	push	r13
0x7efa:	push	r12
0x7efc:	push	rbp
0x7efd:	push	rbx
0x7efe:	sub	rsp, 8
0x7f02:	test	rdi, rdi
0x7f05:	je	0x7fc8
0x7f0b:	mov	rbp, rdi
0x7f0e:	call	0x49b0
0x7f13:	lea	r13, [rax + 1]
0x7f17:	mov	rdi, r13
0x7f1a:	call	0x1d670
0x7f1f:	movzx	ebx, byte ptr [rbp]
0x7f23:	mov	r15, rax
0x7f26:	test	bl, bl
0x7f28:	je	0x7fd0
0x7f2e:	add	rbp, 1
0x7f32:	xor	r12d, r12d
0x7f35:	jmp	0x7f6d
0x7f37:	nop	word ptr [rax + rax]
0x7f40:	call	0x4f00
0x7f45:	movsx	rdx, bl
0x7f49:	add	r12d, 1
0x7f4d:	mov	rax, qword ptr [rax]
0x7f50:	test	byte ptr [rax + rdx*2 + 1], 0x40
0x7f55:	mov	eax, 0x3f
0x7f5a:	cmove	ebx, eax
0x7f5d:	add	rbp, 1
0x7f61:	mov	byte ptr [r15 + r14], bl
0x7f65:	movzx	ebx, byte ptr [rbp - 1]
0x7f69:	test	bl, bl
0x7f6b:	je	0x7fa5
0x7f6d:	movsxd	r14, r12d
0x7f70:	cmp	bl, 9
0x7f73:	jne	0x7f40
0x7f75:	add	r13, 8
0x7f79:	mov	rdi, r15
0x7f7c:	add	rbp, 1
0x7f80:	add	r12d, 8
0x7f84:	mov	rsi, r13
0x7f87:	call	0x1d690
0x7f8c:	mov	r15, rax
0x7f8f:	movabs	rax, 0x2020202020202020
0x7f99:	mov	qword ptr [r15 + r14], rax
0x7f9d:	movzx	ebx, byte ptr [rbp - 1]
0x7fa1:	test	bl, bl
0x7fa3:	jne	0x7f6d
0x7fa5:	movsxd	r12, r12d
0x7fa8:	add	r12, r15
0x7fab:	mov	byte ptr [r12], 0
0x7fb0:	add	rsp, 8
0x7fb4:	mov	rax, r15
0x7fb7:	pop	rbx
0x7fb8:	pop	rbp
0x7fb9:	pop	r12
0x7fbb:	pop	r13
0x7fbd:	pop	r14
0x7fbf:	pop	r15
0x7fc1:	ret	
0x7fc2:	nop	word ptr [rax + rax]
0x7fc8:	xor	r15d, r15d
0x7fcb:	jmp	0x7fb0
0x7fcd:	nop	dword ptr [rax]
0x7fd0:	mov	r12, rax
0x7fd3:	jmp	0x7fab
0x7fd5:	nop	word ptr cs:[rax + rax]
0x7fe0:	endbr64	
0x7fe4:	push	rbx
0x7fe5:	mov	rbx, rdi
0x7fe8:	call	0x49b0
0x7fed:	lea	rdi, [rax + rax*2 + 9]
0x7ff2:	call	0x1d670
0x7ff7:	mov	byte ptr [rax], 0x28
0x7ffa:	cmp	byte ptr [rbx + 1], 0
0x7ffe:	je	0x8050
0x8000:	mov	edx, 1
0x8005:	nop	dword ptr [rax]
0x8008:	movzx	ecx, byte ptr [rbx]
0x800b:	mov	byte ptr [rax + rdx + 1], 0x2c
0x8010:	add	rbx, 1
0x8014:	mov	byte ptr [rax + rdx], cl
0x8017:	mov	rcx, rdx
0x801a:	add	rdx, 3
0x801e:	mov	byte ptr [rax + rdx - 1], 0x20
0x8023:	cmp	byte ptr [rbx + 1], 0
0x8027:	jne	0x8008
0x8029:	lea	r8, [rcx + 4]
0x802d:	lea	rdi, [rcx + 5]
0x8031:	add	rcx, 6
0x8035:	movzx	esi, byte ptr [rbx]
0x8038:	mov	byte ptr [rax + rdx], sil
0x803c:	mov	byte ptr [rax + r8], 0x29
0x8041:	mov	byte ptr [rax + rdi], 0x20
0x8045:	mov	byte ptr [rax + rcx], 0
0x8049:	pop	rbx
0x804a:	ret	
0x804b:	nop	dword ptr [rax + rax]
0x8050:	mov	ecx, 4
0x8055:	mov	edi, 3
0x805a:	mov	r8d, 2
0x8060:	mov	edx, 1
0x8065:	jmp	0x8035
0x8067:	nop	word ptr [rax + rax]
0x8070:	endbr64	
0x8074:	push	r15
0x8076:	push	r14
0x8078:	push	r13
0x807a:	push	r12
0x807c:	mov	r12, rdi
0x807f:	push	rbp
0x8080:	mov	rbp, rsi
0x8083:	push	rbx
0x8084:	mov	ebx, edx
0x8086:	sub	rsp, 0x28
0x808a:	mov	rax, qword ptr fs:[0x28]
0x8093:	mov	qword ptr [rsp + 0x18], rax
0x8098:	mov	eax, edx
0x809a:	and	eax, 0x10
0x809d:	mov	dword ptr [rsp + 0xc], eax
0x80a1:	jne	0x82f0
0x80a7:	xor	r13d, r13d
0x80aa:	xor	eax, eax
0x80ac:	call	0xcff0
0x80b1:	test	r12, r12
0x80b4:	je	0x8103
0x80b6:	mov	rdi, r12
0x80b9:	call	0x7ef0
0x80be:	mov	r12, rax
0x80c1:	test	bl, 8
0x80c4:	jne	0x8330
0x80ca:	mov	rdi, r12
0x80cd:	call	0xd610
0x80d2:	test	bl, 0x20
0x80d5:	jne	0x8310
0x80db:	mov	rdi, r12
0x80de:	call	0x18d10
0x80e3:	test	rbp, rbp
0x80e6:	je	0x8103
0x80e8:	mov	rdi, rbp
0x80eb:	call	0x7fe0
0x80f0:	mov	r12, rax
0x80f3:	mov	rdi, rax
0x80f6:	call	0xd610
0x80fb:	mov	rdi, r12
0x80fe:	call	0x18d10
0x8103:	xor	eax, eax
0x8105:	call	0xd870
0x810a:	xor	eax, eax
0x810c:	call	0xd740
0x8111:	xor	eax, eax
0x8113:	call	0xa820
0x8118:	test	bl, 4
0x811b:	jne	0x8300
0x8121:	mov	r14d, ebx
0x8124:	lea	r12, [rsp + 0x14]
0x8129:	and	r14d, 2
0x812d:	mov	rdi, r12
0x8130:	call	0xb180
0x8135:	test	rax, rax
0x8138:	je	0x81b2
0x813a:	mov	rdx, qword ptr [rax]
0x813d:	mov	rax, qword ptr [rax + 0x10]
0x8141:	movzx	r15d, byte ptr [rdx]
0x8145:	test	rax, rax
0x8148:	je	0x8250
0x814e:	cmp	byte ptr [rax + 0x1b], 0
0x8152:	je	0x8250
0x8158:	mov	rcx, qword ptr [rax]
0x815b:	lea	rax, [rip + 0x20ebe]
0x8162:	sub	rcx, rax
0x8165:	movabs	rax, 0xea0ea0ea0ea0ea1
0x816f:	imul	rcx
0x8172:	sar	rcx, 0x3f
0x8176:	sar	rdx, 1
0x8179:	sub	rdx, rcx
0x817c:	mov	r15d, edx
0x817f:	not	r15d
0x8182:	cmp	edx, 7
0x8185:	jne	0x81d0
0x8187:	xor	edi, edi
0x8189:	xor	eax, eax
0x818b:	call	0x7bd0
0x8190:	xor	eax, eax
0x8192:	call	0xdea0
0x8197:	xor	eax, eax
0x8199:	call	0xd740
0x819e:	xor	eax, eax
0x81a0:	call	0xa820
0x81a5:	mov	rdi, r12
0x81a8:	call	0xb180
0x81ad:	test	rax, rax
0x81b0:	jne	0x813a
0x81b2:	xor	eax, eax
0x81b4:	call	0xa5a0
0x81b9:	xor	eax, eax
0x81bb:	call	0xdea0
0x81c0:	xor	eax, eax
0x81c2:	call	0xd740
0x81c7:	jmp	0x812d
0x81cc:	nop	dword ptr [rax]
0x81d0:	cmp	r15d, 7
0x81d4:	je	0x82b0
0x81da:	cmp	r15d, -0x3d
0x81de:	jne	0x8256
0x81e0:	test	rbp, rbp
0x81e3:	je	0x8360
0x81e9:	xor	edi, edi
0x81eb:	movsx	r15d, byte ptr [rbp]
0x81f0:	call	0xdba0
0x81f5:	mov	esi, dword ptr [rsp + 0xc]
0x81f9:	test	esi, esi
0x81fb:	je	0x821f
0x81fd:	test	r13, r13
0x8200:	je	0x821f
0x8202:	mov	rdi, r13
0x8205:	call	0xc970
0x820a:	xor	eax, eax
0x820c:	call	0xd870
0x8211:	xor	eax, eax
0x8213:	call	0xd740
0x8218:	xor	eax, eax
0x821a:	call	0xa820
0x821f:	cmp	r15d, 7
0x8223:	je	0x82e1
0x8229:	mov	eax, r15d
0x822c:	mov	rdx, qword ptr [rsp + 0x18]
0x8231:	sub	rdx, qword ptr fs:[0x28]
0x823a:	jne	0x83d9
0x8240:	add	rsp, 0x28
0x8244:	pop	rbx
0x8245:	pop	rbp
0x8246:	pop	r12
0x8248:	pop	r13
0x824a:	pop	r14
0x824c:	pop	r15
0x824e:	ret	
0x824f:	nop	
0x8250:	cmp	r15d, 7
0x8254:	je	0x82b0
0x8256:	mov	eax, dword ptr [rsp + 0x14]
0x825a:	lea	edx, [rax - 1]
0x825d:	mov	dword ptr [rsp + 0x14], edx
0x8261:	test	eax, eax
0x8263:	je	0x83a8
0x8269:	test	r14d, r14d
0x826c:	je	0x8280
0x826e:	mov	esi, ebx
0x8270:	mov	edi, r15d
0x8273:	call	0x7570
0x8278:	test	eax, eax
0x827a:	jne	0x8256
0x827c:	nop	dword ptr [rax]
0x8280:	test	rbp, rbp
0x8283:	je	0x83b8
0x8289:	mov	esi, r15d
0x828c:	mov	rdi, rbp
0x828f:	call	0x4a00
0x8294:	test	rax, rax
0x8297:	jne	0x83b8
0x829d:	call	0xa5a0
0x82a2:	jmp	0x8190
0x82a7:	nop	word ptr [rax + rax]
0x82b0:	xor	edi, edi
0x82b2:	call	0xdba0
0x82b7:	mov	ecx, dword ptr [rsp + 0xc]
0x82bb:	test	ecx, ecx
0x82bd:	je	0x82e1
0x82bf:	test	r13, r13
0x82c2:	je	0x82e1
0x82c4:	mov	rdi, r13
0x82c7:	call	0xc970
0x82cc:	xor	eax, eax
0x82ce:	call	0xd870
0x82d3:	xor	eax, eax
0x82d5:	call	0xd740
0x82da:	xor	eax, eax
0x82dc:	call	0xa820
0x82e1:	xor	eax, eax
0x82e3:	jmp	0x822c
0x82e8:	nop	dword ptr [rax + rax]
0x82f0:	xor	eax, eax
0x82f2:	call	0xc8c0
0x82f7:	mov	r13, rax
0x82fa:	jmp	0x80aa
0x82ff:	nop	
0x8300:	xor	eax, eax
0x8302:	call	0xa5a0
0x8307:	jmp	0x8121
0x830c:	nop	dword ptr [rax]
0x8310:	xor	eax, eax
0x8312:	call	0xccf0
0x8317:	mov	rdi, r12
0x831a:	call	0x18d10
0x831f:	test	rbp, rbp
0x8322:	jne	0x80e8
0x8328:	jmp	0x8103
0x832d:	nop	dword ptr [rax]
0x8330:	lea	rdi, [rip + 0x181da]
0x8337:	call	0xd610
0x833c:	mov	edi, 1
0x8341:	call	0xdba0
0x8346:	mov	rdi, r12
0x8349:	call	0xd610
0x834e:	test	bl, 0x20
0x8351:	je	0x80db
0x8357:	jmp	0x8310
0x8359:	nop	dword ptr [rax]
0x8360:	xor	edi, edi
0x8362:	call	0xdba0
0x8367:	mov	edx, dword ptr [rsp + 0xc]
0x836b:	mov	eax, 0xffffffc3
0x8370:	test	edx, edx
0x8372:	je	0x822c
0x8378:	test	r13, r13
0x837b:	je	0x822c
0x8381:	mov	rdi, r13
0x8384:	call	0xc970
0x8389:	xor	eax, eax
0x838b:	call	0xd870
0x8390:	xor	eax, eax
0x8392:	call	0xd740
0x8397:	xor	eax, eax
0x8399:	call	0xa820
0x839e:	jmp	0x8229
0x83a3:	nop	dword ptr [rax + rax]
0x83a8:	call	0xd870
0x83ad:	jmp	0x8190
0x83b2:	nop	word ptr [rax + rax]
0x83b8:	xor	edi, edi
0x83ba:	call	0xdba0
0x83bf:	mov	eax, dword ptr [rsp + 0xc]
0x83c3:	test	eax, eax
0x83c5:	je	0x8229
0x83cb:	test	r13, r13
0x83ce:	jne	0x8202
0x83d4:	jmp	0x8229
0x83d9:	call	0x49d0
0x83de:	nop	
0x83e0:	endbr64	
0x83e4:	push	r15
0x83e6:	push	r14
0x83e8:	mov	r14, rdi
0x83eb:	push	r13
0x83ed:	mov	r13, rsi
0x83f0:	push	r12
0x83f2:	mov	r12, rdx
0x83f5:	push	rbp
0x83f6:	mov	rbp, rcx
0x83f9:	push	rbx
0x83fa:	sub	rsp, 0x38
0x83fe:	mov	rax, qword ptr fs:[0x28]
0x8407:	mov	qword ptr [rsp + 0x28], rax
0x840c:	xor	eax, eax
0x840e:	call	0xcff0
0x8413:	test	r14, r14
0x8416:	je	0x8420
0x8418:	mov	rdi, r14
0x841b:	call	0xd540
0x8420:	test	r12, r12
0x8423:	je	0x8450
0x8425:	mov	rdi, r12
0x8428:	call	0xd610
0x842d:	test	rbp, rbp
0x8430:	je	0x8450
0x8432:	mov	rsi, r12
0x8435:	mov	rdi, rbp
0x8438:	xor	eax, eax
0x843a:	mov	r14d, 1
0x8440:	call	0x7e00
0x8445:	jmp	0x8453
0x8447:	nop	word ptr [rax + rax]
0x8450:	xor	r14d, r14d
0x8453:	xor	eax, eax
0x8455:	lea	r12, [rsp + 0x1c]
0x845a:	lea	rbx, [rip + 0x17c03]
0x8461:	call	0xd870
0x8466:	xor	eax, eax
0x8468:	call	0xd740
0x846d:	xor	eax, eax
0x846f:	call	0xa820
0x8474:	lea	rax, [rsp + 0x20]
0x8479:	mov	qword ptr [rsp], rax
0x847d:	mov	rdi, r12
0x8480:	call	0xb180
0x8485:	test	rax, rax
0x8488:	je	0x853f
0x848e:	mov	rdx, qword ptr [rax]
0x8491:	mov	rax, qword ptr [rax + 0x10]
0x8495:	movzx	r15d, byte ptr [rdx]
0x8499:	test	rax, rax
0x849c:	je	0x84d7
0x849e:	cmp	byte ptr [rax + 0x1b], 0
0x84a2:	je	0x84d7
0x84a4:	mov	rcx, qword ptr [rax]
0x84a7:	lea	rax, [rip + 0x20b72]
0x84ae:	sub	rcx, rax
0x84b1:	movabs	rax, 0xea0ea0ea0ea0ea1
0x84bb:	imul	rcx
0x84be:	sar	rcx, 0x3f
0x84c2:	sar	rdx, 1
0x84c5:	sub	rdx, rcx
0x84c8:	mov	r15d, edx
0x84cb:	not	r15d
0x84ce:	cmp	edx, 0x3c
0x84d1:	je	0x8560
0x84d7:	lea	eax, [r15 + 0x22]
0x84db:	cmp	eax, 0x29
0x84de:	ja	0x8505
0x84e0:	movsxd	rax, dword ptr [rbx + rax*4]
0x84e4:	add	rax, rbx
0x84e7:	jmp	rax
0x84ea:	 ----------
0x84ef:	 ----------
0x84f0:	mov	esi, 3
0x84f5:	mov	edi, r15d
0x84f8:	call	0x7570
0x84fd:	test	eax, eax
0x84ff:	je	0x8670
0x8505:	mov	eax, dword ptr [rsp + 0x1c]
0x8509:	lea	edx, [rax - 1]
0x850c:	mov	dword ptr [rsp + 0x1c], edx
0x8510:	test	eax, eax
0x8512:	jne	0x84f0
0x8514:	call	0xd870
0x8519:	xor	eax, eax
0x851b:	call	0xdea0
0x8520:	xor	eax, eax
0x8522:	call	0xd740
0x8527:	xor	eax, eax
0x8529:	call	0xa820
0x852e:	mov	rdi, r12
0x8531:	call	0xb180
0x8536:	test	rax, rax
0x8539:	jne	0x848e
0x853f:	xor	eax, eax
0x8541:	call	0xa5a0
0x8546:	xor	eax, eax
0x8548:	call	0xdea0
0x854d:	xor	eax, eax
0x854f:	call	0xd740
0x8554:	jmp	0x847d
0x8559:	nop	dword ptr [rax]
0x8560:	mov	rdi, r13
0x8563:	call	0xdb10
0x8568:	test	rbp, rbp
0x856b:	je	0x857b
0x856d:	mov	rsi, qword ptr [r13]
0x8571:	mov	rdi, rbp
0x8574:	xor	eax, eax
0x8576:	call	0x7e00
0x857b:	mov	rax, qword ptr [r13]
0x857f:	mov	rdx, qword ptr [rsp + 0x28]
0x8584:	sub	rdx, qword ptr fs:[0x28]
0x858d:	jne	0x86b3
0x8593:	add	rsp, 0x38
0x8597:	pop	rbx
0x8598:	pop	rbp
0x8599:	pop	r12
0x859b:	pop	r13
0x859d:	pop	r14
0x859f:	pop	r15
0x85a1:	ret	
0x85a2:	nop	word ptr [rax + rax]
0x85a8:	test	rbp, rbp
0x85ab:	je	0x8519
0x85b1:	lea	eax, [r14 + 1]
0x85b5:	mov	rsi, qword ptr [rsp]
0x85b9:	mov	rdi, rbp
0x85bc:	mov	edx, eax
0x85be:	mov	r15d, eax
0x85c1:	call	0x19200
0x85c6:	test	rax, rax
0x85c9:	je	0x86a7
0x85cf:	mov	r8, qword ptr [rsp + 0x20]
0x85d4:	test	r8, r8
0x85d7:	je	0x86a7
0x85dd:	xor	edi, edi
0x85df:	mov	qword ptr [rsp + 8], r8
0x85e4:	mov	r14d, r15d
0x85e7:	call	0xd1a0
0x85ec:	mov	rdi, qword ptr [rsp + 8]
0x85f1:	call	0xd610
0x85f6:	xor	eax, eax
0x85f8:	call	0xd870
0x85fd:	xor	eax, eax
0x85ff:	call	0xd740
0x8604:	jmp	0x8519
0x8609:	nop	dword ptr [rax]
0x8610:	test	rbp, rbp
0x8613:	je	0x8519
0x8619:	xor	edi, edi
0x861b:	test	r14d, r14d
0x861e:	je	0x8680
0x8620:	call	0xd1a0
0x8625:	sub	r14d, 1
0x8629:	je	0x864b
0x862b:	mov	rsi, qword ptr [rsp]
0x862f:	mov	rdi, rbp
0x8632:	mov	edx, r14d
0x8635:	call	0x19200
0x863a:	mov	rdi, rax
0x863d:	test	rax, rax
0x8640:	cmovne	rdi, qword ptr [rsp + 0x20]
0x8646:	call	0xd610
0x864b:	xor	eax, eax
0x864d:	call	0xd870
0x8652:	xor	eax, eax
0x8654:	call	0xd740
0x8659:	jmp	0x8519
0x865e:	nop	
0x8660:	xor	edi, edi
0x8662:	xor	eax, eax
0x8664:	call	0x7bd0
0x8669:	jmp	0x8519
0x866e:	nop	
0x8670:	call	0xa5a0
0x8675:	jmp	0x8505
0x867a:	nop	word ptr [rax + rax]
0x8680:	call	0xd1a0
0x8685:	xor	eax, eax
0x8687:	call	0xd870
0x868c:	xor	eax, eax
0x868e:	call	0xd740
0x8693:	jmp	0x8519
0x8698:	nop	dword ptr [rax + rax]
0x86a0:	xor	eax, eax
0x86a2:	jmp	0x857f
0x86a7:	xor	eax, eax
0x86a9:	call	0xa5a0
0x86ae:	jmp	0x8519
0x86b3:	call	0x49d0
0x86b8:	nop	dword ptr [rax + rax]
0x86c0:	endbr64	
0x86c4:	push	r15
0x86c6:	push	r14
0x86c8:	push	r13
0x86ca:	push	r12
0x86cc:	push	rbp
0x86cd:	push	rbx
0x86ce:	sub	rsp, 0x18
0x86d2:	test	edx, edx
0x86d4:	je	0x8890
0x86da:	mov	ebx, edx
0x86dc:	cmp	edx, 3
0x86df:	je	0x88f8
0x86e5:	mov	rbp, rcx
0x86e8:	test	rcx, rcx
0x86eb:	je	0x8864
0x86f1:	mov	dword ptr [rcx], 0
0x86f7:	xor	eax, eax
0x86f9:	mov	r13, rsi
0x86fc:	lea	r15, [rip + 0x2091d]
0x8703:	movabs	r14, 0xea0ea0ea0ea0ea1
0x870d:	call	0xd870
0x8712:	xor	eax, eax
0x8714:	call	0xd740
0x8719:	xor	eax, eax
0x871b:	call	0xa820
0x8720:	xor	edi, edi
0x8722:	call	0xb180
0x8727:	mov	r12, rax
0x872a:	test	rax, rax
0x872d:	je	0x8928
0x8733:	mov	rax, qword ptr [rax]
0x8736:	movzx	edi, byte ptr [rax]
0x8739:	mov	rax, qword ptr [r12 + 0x10]
0x873e:	test	rax, rax
0x8741:	je	0x874d
0x8743:	cmp	byte ptr [rax + 0x1b], 0
0x8747:	jne	0x8808
0x874d:	cmp	edi, -7
0x8750:	jge	0x87b0
0x8752:	cmp	edi, -0x3d
0x8755:	je	0x8840
0x875b:	cmp	edi, -0x32
0x875e:	jne	0x88bb
0x8764:	xor	eax, eax
0x8766:	call	0xca40
0x876b:	test	eax, eax
0x876d:	jne	0x8880
0x8773:	mov	dword ptr [rbp], 1
0x877a:	xor	eax, eax
0x877c:	call	0xdea0
0x8781:	xor	eax, eax
0x8783:	call	0xd870
0x8788:	xor	eax, eax
0x878a:	call	0xd740
0x878f:	xor	eax, eax
0x8791:	call	0xa820
0x8796:	mov	rdi, r13
0x8799:	call	0xdb10
0x879e:	mov	r12, qword ptr [r13]
0x87a2:	jmp	0x8867
0x87a7:	nop	word ptr [rax + rax]
0x87b0:	cmp	edi, 7
0x87b3:	je	0x8840
0x87b9:	mov	dword ptr [rsp + 8], edi
0x87bd:	call	0x4f00
0x87c2:	mov	r8, rax
0x87c5:	movsxd	rax, dword ptr [rsp + 8]
0x87ca:	mov	rdx, qword ptr [r8]
0x87cd:	mov	rdi, rax
0x87d0:	test	byte ptr [rdx + rax*2 + 1], 0x40
0x87d5:	jne	0x8948
0x87db:	xor	eax, eax
0x87dd:	xor	r12d, r12d
0x87e0:	call	0xdea0
0x87e5:	xor	eax, eax
0x87e7:	call	0xd870
0x87ec:	xor	eax, eax
0x87ee:	call	0xd740
0x87f3:	xor	eax, eax
0x87f5:	call	0xa820
0x87fa:	mov	rdi, r13
0x87fd:	call	0xdb10
0x8802:	jmp	0x8867
0x8804:	nop	dword ptr [rax]
0x8808:	mov	rcx, qword ptr [rax]
0x880b:	sub	rcx, r15
0x880e:	mov	rax, rcx
0x8811:	sar	rcx, 0x3f
0x8815:	imul	r14
0x8818:	sar	rdx, 1
0x881b:	sub	rdx, rcx
0x881e:	mov	edi, edx
0x8820:	not	edi
0x8822:	cmp	edx, 7
0x8825:	jne	0x874d
0x882b:	xor	edi, edi
0x882d:	xor	eax, eax
0x882f:	call	0x7bd0
0x8834:	jmp	0x8720
0x8839:	nop	dword ptr [rax]
0x8840:	xor	eax, eax
0x8842:	call	0xdea0
0x8847:	xor	eax, eax
0x8849:	call	0xd870
0x884e:	xor	eax, eax
0x8850:	call	0xd740
0x8855:	xor	eax, eax
0x8857:	call	0xa820
0x885c:	mov	rdi, r13
0x885f:	call	0xdb10
0x8864:	xor	r12d, r12d
0x8867:	add	rsp, 0x18
0x886b:	mov	rax, r12
0x886e:	pop	rbx
0x886f:	pop	rbp
0x8870:	pop	r12
0x8872:	pop	r13
0x8874:	pop	r14
0x8876:	pop	r15
0x8878:	ret	
0x8879:	nop	dword ptr [rax]
0x8880:	xor	eax, eax
0x8882:	call	0xa5a0
0x8887:	jmp	0x877a
0x888c:	nop	dword ptr [rax]
0x8890:	xor	eax, eax
0x8892:	mov	qword ptr [rsp + 8], rdi
0x8897:	call	0xc8c0
0x889c:	mov	qword ptr [rip + 0x2205d], rax
0x88a3:	xor	eax, eax
0x88a5:	call	0xcff0
0x88aa:	mov	rdi, qword ptr [rsp + 8]
0x88af:	test	rdi, rdi
0x88b2:	je	0x8864
0x88b4:	call	0xd540
0x88b9:	jmp	0x8864
0x88bb:	cmp	edi, -0x44
0x88be:	jne	0x88df
0x88c0:	cmp	ebx, 1
0x88c3:	jne	0x88df
0x88c5:	xor	eax, eax
0x88c7:	call	0xca40
0x88cc:	cmp	eax, 1
0x88cf:	mov	eax, 2
0x88d4:	sbb	eax, -1
0x88d7:	mov	dword ptr [rbp], eax
0x88da:	jmp	0x877a
0x88df:	cmp	edi, -0x45
0x88e2:	jne	0x87b9
0x88e8:	cmp	ebx, 2
0x88eb:	je	0x88c5
0x88ed:	jmp	0x87b9
0x88f2:	nop	word ptr [rax + rax]
0x88f8:	mov	rdi, qword ptr [rip + 0x22001]
0x88ff:	xor	r12d, r12d
0x8902:	call	0xc970
0x8907:	xor	eax, eax
0x8909:	call	0xd870
0x890e:	xor	eax, eax
0x8910:	call	0xd740
0x8915:	xor	eax, eax
0x8917:	call	0xa820
0x891c:	jmp	0x8867
0x8921:	nop	dword ptr [rax]
0x8928:	xor	eax, eax
0x892a:	call	0xdea0
0x892f:	xor	eax, eax
0x8931:	call	0xd740
0x8936:	xor	eax, eax
0x8938:	call	0xa820
0x893d:	jmp	0x8867
0x8942:	nop	word ptr [rax + rax]
0x8948:	call	0xcd30
0x894d:	mov	dword ptr [rbp], 3
0x8954:	jmp	0x877a
0x8959:	nop	dword ptr [rax]
0x8960:	endbr64	
0x8964:	mov	rdi, qword ptr [rip + 0x21f2d]
0x896b:	push	rbx
0x896c:	test	rdi, rdi
0x896f:	je	0x89ac
0x8971:	mov	eax, dword ptr [rip + 0x21f1d]
0x8977:	test	eax, eax
0x8979:	jle	0x899c
0x897b:	xor	ebx, ebx
0x897d:	nop	dword ptr [rax]
0x8980:	mov	rdi, qword ptr [rdi + rbx*8]
0x8984:	add	rbx, 1
0x8988:	call	0x18d10
0x898d:	cmp	dword ptr [rip + 0x21f01], ebx
0x8993:	mov	rdi, qword ptr [rip + 0x21efe]
0x899a:	jg	0x8980
0x899c:	call	0x18d10
0x89a1:	mov	qword ptr [rip + 0x21eec], 0
0x89ac:	mov	dword ptr [rip + 0x21ede], 0
0x89b6:	pop	rbx
0x89b7:	mov	dword ptr [rip + 0x21ecf], 0
0x89c1:	ret	
0x89c2:	nop	word ptr cs:[rax + rax]
0x89cd:	nop	dword ptr [rax]
0x89d0:	endbr64	
0x89d4:	push	rbp
0x89d5:	mov	rbp, rdi
0x89d8:	push	rbx
0x89d9:	sub	rsp, 8
0x89dd:	mov	esi, dword ptr [rip + 0x21eb1]
0x89e3:	mov	rdi, qword ptr [rip + 0x21eae]
0x89ea:	mov	dword ptr [rip + 0x21ea0], esi
0x89f0:	add	esi, 1
0x89f3:	mov	dword ptr [rip + 0x21e9b], esi
0x89f9:	movsxd	rsi, esi
0x89fc:	shl	rsi, 3
0x8a00:	call	0x1d690
0x8a05:	movsxd	rdx, dword ptr [rip + 0x21e84]
0x8a0c:	mov	rdi, rbp
0x8a0f:	mov	qword ptr [rip + 0x21e82], rax
0x8a16:	lea	rbx, [rax + rdx*8]
0x8a1a:	call	0x1d7a0
0x8a1f:	mov	qword ptr [rbx], rax
0x8a22:	add	rsp, 8
0x8a26:	pop	rbx
0x8a27:	pop	rbp
0x8a28:	ret	
0x8a29:	nop	dword ptr [rax]
0x8a30:	endbr64	
0x8a34:	mov	rdx, rsi
0x8a37:	mov	esi, dword ptr [rip + 0x21e57]
0x8a3d:	mov	eax, dword ptr [rip + 0x21e4d]
0x8a43:	lea	ecx, [rsi - 1]
0x8a46:	cmp	ecx, eax
0x8a48:	jle	0x8a70
0x8a4a:	add	eax, 1
0x8a4d:	mov	r8d, 1
0x8a53:	mov	esi, 0x21
0x8a58:	mov	rcx, qword ptr [rip + 0x21e39]
0x8a5f:	mov	dword ptr [rip + 0x21e2b], eax
0x8a65:	cdqe	
0x8a67:	mov	rcx, qword ptr [rcx + rax*8]
0x8a6b:	jmp	0x13e30
0x8a70:	xor	eax, eax
0x8a72:	jmp	0xa5a0
0x8a77:	nop	word ptr [rax + rax]
0x8a80:	endbr64	
0x8a84:	mov	eax, dword ptr [rip + 0x21e06]
0x8a8a:	mov	rdx, rsi
0x8a8d:	test	eax, eax
0x8a8f:	je	0x8ac0
0x8a91:	sub	eax, 1
0x8a94:	mov	r8d, 1
0x8a9a:	mov	esi, 0x21
0x8a9f:	mov	rcx, qword ptr [rip + 0x21df2]
0x8aa6:	mov	dword ptr [rip + 0x21de4], eax
0x8aac:	cdqe	
0x8aae:	mov	rcx, qword ptr [rcx + rax*8]
0x8ab2:	jmp	0x13e30
0x8ab7:	nop	word ptr [rax + rax]
0x8ac0:	xor	eax, eax
0x8ac2:	jmp	0xa5a0
0x8ac7:	nop	word ptr [rax + rax]
0x8ad0:	endbr64	
0x8ad4:	sub	rsp, 8
0x8ad8:	xor	edi, edi
0x8ada:	call	0xbbc0
0x8adf:	xor	eax, eax
0x8ae1:	call	0xde40
0x8ae6:	xor	eax, eax
0x8ae8:	add	rsp, 8
0x8aec:	jmp	0x19580
0x8af1:	nop	word ptr cs:[rax + rax]
0x8afc:	nop	dword ptr [rax]
0x8b00:	endbr64	
0x8b04:	push	rbx
0x8b05:	xor	eax, eax
0x8b07:	mov	rbx, rdi
0x8b0a:	call	0x9c90
0x8b0f:	cmp	eax, 1
0x8b12:	je	0x8b42
0x8b14:	mov	rdi, qword ptr [rip + 0x21d65]
0x8b1b:	mov	rcx, qword ptr [rip + 0x21dc6]
0x8b22:	mov	r8, rbx
0x8b25:	xor	eax, eax
0x8b27:	lea	rdx, [rip + 0x179e8]
0x8b2e:	mov	esi, 1
0x8b33:	call	0x4e60
0x8b38:	mov	edi, 1
0x8b3d:	call	0x4e20
0x8b42:	xor	eax, eax
0x8b44:	call	0x8ad0
0x8b49:	jmp	0x8b14
0x8b4b:	nop	dword ptr [rax + rax]
0x8b50:	endbr64	
0x8b54:	push	r15
0x8b56:	push	r14
0x8b58:	push	r13
0x8b5a:	push	r12
0x8b5c:	mov	r12, rsi
0x8b5f:	push	rbp
0x8b60:	push	rbx
0x8b61:	sub	rsp, 0x68
0x8b65:	mov	r14, qword ptr [rdi + 8]
0x8b69:	mov	qword ptr [rsp + 0x18], rdi
0x8b6e:	mov	qword ptr [rsp + 8], rdx
0x8b73:	mov	rdi, r14
0x8b76:	mov	qword ptr [rsp + 0x10], rcx
0x8b7b:	mov	rax, qword ptr fs:[0x28]
0x8b84:	mov	qword ptr [rsp + 0x58], rax
0x8b89:	xor	eax, eax
0x8b8b:	mov	qword ptr [rsp + 0x48], 0
0x8b94:	mov	qword ptr [rsp + 0x50], 0
0x8b9d:	call	0x49b0
0x8ba2:	lea	r13, [rax + 1]
0x8ba6:	mov	rdi, r13
0x8ba9:	call	0x1d670
0x8bae:	mov	qword ptr [r12], rax
0x8bb2:	mov	rbx, rax
0x8bb5:	movzx	eax, byte ptr [r14]
0x8bb9:	test	al, al
0x8bbb:	je	0x925c
0x8bc1:	mov	dword ptr [rsp + 0x24], 0
0x8bc9:	jmp	0x8be5
0x8bcb:	nop	dword ptr [rax + rax]
0x8bd0:	mov	byte ptr [rbx], al
0x8bd2:	mov	r14, rbp
0x8bd5:	add	rbx, 1
0x8bd9:	movzx	eax, byte ptr [r14]
0x8bdd:	test	al, al
0x8bdf:	je	0x8d38
0x8be5:	lea	rbp, [r14 + 1]
0x8be9:	cmp	al, 0x25
0x8beb:	jne	0x8bd0
0x8bed:	call	0x4f00
0x8bf2:	movsx	rcx, byte ptr [r14 + 1]
0x8bf7:	mov	r15, qword ptr [rsp + 0x10]
0x8bfc:	mov	rax, qword ptr [rax]
0x8bff:	mov	rdx, rcx
0x8c02:	test	byte ptr [rax + rcx*2 + 1], 2
0x8c07:	lea	eax, [rcx - 0x3f]
0x8c0a:	cmovne	r15, qword ptr [rsp + 8]
0x8c10:	cmp	al, 0x3b
0x8c12:	ja	0x8c38
0x8c14:	lea	rcx, [rip + 0x174f1]
0x8c1b:	movzx	eax, al
0x8c1e:	movsxd	rax, dword ptr [rcx + rax*4]
0x8c22:	add	rax, rcx
0x8c25:	jmp	rax
0x8c28:	mov	dword ptr [rip + 0x21cc6], 0
0x8c32:	nop	word ptr [rax + rax]
0x8c38:	mov	rdi, qword ptr [r12]
0x8c3c:	call	0x18d10
0x8c41:	mov	qword ptr [r12], 0
0x8c49:	xor	eax, eax
0x8c4b:	mov	rdx, qword ptr [rsp + 0x58]
0x8c50:	sub	rdx, qword ptr fs:[0x28]
0x8c59:	jne	0x929f
0x8c5f:	add	rsp, 0x68
0x8c63:	pop	rbx
0x8c64:	pop	rbp
0x8c65:	pop	r12
0x8c67:	pop	r13
0x8c69:	pop	r14
0x8c6b:	pop	r15
0x8c6d:	ret	
0x8c6e:	nop	
0x8c70:	mov	rdi, r15
0x8c73:	call	0xf510
0x8c78:	cmp	eax, 1
0x8c7b:	jne	0x8d61
0x8c81:	nop	dword ptr [rax]
0x8c88:	mov	rdi, r15
0x8c8b:	call	0xf490
0x8c90:	mov	r14, rax
0x8c93:	mov	rdi, r14
0x8c96:	call	0x49b0
0x8c9b:	lea	rdi, [rax + 3]
0x8c9f:	call	0x1d670
0x8ca4:	mov	r8, r14
0x8ca7:	mov	qword ptr [rsp + 0x50], rax
0x8cac:	mov	rdi, rax
0x8caf:	lea	rcx, [rip + 0x185df]
0x8cb6:	mov	rdx, -1
0x8cbd:	mov	esi, 1
0x8cc2:	xor	eax, eax
0x8cc4:	call	0x4f10
0x8cc9:	mov	byte ptr [rbx], 0
0x8ccc:	mov	rdi, qword ptr [rsp + 0x50]
0x8cd1:	lea	r14, [rbp + 1]
0x8cd5:	test	rdi, rdi
0x8cd8:	je	0x8bd9
0x8cde:	call	0x49b0
0x8ce3:	mov	rdi, qword ptr [r12]
0x8ce7:	add	r13, rax
0x8cea:	mov	rsi, r13
0x8ced:	call	0x1d690
0x8cf2:	mov	rsi, qword ptr [rsp + 0x50]
0x8cf7:	mov	qword ptr [r12], rax
0x8cfb:	mov	rdi, rax
0x8cfe:	call	0x4df0
0x8d03:	mov	rbx, qword ptr [r12]
0x8d07:	mov	rdi, rbx
0x8d0a:	call	0x49b0
0x8d0f:	mov	rdi, qword ptr [rsp + 0x50]
0x8d14:	add	rbx, rax
0x8d17:	call	0x18d10
0x8d1c:	mov	qword ptr [rsp + 0x50], 0
0x8d25:	movzx	eax, byte ptr [r14]
0x8d29:	test	al, al
0x8d2b:	jne	0x8be5
0x8d31:	nop	dword ptr [rax]
0x8d38:	mov	eax, dword ptr [rsp + 0x24]
0x8d3c:	add	eax, 1
0x8d3f:	mov	byte ptr [rbx], 0
0x8d42:	jmp	0x8c4b
0x8d47:	nop	word ptr [rax + rax]
0x8d50:	mov	rdi, r15
0x8d53:	call	0xf510
0x8d58:	cmp	eax, 4
0x8d5b:	je	0x8c88
0x8d61:	mov	rdi, qword ptr [rsp + 0x50]
0x8d66:	test	rdi, rdi
0x8d69:	je	0x8d70
0x8d6b:	call	0x18d10
0x8d70:	mov	qword ptr [r12], 0
0x8d78:	mov	eax, 0xffffffff
0x8d7d:	jmp	0x8c4b
0x8d82:	nop	word ptr [rax + rax]
0x8d88:	mov	rdi, r15
0x8d8b:	call	0xf510
0x8d90:	cmp	eax, 3
0x8d93:	je	0x8c88
0x8d99:	jmp	0x8d61
0x8d9b:	nop	dword ptr [rax + rax]
0x8da0:	mov	rdi, qword ptr [r15 + 0x18]
0x8da4:	call	0x49b0
0x8da9:	lea	rdi, [rax + 3]
0x8dad:	call	0x1d670
0x8db2:	mov	r8, qword ptr [r15 + 0x18]
0x8db6:	mov	qword ptr [rsp + 0x50], rax
0x8dbb:	mov	rdi, rax
0x8dbe:	jmp	0x8caf
0x8dc3:	nop	dword ptr [rax + rax]
0x8dc8:	mov	rdi, r15
0x8dcb:	call	0xf4b0
0x8dd0:	mov	edi, eax
0x8dd2:	mov	r14d, eax
0x8dd5:	call	0x4970
0x8dda:	test	rax, rax
0x8ddd:	je	0x8eab
0x8de3:	mov	rdi, qword ptr [rax]
0x8de6:	call	0x1d7a0
0x8deb:	mov	qword ptr [rsp + 0x50], rax
0x8df0:	jmp	0x8cc9
0x8df5:	nop	dword ptr [rax]
0x8df8:	mov	edi, 0x10
0x8dfd:	call	0x1d670
0x8e02:	mov	rdi, r15
0x8e05:	mov	qword ptr [rsp + 0x50], rax
0x8e0a:	call	0xf4f0
0x8e0f:	mov	rdi, qword ptr [rsp + 0x50]
0x8e14:	mov	esi, 1
0x8e19:	lea	rcx, [rip + 0x1771c]
0x8e20:	and	eax, 0xfff
0x8e25:	mov	rdx, -1
0x8e2c:	mov	r8d, eax
0x8e2f:	xor	eax, eax
0x8e31:	call	0x4f10
0x8e36:	jmp	0x8cc9
0x8e3b:	nop	dword ptr [rax + rax]
0x8e40:	xor	eax, eax
0x8e42:	cmp	dl, 0x69
0x8e45:	mov	edx, dword ptr [rip + 0x21aad]
0x8e4b:	setne	al
0x8e4e:	add	eax, 1
0x8e51:	mov	dword ptr [rsp + 0x24], eax
0x8e55:	test	edx, edx
0x8e57:	je	0x9198
0x8e5d:	mov	eax, dword ptr [r15 + 0x70]
0x8e61:	test	eax, eax
0x8e63:	je	0x9198
0x8e69:	mov	edi, 0x15
0x8e6e:	call	0x1d670
0x8e73:	movdqa	xmm0, xmmword ptr [rip + 0x17d35]
0x8e7b:	mov	qword ptr [rsp + 0x50], rax
0x8e80:	mov	byte ptr [rax + 0x10], 0
0x8e84:	movups	xmmword ptr [rax], xmm0
0x8e87:	jmp	0x8cc9
0x8e8c:	nop	dword ptr [rax]
0x8e90:	mov	rdi, r15
0x8e93:	call	0xf4d0
0x8e98:	mov	edi, eax
0x8e9a:	mov	r14d, eax
0x8e9d:	call	0x4a10
0x8ea2:	test	rax, rax
0x8ea5:	jne	0x8de3
0x8eab:	mov	edi, 0x10
0x8eb0:	call	0x1d670
0x8eb5:	mov	r8d, r14d
0x8eb8:	mov	esi, 1
0x8ebd:	lea	rcx, [rip + 0x17678]
0x8ec4:	mov	qword ptr [rsp + 0x50], rax
0x8ec9:	mov	rdi, rax
0x8ecc:	mov	rdx, -1
0x8ed3:	xor	eax, eax
0x8ed5:	call	0x4f10
0x8eda:	jmp	0x8cc9
0x8edf:	nop	
0x8ee0:	mov	rdi, r15
0x8ee3:	call	0xf510
0x8ee8:	cmp	eax, 2
0x8eeb:	je	0x8c88
0x8ef1:	jmp	0x8d61
0x8ef6:	nop	word ptr cs:[rax + rax]
0x8f00:	mov	rdi, r15
0x8f03:	call	0xf510
0x8f08:	test	eax, eax
0x8f0a:	je	0x8c88
0x8f10:	jmp	0x8d61
0x8f15:	nop	dword ptr [rax]
0x8f18:	mov	rdi, qword ptr [r15 + 0x18]
0x8f1c:	mov	esi, 0x2f
0x8f21:	lea	r14, [rip + 0x17604]
0x8f28:	call	0x4a20
0x8f2d:	mov	edi, 8
0x8f32:	cmp	byte ptr [rax + 1], 0
0x8f36:	je	0x8c9f
0x8f3c:	lea	r14, [rax + 1]
0x8f40:	jmp	0x8c93
0x8f45:	mov	esi, dword ptr [rip + 0x219ad]
0x8f4b:	test	esi, esi
0x8f4d:	jne	0x8c28
0x8f53:	cmp	byte ptr [r14 + 2], 0x7b
0x8f58:	jne	0x8c38
0x8f5e:	add	r14, 3
0x8f62:	mov	esi, 0x7d
0x8f67:	mov	rdi, r14
0x8f6a:	call	0x4a00
0x8f6f:	mov	rbp, rax
0x8f72:	test	rax, rax
0x8f75:	je	0x8c38
0x8f7b:	mov	byte ptr [rax], 0
0x8f7e:	mov	edx, 2
0x8f83:	lea	rsi, [rip + 0x175a8]
0x8f8a:	mov	rdi, r14
0x8f8d:	call	0x8070
0x8f92:	mov	byte ptr [rbp], 0x7d
0x8f96:	cmp	al, 0x79
0x8f98:	je	0x8cc9
0x8f9e:	jmp	0x8d61
0x8fa3:	nop	dword ptr [rax + rax]
0x8fa8:	mov	ecx, dword ptr [rip + 0x2194a]
0x8fae:	test	ecx, ecx
0x8fb0:	jne	0x8c28
0x8fb6:	cmp	byte ptr [r14 + 2], 0x7b
0x8fbb:	jne	0x8c38
0x8fc1:	add	r14, 3
0x8fc5:	mov	esi, 0x2c
0x8fca:	mov	rdi, r14
0x8fcd:	call	0x4a00
0x8fd2:	mov	rbp, rax
0x8fd5:	test	rax, rax
0x8fd8:	je	0x8c38
0x8fde:	mov	byte ptr [rax], 0
0x8fe1:	mov	rax, qword ptr [rsp + 0x18]
0x8fe6:	lea	r15, [rsp + 0x48]
0x8feb:	mov	rcx, qword ptr [rsp + 0x10]
0x8ff0:	mov	rdx, qword ptr [rsp + 8]
0x8ff5:	mov	rsi, r15
0x8ff8:	mov	dword ptr [rip + 0x218f6], 1
0x9002:	mov	r8, qword ptr [rax + 8]
0x9006:	mov	qword ptr [rax + 8], r14
0x900a:	mov	rdi, rax
0x900d:	mov	r14, rax
0x9010:	xor	eax, eax
0x9012:	mov	qword ptr [rsp + 0x28], r8
0x9017:	call	0x8b50
0x901c:	mov	r8, qword ptr [rsp + 0x28]
0x9021:	mov	dword ptr [rip + 0x218cd], 0
0x902b:	mov	qword ptr [r14 + 8], r8
0x902f:	test	eax, eax
0x9031:	jle	0x9290
0x9037:	mov	rax, qword ptr [rsp + 0x18]
0x903c:	mov	rdi, qword ptr [rax]
0x903f:	call	0x49b0
0x9044:	mov	r14, qword ptr [rsp + 0x48]
0x9049:	mov	qword ptr [rsp + 0x28], rax
0x904e:	mov	rdi, r14
0x9051:	call	0x49b0
0x9056:	mov	rdx, qword ptr [rsp + 0x28]
0x905b:	lea	rdi, [rdx + rax + 0x11]
0x9060:	call	0x1d670
0x9065:	mov	r9, r14
0x9068:	mov	esi, 1
0x906d:	lea	rcx, [rip + 0x174c1]
0x9074:	mov	r10, rax
0x9077:	mov	rax, qword ptr [rsp + 0x18]
0x907c:	mov	rdx, -1
0x9083:	mov	rdi, r10
0x9086:	mov	qword ptr [rsp + 0x28], r10
0x908b:	mov	r8, qword ptr [rax]
0x908e:	xor	eax, eax
0x9090:	call	0x4f10
0x9095:	mov	rdi, r14
0x9098:	lea	r14, [rbp + 1]
0x909c:	call	0x18d10
0x90a1:	mov	byte ptr [rbp], 0x2c
0x90a5:	mov	esi, 0x7d
0x90aa:	mov	rdi, r14
0x90ad:	mov	qword ptr [rsp + 0x48], 0
0x90b6:	call	0x4a00
0x90bb:	mov	rbp, rax
0x90be:	test	rax, rax
0x90c1:	je	0x8c38
0x90c7:	mov	byte ptr [rax], 0
0x90ca:	mov	rdi, qword ptr [rsp + 0x28]
0x90cf:	call	0x49b0
0x90d4:	mov	r10, qword ptr [rsp + 0x28]
0x90d9:	cmp	rax, 0x32
0x90dd:	jbe	0x90e4
0x90df:	mov	byte ptr [r10 + 0x32], 0
0x90e4:	mov	rax, qword ptr [rsp + 0x18]
0x90e9:	mov	rcx, qword ptr [rsp + 0x10]
0x90ee:	mov	rsi, r15
0x90f1:	mov	qword ptr [rsp + 0x30], r10
0x90f6:	mov	dword ptr [rip + 0x217f8], 1
0x9100:	mov	rdx, qword ptr [rsp + 8]
0x9105:	mov	r8, qword ptr [rax + 8]
0x9109:	mov	qword ptr [rax + 8], r14
0x910d:	mov	r15, rax
0x9110:	mov	rdi, rax
0x9113:	xor	eax, eax
0x9115:	mov	qword ptr [rsp + 0x28], r8
0x911a:	call	0x8b50
0x911f:	mov	r8, qword ptr [rsp + 0x28]
0x9124:	mov	r10, qword ptr [rsp + 0x30]
0x9129:	mov	dword ptr [rip + 0x217c5], 0
0x9133:	test	eax, eax
0x9135:	mov	qword ptr [r15 + 8], r8
0x9139:	jle	0x9266
0x913f:	mov	rax, qword ptr [rsp + 0x18]
0x9144:	mov	r15, qword ptr [rsp + 0x48]
0x9149:	mov	rdi, r10
0x914c:	lea	rsi, [rsp + 0x50]
0x9151:	mov	qword ptr [rsp + 0x28], r10
0x9156:	mov	rcx, qword ptr [rax + 0x28]
0x915a:	mov	rdx, r15
0x915d:	call	0x83e0
0x9162:	mov	rdi, qword ptr [rsp + 0x28]
0x9167:	mov	r14, rax
0x916a:	call	0x18d10
0x916f:	mov	rdi, r15
0x9172:	call	0x18d10
0x9177:	mov	byte ptr [rbp], 0x7d
0x917b:	mov	qword ptr [rsp + 0x48], 0
0x9184:	test	r14, r14
0x9187:	jne	0x8cc9
0x918d:	jmp	0x8d61
0x9192:	nop	word ptr [rax + rax]
0x9198:	mov	qword ptr [rsp + 0x50], 0
0x91a1:	mov	rdi, r15
0x91a4:	xor	r14d, r14d
0x91a7:	call	0x100c0
0x91ac:	mov	qword ptr [rsp + 0x28], rbx
0x91b1:	mov	qword ptr [rsp + 0x30], rbp
0x91b6:	mov	qword ptr [rsp + 0x38], r12
0x91bb:	jmp	0x9232
0x91bd:	nop	dword ptr [rax]
0x91c0:	cdqe	
0x91c2:	lea	rcx, [rax + rax*4]
0x91c6:	mov	rax, qword ptr [r15 + 0x38]
0x91ca:	shl	rcx, 4
0x91ce:	mov	rdi, qword ptr [rax + rcx]
0x91d2:	mov	r12, rcx
0x91d5:	call	0x49b0
0x91da:	mov	rdi, qword ptr [rsp + 0x50]
0x91df:	lea	rbp, [rax + r14]
0x91e3:	lea	rsi, [rbp + 4]
0x91e7:	lea	rbx, [rbp + 3]
0x91eb:	call	0x1d690
0x91f0:	mov	qword ptr [rsp + 0x50], rax
0x91f5:	mov	byte ptr [rax + r14], 0x22
0x91fa:	mov	rax, qword ptr [r15 + 0x38]
0x91fe:	mov	rsi, qword ptr [rax + r12]
0x9202:	mov	rax, qword ptr [rsp + 0x50]
0x9207:	lea	rdi, [rax + r14 + 1]
0x920c:	mov	r14, rbx
0x920f:	call	0x48b0
0x9214:	mov	rax, qword ptr [rsp + 0x50]
0x9219:	mov	byte ptr [rax + rbp + 1], 0x22
0x921e:	mov	rax, qword ptr [rsp + 0x50]
0x9223:	mov	byte ptr [rax + rbp + 2], 0x20
0x9228:	mov	rax, qword ptr [rsp + 0x50]
0x922d:	mov	byte ptr [rax + rbp + 3], 0
0x9232:	mov	rdi, r15
0x9235:	call	0x100e0
0x923a:	cmp	eax, -1
0x923d:	jne	0x91c0
0x923f:	mov	rbx, qword ptr [rsp + 0x28]
0x9244:	mov	rbp, qword ptr [rsp + 0x30]
0x9249:	mov	r12, qword ptr [rsp + 0x38]
0x924e:	test	r14, r14
0x9251:	jne	0x8cc9
0x9257:	jmp	0x8d61
0x925c:	mov	eax, 1
0x9261:	jmp	0x8d3f
0x9266:	mov	byte ptr [rbp], 0x7d
0x926a:	mov	rdi, r10
0x926d:	mov	dword ptr [rsp + 8], eax
0x9271:	call	0x18d10
0x9276:	mov	eax, dword ptr [rsp + 8]
0x927a:	test	eax, eax
0x927c:	je	0x8c38
0x9282:	jmp	0x8d61
0x9287:	nop	word ptr [rax + rax]
0x9290:	mov	byte ptr [rbp], 0x2c
0x9294:	je	0x8c38
0x929a:	jmp	0x8d61
0x929f:	call	0x49d0
0x92a4:	nop	word ptr cs:[rax + rax]
0x92af:	nop	
0x92b0:	endbr64	
0x92b4:	push	r13
0x92b6:	mov	r13, rdx
0x92b9:	push	r12
0x92bb:	mov	r12, rsi
0x92be:	push	rbp
0x92bf:	mov	rbp, rdi
0x92c2:	call	0x47e0
0x92c7:	test	rax, rax
0x92ca:	je	0x92d8
0x92cc:	pop	rbp
0x92cd:	pop	r12
0x92cf:	pop	r13
0x92d1:	ret	
0x92d2:	nop	word ptr [rax + rax]
0x92d8:	test	r12, r12
0x92db:	je	0x9300
0x92dd:	mov	rdi, r12
0x92e0:	call	0x47e0
0x92e5:	mov	rsi, rax
0x92e8:	test	rax, rax
0x92eb:	je	0x9300
0x92ed:	mov	rdi, rbp
0x92f0:	pop	rbp
0x92f1:	pop	r12
0x92f3:	pop	r13
0x92f5:	jmp	0x18380
0x92fa:	nop	word ptr [rax + rax]
0x9300:	mov	rsi, r13
0x9303:	mov	rdi, rbp
0x9306:	pop	rbp
0x9307:	pop	r12
0x9309:	pop	r13
0x930b:	jmp	0x18380
0x9310:	endbr64	
0x9314:	push	r15
0x9316:	push	r14
0x9318:	push	r13
0x931a:	push	r12
0x931c:	push	rbp
0x931d:	push	rbx
0x931e:	mov	ebx, edi
0x9320:	sub	rsp, 0xb8
0x9327:	mov	qword ptr [rsp + 0x18], rsi
0x932c:	mov	rax, qword ptr fs:[0x28]
0x9335:	mov	qword ptr [rsp + 0xa8], rax
0x933d:	xor	eax, eax
0x933f:	mov	dword ptr [rsi], 0
0x9345:	cmp	edi, 0x7ff
0x934b:	jg	0x95d8
0x9351:	lea	rax, [rsp + 0x20]
0x9356:	lea	r12, [rsp + 0x50]
0x935b:	mov	qword ptr [rsp + 8], rax
0x9360:	lea	r13, [rip + 0x2089e]
0x9367:	jmp	0x94df
0x936c:	nop	dword ptr [rax]
0x9370:	mov	rdi, r12
0x9373:	call	0xbd80
0x9378:	test	rax, rax
0x937b:	je	0x9508
0x9381:	cmp	byte ptr [rax], 0
0x9384:	je	0x94d0
0x938a:	mov	edx, 0x50
0x938f:	mov	rsi, rax
0x9392:	mov	rdi, r12
0x9395:	call	0x4cf0
0x939a:	mov	dword ptr [rsp + 4], 0
0x93a2:	mov	edi, 1
0x93a7:	mov	esi, 0x30
0x93ac:	call	0x1d740
0x93b1:	mov	rdi, qword ptr [rsp + 0x20]
0x93b6:	mov	rbp, rax
0x93b9:	test	rdi, rdi
0x93bc:	je	0x9560
0x93c2:	call	0x1d7a0
0x93c7:	mov	edi, 8
0x93cc:	mov	qword ptr [rbp], rax
0x93d0:	call	0x19100
0x93d5:	mov	rdi, qword ptr [rsp + 0x30]
0x93da:	mov	qword ptr [rbp + 0x28], rax
0x93de:	test	rdi, rdi
0x93e1:	je	0x93ec
0x93e3:	call	0x1d7a0
0x93e8:	mov	qword ptr [rbp + 0x10], rax
0x93ec:	mov	rdi, qword ptr [rsp + 0x28]
0x93f1:	test	rdi, rdi
0x93f4:	je	0x9474
0x93f6:	call	0x1d7a0
0x93fb:	mov	qword ptr [rbp + 8], rax
0x93ff:	mov	r14, qword ptr [rsp + 0x38]
0x9404:	mov	eax, 1
0x9409:	test	r14, r14
0x940c:	je	0x9421
0x940e:	call	0x4ef0
0x9413:	movsx	rdx, byte ptr [r14]
0x9417:	mov	rax, qword ptr [rax]
0x941a:	cmp	dword ptr [rax + rdx*4], 0x79
0x941e:	sete	al
0x9421:	mov	byte ptr [rbp + 0x18], al
0x9424:	mov	rdx, qword ptr [rsp + 0x40]
0x9429:	test	rdx, rdx
0x942c:	je	0x944c
0x942e:	mov	qword ptr [rsp + 0x10], rdx
0x9433:	call	0x4ef0
0x9438:	mov	rdx, qword ptr [rsp + 0x10]
0x943d:	mov	rax, qword ptr [rax]
0x9440:	movsx	rdx, byte ptr [rdx]
0x9444:	cmp	dword ptr [rax + rdx*4], 0x79
0x9448:	sete	byte ptr [rbp + 0x19]
0x944c:	mov	rdx, qword ptr [rsp + 0x48]
0x9451:	test	rdx, rdx
0x9454:	je	0x9474
0x9456:	mov	qword ptr [rsp + 0x10], rdx
0x945b:	call	0x4ef0
0x9460:	mov	rdx, qword ptr [rsp + 0x10]
0x9465:	mov	rax, qword ptr [rax]
0x9468:	movsx	rdx, byte ptr [rdx]
0x946c:	cmp	dword ptr [rax + rdx*4], 0x79
0x9470:	sete	byte ptr [rbp + 0x1a]
0x9474:	call	0x4f00
0x9479:	mov	r15, qword ptr [rbp]
0x947d:	mov	rax, qword ptr [rax]
0x9480:	movsx	rdx, byte ptr [r15]
0x9484:	test	byte ptr [rax + rdx*2 + 1], 2
0x9489:	jne	0x9518
0x948f:	mov	rdi, r12
0x9492:	call	0x1d7a0
0x9497:	cmp	byte ptr [rbp + 0x1b], 0
0x949b:	mov	qword ptr [rbp + 0x20], rax
0x949f:	jne	0x94ac
0x94a1:	cmp	qword ptr [rbp + 8], 0
0x94a6:	je	0x9590
0x94ac:	mov	eax, dword ptr [rsp + 4]
0x94b0:	test	eax, eax
0x94b2:	je	0x94c5
0x94b4:	mov	rdi, r12
0x94b7:	call	0x9f00
0x94bc:	test	rax, rax
0x94bf:	je	0x95a0
0x94c5:	mov	rsi, rbp
0x94c8:	mov	rdi, r12
0x94cb:	call	0xaf70
0x94d0:	add	ebx, 1
0x94d3:	cmp	ebx, 0x800
0x94d9:	je	0x9580
0x94df:	mov	rsi, qword ptr [rsp + 8]
0x94e4:	xor	ecx, ecx
0x94e6:	mov	edx, 6
0x94eb:	mov	rdi, r12
0x94ee:	call	0x17320
0x94f3:	movzx	eax, byte ptr [rsp + 0x50]
0x94f8:	test	al, al
0x94fa:	je	0x95d8
0x9500:	cmp	al, 0x5e
0x9502:	jne	0x9370
0x9508:	mov	dword ptr [rsp + 4], 1
0x9510:	jmp	0x93a2
0x9515:	nop	dword ptr [rax]
0x9518:	lea	r14, [rip + 0x1fb01]
0x951f:	jmp	0x9535
0x9521:	nop	dword ptr [rax]
0x9528:	add	r14, 0x23
0x952c:	cmp	r13, r14
0x952f:	je	0x948f
0x9535:	mov	rsi, r14
0x9538:	mov	rdi, r15
0x953b:	call	0x4b30
0x9540:	test	eax, eax
0x9542:	jne	0x9528
0x9544:	mov	rdi, r15
0x9547:	call	0x18d10
0x954c:	mov	qword ptr [rbp], r14
0x9550:	mov	byte ptr [rbp + 0x1b], 1
0x9554:	jmp	0x948f
0x9559:	nop	dword ptr [rax]
0x9560:	mov	rdi, rax
0x9563:	add	ebx, 1
0x9566:	call	0x18d10
0x956b:	cmp	ebx, 0x800
0x9571:	jne	0x94df
0x9577:	nop	word ptr [rax + rax]
0x9580:	mov	eax, 0x800
0x9585:	jmp	0x95da
0x9587:	nop	word ptr [rax + rax]
0x9590:	cmp	qword ptr [rbp + 0x10], 0
0x9595:	jne	0x94ac
0x959b:	jmp	0x94d0
0x95a0:	mov	rcx, qword ptr [rip + 0x21341]
0x95a7:	mov	rdi, qword ptr [rip + 0x212d2]
0x95ae:	mov	r8, r12
0x95b1:	xor	eax, eax
0x95b3:	lea	rdx, [rip + 0x1720e]
0x95ba:	mov	esi, 1
0x95bf:	call	0x4e60
0x95c4:	mov	rax, qword ptr [rsp + 0x18]
0x95c9:	add	dword ptr [rax], 1
0x95cc:	jmp	0x94d0
0x95d1:	nop	dword ptr [rax]
0x95d8:	mov	eax, ebx
0x95da:	mov	rdx, qword ptr [rsp + 0xa8]
0x95e2:	sub	rdx, qword ptr fs:[0x28]
0x95eb:	jne	0x95ff
0x95ed:	add	rsp, 0xb8
0x95f4:	pop	rbx
0x95f5:	pop	rbp
0x95f6:	pop	r12
0x95f8:	pop	r13
0x95fa:	pop	r14
0x95fc:	pop	r15
0x95fe:	ret	
0x95ff:	call	0x49d0
0x9604:	nop	word ptr cs:[rax + rax]
0x960f:	nop	
0x9610:	endbr64	
0x9614:	sub	rsp, 8
0x9618:	xor	edi, edi
0x961a:	call	0x9b00
0x961f:	xor	eax, eax
0x9621:	call	0xa6c0
0x9626:	mov	rdi, qword ptr [rip + 0x2129b]
0x962d:	add	rsp, 8
0x9631:	jmp	0xbb40
0x9636:	nop	word ptr cs:[rax + rax]
0x9640:	endbr64	
0x9644:	push	rbp
0x9645:	lea	rbp, [rip + 0x205b9]
0x964c:	push	rbx
0x964d:	mov	rdi, rbp
0x9650:	sub	rsp, 0x48
0x9654:	mov	rax, qword ptr fs:[0x28]
0x965d:	mov	qword ptr [rsp + 0x38], rax
0x9662:	xor	eax, eax
0x9664:	call	0x49b0
0x9669:	mov	rdi, qword ptr [rip + 0x21240]
0x9670:	mov	rbx, rax
0x9673:	call	0x11100
0x9678:	mov	edx, 0x33
0x967d:	mov	rsi, rsp
0x9680:	sub	edx, ebx
0x9682:	mov	rdi, rax
0x9685:	call	0x182b0
0x968a:	mov	rsi, rbp
0x968d:	mov	rdi, rax
0x9690:	call	0x4df0
0x9695:	mov	rdi, rax
0x9698:	call	0xd540
0x969d:	mov	rax, qword ptr [rsp + 0x38]
0x96a2:	sub	rax, qword ptr fs:[0x28]
0x96ab:	jne	0x96b4
0x96ad:	add	rsp, 0x48
0x96b1:	pop	rbx
0x96b2:	pop	rbp
0x96b3:	ret	
0x96b4:	call	0x49d0
0x96b9:	nop	dword ptr [rax]
0x96c0:	endbr64	
0x96c4:	sub	rsp, 8
0x96c8:	mov	r8d, 1
0x96ce:	mov	rdx, qword ptr [rip + 0x211db]
0x96d5:	mov	rdi, qword ptr [rip + 0x211cc]
0x96dc:	mov	rcx, -1
0x96e3:	mov	esi, 0x22
0x96e8:	call	0x13e30
0x96ed:	mov	r8d, 1
0x96f3:	mov	rdx, qword ptr [rip + 0x211ae]
0x96fa:	mov	rdi, qword ptr [rip + 0x211af]
0x9701:	mov	rcx, -1
0x9708:	mov	esi, 0x22
0x970d:	add	rsp, 8
0x9711:	jmp	0x13e30
0x9716:	nop	word ptr cs:[rax + rax]
0x9720:	endbr64	
0x9724:	sub	rsp, 8
0x9728:	mov	rdx, qword ptr [rip + 0x211b9]
0x972f:	mov	edi, 1
0x9734:	xor	eax, eax
0x9736:	lea	rsi, [rip + 0x170b3]
0x973d:	call	0x4d20
0x9742:	lea	rdi, [rip + 0x170cf]
0x9749:	call	0x48d0
0x974e:	lea	rdi, [rip + 0x170eb]
0x9755:	call	0x48d0
0x975a:	lea	rdi, [rip + 0x16dde]
0x9761:	call	0x48d0
0x9766:	lea	rdi, [rip + 0x170fb]
0x976d:	call	0x48d0
0x9772:	lea	rdi, [rip + 0x17117]
0x9779:	call	0x48d0
0x977e:	lea	rdi, [rip + 0x1713b]
0x9785:	add	rsp, 8
0x9789:	jmp	0x48d0
0x978e:	nop	
0x9790:	cmp	dword ptr [rip + 0x21ba9], 1
0x9797:	push	rbx
0x9798:	mov	ebx, edi
0x979a:	je	0x9830
0x97a0:	cmp	ebx, 1
0x97a3:	je	0x984a
0x97a9:	mov	rdi, qword ptr [rip + 0x20598]
0x97b0:	test	rdi, rdi
0x97b3:	je	0x97c6
0x97b5:	lea	rdx, [rip + 0x2b4]
0x97bc:	mov	esi, 1
0x97c1:	call	0x4820
0x97c6:	movzx	edx, byte ptr [rip + 0x21b83]
0x97cd:	mov	dword ptr [rip + 0x21b75], 0
0x97d7:	mov	dword ptr [rip + 0x21b67], 0
0x97e1:	mov	eax, edx
0x97e3:	and	eax, 0x7f
0x97e6:	and	edx, 0x40
0x97e9:	mov	byte ptr [rip + 0x21b61], al
0x97ef:	jne	0x9810
0x97f1:	mov	dword ptr [rip + 0x21b45], 1
0x97fb:	and	eax, 0x7f
0x97fe:	shl	ebx, 7
0x9801:	or	eax, ebx
0x9803:	mov	byte ptr [rip + 0x21b47], al
0x9809:	pop	rbx
0x980a:	ret	
0x980b:	nop	dword ptr [rax + rax]
0x9810:	mov	dword ptr [rip + 0x21b2a], 0
0x981a:	mov	edi, 1
0x981f:	call	0x9870
0x9824:	movzx	eax, byte ptr [rip + 0x21b25]
0x982b:	jmp	0x97f1
0x982d:	nop	dword ptr [rax]
0x9830:	movzx	eax, byte ptr [rip + 0x21b19]
0x9837:	shr	al, 7
0x983a:	movzx	eax, al
0x983d:	cmp	eax, edi
0x983f:	je	0x9809
0x9841:	cmp	ebx, 1
0x9844:	jne	0x97a9
0x984a:	mov	rdi, qword ptr [rip + 0x20517]
0x9851:	test	rdi, rdi
0x9854:	je	0x9824
0x9856:	lea	rdx, [rip + 0x213]
0x985d:	mov	esi, 1
0x9862:	call	0x4820
0x9867:	movzx	eax, byte ptr [rip + 0x21ae2]
0x986e:	jmp	0x97f1
0x9870:	cmp	dword ptr [rip + 0x21acd], 1
0x9877:	push	rbx
0x9878:	mov	ebx, edi
0x987a:	je	0x98e0
0x987c:	cmp	ebx, 1
0x987f:	je	0x98f6
0x9881:	mov	rdi, qword ptr [rip + 0x204c0]
0x9888:	test	rdi, rdi
0x988b:	je	0x989e
0x988d:	lea	rdx, [rip + 0x1dc]
0x9894:	mov	esi, 1
0x9899:	call	0x4820
0x989e:	movzx	eax, byte ptr [rip + 0x21aab]
0x98a5:	mov	dword ptr [rip + 0x21a9d], 0
0x98af:	mov	dword ptr [rip + 0x21a8f], 0
0x98b9:	and	eax, 0xffffffbf
0x98bc:	mov	byte ptr [rip + 0x21a8e], al
0x98c2:	test	al, al
0x98c4:	js	0x9920
0x98c6:	mov	dword ptr [rip + 0x21a74], 1
0x98d0:	and	eax, 0xffffffbf
0x98d3:	shl	ebx, 6
0x98d6:	or	eax, ebx
0x98d8:	mov	byte ptr [rip + 0x21a72], al
0x98de:	pop	rbx
0x98df:	ret	
0x98e0:	movzx	eax, byte ptr [rip + 0x21a69]
0x98e7:	sar	eax, 6
0x98ea:	and	eax, 1
0x98ed:	cmp	eax, edi
0x98ef:	je	0x98de
0x98f1:	cmp	ebx, 1
0x98f4:	jne	0x9881
0x98f6:	mov	rdi, qword ptr [rip + 0x2048b]
0x98fd:	test	rdi, rdi
0x9900:	je	0x9934
0x9902:	lea	rdx, [rip + 0x167]
0x9909:	mov	esi, 1
0x990e:	call	0x4820
0x9913:	movzx	eax, byte ptr [rip + 0x21a36]
0x991a:	jmp	0x98c6
0x991c:	nop	dword ptr [rax]
0x9920:	mov	dword ptr [rip + 0x21a16], 0
0x992a:	mov	edi, 1
0x992f:	call	0x9790
0x9934:	movzx	eax, byte ptr [rip + 0x21a15]
0x993b:	jmp	0x98c6
0x993d:	nop	dword ptr [rax]
0x9940:	push	r12
0x9942:	mov	edx, 5
0x9947:	lea	rsi, [rip + 0x17293]
0x994e:	mov	r12d, 1
0x9954:	push	rbp
0x9955:	mov	rbp, rdi
0x9958:	sub	rsp, 8
0x995c:	call	0x4890
0x9961:	test	eax, eax
0x9963:	je	0x99d3
0x9965:	mov	edx, 4
0x996a:	lea	rsi, [rip + 0x1725f]
0x9971:	mov	rdi, rbp
0x9974:	call	0x4890
0x9979:	test	eax, eax
0x997b:	je	0x99d3
0x997d:	mov	edx, 9
0x9982:	lea	rsi, [rip + 0x1724c]
0x9989:	mov	rdi, rbp
0x998c:	call	0x4890
0x9991:	test	eax, eax
0x9993:	je	0x99d3
0x9995:	lea	rsi, [rip + 0x17243]
0x999c:	mov	rdi, rbp
0x999f:	call	0x4b30
0x99a4:	test	eax, eax
0x99a6:	je	0x99d3
0x99a8:	lea	rsi, [rip + 0x17238]
0x99af:	mov	rdi, rbp
0x99b2:	call	0x4b30
0x99b7:	test	eax, eax
0x99b9:	je	0x99d3
0x99bb:	lea	rsi, [rip + 0x1722b]
0x99c2:	mov	rdi, rbp
0x99c5:	xor	r12d, r12d
0x99c8:	call	0x4b30
0x99cd:	test	eax, eax
0x99cf:	sete	r12b
0x99d3:	add	rsp, 8
0x99d7:	mov	eax, r12d
0x99da:	pop	rbp
0x99db:	pop	r12
0x99dd:	ret	
0x99de:	nop	
0x99e0:	push	r13
0x99e2:	push	r12
0x99e4:	mov	r12, qword ptr [rip + 0x20f8d]
0x99eb:	push	rbp
0x99ec:	test	r12, r12
0x99ef:	je	0x9a58
0x99f1:	mov	r13, rdi
0x99f4:	jmp	0x9a13
0x99f6:	nop	word ptr cs:[rax + rax]
0x9a00:	js	0x9a30
0x9a02:	mov	r12, qword ptr [r12 + 8]
0x9a07:	mov	qword ptr [rip + 0x20f6a], r12
0x9a0e:	test	r12, r12
0x9a11:	je	0x9a58
0x9a13:	mov	rbp, qword ptr [r12]
0x9a17:	mov	rdi, r13
0x9a1a:	mov	rsi, rbp
0x9a1d:	call	0x4b30
0x9a22:	test	eax, eax
0x9a24:	jne	0x9a00
0x9a26:	mov	rax, r12
0x9a29:	pop	rbp
0x9a2a:	pop	r12
0x9a2c:	pop	r13
0x9a2e:	ret	
0x9a2f:	nop	
0x9a30:	mov	rdi, r13
0x9a33:	call	0x49b0
0x9a38:	mov	rsi, rbp
0x9a3b:	mov	rdi, r13
0x9a3e:	mov	rdx, rax
0x9a41:	call	0x4890
0x9a46:	pop	rbp
0x9a47:	neg	eax
0x9a49:	sbb	r12, r12
0x9a4c:	mov	rax, r12
0x9a4f:	pop	r12
0x9a51:	pop	r13
0x9a53:	ret	
0x9a54:	nop	dword ptr [rax]
0x9a58:	mov	r12, -1
0x9a5f:	pop	rbp
0x9a60:	mov	rax, r12
0x9a63:	pop	r12
0x9a65:	pop	r13
0x9a67:	ret	
0x9a68:	nop	dword ptr [rax + rax]
0x9a70:	endbr64	
0x9a74:	movsxd	rdx, dword ptr [rip + 0x2148d]
0x9a7b:	push	r12
0x9a7d:	push	rbp
0x9a7e:	mov	ebp, edi
0x9a80:	push	rbx
0x9a81:	cmp	edx, 0x400
0x9a87:	je	0x9ab0
0x9a89:	lea	eax, [rdx + 1]
0x9a8c:	lea	r12, [rip + 0x2148d]
0x9a93:	mov	byte ptr [r12 + rdx], bpl
0x9a97:	pop	rbx
0x9a98:	mov	dword ptr [rip + 0x2146a], eax
0x9a9e:	pop	rbp
0x9a9f:	mov	eax, 1
0x9aa4:	pop	r12
0x9aa6:	ret	
0x9aa7:	nop	word ptr [rax + rax]
0x9ab0:	xor	ebx, ebx
0x9ab2:	lea	r12, [rip + 0x21467]
0x9ab9:	jmp	0x9acc
0x9abb:	nop	dword ptr [rax + rax]
0x9ac0:	mov	edx, dword ptr [rip + 0x21442]
0x9ac6:	add	ebx, eax
0x9ac8:	cmp	edx, ebx
0x9aca:	jle	0x9ae5
0x9acc:	sub	edx, ebx
0x9ace:	movsxd	rsi, ebx
0x9ad1:	mov	edi, 1
0x9ad6:	add	rsi, r12
0x9ad9:	movsxd	rdx, edx
0x9adc:	call	0x18da0
0x9ae1:	test	eax, eax
0x9ae3:	jns	0x9ac0
0x9ae5:	mov	eax, 1
0x9aea:	xor	edx, edx
0x9aec:	jmp	0x9a93
0x9aee:	nop	
0x9af0:	endbr64	
0x9af4:	mov	dword ptr [rip + 0x21862], edi
0x9afa:	ret	
0x9afb:	nop	dword ptr [rax + rax]
0x9b00:	endbr64	
0x9b04:	push	r12
0x9b06:	push	rbp
0x9b07:	push	rbx
0x9b08:	mov	ebx, edi
0x9b0a:	sub	rsp, 0x50
0x9b0e:	mov	rax, qword ptr fs:[0x28]
0x9b17:	mov	qword ptr [rsp + 0x48], rax
0x9b1c:	xor	eax, eax
0x9b1e:	cmp	edi, 1
0x9b21:	je	0x9b60
0x9b23:	lea	rdx, [rip + 0x21896]
0x9b2a:	mov	esi, 1
0x9b2f:	mov	edi, 1
0x9b34:	call	0x4d70
0x9b39:	mov	dword ptr [rip + 0x20e19], ebx
0x9b3f:	mov	rax, qword ptr [rsp + 0x48]
0x9b44:	sub	rax, qword ptr fs:[0x28]
0x9b4d:	jne	0x9c7e
0x9b53:	add	rsp, 0x50
0x9b57:	pop	rbx
0x9b58:	pop	rbp
0x9b59:	pop	r12
0x9b5b:	ret	
0x9b5c:	nop	dword ptr [rax]
0x9b60:	mov	rax, qword ptr [rip + 0x21889]
0x9b67:	mov	rdx, qword ptr [rip + 0x21852]
0x9b6e:	lea	r12, [rip + 0x2180b]
0x9b75:	mov	esi, 1
0x9b7a:	movdqa	xmm0, xmmword ptr [rip + 0x2183e]
0x9b82:	movdqa	xmm1, xmmword ptr [rip + 0x21846]
0x9b8a:	mov	edi, 1
0x9b8f:	mov	qword ptr [rip + 0x2181a], rax
0x9b96:	mov	eax, dword ptr [rip + 0x2185c]
0x9b9c:	movaps	xmmword ptr [rip + 0x217dd], xmm0
0x9ba3:	movdqa	xmm2, xmmword ptr [rip + 0x21835]
0x9bab:	mov	dword ptr [rip + 0x21807], eax
0x9bb1:	movabs	rax, 0xfffffffefffffa3c
0x9bbb:	and	rax, rdx
0x9bbe:	mov	rdx, r12
0x9bc1:	movaps	xmmword ptr [rip + 0x217c8], xmm1
0x9bc8:	mov	qword ptr [rip + 0x217b1], rax
0x9bcf:	mov	eax, dword ptr [rip + 0x217b7]
0x9bd5:	movaps	xmmword ptr [rip + 0x217c4], xmm2
0x9bdc:	and	eax, 0xfffffff5
0x9bdf:	mov	byte ptr [rip + 0x217bb], 0
0x9be6:	mov	dword ptr [rip + 0x217a1], 7
0x9bf0:	or	al, 0x81
0x9bf2:	mov	dword ptr [rip + 0x21794], eax
0x9bf8:	mov	eax, 0x100
0x9bfd:	mov	word ptr [rip + 0x21792], ax
0x9c04:	mov	qword ptr [rip + 0x2178a], 0x1a0000
0x9c0f:	call	0x4d70
0x9c14:	mov	rdi, r12
0x9c17:	mov	r12, rsp
0x9c1a:	call	0x4d10
0x9c1f:	mov	edx, 1
0x9c24:	mov	esi, 0x540a
0x9c29:	mov	edi, 1
0x9c2e:	mov	dword ptr [rip + 0x20cfc], eax
0x9c34:	xor	eax, eax
0x9c36:	call	0x4a70
0x9c3b:	mov	esi, 1
0x9c40:	mov	edi, 1
0x9c45:	call	0x4db0
0x9c4a:	mov	ebp, dword ptr [rip + 0x200d4]
0x9c50:	mov	rsi, r12
0x9c53:	mov	edi, 1
0x9c58:	call	0x4d60
0x9c5d:	mov	rdx, r12
0x9c60:	mov	esi, 1
0x9c65:	mov	edi, 1
0x9c6a:	mov	byte ptr [rsp + 0x11], bpl
0x9c6f:	mov	byte ptr [rsp + 0x12], 0
0x9c74:	call	0x4d70
0x9c79:	jmp	0x9b39
0x9c7e:	call	0x49d0
0x9c83:	nop	word ptr cs:[rax + rax]
0x9c8e:	nop	
0x9c90:	endbr64	
0x9c94:	mov	eax, dword ptr [rip + 0x20cbe]
0x9c9a:	ret	
0x9c9b:	nop	dword ptr [rax + rax]
0x9ca0:	endbr64	
0x9ca4:	push	r12
0x9ca6:	push	rbx
0x9ca7:	mov	ebx, edi
0x9ca9:	mov	edi, 1
0x9cae:	sub	rsp, 0x58
0x9cb2:	mov	rax, qword ptr fs:[0x28]
0x9cbb:	mov	qword ptr [rsp + 0x48], rax
0x9cc0:	xor	eax, eax
0x9cc2:	mov	r12, rsp
0x9cc5:	mov	rsi, r12
0x9cc8:	call	0x4d60
0x9ccd:	mov	rdx, r12
0x9cd0:	mov	esi, 1
0x9cd5:	mov	edi, 1
0x9cda:	mov	byte ptr [rsp + 0x11], bl
0x9cde:	mov	byte ptr [rsp + 0x12], 0
0x9ce3:	call	0x4d70
0x9ce8:	mov	dword ptr [rip + 0x20036], ebx
0x9cee:	mov	rax, qword ptr [rsp + 0x48]
0x9cf3:	sub	rax, qword ptr fs:[0x28]
0x9cfc:	jne	0x9d06
0x9cfe:	add	rsp, 0x58
0x9d02:	pop	rbx
0x9d03:	pop	r12
0x9d05:	ret	
0x9d06:	call	0x49d0
0x9d0b:	nop	dword ptr [rax + rax]
0x9d10:	endbr64	
0x9d14:	mov	edx, dword ptr [rip + 0x211ee]
0x9d1a:	test	edx, edx
0x9d1c:	jle	0x9d66
0x9d1e:	push	rbp
0x9d1f:	xor	ebp, ebp
0x9d21:	push	rbx
0x9d22:	lea	rbx, [rip + 0x211f7]
0x9d29:	sub	rsp, 8
0x9d2d:	jmp	0x9d3c
0x9d2f:	nop	
0x9d30:	mov	edx, dword ptr [rip + 0x211d2]
0x9d36:	add	ebp, eax
0x9d38:	cmp	edx, ebp
0x9d3a:	jle	0x9d55
0x9d3c:	sub	edx, ebp
0x9d3e:	movsxd	rsi, ebp
0x9d41:	mov	edi, 1
0x9d46:	add	rsi, rbx
0x9d49:	movsxd	rdx, edx
0x9d4c:	call	0x18da0
0x9d51:	test	eax, eax
0x9d53:	jns	0x9d30
0x9d55:	mov	dword ptr [rip + 0x211a9], 0
0x9d5f:	add	rsp, 8
0x9d63:	pop	rbx
0x9d64:	pop	rbp
0x9d65:	ret	
0x9d66:	mov	dword ptr [rip + 0x21198], 0
0x9d70:	ret	
0x9d71:	nop	word ptr cs:[rax + rax]
0x9d7c:	nop	dword ptr [rax]
0x9d80:	endbr64	
0x9d84:	push	rbp
0x9d85:	lea	rdx, [rip - 0x31c]
0x9d8c:	push	rbx
0x9d8d:	sub	rsp, 8
0x9d91:	mov	esi, dword ptr [rip + 0x20c05]
0x9d97:	mov	rdi, qword ptr [rip + 0x2004a]
0x9d9e:	call	0x4820
0x9da3:	mov	edx, dword ptr [rip + 0x2115f]
0x9da9:	test	edx, edx
0x9dab:	jle	0x9de5
0x9dad:	xor	ebp, ebp
0x9daf:	lea	rbx, [rip + 0x2116a]
0x9db6:	jmp	0x9dcc
0x9db8:	nop	dword ptr [rax + rax]
0x9dc0:	mov	edx, dword ptr [rip + 0x21142]
0x9dc6:	add	ebp, eax
0x9dc8:	cmp	edx, ebp
0x9dca:	jle	0x9de5
0x9dcc:	sub	edx, ebp
0x9dce:	movsxd	rsi, ebp
0x9dd1:	mov	edi, 1
0x9dd6:	add	rsi, rbx
0x9dd9:	movsxd	rdx, edx
0x9ddc:	call	0x18da0
0x9de1:	test	eax, eax
0x9de3:	jns	0x9dc0
0x9de5:	mov	dword ptr [rip + 0x21119], 0
0x9def:	add	rsp, 8
0x9df3:	pop	rbx
0x9df4:	pop	rbp
0x9df5:	ret	
0x9df6:	nop	word ptr cs:[rax + rax]
0x9e00:	endbr64	
0x9e04:	push	rbp
0x9e05:	lea	rdx, [rip - 0x39c]
0x9e0c:	push	rbx
0x9e0d:	sub	rsp, 8
0x9e11:	mov	eax, dword ptr [rip + 0x20b85]
0x9e17:	mov	rdi, qword ptr [rip + 0x2010a]
0x9e1e:	lea	esi, [rax - 1]
0x9e21:	call	0x4820
0x9e26:	mov	edx, dword ptr [rip + 0x210dc]
0x9e2c:	test	edx, edx
0x9e2e:	jle	0x9e65
0x9e30:	xor	ebp, ebp
0x9e32:	lea	rbx, [rip + 0x210e7]
0x9e39:	jmp	0x9e4c
0x9e3b:	nop	dword ptr [rax + rax]
0x9e40:	mov	edx, dword ptr [rip + 0x210c2]
0x9e46:	add	ebp, eax
0x9e48:	cmp	edx, ebp
0x9e4a:	jle	0x9e65
0x9e4c:	sub	edx, ebp
0x9e4e:	movsxd	rsi, ebp
0x9e51:	mov	edi, 1
0x9e56:	add	rsi, rbx
0x9e59:	movsxd	rdx, edx
0x9e5c:	call	0x18da0
0x9e61:	test	eax, eax
0x9e63:	jns	0x9e40
0x9e65:	mov	dword ptr [rip + 0x21099], 0
0x9e6f:	add	rsp, 8
0x9e73:	pop	rbx
0x9e74:	pop	rbp
0x9e75:	ret	
0x9e76:	nop	word ptr cs:[rax + rax]
0x9e80:	endbr64	
0x9e84:	push	rbp
0x9e85:	lea	rdx, [rip - 0x41c]
0x9e8c:	push	rbx
0x9e8d:	sub	rsp, 8
0x9e91:	mov	eax, dword ptr [rip + 0x20b05]
0x9e97:	mov	rdi, qword ptr [rip + 0x200aa]
0x9e9e:	lea	esi, [rax - 1]
0x9ea1:	call	0x4820
0x9ea6:	mov	edx, dword ptr [rip + 0x2105c]
0x9eac:	test	edx, edx
0x9eae:	jle	0x9ee5
0x9eb0:	xor	ebp, ebp
0x9eb2:	lea	rbx, [rip + 0x21067]
0x9eb9:	jmp	0x9ecc
0x9ebb:	nop	dword ptr [rax + rax]
0x9ec0:	mov	edx, dword ptr [rip + 0x21042]
0x9ec6:	add	ebp, eax
0x9ec8:	cmp	edx, ebp
0x9eca:	jle	0x9ee5
0x9ecc:	sub	edx, ebp
0x9ece:	movsxd	rsi, ebp
0x9ed1:	mov	edi, 1
0x9ed6:	add	rsi, rbx
0x9ed9:	movsxd	rdx, edx
0x9edc:	call	0x18da0
0x9ee1:	test	eax, eax
0x9ee3:	jns	0x9ec0
0x9ee5:	mov	dword ptr [rip + 0x21019], 0
0x9eef:	add	rsp, 8
0x9ef3:	pop	rbx
0x9ef4:	pop	rbp
0x9ef5:	ret	
0x9ef6:	nop	word ptr cs:[rax + rax]
0x9f00:	endbr64	
0x9f04:	mov	edx, dword ptr [rip + 0x214f2]
0x9f0a:	movzx	eax, byte ptr [rdi]
0x9f0d:	push	r14
0x9f0f:	push	r13
0x9f11:	mov	r13, rdi
0x9f14:	push	r12
0x9f16:	push	rbp
0x9f17:	push	rbx
0x9f18:	test	edx, edx
0x9f1a:	jne	0x9fc8
0x9f20:	cmp	al, 0x5e
0x9f22:	jne	0x9fb8
0x9f28:	lea	rbx, [r13 + 1]
0x9f2c:	mov	rbp, r13
0x9f2f:	lea	r14, [rip + 0x1fd6a]
0x9f36:	jmp	0x9f56
0x9f38:	nop	dword ptr [rax + rax]
0x9f40:	add	rbp, 1
0x9f44:	mov	byte ptr [rbx - 1], al
0x9f47:	mov	rdx, rbx
0x9f4a:	add	rbx, 1
0x9f4e:	movzx	eax, byte ptr [rbp]
0x9f52:	test	al, al
0x9f54:	je	0x9fa6
0x9f56:	cmp	al, 0x5e
0x9f58:	jne	0x9f40
0x9f5a:	movzx	r12d, byte ptr [rbp + 1]
0x9f5f:	test	r12b, r12b
0x9f62:	je	0x9fb8
0x9f64:	call	0x47c0
0x9f69:	mov	r8, rax
0x9f6c:	movzx	eax, r12b
0x9f70:	mov	rdx, qword ptr [r8]
0x9f73:	mov	eax, dword ptr [rdx + rax*4]
0x9f76:	cmp	eax, 0x47
0x9f79:	je	0x9fb8
0x9f7b:	cmp	eax, 0x5a
0x9f7e:	je	0x9fb8
0x9f80:	and	r12d, 0x7f
0x9f84:	add	rbp, 2
0x9f88:	mov	rdx, rbx
0x9f8b:	add	rbx, 1
0x9f8f:	sub	r12d, 0x20
0x9f93:	movsxd	r12, r12d
0x9f96:	movzx	eax, byte ptr [r14 + r12]
0x9f9b:	mov	byte ptr [rbx - 2], al
0x9f9e:	movzx	eax, byte ptr [rbp]
0x9fa2:	test	al, al
0x9fa4:	jne	0x9f56
0x9fa6:	mov	byte ptr [rdx], 0
0x9fa9:	mov	rax, r13
0x9fac:	pop	rbx
0x9fad:	pop	rbp
0x9fae:	pop	r12
0x9fb0:	pop	r13
0x9fb2:	pop	r14
0x9fb4:	ret	
0x9fb5:	nop	dword ptr [rax]
0x9fb8:	pop	rbx
0x9fb9:	xor	eax, eax
0x9fbb:	pop	rbp
0x9fbc:	pop	r12
0x9fbe:	pop	r13
0x9fc0:	pop	r14
0x9fc2:	ret	
0x9fc3:	nop	dword ptr [rax + rax]
0x9fc8:	test	al, al
0x9fca:	jne	0x9f28
0x9fd0:	mov	rdx, rdi
0x9fd3:	jmp	0x9fa6
0x9fd5:	nop	word ptr cs:[rax + rax]
0x9fe0:	endbr64	
0x9fe4:	push	r15
0x9fe6:	push	r14
0x9fe8:	mov	r14, rdi
0x9feb:	push	r13
0x9fed:	lea	r13, [rip + 0x16c12]
0x9ff4:	push	r12
0x9ff6:	lea	r12, [rip + 0x209c3]
0x9ffd:	push	rbp
0x9ffe:	lea	rbp, [rip + 0x16bef]
0xa005:	push	rbx
0xa006:	mov	rbx, rdi
0xa009:	sub	rsp, 0x18
0xa00d:	mov	rax, qword ptr fs:[0x28]
0xa016:	mov	qword ptr [rsp + 8], rax
0xa01b:	xor	eax, eax
0xa01d:	mov	byte ptr [rip + 0x2099c], 0
0xa024:	movzx	r15d, byte ptr [rdi]
0xa028:	test	r15b, r15b
0xa02b:	jne	0xa0c2
0xa031:	jmp	0xa0f0
0xa036:	nop	word ptr cs:[rax + rax]
0xa040:	cmp	r15b, 0x20
0xa044:	je	0xa148
0xa04a:	cmp	r15b, 0x7f
0xa04e:	je	0xa160
0xa054:	cmp	r15b, 0xff
0xa058:	je	0xa180
0xa05e:	call	0x4f00
0xa063:	mov	r8, rax
0xa066:	movzx	eax, r15b
0xa06a:	mov	rsi, qword ptr [r8]
0xa06d:	test	byte ptr [rsi + rax*2], 2
0xa071:	je	0xa120
0xa077:	lea	edx, [r15 + 0x40]
0xa07b:	lea	rsi, [rsp + 5]
0xa080:	mov	rdi, r12
0xa083:	mov	byte ptr [rsp + 5], 0x5e
0xa088:	mov	byte ptr [rsp + 6], dl
0xa08c:	mov	edx, 0x12c
0xa091:	mov	byte ptr [rsp + 7], 0
0xa096:	call	0x47d0
0xa09b:	add	r14, 1
0xa09f:	cmp	byte ptr [r14], 0
0xa0a3:	je	0xa0f0
0xa0a5:	cmp	rbx, r14
0xa0a8:	je	0xa0be
0xa0aa:	mov	edx, 0x12c
0xa0af:	lea	rsi, [rip + 0x1668f]
0xa0b6:	mov	rdi, r12
0xa0b9:	call	0x47d0
0xa0be:	movzx	r15d, byte ptr [r14]
0xa0c2:	cmp	r15b, 0x1b
0xa0c6:	jne	0xa040
0xa0cc:	mov	edx, 0x12c
0xa0d1:	mov	rsi, rbp
0xa0d4:	mov	rdi, r12
0xa0d7:	add	r14, 1
0xa0db:	call	0x47d0
0xa0e0:	cmp	byte ptr [r14], 0
0xa0e4:	jne	0xa0a5
0xa0e6:	nop	word ptr cs:[rax + rax]
0xa0f0:	mov	rax, qword ptr [rsp + 8]
0xa0f5:	sub	rax, qword ptr fs:[0x28]
0xa0fe:	jne	0xa199
0xa104:	add	rsp, 0x18
0xa108:	mov	rax, r12
0xa10b:	pop	rbx
0xa10c:	pop	rbp
0xa10d:	pop	r12
0xa10f:	pop	r13
0xa111:	pop	r14
0xa113:	pop	r15
0xa115:	ret	
0xa116:	nop	word ptr cs:[rax + rax]
0xa120:	lea	rsi, [rsp + 5]
0xa125:	mov	edx, 0x12c
0xa12a:	mov	rdi, r12
0xa12d:	mov	byte ptr [rsp + 5], r15b
0xa132:	mov	byte ptr [rsp + 6], 0
0xa137:	call	0x47d0
0xa13c:	jmp	0xa09b
0xa141:	nop	dword ptr [rax]
0xa148:	mov	edx, 0x12c
0xa14d:	mov	rsi, r13
0xa150:	mov	rdi, r12
0xa153:	call	0x47d0
0xa158:	jmp	0xa09b
0xa15d:	nop	dword ptr [rax]
0xa160:	mov	edx, 0x12c
0xa165:	lea	rsi, [rip + 0x16a8f]
0xa16c:	mov	rdi, r12
0xa16f:	call	0x47d0
0xa174:	jmp	0xa09b
0xa179:	nop	dword ptr [rax]
0xa180:	mov	edx, 0x12c
0xa185:	lea	rsi, [rip + 0x16a79]
0xa18c:	mov	rdi, r12
0xa18f:	call	0x47d0
0xa194:	jmp	0xa09b
0xa199:	call	0x49d0
0xa19e:	nop	
0xa1a0:	endbr64	
0xa1a4:	mov	eax, dword ptr [rip + 0x211ae]
0xa1aa:	mov	r8, rdi
0xa1ad:	mov	edi, dword ptr [rip + 0x207e5]
0xa1b3:	push	r13
0xa1b5:	push	r12
0xa1b7:	xor	r12d, r12d
0xa1ba:	lea	edx, [rax + rsi]
0xa1bd:	push	rbx
0xa1be:	mov	dword ptr [rip + 0x21194], edx
0xa1c4:	cmp	edi, eax
0xa1c6:	jle	0xa21c
0xa1c8:	mov	ecx, dword ptr [rip + 0x21186]
0xa1ce:	cmp	ecx, dword ptr [rip + 0x207c8]
0xa1d4:	jge	0xa21c
0xa1d6:	mov	r12d, edi
0xa1d9:	sub	r12d, eax
0xa1dc:	cmp	edx, edi
0xa1de:	cmovle	r12d, esi
0xa1e2:	imul	edi, ecx
0xa1e5:	mov	rsi, r8
0xa1e8:	movsxd	r13, r12d
0xa1eb:	lea	ebx, [rdi + rax]
0xa1ee:	mov	rdi, qword ptr [rip + 0x21143]
0xa1f5:	mov	rdx, r13
0xa1f8:	movsxd	rbx, ebx
0xa1fb:	add	rdi, rbx
0xa1fe:	call	0x4bb0
0xa203:	add	rbx, qword ptr [rip + 0x21126]
0xa20a:	movzx	esi, byte ptr [rip + 0x21140]
0xa211:	mov	rdx, r13
0xa214:	mov	rdi, rbx
0xa217:	call	0x4a50
0xa21c:	mov	eax, r12d
0xa21f:	pop	rbx
0xa220:	pop	r12
0xa222:	pop	r13
0xa224:	ret	
0xa225:	nop	word ptr cs:[rax + rax]
0xa230:	endbr64	
0xa234:	push	r13
0xa236:	push	r12
0xa238:	xor	r12d, r12d
0xa23b:	push	rbx
0xa23c:	sub	rsp, 0x10
0xa240:	mov	rax, qword ptr fs:[0x28]
0xa249:	mov	qword ptr [rsp + 8], rax
0xa24e:	xor	eax, eax
0xa250:	mov	eax, dword ptr [rip + 0x21102]
0xa256:	mov	byte ptr [rsp + 7], dil
0xa25b:	mov	edi, dword ptr [rip + 0x20737]
0xa261:	lea	edx, [rax + 1]
0xa264:	mov	dword ptr [rip + 0x210ee], edx
0xa26a:	cmp	eax, edi
0xa26c:	jge	0xa2c2
0xa26e:	mov	ecx, dword ptr [rip + 0x210e0]
0xa274:	cmp	ecx, dword ptr [rip + 0x20722]
0xa27a:	jge	0xa2c2
0xa27c:	cmp	edx, edi
0xa27e:	jle	0xa2e0
0xa280:	mov	r12d, edi
0xa283:	sub	r12d, eax
0xa286:	movsxd	r13, r12d
0xa289:	imul	edi, ecx
0xa28c:	lea	rsi, [rsp + 7]
0xa291:	mov	rdx, r13
0xa294:	lea	ebx, [rdi + rax]
0xa297:	mov	rdi, qword ptr [rip + 0x2109a]
0xa29e:	movsxd	rbx, ebx
0xa2a1:	add	rdi, rbx
0xa2a4:	call	0x4bb0
0xa2a9:	add	rbx, qword ptr [rip + 0x21080]
0xa2b0:	movzx	esi, byte ptr [rip + 0x2109a]
0xa2b7:	mov	rdx, r13
0xa2ba:	mov	rdi, rbx
0xa2bd:	call	0x4a50
0xa2c2:	mov	rax, qword ptr [rsp + 8]
0xa2c7:	sub	rax, qword ptr fs:[0x28]
0xa2d0:	jne	0xa2ee
0xa2d2:	add	rsp, 0x10
0xa2d6:	mov	eax, r12d
0xa2d9:	pop	rbx
0xa2da:	pop	r12
0xa2dc:	pop	r13
0xa2de:	ret	
0xa2df:	nop	
0xa2e0:	mov	r13d, 1
0xa2e6:	mov	r12d, 1
0xa2ec:	jmp	0xa289
0xa2ee:	call	0x49d0
0xa2f3:	nop	word ptr cs:[rax + rax]
0xa2fe:	nop	
0xa300:	endbr64	
0xa304:	push	rbp
0xa305:	lea	rdx, [rip - 0x89c]
0xa30c:	push	rbx
0xa30d:	sub	rsp, 8
0xa311:	mov	esi, dword ptr [rip + 0x20685]
0xa317:	mov	rdi, qword ptr [rip + 0x1faca]
0xa31e:	call	0x4820
0xa323:	mov	edx, dword ptr [rip + 0x20bdf]
0xa329:	test	edx, edx
0xa32b:	jle	0xa365
0xa32d:	xor	ebp, ebp
0xa32f:	lea	rbx, [rip + 0x20bea]
0xa336:	jmp	0xa34c
0xa338:	nop	dword ptr [rax + rax]
0xa340:	mov	edx, dword ptr [rip + 0x20bc2]
0xa346:	add	ebp, eax
0xa348:	cmp	edx, ebp
0xa34a:	jle	0xa365
0xa34c:	sub	edx, ebp
0xa34e:	movsxd	rsi, ebp
0xa351:	mov	edi, 1
0xa356:	add	rsi, rbx
0xa359:	movsxd	rdx, edx
0xa35c:	call	0x18da0
0xa361:	test	eax, eax
0xa363:	jns	0xa340
0xa365:	mov	edx, dword ptr [rip + 0x20631]
0xa36b:	xor	esi, esi
0xa36d:	imul	edx, dword ptr [rip + 0x20624]
0xa374:	mov	dword ptr [rip + 0x20b8a], 0
0xa37e:	mov	rdi, qword ptr [rip + 0x20fb3]
0xa385:	movsxd	rdx, edx
0xa388:	call	0x4a50
0xa38d:	mov	edx, dword ptr [rip + 0x20609]
0xa393:	imul	edx, dword ptr [rip + 0x205fe]
0xa39a:	xor	esi, esi
0xa39c:	mov	rdi, qword ptr [rip + 0x20f8d]
0xa3a3:	movsxd	rdx, edx
0xa3a6:	call	0x4a50
0xa3ab:	mov	edx, dword ptr [rip + 0x205eb]
0xa3b1:	imul	edx, dword ptr [rip + 0x205e0]
0xa3b8:	xor	esi, esi
0xa3ba:	mov	rdi, qword ptr [rip + 0x20f67]
0xa3c1:	movsxd	rdx, edx
0xa3c4:	call	0x4a50
0xa3c9:	mov	edx, dword ptr [rip + 0x205cd]
0xa3cf:	imul	edx, dword ptr [rip + 0x205c2]
0xa3d6:	xor	esi, esi
0xa3d8:	mov	rdi, qword ptr [rip + 0x20f41]
0xa3df:	movsxd	rdx, edx
0xa3e2:	call	0x4a50
0xa3e7:	mov	dword ptr [rip + 0x20f67], 0
0xa3f1:	mov	dword ptr [rip + 0x20f59], 0
0xa3fb:	add	rsp, 8
0xa3ff:	pop	rbx
0xa400:	pop	rbp
0xa401:	ret	
0xa402:	nop	word ptr cs:[rax + rax]
0xa40d:	nop	dword ptr [rax]
0xa410:	endbr64	
0xa414:	sub	rsp, 8
0xa418:	mov	edx, dword ptr [rip + 0x2057e]
0xa41e:	imul	edx, dword ptr [rip + 0x20573]
0xa425:	mov	esi, 0x20
0xa42a:	mov	rdi, qword ptr [rip + 0x20f07]
0xa431:	movsxd	rdx, edx
0xa434:	call	0x4a50
0xa439:	mov	edx, dword ptr [rip + 0x2055d]
0xa43f:	imul	edx, dword ptr [rip + 0x20552]
0xa446:	movzx	esi, byte ptr [rip + 0x20f04]
0xa44d:	mov	rdi, qword ptr [rip + 0x20edc]
0xa454:	movsxd	rdx, edx
0xa457:	call	0x4a50
0xa45c:	mov	edx, dword ptr [rip + 0x2053a]
0xa462:	imul	edx, dword ptr [rip + 0x2052f]
0xa469:	xor	esi, esi
0xa46b:	mov	rdi, qword ptr [rip + 0x20eb6]
0xa472:	add	rsp, 8
0xa476:	movsxd	rdx, edx
0xa479:	jmp	0x4a50
0xa47e:	nop	
0xa480:	endbr64	
0xa484:	mov	edx, dword ptr [rip + 0x20512]
0xa48a:	imul	edx, dword ptr [rip + 0x20507]
0xa491:	xor	esi, esi
0xa493:	mov	rdi, qword ptr [rip + 0x20e8e]
0xa49a:	movsxd	rdx, edx
0xa49d:	jmp	0x4a50
0xa4a2:	nop	word ptr cs:[rax + rax]
0xa4ad:	nop	dword ptr [rax]
0xa4b0:	endbr64	
0xa4b4:	mov	dword ptr [rip + 0x20e9a], edi
0xa4ba:	mov	dword ptr [rip + 0x20e98], esi
0xa4c0:	ret	
0xa4c1:	nop	word ptr cs:[rax + rax]
0xa4cc:	nop	dword ptr [rax]
0xa4d0:	endbr64	
0xa4d4:	mov	eax, dword ptr [rip + 0x20e7a]
0xa4da:	mov	dword ptr [rdi], eax
0xa4dc:	mov	eax, dword ptr [rip + 0x20e76]
0xa4e2:	mov	dword ptr [rsi], eax
0xa4e4:	ret	
0xa4e5:	nop	word ptr cs:[rax + rax]
0xa4f0:	endbr64	
0xa4f4:	movzx	eax, byte ptr [rip + 0x20e56]
0xa4fb:	and	edi, 7
0xa4fe:	and	eax, 0xfffffff8
0xa501:	or	eax, edi
0xa503:	mov	byte ptr [rip + 0x20e48], al
0xa509:	ret	
0xa50a:	nop	word ptr [rax + rax]
0xa510:	endbr64	
0xa514:	movzx	eax, byte ptr [rip + 0x20e36]
0xa51b:	shl	edi, 3
0xa51e:	and	edi, 0x38
0xa521:	and	eax, 0xffffffc7
0xa524:	or	eax, edi
0xa526:	mov	byte ptr [rip + 0x20e25], al
0xa52c:	ret	
0xa52d:	nop	dword ptr [rax]
0xa530:	endbr64	
0xa534:	movzx	eax, byte ptr [rip + 0x20e16]
0xa53b:	shl	edi, 6
0xa53e:	and	edi, 0x40
0xa541:	and	eax, 0xffffffbf
0xa544:	or	eax, edi
0xa546:	mov	byte ptr [rip + 0x20e05], al
0xa54c:	ret	
0xa54d:	nop	dword ptr [rax]
0xa550:	endbr64	
0xa554:	movzx	eax, byte ptr [rip + 0x20df6]
0xa55b:	shl	edi, 7
0xa55e:	and	eax, 0x7f
0xa561:	or	eax, edi
0xa563:	mov	byte ptr [rip + 0x20de8], al
0xa569:	ret	
0xa56a:	nop	word ptr [rax + rax]
0xa570:	endbr64	
0xa574:	shl	edi, 6
0xa577:	and	esi, 7
0xa57a:	shl	edx, 3
0xa57d:	mov	eax, edi
0xa57f:	movzx	edi, byte ptr [rip + 0x20dcb]
0xa586:	and	edx, 0x38
0xa589:	and	eax, 0x40
0xa58c:	and	edi, 0xffffffb8
0xa58f:	or	edi, eax
0xa591:	or	edi, esi
0xa593:	and	edi, 0xffffffc7
0xa596:	or	edi, edx
0xa598:	mov	byte ptr [rip + 0x20db2], dil
0xa59f:	ret	
0xa5a0:	endbr64	
0xa5a4:	push	rbp
0xa5a5:	push	rbx
0xa5a6:	sub	rsp, 8
0xa5aa:	movsxd	rax, dword ptr [rip + 0x20957]
0xa5b1:	cmp	eax, 0x400
0xa5b6:	je	0xa610
0xa5b8:	lea	edx, [rax + 1]
0xa5bb:	lea	rbx, [rip + 0x2095e]
0xa5c2:	mov	dword ptr [rip + 0x20940], edx
0xa5c8:	mov	byte ptr [rbx + rax], 7
0xa5cc:	test	edx, edx
0xa5ce:	jle	0xa5fd
0xa5d0:	xor	ebp, ebp
0xa5d2:	jmp	0xa5e4
0xa5d4:	nop	dword ptr [rax]
0xa5d8:	mov	edx, dword ptr [rip + 0x2092a]
0xa5de:	add	ebp, eax
0xa5e0:	cmp	edx, ebp
0xa5e2:	jle	0xa5fd
0xa5e4:	sub	edx, ebp
0xa5e6:	movsxd	rsi, ebp
0xa5e9:	mov	edi, 1
0xa5ee:	add	rsi, rbx
0xa5f1:	movsxd	rdx, edx
0xa5f4:	call	0x18da0
0xa5f9:	test	eax, eax
0xa5fb:	jns	0xa5d8
0xa5fd:	mov	dword ptr [rip + 0x20901], 0
0xa607:	add	rsp, 8
0xa60b:	pop	rbx
0xa60c:	pop	rbp
0xa60d:	ret	
0xa60e:	nop	
0xa610:	xor	ebp, ebp
0xa612:	lea	rbx, [rip + 0x20907]
0xa619:	jmp	0xa62c
0xa61b:	nop	dword ptr [rax + rax]
0xa620:	add	ebp, eax
0xa622:	mov	eax, dword ptr [rip + 0x208e0]
0xa628:	cmp	eax, ebp
0xa62a:	jle	0xa645
0xa62c:	sub	eax, ebp
0xa62e:	movsxd	rsi, ebp
0xa631:	mov	edi, 1
0xa636:	add	rsi, rbx
0xa639:	movsxd	rdx, eax
0xa63c:	call	0x18da0
0xa641:	test	eax, eax
0xa643:	jns	0xa620
0xa645:	mov	dword ptr [rip + 0x208b9], 1
0xa64f:	mov	edx, 1
0xa654:	mov	byte ptr [rip + 0x208c5], 7
0xa65b:	jmp	0xa5d0
0xa660:	endbr64	
0xa664:	test	edi, edi
0xa666:	je	0xa688
0xa668:	mov	rdi, qword ptr [rip + 0x1f759]
0xa66f:	test	rdi, rdi
0xa672:	je	0xa694
0xa674:	lea	rdx, [rip - 0xc0b]
0xa67b:	mov	esi, 1
0xa680:	jmp	0x4820
0xa685:	nop	dword ptr [rax]
0xa688:	mov	rdi, qword ptr [rip + 0x1f719]
0xa68f:	test	rdi, rdi
0xa692:	jne	0xa674
0xa694:	ret	
0xa695:	nop	word ptr cs:[rax + rax]
0xa6a0:	endbr64	
0xa6a4:	movzx	eax, byte ptr [rip + 0x20ca6]
0xa6ab:	mov	byte ptr [rdi], al
0xa6ad:	ret	
0xa6ae:	nop	
0xa6b0:	endbr64	
0xa6b4:	movzx	eax, byte ptr [rdi]
0xa6b7:	mov	byte ptr [rip + 0x20c94], al
0xa6bd:	ret	
0xa6be:	nop	
0xa6c0:	endbr64	
0xa6c4:	push	rbp
0xa6c5:	push	rbx
0xa6c6:	sub	rsp, 8
0xa6ca:	cmp	dword ptr [rip + 0x1f58f], 1
0xa6d1:	je	0xa720
0xa6d3:	mov	rdi, qword ptr [rip + 0x1f66e]
0xa6da:	test	rdi, rdi
0xa6dd:	je	0xa6f0
0xa6df:	lea	rdx, [rip - 0xc76]
0xa6e6:	mov	esi, 1
0xa6eb:	call	0x4820
0xa6f0:	mov	dword ptr [rip + 0x20c52], 0
0xa6fa:	mov	dword ptr [rip + 0x20c44], 0
0xa704:	mov	dword ptr [rip + 0x20c36], 0
0xa70e:	mov	dword ptr [rip + 0x20c28], 0
0xa718:	add	rsp, 8
0xa71c:	pop	rbx
0xa71d:	pop	rbp
0xa71e:	ret	
0xa71f:	nop	
0xa720:	mov	edx, dword ptr [rip + 0x207e2]
0xa726:	cmp	edx, 0x3fb
0xa72c:	jg	0xa750
0xa72e:	movsxd	rax, edx
0xa731:	lea	rcx, [rip + 0x207e8]
0xa738:	add	edx, 4
0xa73b:	add	rax, rcx
0xa73e:	mov	ecx, dword ptr [rip + 0x1f5db]
0xa744:	mov	dword ptr [rip + 0x207be], edx
0xa74a:	mov	dword ptr [rax], ecx
0xa74c:	jmp	0xa6d3
0xa74e:	nop	
0xa750:	xor	ebx, ebx
0xa752:	lea	rbp, [rip + 0x207c7]
0xa759:	jmp	0xa76c
0xa75b:	nop	dword ptr [rax + rax]
0xa760:	mov	edx, dword ptr [rip + 0x207a2]
0xa766:	add	ebx, eax
0xa768:	cmp	edx, ebx
0xa76a:	jle	0xa785
0xa76c:	sub	edx, ebx
0xa76e:	movsxd	rsi, ebx
0xa771:	mov	edi, 1
0xa776:	add	rsi, rbp
0xa779:	movsxd	rdx, edx
0xa77c:	call	0x18da0
0xa781:	test	eax, eax
0xa783:	jns	0xa760
0xa785:	mov	edx, 4
0xa78a:	lea	rax, [rip + 0x2078f]
0xa791:	jmp	0xa73e
0xa793:	nop	word ptr cs:[rax + rax]
0xa79e:	nop	
0xa7a0:	push	r12
0xa7a2:	mov	r12d, edi
0xa7a5:	push	rbp
0xa7a6:	mov	ebp, esi
0xa7a8:	sub	rsp, 8
0xa7ac:	mov	eax, dword ptr [rip + 0x1f71e]
0xa7b2:	test	eax, eax
0xa7b4:	je	0xa800
0xa7b6:	mov	eax, ebp
0xa7b8:	mov	esi, dword ptr [rip + 0x201da]
0xa7be:	mov	edx, dword ptr [rip + 0x201d8]
0xa7c4:	or	eax, r12d
0xa7c7:	mov	rdi, qword ptr [rip + 0x1f63a]
0xa7ce:	js	0xa7d4
0xa7d0:	cmp	ebp, esi
0xa7d2:	jl	0xa810
0xa7d4:	sub	edx, 1
0xa7d7:	sub	esi, 1
0xa7da:	call	0x4960
0xa7df:	add	rsp, 8
0xa7e3:	mov	esi, 1
0xa7e8:	lea	rdx, [rip - 0xd7f]
0xa7ef:	pop	rbp
0xa7f0:	mov	rdi, rax
0xa7f3:	pop	r12
0xa7f5:	jmp	0x4820
0xa7fa:	nop	word ptr [rax + rax]
0xa800:	xor	eax, eax
0xa802:	call	0xa6c0
0xa807:	jmp	0xa7b6
0xa809:	nop	dword ptr [rax]
0xa810:	cmp	r12d, edx
0xa813:	jge	0xa7d4
0xa815:	mov	edx, r12d
0xa818:	mov	esi, ebp
0xa81a:	jmp	0xa7da
0xa81c:	nop	dword ptr [rax]
0xa820:	endbr64	
0xa824:	push	r15
0xa826:	push	r14
0xa828:	push	r13
0xa82a:	push	r12
0xa82c:	push	rbp
0xa82d:	push	rbx
0xa82e:	sub	rsp, 0x38
0xa832:	mov	ebx, dword ptr [rip + 0x20160]
0xa838:	imul	ebx, dword ptr [rip + 0x2015d]
0xa83f:	mov	rax, qword ptr fs:[0x28]
0xa848:	mov	qword ptr [rsp + 0x28], rax
0xa84d:	xor	eax, eax
0xa84f:	mov	rdi, qword ptr [rip + 0x1f552]
0xa856:	cmp	dword ptr [rip + 0x20aff], 1
0xa85d:	sbb	ebx, 0
0xa860:	test	rdi, rdi
0xa863:	je	0xa876
0xa865:	lea	rdx, [rip - 0xdfc]
0xa86c:	mov	esi, 1
0xa871:	call	0x4820
0xa876:	test	ebx, ebx
0xa878:	jle	0xab70
0xa87e:	movsxd	rax, ebx
0xa881:	mov	dword ptr [rsp + 4], 0xffffffff
0xa889:	xor	ebp, ebp
0xa88b:	mov	r13d, 0xffffffff
0xa891:	mov	qword ptr [rsp + 8], rax
0xa896:	lea	r12, [rip + 0x20683]
0xa89d:	jmp	0xa9ce
0xa8a2:	nop	word ptr [rax + rax]
0xa8a8:	cdq	
0xa8a9:	idiv	dword ptr [rip + 0x200e9]
0xa8af:	mov	r14d, edx
0xa8b2:	cmp	edx, r13d
0xa8b5:	jne	0xaa20
0xa8bb:	cmp	eax, dword ptr [rsp + 4]
0xa8bf:	jne	0xaa20
0xa8c5:	mov	rax, qword ptr [rip + 0x20a64]
0xa8cc:	movzx	ebx, byte ptr [rax + rbp]
0xa8d0:	mov	edi, ebx
0xa8d2:	mov	r14d, ebx
0xa8d5:	sar	edi, 6
0xa8d8:	and	r14d, 7
0xa8dc:	and	edi, 1
0xa8df:	call	0x9870
0xa8e4:	mov	eax, ebx
0xa8e6:	and	eax, 7
0xa8e9:	cmp	dword ptr [rip + 0x20a5c], 1
0xa8f0:	je	0xaa40
0xa8f6:	cmp	dword ptr [rip + 0x1f363], 1
0xa8fd:	je	0xaa5f
0xa903:	xor	edi, edi
0xa905:	cmp	eax, 7
0xa908:	setne	dil
0xa90c:	call	0x9790
0xa911:	movzx	eax, byte ptr [rip + 0x20a38]
0xa918:	mov	dword ptr [rip + 0x20a2a], 1
0xa922:	and	eax, 0xfffffff8
0xa925:	or	eax, r14d
0xa928:	mov	byte ptr [rip + 0x20a22], al
0xa92e:	sar	ebx, 3
0xa931:	and	ebx, 7
0xa934:	cmp	dword ptr [rip + 0x20a0d], 1
0xa93b:	je	0xaab0
0xa941:	cmp	dword ptr [rip + 0x1f318], 1
0xa948:	je	0xaad8
0xa94e:	xor	edi, edi
0xa950:	test	ebx, ebx
0xa952:	setne	dil
0xa956:	call	0x9790
0xa95b:	mov	edx, dword ptr [rip + 0x205a7]
0xa961:	movzx	eax, byte ptr [rip + 0x209e8]
0xa968:	shl	ebx, 3
0xa96b:	mov	dword ptr [rip + 0x209d3], 1
0xa975:	and	eax, 0xffffffc7
0xa978:	or	ebx, eax
0xa97a:	mov	byte ptr [rip + 0x209d0], bl
0xa980:	mov	rax, qword ptr [rip + 0x209b1]
0xa987:	movzx	ebx, byte ptr [rax + rbp]
0xa98b:	cmp	edx, 0x400
0xa991:	je	0xab30
0xa997:	lea	eax, [rdx + 1]
0xa99a:	movsxd	rdx, edx
0xa99d:	add	r13d, 1
0xa9a1:	cmp	dword ptr [rip + 0x1fff0], r13d
0xa9a8:	mov	dword ptr [rip + 0x2055a], eax
0xa9ae:	mov	byte ptr [r12 + rdx], bl
0xa9b2:	jne	0xa9bf
0xa9b4:	mov	dword ptr [rsp + 4], 0xffffffff
0xa9bc:	xor	r13d, r13d
0xa9bf:	add	rbp, 1
0xa9c3:	cmp	rbp, qword ptr [rsp + 8]
0xa9c8:	je	0xab70
0xa9ce:	mov	rdx, qword ptr [rip + 0x20953]
0xa9d5:	mov	rcx, qword ptr [rip + 0x2095c]
0xa9dc:	mov	eax, ebp
0xa9de:	movzx	ebx, byte ptr [rdx + rbp]
0xa9e2:	cmp	byte ptr [rcx + rbp], bl
0xa9e5:	jne	0xa8a8
0xa9eb:	mov	rdx, qword ptr [rip + 0x2092e]
0xa9f2:	mov	rcx, qword ptr [rip + 0x20937]
0xa9f9:	movzx	edi, byte ptr [rdx + rbp]
0xa9fd:	cmp	byte ptr [rcx + rbp], dil
0xaa01:	je	0xa9bf
0xaa03:	cdq	
0xaa04:	idiv	dword ptr [rip + 0x1ff8e]
0xaa0a:	mov	r14d, edx
0xaa0d:	cmp	edx, r13d
0xaa10:	je	0xa8bb
0xaa16:	nop	word ptr cs:[rax + rax]
0xaa20:	mov	esi, r14d
0xaa23:	mov	edi, eax
0xaa25:	mov	dword ptr [rsp + 4], eax
0xaa29:	mov	r13d, r14d
0xaa2c:	call	0xa7a0
0xaa31:	jmp	0xa8c5
0xaa36:	nop	word ptr cs:[rax + rax]
0xaa40:	movzx	edx, byte ptr [rip + 0x20909]
0xaa47:	and	edx, 7
0xaa4a:	cmp	eax, edx
0xaa4c:	je	0xa92e
0xaa52:	cmp	dword ptr [rip + 0x1f207], 1
0xaa59:	jne	0xa903
0xaa5f:	mov	eax, dword ptr [rip + 0x164b4]
0xaa65:	mov	edx, dword ptr [rip + 0x2049d]
0xaa6b:	mov	dword ptr [rsp + 0x10], eax
0xaa6f:	movzx	eax, byte ptr [rip + 0x164a7]
0xaa76:	mov	byte ptr [rsp + 0x14], al
0xaa7a:	lea	eax, [r14 + 0x30]
0xaa7e:	mov	byte ptr [rsp + 0x13], al
0xaa82:	cmp	edx, 0x3fa
0xaa88:	jg	0xac18
0xaa8e:	movsxd	rax, edx
0xaa91:	add	edx, 5
0xaa94:	add	rax, r12
0xaa97:	mov	ecx, dword ptr [rsp + 0x10]
0xaa9b:	mov	dword ptr [rip + 0x20467], edx
0xaaa1:	mov	dword ptr [rax], ecx
0xaaa3:	movzx	ecx, byte ptr [rsp + 0x14]
0xaaa8:	mov	byte ptr [rax + 4], cl
0xaaab:	jmp	0xa911
0xaab0:	movzx	eax, byte ptr [rip + 0x20899]
0xaab7:	mov	edx, dword ptr [rip + 0x2044b]
0xaabd:	sar	eax, 3
0xaac0:	and	eax, 7
0xaac3:	cmp	ebx, eax
0xaac5:	je	0xa980
0xaacb:	cmp	dword ptr [rip + 0x1f18e], 1
0xaad2:	jne	0xa94e
0xaad8:	mov	eax, dword ptr [rip + 0x16436]
0xaade:	mov	edx, dword ptr [rip + 0x20424]
0xaae4:	mov	dword ptr [rsp + 0x10], eax
0xaae8:	movzx	eax, byte ptr [rip + 0x16429]
0xaaef:	mov	byte ptr [rsp + 0x14], al
0xaaf3:	lea	eax, [rbx + 0x30]
0xaaf6:	mov	byte ptr [rsp + 0x13], al
0xaafa:	cmp	edx, 0x3fa
0xab00:	jg	0xac58
0xab06:	movsxd	rax, edx
0xab09:	add	edx, 5
0xab0c:	add	rax, r12
0xab0f:	mov	ecx, dword ptr [rsp + 0x10]
0xab13:	mov	dword ptr [rip + 0x203ef], edx
0xab19:	mov	dword ptr [rax], ecx
0xab1b:	movzx	ecx, byte ptr [rsp + 0x14]
0xab20:	mov	byte ptr [rax + 4], cl
0xab23:	jmp	0xa961
0xab28:	nop	dword ptr [rax + rax]
0xab30:	xor	r14d, r14d
0xab33:	jmp	0xab46
0xab35:	nop	dword ptr [rax]
0xab38:	mov	edx, dword ptr [rip + 0x203ca]
0xab3e:	add	r14d, eax
0xab41:	cmp	edx, r14d
0xab44:	jle	0xab60
0xab46:	sub	edx, r14d
0xab49:	movsxd	rsi, r14d
0xab4c:	mov	edi, 1
0xab51:	add	rsi, r12
0xab54:	movsxd	rdx, edx
0xab57:	call	0x18da0
0xab5c:	test	eax, eax
0xab5e:	jns	0xab38
0xab60:	mov	eax, 1
0xab65:	xor	edx, edx
0xab67:	jmp	0xa99a
0xab6c:	nop	dword ptr [rax]
0xab70:	mov	edi, dword ptr [rip + 0x207de]
0xab76:	mov	esi, dword ptr [rip + 0x207dc]
0xab7c:	call	0xa7a0
0xab81:	mov	rdi, qword ptr [rip + 0x1f240]
0xab88:	test	rdi, rdi
0xab8b:	je	0xab9e
0xab8d:	lea	rdx, [rip - 0x1124]
0xab94:	mov	esi, 1
0xab99:	call	0x4820
0xab9e:	mov	edx, dword ptr [rip + 0x20364]
0xaba4:	test	edx, edx
0xaba6:	jne	0xac98
0xabac:	mov	edx, dword ptr [rip + 0x1fde6]
0xabb2:	imul	edx, dword ptr [rip + 0x1fde3]
0xabb9:	mov	rsi, qword ptr [rip + 0x20778]
0xabc0:	mov	rdi, qword ptr [rip + 0x20761]
0xabc7:	movsxd	rdx, edx
0xabca:	call	0x4bb0
0xabcf:	mov	edx, dword ptr [rip + 0x1fdc3]
0xabd5:	imul	edx, dword ptr [rip + 0x1fdc0]
0xabdc:	mov	rdi, qword ptr [rip + 0x2073d]
0xabe3:	mov	rsi, qword ptr [rip + 0x20746]
0xabea:	movsxd	rdx, edx
0xabed:	mov	rax, qword ptr [rsp + 0x28]
0xabf2:	sub	rax, qword ptr fs:[0x28]
0xabfb:	jne	0xace4
0xac01:	add	rsp, 0x38
0xac05:	pop	rbx
0xac06:	pop	rbp
0xac07:	pop	r12
0xac09:	pop	r13
0xac0b:	pop	r14
0xac0d:	pop	r15
0xac0f:	jmp	0x4bb0
0xac14:	nop	dword ptr [rax]
0xac18:	xor	r15d, r15d
0xac1b:	jmp	0xac2e
0xac1d:	nop	dword ptr [rax]
0xac20:	mov	edx, dword ptr [rip + 0x202e2]
0xac26:	add	r15d, eax
0xac29:	cmp	edx, r15d
0xac2c:	jle	0xac48
0xac2e:	sub	edx, r15d
0xac31:	movsxd	rsi, r15d
0xac34:	mov	edi, 1
0xac39:	add	rsi, r12
0xac3c:	movsxd	rdx, edx
0xac3f:	call	0x18da0
0xac44:	test	eax, eax
0xac46:	jns	0xac20
0xac48:	mov	edx, 5
0xac4d:	mov	rax, r12
0xac50:	jmp	0xaa97
0xac55:	nop	dword ptr [rax]
0xac58:	xor	r14d, r14d
0xac5b:	jmp	0xac6e
0xac5d:	nop	dword ptr [rax]
0xac60:	mov	edx, dword ptr [rip + 0x202a2]
0xac66:	add	r14d, eax
0xac69:	cmp	edx, r14d
0xac6c:	jle	0xac88
0xac6e:	sub	edx, r14d
0xac71:	movsxd	rsi, r14d
0xac74:	mov	edi, 1
0xac79:	add	rsi, r12
0xac7c:	movsxd	rdx, edx
0xac7f:	call	0x18da0
0xac84:	test	eax, eax
0xac86:	jns	0xac60
0xac88:	mov	edx, 5
0xac8d:	mov	rax, r12
0xac90:	jmp	0xab0f
0xac95:	nop	dword ptr [rax]
0xac98:	mov	ebx, 0
0xac9d:	lea	rbp, [rip + 0x2027c]
0xaca4:	jg	0xacbc
0xaca6:	jmp	0xacd5
0xaca8:	nop	dword ptr [rax + rax]
0xacb0:	mov	edx, dword ptr [rip + 0x20252]
0xacb6:	add	ebx, eax
0xacb8:	cmp	edx, ebx
0xacba:	jle	0xacd5
0xacbc:	sub	edx, ebx
0xacbe:	movsxd	rsi, ebx
0xacc1:	mov	edi, 1
0xacc6:	add	rsi, rbp
0xacc9:	movsxd	rdx, edx
0xaccc:	call	0x18da0
0xacd1:	test	eax, eax
0xacd3:	jns	0xacb0
0xacd5:	mov	dword ptr [rip + 0x20229], 0
0xacdf:	jmp	0xabac
0xace4:	call	0x49d0
0xace9:	nop	dword ptr [rax]
0xacf0:	endbr64	
0xacf4:	push	r12
0xacf6:	xor	eax, eax
0xacf8:	mov	r12, rdi
0xacfb:	push	rbx
0xacfc:	mov	ebx, esi
0xacfe:	sub	rsp, 8
0xad02:	call	0xa820
0xad07:	mov	rdx, qword ptr [rip + 0x1fc1a]
0xad0e:	test	rdx, rdx
0xad11:	je	0xad17
0xad13:	xor	eax, eax
0xad15:	call	rdx
0xad17:	movsxd	rdx, ebx
0xad1a:	mov	rsi, r12
0xad1d:	xor	edi, edi
0xad1f:	call	0x18d30
0xad24:	mov	rdx, qword ptr [rip + 0x1fbf5]
0xad2b:	mov	r12d, eax
0xad2e:	test	rdx, rdx
0xad31:	je	0xad37
0xad33:	xor	eax, eax
0xad35:	call	rdx
0xad37:	add	rsp, 8
0xad3b:	mov	eax, r12d
0xad3e:	pop	rbx
0xad3f:	pop	r12
0xad41:	ret	
0xad42:	nop	word ptr cs:[rax + rax]
0xad4d:	nop	dword ptr [rax]
0xad50:	push	r12
0xad52:	mov	edi, 1
0xad57:	push	rbp
0xad58:	lea	rbp, [rip + 0x1fda1]
0xad5f:	push	rbx
0xad60:	sub	rsp, 0x50
0xad64:	mov	rax, qword ptr fs:[0x28]
0xad6d:	mov	qword ptr [rsp + 0x48], rax
0xad72:	xor	eax, eax
0xad74:	mov	r12, rsp
0xad77:	mov	rsi, r12
0xad7a:	call	0x4d60
0xad7f:	mov	edx, 0xff
0xad84:	mov	esi, 1
0xad89:	mov	edi, 1
0xad8e:	mov	word ptr [rsp + 0x11], dx
0xad93:	mov	rdx, r12
0xad96:	call	0x4d70
0xad9b:	mov	edi, 1
0xada0:	mov	dword ptr [rip + 0x1ef7a], 0xffffffff
0xadaa:	call	0x18b70
0xadaf:	mov	dword ptr [rip + 0x20147], 0
0xadb9:	nop	dword ptr [rax]
0xadc0:	xor	eax, eax
0xadc2:	call	0xa820
0xadc7:	mov	rdx, qword ptr [rip + 0x1fb5a]
0xadce:	test	rdx, rdx
0xadd1:	je	0xadd7
0xadd3:	xor	eax, eax
0xadd5:	call	rdx
0xadd7:	mov	edx, 0x400
0xaddc:	mov	rsi, rbp
0xaddf:	xor	edi, edi
0xade1:	call	0x18d30
0xade6:	mov	rdx, qword ptr [rip + 0x1fb33]
0xaded:	mov	ebx, eax
0xadef:	test	rdx, rdx
0xadf2:	je	0xadf8
0xadf4:	xor	eax, eax
0xadf6:	call	rdx
0xadf8:	mov	dword ptr [rip + 0x20106], ebx
0xadfe:	test	ebx, ebx
0xae00:	js	0xadc0
0xae02:	xor	edi, edi
0xae04:	call	0x18b70
0xae09:	mov	rsi, r12
0xae0c:	mov	edi, 1
0xae11:	call	0x4d60
0xae16:	mov	eax, 7
0xae1b:	mov	rdx, r12
0xae1e:	mov	esi, 1
0xae23:	mov	edi, 1
0xae28:	mov	word ptr [rsp + 0x11], ax
0xae2d:	call	0x4d70
0xae32:	mov	eax, dword ptr [rip + 0x200cc]
0xae38:	mov	dword ptr [rip + 0x1eee2], 7
0xae42:	test	eax, eax
0xae44:	je	0xae9f
0xae46:	movsxd	rsi, dword ptr [rip + 0x200b3]
0xae4d:	movsx	r8d, byte ptr [rbp + rsi]
0xae53:	mov	rdx, rsi
0xae56:	mov	ecx, r8d
0xae59:	test	r8b, r8b
0xae5c:	js	0xae90
0xae5e:	sub	eax, 1
0xae61:	add	edx, 1
0xae64:	mov	dword ptr [rip + 0x2009a], eax
0xae6a:	mov	dword ptr [rip + 0x20090], edx
0xae70:	mov	rax, qword ptr [rsp + 0x48]
0xae75:	sub	rax, qword ptr fs:[0x28]
0xae7e:	jne	0xaea7
0xae80:	add	rsp, 0x50
0xae84:	mov	eax, r8d
0xae87:	pop	rbx
0xae88:	pop	rbp
0xae89:	pop	r12
0xae8b:	ret	
0xae8c:	nop	dword ptr [rax]
0xae90:	and	ecx, 0x7f
0xae93:	mov	r8d, 0x1b
0xae99:	mov	byte ptr [rbp + rsi], cl
0xae9d:	jmp	0xae70
0xae9f:	mov	r8d, 0xffffffff
0xaea5:	jmp	0xae70
0xaea7:	call	0x49d0
0xaeac:	nop	dword ptr [rax]
0xaeb0:	endbr64	
0xaeb4:	xor	eax, eax
0xaeb6:	sub	rsp, 8
0xaeba:	call	0x18ab0
0xaebf:	mov	eax, dword ptr [rip + 0x2003f]
0xaec5:	test	eax, eax
0xaec7:	jne	0xaed8
0xaec9:	xor	eax, eax
0xaecb:	add	rsp, 8
0xaecf:	jmp	0xad50
0xaed4:	nop	dword ptr [rax]
0xaed8:	movsxd	rsi, dword ptr [rip + 0x20021]
0xaedf:	lea	rdi, [rip + 0x1fc1a]
0xaee6:	movsx	r8d, byte ptr [rdi + rsi]
0xaeeb:	mov	rdx, rsi
0xaeee:	mov	ecx, r8d
0xaef1:	test	r8b, r8b
0xaef4:	js	0xaf10
0xaef6:	sub	eax, 1
0xaef9:	add	edx, 1
0xaefc:	mov	dword ptr [rip + 0x20002], eax
0xaf02:	mov	dword ptr [rip + 0x1fff8], edx
0xaf08:	mov	eax, r8d
0xaf0b:	add	rsp, 8
0xaf0f:	ret	
0xaf10:	and	ecx, 0x7f
0xaf13:	mov	r8d, 0x1b
0xaf19:	mov	byte ptr [rdi + rsi], cl
0xaf1c:	jmp	0xaf08
0xaf1e:	nop	
0xaf20:	endbr64	
0xaf24:	push	r13
0xaf26:	mov	r13, rsi
0xaf29:	push	r12
0xaf2b:	mov	r12, rdx
0xaf2e:	push	rbp
0xaf2f:	mov	rbp, rdi
0xaf32:	mov	edi, 0x18
0xaf37:	push	rbx
0xaf38:	sub	rsp, 8
0xaf3c:	call	0x1d670
0xaf41:	mov	rdi, r13
0xaf44:	mov	rbx, rax
0xaf47:	call	0x1d7a0
0xaf4c:	mov	qword ptr [rbx + 0x10], r12
0xaf50:	mov	qword ptr [rbx], rax
0xaf53:	mov	rax, qword ptr [rbp]
0xaf57:	mov	qword ptr [rbx + 8], rax
0xaf5b:	mov	qword ptr [rbp], rbx
0xaf5f:	add	rsp, 8
0xaf63:	pop	rbx
0xaf64:	pop	rbp
0xaf65:	pop	r12
0xaf67:	pop	r13
0xaf69:	ret	
0xaf6a:	nop	word ptr [rax + rax]
0xaf70:	endbr64	
0xaf74:	cmp	byte ptr [rdi], 0
0xaf77:	je	0xb030
0xaf7d:	push	r13
0xaf7f:	push	r12
0xaf81:	mov	r12, rsi
0xaf84:	push	rbp
0xaf85:	mov	rbp, rdi
0xaf88:	push	rbx
0xaf89:	sub	rsp, 8
0xaf8d:	mov	r13, qword ptr [rip + 0x1fa0c]
0xaf94:	test	r13, r13
0xaf97:	je	0xb010
0xaf99:	mov	rbx, qword ptr [r13]
0xaf9d:	mov	rsi, qword ptr [rbx]
0xafa0:	call	0x4b30
0xafa5:	test	eax, eax
0xafa7:	jle	0xb010
0xafa9:	nop	dword ptr [rax]
0xafb0:	lea	r13, [rbx + 8]
0xafb4:	mov	rbx, qword ptr [rbx + 8]
0xafb8:	mov	qword ptr [rip + 0x1f9e1], r13
0xafbf:	test	rbx, rbx
0xafc2:	je	0xafd3
0xafc4:	mov	rsi, qword ptr [rbx]
0xafc7:	mov	rdi, rbp
0xafca:	call	0x4b30
0xafcf:	test	eax, eax
0xafd1:	jg	0xafb0
0xafd3:	mov	edi, 0x18
0xafd8:	call	0x1d670
0xafdd:	mov	rdi, rbp
0xafe0:	mov	rbx, rax
0xafe3:	call	0x1d7a0
0xafe8:	mov	qword ptr [rbx + 0x10], r12
0xafec:	mov	qword ptr [rbx], rax
0xafef:	mov	rax, qword ptr [r13]
0xaff3:	mov	qword ptr [rbx + 8], rax
0xaff7:	mov	qword ptr [r13], rbx
0xaffb:	add	rsp, 8
0xafff:	pop	rbx
0xb000:	pop	rbp
0xb001:	pop	r12
0xb003:	pop	r13
0xb005:	ret	
0xb006:	nop	word ptr cs:[rax + rax]
0xb010:	mov	rbx, qword ptr [rip + 0x1f969]
0xb017:	lea	r13, [rip + 0x1f962]
0xb01e:	mov	qword ptr [rip + 0x1f97b], r13
0xb025:	test	rbx, rbx
0xb028:	jne	0xafc4
0xb02a:	jmp	0xafd3
0xb02c:	nop	dword ptr [rax]
0xb030:	ret	
0xb031:	nop	word ptr cs:[rax + rax]
0xb03c:	nop	dword ptr [rax]
0xb040:	endbr64	
0xb044:	mov	rax, qword ptr [rip + 0x1f935]
0xb04b:	mov	qword ptr [rip + 0x1f926], rax
0xb052:	ret	
0xb053:	nop	word ptr cs:[rax + rax]
0xb05e:	nop	
0xb060:	endbr64	
0xb064:	cmp	qword ptr [rip + 0x1f90c], 0
0xb06c:	je	0xb073
0xb06e:	jmp	0x99e0
0xb073:	xor	eax, eax
0xb075:	ret	
0xb076:	nop	word ptr cs:[rax + rax]
0xb080:	endbr64	
0xb084:	mov	eax, dword ptr [rip + 0x1f912]
0xb08a:	push	r12
0xb08c:	mov	r12, rdi
0xb08f:	push	rbp
0xb090:	push	rbx
0xb091:	sub	eax, 1
0xb094:	movzx	ebx, byte ptr [rip + 0x202b6]
0xb09b:	mov	dword ptr [rip + 0x202b3], eax
0xb0a1:	mov	dword ptr [rip + 0x202ad], 0
0xb0ab:	mov	eax, ebx
0xb0ad:	and	eax, 0xffffffc0
0xb0b0:	or	eax, 0x38
0xb0b3:	mov	byte ptr [rip + 0x20298], al
0xb0b9:	mov	eax, dword ptr [rip + 0x1f8d9]
0xb0bf:	lea	edi, [rax + 1]
0xb0c2:	movsxd	rdi, edi
0xb0c5:	call	0x1d670
0xb0ca:	movsxd	rdx, dword ptr [rip + 0x1f8c7]
0xb0d1:	mov	esi, 0x20
0xb0d6:	mov	rdi, rax
0xb0d9:	mov	rbp, rax
0xb0dc:	call	0x4a50
0xb0e1:	movsxd	rax, dword ptr [rip + 0x1f8b0]
0xb0e8:	mov	rdi, rbp
0xb0eb:	mov	byte ptr [rbp + rax], 0
0xb0f0:	mov	esi, dword ptr [rip + 0x1f8a2]
0xb0f6:	call	0xa1a0
0xb0fb:	mov	rdi, rbp
0xb0fe:	lea	rbp, [rip + 0x1f8bb]
0xb105:	call	0x18d10
0xb10a:	mov	eax, dword ptr [rip + 0x1f88c]
0xb110:	mov	rdi, r12
0xb113:	mov	dword ptr [rip + 0x2023b], 0
0xb11d:	sub	eax, 1
0xb120:	mov	dword ptr [rip + 0x2022e], eax
0xb126:	call	0x9fe0
0xb12b:	mov	esi, 0x13
0xb130:	lea	rdi, [rip + 0x15ad5]
0xb137:	call	0xa1a0
0xb13c:	mov	rdi, rbp
0xb13f:	call	0x49b0
0xb144:	mov	rdi, rbp
0xb147:	mov	esi, eax
0xb149:	call	0xa1a0
0xb14e:	mov	esi, 1
0xb153:	lea	rdi, [rip + 0x155eb]
0xb15a:	call	0xa1a0
0xb15f:	xor	eax, eax
0xb161:	call	0xa820
0xb166:	mov	byte ptr [rip + 0x201e5], bl
0xb16c:	pop	rbx
0xb16d:	pop	rbp
0xb16e:	pop	r12
0xb170:	ret	
0xb171:	nop	word ptr cs:[rax + rax]
0xb17c:	nop	dword ptr [rax]
0xb180:	endbr64	
0xb184:	push	r15
0xb186:	push	r14
0xb188:	mov	r14, rdi
0xb18b:	push	r13
0xb18d:	push	r12
0xb18f:	push	rbp
0xb190:	lea	rbp, [rip + 0x1f969]
0xb197:	push	rbx
0xb198:	sub	rsp, 0x28
0xb19c:	jmp	0xb1ae
0xb19e:	nop	
0xb1a0:	xor	eax, eax
0xb1a2:	call	0xad50
0xb1a7:	mov	ebx, eax
0xb1a9:	cmp	ebx, -1
0xb1ac:	jne	0xb1ef
0xb1ae:	xor	eax, eax
0xb1b0:	call	0x18ab0
0xb1b5:	mov	eax, dword ptr [rip + 0x1fd49]
0xb1bb:	test	eax, eax
0xb1bd:	je	0xb1a0
0xb1bf:	movsxd	rsi, dword ptr [rip + 0x1fd3a]
0xb1c6:	movsx	ebx, byte ptr [rbp + rsi]
0xb1cb:	mov	rdx, rsi
0xb1ce:	mov	ecx, ebx
0xb1d0:	test	bl, bl
0xb1d2:	js	0xb4a0
0xb1d8:	sub	eax, 1
0xb1db:	add	edx, 1
0xb1de:	mov	dword ptr [rip + 0x1fd20], eax
0xb1e4:	mov	dword ptr [rip + 0x1fd16], edx
0xb1ea:	cmp	ebx, -1
0xb1ed:	je	0xb1ae
0xb1ef:	test	r14, r14
0xb1f2:	je	0xb1fb
0xb1f4:	mov	dword ptr [r14], 1
0xb1fb:	mov	eax, dword ptr [rip + 0x201fb]
0xb201:	test	ebx, ebx
0xb203:	jne	0xb445
0xb209:	mov	ebx, 0xff
0xb20e:	test	eax, eax
0xb210:	jne	0xb240
0xb212:	xor	r12d, r12d
0xb215:	mov	ebp, 0x1fe
0xb21a:	mov	ebx, 0xff
0xb21f:	call	0x4f00
0xb224:	mov	rax, qword ptr [rax]
0xb227:	movzx	eax, word ptr [rax + rbp]
0xb22b:	test	ah, 0x40
0xb22e:	jne	0xb47d
0xb234:	test	r12b, r12b
0xb237:	jne	0xb47d
0xb23d:	nop	dword ptr [rax]
0xb240:	mov	rax, qword ptr [rip + 0x1f739]
0xb247:	xor	r12d, r12d
0xb24a:	lea	r13, [rip + 0x1f8af]
0xb251:	mov	dword ptr [rip + 0x1f751], 0
0xb25b:	mov	dword ptr [rip + 0x1f743], 0
0xb265:	mov	qword ptr [rip + 0x1f70c], rax
0xb26c:	test	ebx, ebx
0xb26e:	mov	eax, 0xffffffff
0xb273:	movsxd	rbp, r12d
0xb276:	cmovne	eax, ebx
0xb279:	mov	rbx, qword ptr [rip + 0x200e0]
0xb280:	mov	byte ptr [rbx + rbp], al
0xb283:	add	rbp, 1
0xb287:	mov	byte ptr [rbx + rbp], 0
0xb28b:	cmp	qword ptr [rip + 0x1f6e5], 0
0xb293:	je	0xb2b3
0xb295:	mov	rdi, rbx
0xb298:	call	0x99e0
0xb29d:	mov	r15, rax
0xb2a0:	cmp	rax, -1
0xb2a4:	je	0xb33a
0xb2aa:	test	rax, rax
0xb2ad:	jne	0xb38f
0xb2b3:	mov	ecx, dword ptr [rip + 0x1fc4b]
0xb2b9:	test	ecx, ecx
0xb2bb:	jne	0xb2ee
0xb2bd:	mov	edx, dword ptr [rip + 0x1f6e5]
0xb2c3:	test	edx, edx
0xb2c5:	je	0xb380
0xb2cb:	mov	rdi, rbx
0xb2ce:	call	0xb080
0xb2d3:	mov	dword ptr [rip + 0x1f6cf], 1
0xb2dd:	jmp	0xb2ee
0xb2df:	nop	
0xb2e0:	xor	eax, eax
0xb2e2:	call	0xad50
0xb2e7:	mov	ebx, eax
0xb2e9:	cmp	ebx, -1
0xb2ec:	jne	0xb32c
0xb2ee:	xor	eax, eax
0xb2f0:	call	0x18ab0
0xb2f5:	mov	eax, dword ptr [rip + 0x1fc09]
0xb2fb:	test	eax, eax
0xb2fd:	je	0xb2e0
0xb2ff:	movsxd	rsi, dword ptr [rip + 0x1fbfa]
0xb306:	movsx	ebx, byte ptr [r13 + rsi]
0xb30c:	mov	rdx, rsi
0xb30f:	mov	ecx, ebx
0xb311:	test	bl, bl
0xb313:	js	0xb360
0xb315:	sub	eax, 1
0xb318:	add	edx, 1
0xb31b:	mov	dword ptr [rip + 0x1fbe3], eax
0xb321:	mov	dword ptr [rip + 0x1fbd9], edx
0xb327:	cmp	ebx, -1
0xb32a:	je	0xb2ee
0xb32c:	add	r12d, 1
0xb330:	cmp	r12d, 0xf
0xb334:	jne	0xb26c
0xb33a:	mov	edi, 1
0xb33f:	xor	r15d, r15d
0xb342:	call	0x4aa0
0xb347:	mov	dword ptr [rip + 0x1f65b], 0
0xb351:	jmp	0xb433
0xb356:	nop	word ptr cs:[rax + rax]
0xb360:	and	ecx, 0x7f
0xb363:	add	r12d, 1
0xb367:	mov	byte ptr [r13 + rsi], cl
0xb36c:	cmp	r12d, 0xf
0xb370:	je	0xb33a
0xb372:	mov	eax, 0x1b
0xb377:	jmp	0xb279
0xb37c:	nop	dword ptr [rax]
0xb380:	mov	edi, 1
0xb385:	call	0x4aa0
0xb38a:	jmp	0xb2d3
0xb38f:	test	r14, r14
0xb392:	je	0xb41f
0xb398:	mov	ecx, dword ptr [rip + 0x1fb66]
0xb39e:	cmp	r12d, ecx
0xb3a1:	jge	0xb41f
0xb3a3:	movsxd	rax, dword ptr [rip + 0x1fb56]
0xb3aa:	lea	r9d, [r12 + 1]
0xb3af:	lea	rdx, [rip + 0x1f74a]
0xb3b6:	movsxd	rdi, r9d
0xb3b9:	mov	qword ptr [rsp + 0x18], rdi
0xb3be:	lea	r8d, [r9 + rax]
0xb3c2:	lea	r13, [rax + rdx]
0xb3c6:	jmp	0xb3f1
0xb3c8:	nop	dword ptr [rax + rax]
0xb3d0:	sub	ecx, r9d
0xb3d3:	add	dword ptr [r14], 1
0xb3d7:	add	r13, qword ptr [rsp + 0x18]
0xb3dc:	mov	dword ptr [rip + 0x1fb1d], r8d
0xb3e3:	add	r8d, r9d
0xb3e6:	mov	dword ptr [rip + 0x1fb18], ecx
0xb3ec:	cmp	r12d, ecx
0xb3ef:	jge	0xb41f
0xb3f1:	mov	rdx, rbp
0xb3f4:	mov	rsi, r13
0xb3f7:	mov	rdi, rbx
0xb3fa:	mov	dword ptr [rsp + 0x14], r8d
0xb3ff:	mov	dword ptr [rsp + 0x10], r9d
0xb404:	mov	dword ptr [rsp + 0xc], ecx
0xb408:	call	0x4af0
0xb40d:	mov	ecx, dword ptr [rsp + 0xc]
0xb411:	mov	r9d, dword ptr [rsp + 0x10]
0xb416:	test	eax, eax
0xb418:	mov	r8d, dword ptr [rsp + 0x14]
0xb41d:	je	0xb3d0
0xb41f:	mov	edi, 1
0xb424:	call	0x4aa0
0xb429:	mov	dword ptr [rip + 0x1f579], 0
0xb433:	add	rsp, 0x28
0xb437:	mov	rax, r15
0xb43a:	pop	rbx
0xb43b:	pop	rbp
0xb43c:	pop	r12
0xb43e:	pop	r13
0xb440:	pop	r14
0xb442:	pop	r15
0xb444:	ret	
0xb445:	test	eax, eax
0xb447:	jne	0xb240
0xb44d:	cmp	ebx, 0xa
0xb450:	sete	bpl
0xb454:	cmp	ebx, 0xd
0xb457:	sete	al
0xb45a:	or	ebp, eax
0xb45c:	call	0x4f00
0xb461:	mov	rax, qword ptr [rax]
0xb464:	test	bpl, bpl
0xb467:	je	0xb4c6
0xb469:	mov	ebx, 0xa
0xb46e:	test	byte ptr [rax + 0x15], 0x40
0xb472:	je	0xb240
0xb478:	mov	ebx, 0xa
0xb47d:	mov	rax, qword ptr [rip + 0x1f4dc]
0xb484:	lea	r15, [rip + 0x1f4d5]
0xb48b:	mov	byte ptr [rax], bl
0xb48d:	mov	rax, qword ptr [rip + 0x1f4cc]
0xb494:	mov	byte ptr [rax + 1], 0
0xb498:	jmp	0xb433
0xb49a:	nop	word ptr [rax + rax]
0xb4a0:	and	ecx, 0x7f
0xb4a3:	mov	byte ptr [rbp + rsi], cl
0xb4a7:	test	r14, r14
0xb4aa:	je	0xb4b3
0xb4ac:	mov	dword ptr [r14], 1
0xb4b3:	mov	eax, dword ptr [rip + 0x1ff43]
0xb4b9:	mov	ebx, 0x1b
0xb4be:	test	eax, eax
0xb4c0:	jne	0xb240
0xb4c6:	movsxd	rbp, ebx
0xb4c9:	add	rbp, rbp
0xb4cc:	cmp	ebx, 7
0xb4cf:	sete	r12b
0xb4d3:	jmp	0xb21f
0xb4d8:	nop	dword ptr [rax + rax]
0xb4e0:	endbr64	
0xb4e4:	mov	eax, dword ptr [rip + 0x1f4c2]
0xb4ea:	test	eax, eax
0xb4ec:	jne	0xb4f0
0xb4ee:	ret	
0xb4ef:	nop	
0xb4f0:	sub	rsp, 8
0xb4f4:	mov	rdi, qword ptr [rip + 0x1fe65]
0xb4fb:	call	0xb080
0xb500:	mov	dword ptr [rip + 0x1f49e], 1
0xb50a:	add	rsp, 8
0xb50e:	ret	
0xb50f:	nop	
0xb510:	endbr64	
0xb514:	mov	rax, qword ptr [rip + 0x1fe45]
0xb51b:	ret	
0xb51c:	nop	dword ptr [rax]
0xb520:	endbr64	
0xb524:	push	r15
0xb526:	mov	esi, 0x5413
0xb52b:	mov	edi, 1
0xb530:	push	r14
0xb532:	push	r13
0xb534:	push	r12
0xb536:	push	rbp
0xb537:	push	rbx
0xb538:	sub	rsp, 0x58
0xb53c:	mov	rax, qword ptr fs:[0x28]
0xb545:	mov	qword ptr [rsp + 0x48], rax
0xb54a:	xor	eax, eax
0xb54c:	lea	rdx, [rsp + 0x18]
0xb551:	mov	dword ptr [rsp + 0x10], 0
0xb559:	mov	dword ptr [rsp + 0x14], 0
0xb561:	call	0x4a70
0xb566:	test	eax, eax
0xb568:	jne	0xb5a0
0xb56a:	mov	ebx, eax
0xb56c:	movzx	eax, word ptr [rsp + 0x1a]
0xb571:	test	ax, ax
0xb574:	je	0xb790
0xb57a:	movzx	ebp, word ptr [rsp + 0x18]
0xb57f:	test	bp, bp
0xb582:	je	0xb790
0xb588:	movzx	ebx, ax
0xb58b:	lea	r12d, [rbp - 1]
0xb58f:	lea	eax, [rbx - 1]
0xb592:	mov	dword ptr [rsp + 0xc], eax
0xb596:	jmp	0xb5b2
0xb598:	nop	dword ptr [rax + rax]
0xb5a0:	mov	dword ptr [rsp + 0xc], 0xffffffff
0xb5a8:	mov	r12d, 0xffffffff
0xb5ae:	xor	ebx, ebx
0xb5b0:	xor	ebp, ebp
0xb5b2:	lea	r13, [rip + 0x15667]
0xb5b9:	lea	r15, [rip + 0x15a13]
0xb5c0:	mov	rdi, r13
0xb5c3:	call	0x47e0
0xb5c8:	mov	rdi, rax
0xb5cb:	test	rax, rax
0xb5ce:	je	0xb5df
0xb5d0:	lea	rdx, [rsp + 0x14]
0xb5d5:	mov	rsi, r15
0xb5d8:	xor	eax, eax
0xb5da:	call	0x4c60
0xb5df:	lea	r14, [rip + 0x15642]
0xb5e6:	mov	rdi, r14
0xb5e9:	call	0x47e0
0xb5ee:	mov	rdi, rax
0xb5f1:	test	rax, rax
0xb5f4:	je	0xb605
0xb5f6:	lea	rdx, [rsp + 0x10]
0xb5fb:	mov	rsi, r15
0xb5fe:	xor	eax, eax
0xb600:	call	0x4c60
0xb605:	cmp	dword ptr [rsp + 0xc], 0x3ff
0xb60d:	mov	eax, dword ptr [rip + 0x1e8fd]
0xb613:	jbe	0xb628
0xb615:	mov	ebx, dword ptr [rsp + 0x14]
0xb619:	lea	edx, [rbx - 1]
0xb61c:	cmp	edx, 0x3ff
0xb622:	ja	0xb7c0
0xb628:	mov	dword ptr [rip + 0x1f36a], ebx
0xb62e:	cmp	r12d, 0x3ff
0xb635:	jbe	0xb64a
0xb637:	mov	ebp, dword ptr [rsp + 0x10]
0xb63b:	lea	edx, [rbp - 1]
0xb63e:	cmp	edx, 0x3ff
0xb644:	ja	0xb7a8
0xb64a:	lea	r12, [rsp + 0x20]
0xb64f:	mov	r8d, ebp
0xb652:	mov	rcx, r15
0xb655:	mov	edx, 0x20
0xb65a:	mov	esi, 1
0xb65f:	mov	rdi, r12
0xb662:	xor	eax, eax
0xb664:	mov	dword ptr [rip + 0x1f332], ebp
0xb66a:	call	0x4f10
0xb66f:	mov	rsi, r12
0xb672:	mov	rdi, r14
0xb675:	call	0x18380
0xb67a:	mov	rcx, r15
0xb67d:	mov	edx, 0x20
0xb682:	mov	rdi, r12
0xb685:	mov	r8d, dword ptr [rip + 0x1f30c]
0xb68c:	mov	esi, 1
0xb691:	xor	eax, eax
0xb693:	call	0x4f10
0xb698:	mov	rdi, r13
0xb69b:	mov	rsi, r12
0xb69e:	call	0x18380
0xb6a3:	mov	rdi, qword ptr [rip + 0x1fc8e]
0xb6aa:	test	rdi, rdi
0xb6ad:	je	0xb6b4
0xb6af:	call	0x18d10
0xb6b4:	mov	rdi, qword ptr [rip + 0x1fc75]
0xb6bb:	test	rdi, rdi
0xb6be:	je	0xb6c5
0xb6c0:	call	0x18d10
0xb6c5:	mov	rdi, qword ptr [rip + 0x1fc5c]
0xb6cc:	test	rdi, rdi
0xb6cf:	je	0xb6d6
0xb6d1:	call	0x18d10
0xb6d6:	mov	rdi, qword ptr [rip + 0x1fc43]
0xb6dd:	test	rdi, rdi
0xb6e0:	je	0xb6e7
0xb6e2:	call	0x18d10
0xb6e7:	mov	edi, dword ptr [rip + 0x1f2ab]
0xb6ed:	imul	edi, dword ptr [rip + 0x1f2a8]
0xb6f4:	mov	esi, 1
0xb6f9:	movsxd	rdi, edi
0xb6fc:	call	0x1d740
0xb701:	mov	edi, dword ptr [rip + 0x1f291]
0xb707:	mov	esi, 1
0xb70c:	imul	edi, dword ptr [rip + 0x1f289]
0xb713:	mov	qword ptr [rip + 0x1fc1e], rax
0xb71a:	movsxd	rdi, edi
0xb71d:	call	0x1d740
0xb722:	mov	edi, dword ptr [rip + 0x1f270]
0xb728:	mov	esi, 1
0xb72d:	imul	edi, dword ptr [rip + 0x1f268]
0xb734:	mov	qword ptr [rip + 0x1fbf5], rax
0xb73b:	movsxd	rdi, edi
0xb73e:	call	0x1d740
0xb743:	mov	edi, dword ptr [rip + 0x1f24f]
0xb749:	mov	esi, 1
0xb74e:	imul	edi, dword ptr [rip + 0x1f247]
0xb755:	mov	qword ptr [rip + 0x1fbcc], rax
0xb75c:	movsxd	rdi, edi
0xb75f:	call	0x1d740
0xb764:	mov	qword ptr [rip + 0x1fbb5], rax
0xb76b:	mov	rax, qword ptr [rsp + 0x48]
0xb770:	sub	rax, qword ptr fs:[0x28]
0xb779:	jne	0xb7dc
0xb77b:	add	rsp, 0x58
0xb77f:	pop	rbx
0xb780:	pop	rbp
0xb781:	pop	r12
0xb783:	pop	r13
0xb785:	pop	r14
0xb787:	pop	r15
0xb789:	ret	
0xb78a:	nop	word ptr [rax + rax]
0xb790:	mov	dword ptr [rsp + 0xc], 0xffffffff
0xb798:	xor	ebp, ebp
0xb79a:	mov	r12d, 0xffffffff
0xb7a0:	jmp	0xb5b2
0xb7a5:	nop	dword ptr [rax]
0xb7a8:	lea	edx, [rax - 1]
0xb7ab:	mov	ebp, 0x18
0xb7b0:	cmp	edx, 0x400
0xb7b6:	cmovb	ebp, eax
0xb7b9:	jmp	0xb64a
0xb7be:	nop	
0xb7c0:	mov	ebx, dword ptr [rip + 0x1e72a]
0xb7c6:	lea	edx, [rbx - 1]
0xb7c9:	cmp	edx, 0x3ff
0xb7cf:	mov	edx, 0x50
0xb7d4:	cmova	ebx, edx
0xb7d7:	jmp	0xb628
0xb7dc:	call	0x49d0
0xb7e1:	nop	word ptr cs:[rax + rax]
0xb7ec:	nop	dword ptr [rax]
0xb7f0:	endbr64	
0xb7f4:	push	r15
0xb7f6:	push	r14
0xb7f8:	push	r13
0xb7fa:	push	r12
0xb7fc:	mov	r12, rdi
0xb7ff:	mov	edi, 0x5858
0xb804:	push	rbp
0xb805:	push	rbx
0xb806:	mov	ebx, esi
0xb808:	sub	rsp, 0x38
0xb80c:	mov	rax, qword ptr fs:[0x28]
0xb815:	mov	qword ptr [rsp + 0x28], rax
0xb81a:	movabs	rax, 0x7363762f7665642f
0xb824:	mov	word ptr [rsp + 8], di
0xb829:	mov	byte ptr [rsp + 0xa], 0
0xb82e:	mov	dword ptr [rsp + 0x18], 0x585861
0xb836:	mov	qword ptr [rsp], rax
0xb83a:	mov	qword ptr [rsp + 0x10], rax
0xb83f:	cmp	esi, 1
0xb842:	je	0xb978
0xb848:	mov	esi, dword ptr [rip + 0x1fbb2]
0xb84e:	mov	r13, qword ptr [rip + 0x1d783]
0xb855:	mov	r14d, 1
0xb85b:	test	esi, esi
0xb85d:	jne	0xb90c
0xb863:	mov	rax, qword ptr [rip + 0x1f126]
0xb86a:	lea	r15, [rsp + 0x10]
0xb86f:	mov	esi, r14d
0xb872:	mov	dword ptr [rip + 0x1fb84], 0
0xb87c:	mov	rdi, r15
0xb87f:	movzx	edx, byte ptr [rax + 8]
0xb883:	mov	byte ptr [rsp + 0x19], dl
0xb887:	movzx	eax, byte ptr [rax + 9]
0xb88b:	mov	byte ptr [rsp + 0x1a], al
0xb88f:	call	0x4930
0xb894:	mov	ebp, eax
0xb896:	cmp	eax, -1
0xb899:	je	0xb8f0
0xb89b:	mov	eax, dword ptr [rip + 0x1f0fb]
0xb8a1:	imul	eax, dword ptr [rip + 0x1f0f0]
0xb8a8:	mov	edi, ebp
0xb8aa:	mov	rsi, r12
0xb8ad:	lea	edx, [rax + rax + 4]
0xb8b1:	xor	eax, eax
0xb8b3:	call	r13
0xb8b6:	mov	edi, ebp
0xb8b8:	call	0x4ab0
0xb8bd:	cmp	ebx, 2
0xb8c0:	je	0xb990
0xb8c6:	mov	eax, 1
0xb8cb:	mov	rdx, qword ptr [rsp + 0x28]
0xb8d0:	sub	rdx, qword ptr fs:[0x28]
0xb8d9:	jne	0xbb07
0xb8df:	add	rsp, 0x38
0xb8e3:	pop	rbx
0xb8e4:	pop	rbp
0xb8e5:	pop	r12
0xb8e7:	pop	r13
0xb8e9:	pop	r14
0xb8eb:	pop	r15
0xb8ed:	ret	
0xb8ee:	nop	
0xb8f0:	mov	ecx, 0x30
0xb8f5:	mov	esi, r14d
0xb8f8:	mov	rdi, r15
0xb8fb:	mov	word ptr [rsp + 0x19], cx
0xb900:	call	0x4930
0xb905:	mov	ebp, eax
0xb907:	cmp	eax, -1
0xb90a:	jne	0xb89b
0xb90c:	mov	dword ptr [rip + 0x1faea], 1
0xb916:	cmp	ebx, 2
0xb919:	je	0xba30
0xb91f:	mov	rax, qword ptr [rip + 0x1f06a]
0xb926:	mov	r15, rsp
0xb929:	mov	esi, r14d
0xb92c:	mov	rdi, r15
0xb92f:	movzx	edx, byte ptr [rax + 8]
0xb933:	movzx	eax, byte ptr [rax + 9]
0xb937:	mov	byte ptr [rsp + 8], dl
0xb93b:	mov	byte ptr [rsp + 9], al
0xb93f:	call	0x4930
0xb944:	mov	ebp, eax
0xb946:	cmp	eax, -1
0xb949:	je	0xba00
0xb94f:	mov	edx, dword ptr [rip + 0x1f043]
0xb955:	mov	edi, ebp
0xb957:	mov	rsi, r12
0xb95a:	xor	eax, eax
0xb95c:	imul	edx, dword ptr [rip + 0x1f039]
0xb963:	add	edx, 4
0xb966:	call	r13
0xb969:	mov	edi, ebp
0xb96b:	call	0x4ab0
0xb970:	jmp	0xb8c6
0xb975:	nop	dword ptr [rax]
0xb978:	mov	r13, qword ptr [rip + 0x1d661]
0xb97f:	xor	r14d, r14d
0xb982:	jmp	0xb863
0xb987:	nop	word ptr [rax + rax]
0xb990:	movsx	esi, byte ptr [r12 + 2]
0xb996:	movsx	edi, byte ptr [r12 + 3]
0xb99c:	call	0xa7a0
0xb9a1:	mov	edx, dword ptr [rip + 0x1f561]
0xb9a7:	test	edx, edx
0xb9a9:	jle	0xb9e5
0xb9ab:	xor	ebp, ebp
0xb9ad:	lea	rbx, [rip + 0x1f56c]
0xb9b4:	jmp	0xb9cc
0xb9b6:	nop	word ptr cs:[rax + rax]
0xb9c0:	mov	edx, dword ptr [rip + 0x1f542]
0xb9c6:	add	ebp, eax
0xb9c8:	cmp	edx, ebp
0xb9ca:	jle	0xb9e5
0xb9cc:	sub	edx, ebp
0xb9ce:	movsxd	rsi, ebp
0xb9d1:	mov	edi, 1
0xb9d6:	add	rsi, rbx
0xb9d9:	movsxd	rdx, edx
0xb9dc:	call	0x18da0
0xb9e1:	test	eax, eax
0xb9e3:	jns	0xb9c0
0xb9e5:	mov	dword ptr [rip + 0x1f519], 0
0xb9ef:	mov	eax, 1
0xb9f4:	jmp	0xb8cb
0xb9f9:	nop	dword ptr [rax]
0xba00:	mov	edx, 0x30
0xba05:	mov	esi, r14d
0xba08:	mov	rdi, r15
0xba0b:	mov	word ptr [rsp + 8], dx
0xba10:	call	0x4930
0xba15:	mov	ebp, eax
0xba17:	cmp	eax, -1
0xba1a:	jne	0xb94f
0xba20:	xor	eax, eax
0xba22:	jmp	0xb8cb
0xba27:	nop	word ptr [rax + rax]
0xba30:	xor	eax, eax
0xba32:	mov	r15, rsp
0xba35:	call	0xa300
0xba3a:	mov	rax, qword ptr [rip + 0x1ef4f]
0xba41:	mov	esi, r14d
0xba44:	mov	rdi, r15
0xba47:	movzx	edx, byte ptr [rax + 8]
0xba4b:	movzx	eax, byte ptr [rax + 9]
0xba4f:	mov	byte ptr [rsp + 8], dl
0xba53:	mov	byte ptr [rsp + 9], al
0xba57:	call	0x4930
0xba5c:	mov	ebp, eax
0xba5e:	cmp	eax, -1
0xba61:	je	0xbae0
0xba63:	mov	edx, dword ptr [rip + 0x1ef2f]
0xba69:	mov	rsi, r12
0xba6c:	mov	edi, ebp
0xba6e:	xor	eax, eax
0xba70:	imul	edx, dword ptr [rip + 0x1ef25]
0xba77:	add	edx, 4
0xba7a:	call	r13
0xba7d:	mov	edi, ebp
0xba7f:	call	0x4ab0
0xba84:	mov	eax, dword ptr [rip + 0x1ef12]
0xba8a:	xor	esi, esi
0xba8c:	lea	edi, [rax - 1]
0xba8f:	call	0xa7a0
0xba94:	mov	edx, dword ptr [rip + 0x1f46e]
0xba9a:	test	edx, edx
0xba9c:	jle	0xb9e5
0xbaa2:	xor	ebp, ebp
0xbaa4:	lea	rbx, [rip + 0x1f475]
0xbaab:	jmp	0xbac0
0xbaad:	nop	dword ptr [rax]
0xbab0:	mov	edx, dword ptr [rip + 0x1f452]
0xbab6:	add	ebp, eax
0xbab8:	cmp	edx, ebp
0xbaba:	jle	0xb9e5
0xbac0:	sub	edx, ebp
0xbac2:	movsxd	rsi, ebp
0xbac5:	mov	edi, 1
0xbaca:	add	rsi, rbx
0xbacd:	movsxd	rdx, edx
0xbad0:	call	0x18da0
0xbad5:	test	eax, eax
0xbad7:	jns	0xbab0
0xbad9:	jmp	0xb9e5
0xbade:	nop	
0xbae0:	mov	eax, 0x30
0xbae5:	mov	esi, r14d
0xbae8:	mov	rdi, r15
0xbaeb:	mov	word ptr [rsp + 8], ax
0xbaf0:	call	0x4930
0xbaf5:	mov	ebp, eax
0xbaf7:	cmp	eax, -1
0xbafa:	jne	0xba63
0xbb00:	xor	eax, eax
0xbb02:	jmp	0xb8cb
0xbb07:	call	0x49d0
0xbb0c:	nop	dword ptr [rax]
0xbb10:	endbr64	
0xbb14:	mov	eax, dword ptr [rip + 0x1ee6e]
0xbb1a:	test	eax, eax
0xbb1c:	jne	0xbb20
0xbb1e:	ret	
0xbb1f:	nop	
0xbb20:	sub	rsp, 8
0xbb24:	mov	esi, 1
0xbb29:	xor	eax, eax
0xbb2b:	call	0xb7f0
0xbb30:	mov	dword ptr [rip + 0x1f8ce], eax
0xbb36:	add	rsp, 8
0xbb3a:	ret	
0xbb3b:	nop	dword ptr [rax + rax]
0xbb40:	endbr64	
0xbb44:	push	rbp
0xbb45:	xor	eax, eax
0xbb47:	mov	rbp, rdi
0xbb4a:	call	0xa6c0
0xbb4f:	mov	edx, dword ptr [rip + 0x1ee33]
0xbb55:	test	edx, edx
0xbb57:	je	0xbb94
0xbb59:	mov	eax, dword ptr [rip + 0x1f8a5]
0xbb5f:	test	eax, eax
0xbb61:	je	0xbb94
0xbb63:	mov	edx, dword ptr [rip + 0x1ee33]
0xbb69:	imul	edx, dword ptr [rip + 0x1ee28]
0xbb70:	xor	esi, esi
0xbb72:	mov	rdi, qword ptr [rip + 0x1f7af]
0xbb79:	movsxd	rdx, edx
0xbb7c:	call	0x4a50
0xbb81:	xor	eax, eax
0xbb83:	mov	esi, 2
0xbb88:	mov	rdi, rbp
0xbb8b:	call	0xb7f0
0xbb90:	test	eax, eax
0xbb92:	jne	0xbba0
0xbb94:	xor	eax, eax
0xbb96:	pop	rbp
0xbb97:	jmp	0xa300
0xbb9c:	nop	dword ptr [rax]
0xbba0:	mov	edx, dword ptr [rip + 0x1edf6]
0xbba6:	imul	edx, dword ptr [rip + 0x1edeb]
0xbbad:	xor	esi, esi
0xbbaf:	mov	rdi, qword ptr [rip + 0x1f782]
0xbbb6:	pop	rbp
0xbbb7:	movsxd	rdx, edx
0xbbba:	jmp	0x4a50
0xbbbf:	nop	
0xbbc0:	endbr64	
0xbbc4:	push	rbp
0xbbc5:	mov	rbp, rdi
0xbbc8:	push	rbx
0xbbc9:	sub	rsp, 8
0xbbcd:	cmp	dword ptr [rip + 0x1ed84], 1
0xbbd4:	je	0xbcd0
0xbbda:	xor	eax, eax
0xbbdc:	call	0xa6c0
0xbbe1:	test	rbp, rbp
0xbbe4:	je	0xbbf4
0xbbe6:	mov	eax, dword ptr [rip + 0x1ed9c]
0xbbec:	test	eax, eax
0xbbee:	jne	0xbcc0
0xbbf4:	mov	eax, dword ptr [rip + 0x1eda2]
0xbbfa:	mov	rdi, qword ptr [rip + 0x1e347]
0xbc01:	lea	rdx, [rip - 0x2198]
0xbc08:	lea	esi, [rax - 1]
0xbc0b:	call	0x4820
0xbc10:	mov	edx, dword ptr [rip + 0x1f2f2]
0xbc16:	test	edx, edx
0xbc18:	jle	0xbc4d
0xbc1a:	xor	ebp, ebp
0xbc1c:	lea	rbx, [rip + 0x1f2fd]
0xbc23:	jmp	0xbc34
0xbc25:	nop	dword ptr [rax]
0xbc28:	mov	edx, dword ptr [rip + 0x1f2da]
0xbc2e:	add	ebp, eax
0xbc30:	cmp	edx, ebp
0xbc32:	jle	0xbc4d
0xbc34:	sub	edx, ebp
0xbc36:	movsxd	rsi, ebp
0xbc39:	mov	edi, 1
0xbc3e:	add	rsi, rbx
0xbc41:	movsxd	rdx, edx
0xbc44:	call	0x18da0
0xbc49:	test	eax, eax
0xbc4b:	jns	0xbc28
0xbc4d:	mov	edi, dword ptr [rip + 0x1ed49]
0xbc53:	xor	esi, esi
0xbc55:	mov	dword ptr [rip + 0x1f2a9], 0
0xbc5f:	call	0xa7a0
0xbc64:	mov	edx, dword ptr [rip + 0x1f29e]
0xbc6a:	test	edx, edx
0xbc6c:	jle	0xbca5
0xbc6e:	xor	ebp, ebp
0xbc70:	lea	rbx, [rip + 0x1f2a9]
0xbc77:	jmp	0xbc8c
0xbc79:	nop	dword ptr [rax]
0xbc80:	mov	edx, dword ptr [rip + 0x1f282]
0xbc86:	add	ebp, eax
0xbc88:	cmp	edx, ebp
0xbc8a:	jle	0xbca5
0xbc8c:	sub	edx, ebp
0xbc8e:	movsxd	rsi, ebp
0xbc91:	mov	edi, 1
0xbc96:	add	rsi, rbx
0xbc99:	movsxd	rdx, edx
0xbc9c:	call	0x18da0
0xbca1:	test	eax, eax
0xbca3:	jns	0xbc80
0xbca5:	mov	dword ptr [rip + 0x1f259], 0
0xbcaf:	add	rsp, 8
0xbcb3:	mov	edi, 0xa
0xbcb8:	pop	rbx
0xbcb9:	pop	rbp
0xbcba:	jmp	0x4810
0xbcbf:	nop	
0xbcc0:	mov	rdi, rbp
0xbcc3:	call	0xbb40
0xbcc8:	jmp	0xbbf4
0xbccd:	nop	dword ptr [rax]
0xbcd0:	lea	rdx, [rip + 0x1f6e9]
0xbcd7:	mov	esi, 1
0xbcdc:	mov	edi, 1
0xbce1:	call	0x4d70
0xbce6:	mov	dword ptr [rip + 0x1ec68], 0
0xbcf0:	jmp	0xbbda
0xbcf5:	nop	word ptr cs:[rax + rax]
0xbd00:	endbr64	
0xbd04:	push	r13
0xbd06:	lea	r13, [rip + 0x1cc33]
0xbd0d:	push	r12
0xbd0f:	push	rbp
0xbd10:	mov	rbp, rdi
0xbd13:	lea	rdi, [rip + 0x14f14]
0xbd1a:	push	rbx
0xbd1b:	xor	ebx, ebx
0xbd1d:	sub	rsp, 8
0xbd21:	jmp	0xbd2d
0xbd23:	nop	dword ptr [rax + rax]
0xbd28:	mov	rdi, qword ptr [r13 + rbx*8]
0xbd2d:	mov	rsi, rbp
0xbd30:	mov	r12d, ebx
0xbd33:	call	0x4b30
0xbd38:	test	eax, eax
0xbd3a:	je	0xbd60
0xbd3c:	add	rbx, 1
0xbd40:	cmp	rbx, 0xa
0xbd44:	jne	0xbd28
0xbd46:	add	rsp, 8
0xbd4a:	mov	r12d, 0xffffffff
0xbd50:	pop	rbx
0xbd51:	mov	eax, r12d
0xbd54:	pop	rbp
0xbd55:	pop	r12
0xbd57:	pop	r13
0xbd59:	ret	
0xbd5a:	nop	word ptr [rax + rax]
0xbd60:	lea	eax, [rbx - 8]
0xbd63:	cmp	ebx, 7
0xbd66:	cmovg	r12d, eax
0xbd6a:	add	rsp, 8
0xbd6e:	pop	rbx
0xbd6f:	pop	rbp
0xbd70:	mov	eax, r12d
0xbd73:	pop	r12
0xbd75:	pop	r13
0xbd77:	ret	
0xbd78:	nop	dword ptr [rax + rax]
0xbd80:	endbr64	
0xbd84:	push	r12
0xbd86:	mov	r12, rdi
0xbd89:	push	rbp
0xbd8a:	lea	rbp, [rip + 0x1e1e7]
0xbd91:	push	rbx
0xbd92:	mov	ebx, 0x11
0xbd97:	jmp	0xbdac
0xbd99:	nop	dword ptr [rax]
0xbda0:	add	ebx, 1
0xbda3:	add	rbp, 0x20
0xbda7:	cmp	ebx, 0x26
0xbdaa:	je	0xbdd8
0xbdac:	mov	rdi, qword ptr [rbp]
0xbdb0:	mov	rsi, r12
0xbdb3:	call	0x4b30
0xbdb8:	test	eax, eax
0xbdba:	jne	0xbda0
0xbdbc:	movsxd	rbx, ebx
0xbdbf:	lea	rax, [rip + 0x1df7a]
0xbdc6:	shl	rbx, 5
0xbdca:	mov	rax, qword ptr [rax + rbx + 8]
0xbdcf:	pop	rbx
0xbdd0:	pop	rbp
0xbdd1:	pop	r12
0xbdd3:	ret	
0xbdd4:	nop	dword ptr [rax]
0xbdd8:	pop	rbx
0xbdd9:	xor	eax, eax
0xbddb:	pop	rbp
0xbddc:	pop	r12
0xbdde:	ret	
0xbddf:	nop	
0xbde0:	endbr64	
0xbde4:	push	r14
0xbde6:	lea	rdi, [rip + 0x1479d]
0xbded:	push	r13
0xbdef:	push	r12
0xbdf1:	push	rbp
0xbdf2:	push	rbx
0xbdf3:	sub	rsp, 0xb0
0xbdfa:	mov	rax, qword ptr fs:[0x28]
0xbe03:	mov	qword ptr [rsp + 0xa8], rax
0xbe0b:	xor	eax, eax
0xbe0d:	call	0x47e0
0xbe12:	lea	rsi, [rsp + 0x10]
0xbe17:	mov	edi, 1
0xbe1c:	mov	rbp, rax
0xbe1f:	call	0x4eb0
0xbe24:	mov	rax, qword ptr [rsp + 0x38]
0xbe29:	shr	rax, 8
0xbe2d:	cmp	rax, 4
0xbe31:	sete	al
0xbe34:	movzx	eax, al
0xbe37:	mov	dword ptr [rip + 0x1eb4b], eax
0xbe3d:	test	rbp, rbp
0xbe40:	je	0xc36d
0xbe46:	mov	rdi, rbp
0xbe49:	call	0x49b0
0xbe4e:	cmp	rax, 0x3f
0xbe52:	ja	0xc308
0xbe58:	lea	r12, [rip + 0x14ff1]
0xbe5f:	lea	rbx, [rip + 0x14d6f]
0xbe66:	lea	r14, [rip + 0x14e02]
0xbe6d:	lea	r13, [rip + 0x14e07]
0xbe74:	nop	dword ptr [rax]
0xbe78:	xor	edi, edi
0xbe7a:	mov	rsi, rbp
0xbe7d:	call	0x4e90
0xbe82:	cmp	eax, -1
0xbe85:	je	0xbf38
0xbe8b:	test	eax, eax
0xbe8d:	jne	0xbff8
0xbe93:	mov	rdi, qword ptr [rip + 0x1e9e6]
0xbe9a:	mov	esi, 1
0xbe9f:	mov	r8, rbp
0xbea2:	mov	rdx, r12
0xbea5:	mov	rcx, qword ptr [rip + 0x1ea3c]
0xbeac:	lea	r9, [rip + 0x1de5d]
0xbeb3:	call	0x4e60
0xbeb8:	mov	rsi, rbx
0xbebb:	mov	rdi, rbp
0xbebe:	call	0x4b30
0xbec3:	test	eax, eax
0xbec5:	je	0xbf98
0xbecb:	mov	rdi, rbp
0xbece:	call	0x9940
0xbed3:	test	eax, eax
0xbed5:	jne	0xbfc8
0xbedb:	mov	rsi, r14
0xbede:	mov	rdi, rbp
0xbee1:	call	0x4b30
0xbee6:	test	eax, eax
0xbee8:	je	0xbf01
0xbeea:	lea	rsi, [rip + 0x14d84]
0xbef1:	mov	rdi, rbp
0xbef4:	call	0x4b30
0xbef9:	test	eax, eax
0xbefb:	jne	0xc3b4
0xbf01:	mov	rdi, qword ptr [rip + 0x1e978]
0xbf08:	mov	rcx, qword ptr [rip + 0x1e9d9]
0xbf0f:	mov	esi, 1
0xbf14:	xor	eax, eax
0xbf16:	mov	rdx, r13
0xbf19:	lea	rbp, [rip + 0x14cba]
0xbf20:	call	0x4e60
0xbf25:	xor	edi, edi
0xbf27:	mov	rsi, rbp
0xbf2a:	call	0x4e90
0xbf2f:	cmp	eax, -1
0xbf32:	jne	0xbe8b
0xbf38:	mov	rcx, qword ptr [rip + 0x1e9a9]
0xbf3f:	mov	rdi, qword ptr [rip + 0x1e93a]
0xbf46:	xor	eax, eax
0xbf48:	lea	r8, [rip + 0x1ddc1]
0xbf4f:	lea	rdx, [rip + 0x14ea2]
0xbf56:	mov	esi, 1
0xbf5b:	call	0x4e60
0xbf60:	mov	rdi, qword ptr [rip + 0x1e919]
0xbf67:	xor	eax, eax
0xbf69:	mov	rcx, qword ptr [rip + 0x1e978]
0xbf70:	lea	r8, [rip + 0x1dd89]
0xbf77:	lea	rdx, [rip + 0x14ea2]
0xbf7e:	mov	esi, 1
0xbf83:	call	0x4e60
0xbf88:	mov	edi, 1
0xbf8d:	call	0x4e20
0xbf92:	nop	word ptr [rax + rax]
0xbf98:	mov	rcx, qword ptr [rip + 0x1e949]
0xbf9f:	mov	rdi, qword ptr [rip + 0x1e8da]
0xbfa6:	lea	rdx, [rip + 0x14c99]
0xbfad:	mov	esi, 1
0xbfb2:	lea	rbp, [rip + 0x14c21]
0xbfb9:	call	0x4e60
0xbfbe:	jmp	0xbe78
0xbfc3:	nop	dword ptr [rax + rax]
0xbfc8:	mov	rcx, qword ptr [rip + 0x1e919]
0xbfcf:	mov	rdi, qword ptr [rip + 0x1e8aa]
0xbfd6:	lea	rdx, [rip + 0x14c7d]
0xbfdd:	xor	eax, eax
0xbfdf:	mov	esi, 1
0xbfe4:	lea	rbp, [rip + 0x14bf6]
0xbfeb:	call	0x4e60
0xbff0:	jmp	0xbe78
0xbff5:	nop	dword ptr [rax]
0xbff8:	mov	rdi, rbp
0xbffb:	lea	r13, [rsp + 8]
0xc000:	call	0x1d7a0
0xc005:	mov	edi, 0x800
0xc00a:	mov	qword ptr [rip + 0x1e93f], rax
0xc011:	call	0x1d670
0xc016:	mov	rdi, qword ptr [rip + 0x1de03]
0xc01d:	mov	rsi, r13
0xc020:	mov	qword ptr [rsp + 8], rax
0xc025:	call	0x4ca0
0xc02a:	xor	edx, edx
0xc02c:	test	rax, rax
0xc02f:	je	0xc034
0xc031:	movzx	edx, byte ptr [rax]
0xc034:	mov	rdi, qword ptr [rip + 0x1de25]
0xc03b:	mov	rsi, r13
0xc03e:	mov	byte ptr [rip + 0x1e904], dl
0xc044:	call	0x4ca0
0xc049:	mov	rdi, qword ptr [rip + 0x1ddf0]
0xc050:	mov	rsi, r13
0xc053:	mov	qword ptr [rip + 0x1e8e6], rax
0xc05a:	call	0x4ca0
0xc05f:	cmp	qword ptr [rip + 0x1e8d9], 0
0xc067:	mov	qword ptr [rip + 0x1e8ca], rax
0xc06e:	je	0xc2c0
0xc074:	test	rax, rax
0xc077:	je	0xc2c0
0xc07d:	mov	rdi, qword ptr [rip + 0x1dcbc]
0xc084:	mov	rsi, r13
0xc087:	call	0x4ca0
0xc08c:	mov	rdi, qword ptr [rip + 0x1dced]
0xc093:	mov	rsi, r13
0xc096:	mov	qword ptr [rip + 0x1dcab], rax
0xc09d:	call	0x4ca0
0xc0a2:	mov	rdi, qword ptr [rip + 0x1dcb7]
0xc0a9:	mov	rsi, r13
0xc0ac:	mov	qword ptr [rip + 0x1dcd5], rax
0xc0b3:	call	0x4ca0
0xc0b8:	cmp	qword ptr [rip + 0x1dc88], 0
0xc0c0:	mov	qword ptr [rip + 0x1dca1], rax
0xc0c7:	je	0xc352
0xc0cd:	mov	rdi, qword ptr [rip + 0x1ddac]
0xc0d4:	mov	rsi, r13
0xc0d7:	call	0x4ca0
0xc0dc:	xor	edx, edx
0xc0de:	mov	qword ptr [rip + 0x1dda3], rax
0xc0e5:	test	rax, rax
0xc0e8:	je	0xc0ff
0xc0ea:	mov	rdi, qword ptr [rip + 0x1ddcf]
0xc0f1:	mov	qword ptr [rip + 0x1dc70], rax
0xc0f8:	call	0x4c90
0xc0fd:	mov	edx, eax
0xc0ff:	mov	rdi, qword ptr [rip + 0x1dd9a]
0xc106:	mov	dword ptr [rip + 0x1ddc4], edx
0xc10c:	call	0x4c50
0xc111:	mov	dword ptr [rip + 0x1dd99], eax
0xc117:	test	eax, eax
0xc119:	js	0xc13c
0xc11b:	mov	qword ptr [rip + 0x1dc62], 0
0xc126:	mov	qword ptr [rip + 0x1dc37], 0
0xc131:	mov	qword ptr [rip + 0x1dc0c], 0
0xc13c:	mov	rdi, qword ptr [rip + 0x1dd9d]
0xc143:	call	0x4c50
0xc148:	mov	rdi, qword ptr [rip + 0x1ddb1]
0xc14f:	mov	dword ptr [rip + 0x1dd9b], eax
0xc155:	call	0x4c50
0xc15a:	mov	rdi, qword ptr [rip + 0x1dc3f]
0xc161:	mov	rsi, r13
0xc164:	mov	dword ptr [rip + 0x1dda6], eax
0xc16a:	call	0x4ca0
0xc16f:	mov	rdi, qword ptr [rip + 0x1dc4a]
0xc176:	mov	rsi, r13
0xc179:	mov	qword ptr [rip + 0x1dc28], rax
0xc180:	call	0x4ca0
0xc185:	cmp	qword ptr [rip + 0x1dc1b], 0
0xc18d:	mov	qword ptr [rip + 0x1dc34], rax
0xc194:	je	0xc2a0
0xc19a:	test	rax, rax
0xc19d:	je	0xc2a0
0xc1a3:	mov	rdi, qword ptr [rip + 0x1dc36]
0xc1aa:	mov	rsi, r13
0xc1ad:	lea	rbp, [rip + 0x1ddac]
0xc1b4:	lea	rbx, [rbp - 0x220]
0xc1bb:	call	0x4ca0
0xc1c0:	mov	rdi, qword ptr [rip + 0x1dc39]
0xc1c7:	mov	rsi, r13
0xc1ca:	lea	r12, [rbx + 0x4c0]
0xc1d1:	mov	qword ptr [rip + 0x1dc10], rax
0xc1d8:	call	0x4ca0
0xc1dd:	mov	rdi, qword ptr [rip + 0x1dd3c]
0xc1e4:	mov	rsi, r13
0xc1e7:	mov	qword ptr [rip + 0x1dc1a], rax
0xc1ee:	call	0x4ca0
0xc1f3:	mov	rdi, qword ptr [rip + 0x1dd46]
0xc1fa:	mov	rsi, r13
0xc1fd:	mov	qword ptr [rip + 0x1dd24], rax
0xc204:	call	0x4ca0
0xc209:	mov	qword ptr [rip + 0x1dd38], rax
0xc210:	mov	rdi, qword ptr [rbp]
0xc214:	mov	rsi, r13
0xc217:	add	rbp, 0x20
0xc21b:	call	0x4ca0
0xc220:	mov	qword ptr [rbp - 0x18], rax
0xc224:	cmp	rbp, r12
0xc227:	jne	0xc210
0xc229:	xor	ebp, ebp
0xc22b:	lea	r13, [rip + 0x161b3]
0xc232:	lea	r14, [rip + 0x14c57]
0xc239:	jmp	0xc249
0xc23b:	nop	dword ptr [rax + rax]
0xc240:	add	rbx, 0x20
0xc244:	cmp	rbx, r12
0xc247:	je	0xc268
0xc249:	cmp	qword ptr [rbx + 8], 0
0xc24e:	jne	0xc240
0xc250:	mov	eax, dword ptr [rbx + 0x14]
0xc253:	test	eax, eax
0xc255:	jne	0xc2e0
0xc25b:	mov	qword ptr [rbx + 8], r13
0xc25f:	add	rbx, 0x20
0xc263:	cmp	rbx, r12
0xc266:	jne	0xc249
0xc268:	test	ebp, ebp
0xc26a:	jne	0xc390
0xc270:	mov	rax, qword ptr [rsp + 0xa8]
0xc278:	sub	rax, qword ptr fs:[0x28]
0xc281:	jne	0xc3be
0xc287:	add	rsp, 0xb0
0xc28e:	pop	rbx
0xc28f:	pop	rbp
0xc290:	pop	r12
0xc292:	pop	r13
0xc294:	pop	r14
0xc296:	ret	
0xc297:	nop	word ptr [rax + rax]
0xc2a0:	mov	qword ptr [rip + 0x1dafd], 0
0xc2ab:	mov	qword ptr [rip + 0x1db12], 0
0xc2b6:	jmp	0xc1a3
0xc2bb:	nop	dword ptr [rax + rax]
0xc2c0:	mov	qword ptr [rip + 0x1e66d], 0
0xc2cb:	mov	qword ptr [rip + 0x1e66a], 0
0xc2d6:	jmp	0xc07d
0xc2db:	nop	dword ptr [rax + rax]
0xc2e0:	mov	r8, qword ptr [rbx]
0xc2e3:	mov	rcx, qword ptr [rip + 0x1e5fe]
0xc2ea:	mov	rdx, r14
0xc2ed:	xor	eax, eax
0xc2ef:	mov	rdi, qword ptr [rip + 0x1e58a]
0xc2f6:	mov	esi, 1
0xc2fb:	add	ebp, 1
0xc2fe:	call	0x4e60
0xc303:	jmp	0xc240
0xc308:	mov	rcx, qword ptr [rip + 0x1e5d9]
0xc30f:	mov	rdi, qword ptr [rip + 0x1e56a]
0xc316:	lea	rdx, [rip + 0x14aab]
0xc31d:	xor	eax, eax
0xc31f:	mov	esi, 1
0xc324:	call	0x4e60
0xc329:	mov	rcx, qword ptr [rip + 0x1e550]
0xc330:	mov	edx, 0x11
0xc335:	mov	esi, 1
0xc33a:	lea	rdi, [rip + 0x148f3]
0xc341:	lea	rbp, [rip + 0x1d9d1]
0xc348:	call	0x4e40
0xc34d:	jmp	0xbe58
0xc352:	mov	qword ptr [rip + 0x1da2b], 0
0xc35d:	mov	qword ptr [rip + 0x1da00], 0
0xc368:	jmp	0xc0cd
0xc36d:	mov	rcx, qword ptr [rip + 0x1e574]
0xc374:	mov	rdi, qword ptr [rip + 0x1e505]
0xc37b:	lea	rdx, [rip + 0x14a16]
0xc382:	xor	eax, eax
0xc384:	mov	esi, 1
0xc389:	call	0x4e60
0xc38e:	jmp	0xc329
0xc390:	mov	rcx, qword ptr [rip + 0x1e551]
0xc397:	mov	rdi, qword ptr [rip + 0x1e4e2]
0xc39e:	mov	r8d, ebp
0xc3a1:	xor	eax, eax
0xc3a3:	lea	rdx, [rip + 0x14b16]
0xc3aa:	mov	esi, 1
0xc3af:	call	0x4e60
0xc3b4:	mov	edi, 1
0xc3b9:	call	0x4e20
0xc3be:	call	0x49d0
0xc3c3:	nop	word ptr cs:[rax + rax]
0xc3ce:	nop	
0xc3d0:	endbr64	
0xc3d4:	push	rbx
0xc3d5:	mov	ebx, edi
0xc3d7:	xor	edi, edi
0xc3d9:	call	0x48f0
0xc3de:	test	eax, eax
0xc3e0:	je	0xc453
0xc3e2:	mov	edi, 1
0xc3e7:	call	0x48f0
0xc3ec:	test	eax, eax
0xc3ee:	je	0xc453
0xc3f0:	mov	edi, 1
0xc3f5:	call	0x4cd0
0xc3fa:	mov	qword ptr [rip + 0x1e58f], rax
0xc401:	test	rax, rax
0xc404:	je	0xc47e
0xc406:	lea	rsi, [rip + 0x1efb3]
0xc40d:	mov	edi, 1
0xc412:	call	0x4d60
0xc417:	mov	edi, 0x40
0xc41c:	call	0x1d670
0xc421:	mov	dword ptr [rip + 0x1efd5], ebx
0xc427:	pop	rbx
0xc428:	mov	qword ptr [rip + 0x1ef31], rax
0xc42f:	mov	qword ptr [rip + 0x1e52a], rax
0xc436:	xor	eax, eax
0xc438:	mov	qword ptr [rip + 0x1e52d], 0
0xc443:	mov	qword ptr [rip + 0x1e51a], 0
0xc44e:	jmp	0xbde0
0xc453:	mov	rdi, qword ptr [rip + 0x1e426]
0xc45a:	mov	rcx, qword ptr [rip + 0x1e487]
0xc461:	lea	rdx, [rip + 0x14a88]
0xc468:	xor	eax, eax
0xc46a:	mov	esi, 1
0xc46f:	call	0x4e60
0xc474:	mov	edi, 1
0xc479:	call	0x4e20
0xc47e:	mov	rdi, qword ptr [rip + 0x1e3fb]
0xc485:	mov	rcx, qword ptr [rip + 0x1e45c]
0xc48c:	mov	esi, 1
0xc491:	lea	rdx, [rip + 0x147f8]
0xc498:	call	0x4e60
0xc49d:	mov	edi, 1
0xc4a2:	call	0x4e20
0xc4a7:	nop	word ptr [rax + rax]
0xc4b0:	endbr64	
0xc4b4:	push	r12
0xc4b6:	push	rbp
0xc4b7:	mov	rbp, rdi
0xc4ba:	mov	rdi, qword ptr [rip + 0x1e48f]
0xc4c1:	push	rbx
0xc4c2:	call	0x9940
0xc4c7:	test	eax, eax
0xc4c9:	jne	0xc4d0
0xc4cb:	pop	rbx
0xc4cc:	pop	rbp
0xc4cd:	pop	r12
0xc4cf:	ret	
0xc4d0:	mov	rdi, rbp
0xc4d3:	call	0x49b0
0xc4d8:	lea	rdi, [rax + 0x81]
0xc4df:	mov	rbx, rax
0xc4e2:	call	0x1d670
0xc4e7:	mov	rdi, rbp
0xc4ea:	mov	r12, rax
0xc4ed:	call	0x1d7a0
0xc4f2:	mov	rsi, rbx
0xc4f5:	add	ebx, 0x7f
0xc4f8:	mov	rbp, rax
0xc4fb:	mov	rdi, rax
0xc4fe:	call	0x184d0
0xc503:	push	7
0xc505:	lea	rcx, [rip + 0x147a2]
0xc50c:	xor	eax, eax
0xc50e:	push	rbp
0xc50f:	mov	rdx, -1
0xc516:	mov	esi, 1
0xc51b:	mov	rdi, r12
0xc51e:	lea	r9, [rip + 0x14040]
0xc525:	mov	r8d, 0x1b
0xc52b:	call	0x4f10
0xc530:	mov	eax, dword ptr [rip + 0x1e462]
0xc536:	pop	rdx
0xc537:	pop	rcx
0xc538:	add	eax, eax
0xc53a:	cmp	ebx, eax
0xc53c:	jl	0xc555
0xc53e:	cdqe	
0xc540:	mov	byte ptr [r12 + rax], 7
0xc545:	mov	eax, dword ptr [rip + 0x1e44d]
0xc54b:	add	eax, eax
0xc54d:	cdqe	
0xc54f:	mov	byte ptr [r12 + rax + 1], 0
0xc555:	mov	rdi, r12
0xc558:	call	0x49b0
0xc55d:	mov	rsi, r12
0xc560:	mov	edi, 1
0xc565:	mov	rdx, rax
0xc568:	call	0x18da0
0xc56d:	mov	rdi, rbp
0xc570:	call	0x18d10
0xc575:	mov	rdi, r12
0xc578:	call	0x18d10
0xc57d:	mov	rdi, qword ptr [rip + 0x1e2bc]
0xc584:	pop	rbx
0xc585:	pop	rbp
0xc586:	pop	r12
0xc588:	jmp	0x4c40
0xc58d:	nop	dword ptr [rax]
0xc590:	endbr64	
0xc594:	sub	rsp, 8
0xc598:	mov	edi, 0x18
0xc59d:	call	0x1d670
0xc5a2:	mov	qword ptr [rax], 0
0xc5a9:	mov	qword ptr [rax + 8], 0
0xc5b1:	add	rsp, 8
0xc5b5:	ret	
0xc5b6:	nop	word ptr cs:[rax + rax]
0xc5c0:	endbr64	
0xc5c4:	test	rdi, rdi
0xc5c7:	je	0xc5d0
0xc5c9:	jmp	0x18d10
0xc5ce:	nop	
0xc5d0:	ret	
0xc5d1:	nop	word ptr cs:[rax + rax]
0xc5dc:	nop	dword ptr [rax]
0xc5e0:	endbr64	
0xc5e4:	mov	dword ptr [rdi], esi
0xc5e6:	mov	dword ptr [rdi + 4], edx
0xc5e9:	mov	dword ptr [rdi + 8], ecx
0xc5ec:	mov	dword ptr [rdi + 0xc], r8d
0xc5f0:	ret	
0xc5f1:	nop	word ptr cs:[rax + rax]
0xc5fc:	nop	dword ptr [rax]
0xc600:	endbr64	
0xc604:	mov	rax, rdi
0xc607:	mov	rdi, rsi
0xc60a:	mov	esi, edx
0xc60c:	mov	ecx, dword ptr [rax + 0x10]
0xc60f:	lea	r8d, [rcx + rdx]
0xc613:	mov	edx, dword ptr [rax + 0xc]
0xc616:	mov	dword ptr [rax + 0x10], r8d
0xc61a:	cmp	edx, ecx
0xc61c:	jle	0xc640
0xc61e:	mov	r9d, dword ptr [rax + 8]
0xc622:	cmp	dword ptr [rax + 0x14], r9d
0xc626:	jge	0xc640
0xc628:	cmp	r8d, edx
0xc62b:	jle	0xc631
0xc62d:	sub	edx, ecx
0xc62f:	mov	esi, edx
0xc631:	jmp	0xa1a0
0xc636:	nop	word ptr cs:[rax + rax]
0xc640:	xor	eax, eax
0xc642:	ret	
0xc643:	nop	word ptr cs:[rax + rax]
0xc64e:	nop	
0xc650:	endbr64	
0xc654:	mov	ecx, dword ptr [rdi + 0x10]
0xc657:	lea	edx, [rcx + 1]
0xc65a:	mov	dword ptr [rdi + 0x10], edx
0xc65d:	cmp	edx, dword ptr [rdi + 0xc]
0xc660:	jg	0xc66a
0xc662:	mov	ecx, dword ptr [rdi + 8]
0xc665:	cmp	dword ptr [rdi + 0x14], ecx
0xc668:	jl	0xc670
0xc66a:	xor	eax, eax
0xc66c:	ret	
0xc66d:	nop	dword ptr [rax]
0xc670:	mov	edi, esi
0xc672:	jmp	0xa230
0xc677:	nop	word ptr [rax + rax]
0xc680:	endbr64	
0xc684:	mov	rax, rdi
0xc687:	mov	edi, esi
0xc689:	mov	dword ptr [rax + 0x10], edx
0xc68c:	add	edx, dword ptr [rax]
0xc68e:	mov	dword ptr [rax + 0x14], esi
0xc691:	add	edi, dword ptr [rax + 4]
0xc694:	mov	esi, edx
0xc696:	jmp	0xa4b0
0xc69b:	nop	dword ptr [rax + rax]
0xc6a0:	endbr64	
0xc6a4:	mov	eax, dword ptr [rdi]
0xc6a6:	ret	
0xc6a7:	nop	word ptr [rax + rax]
0xc6b0:	endbr64	
0xc6b4:	mov	eax, dword ptr [rdi + 4]
0xc6b7:	ret	
0xc6b8:	nop	dword ptr [rax + rax]
0xc6c0:	endbr64	
0xc6c4:	mov	eax, dword ptr [rdi + 8]
0xc6c7:	ret	
0xc6c8:	nop	dword ptr [rax + rax]
0xc6d0:	endbr64	
0xc6d4:	mov	eax, dword ptr [rdi + 0xc]
0xc6d7:	ret	
0xc6d8:	nop	dword ptr [rax + rax]
0xc6e0:	push	r14
0xc6e2:	push	r13
0xc6e4:	push	r12
0xc6e6:	mov	r12, qword ptr [rip + 0x1ed1b]
0xc6ed:	push	rbp
0xc6ee:	push	rbx
0xc6ef:	mov	r13, qword ptr [r12 + 0x20]
0xc6f4:	mov	rbx, qword ptr [r12 + 0x18]
0xc6f9:	cmp	r13, rbx
0xc6fc:	je	0xc761
0xc6fe:	mov	ebp, edi
0xc700:	jbe	0xc770
0xc702:	test	bpl, 1
0xc706:	je	0xc75c
0xc708:	mov	rdi, qword ptr [r12 + 0x60]
0xc70d:	test	rdi, rdi
0xc710:	je	0xc71e
0xc712:	call	0x18d10
0xc717:	mov	r12, qword ptr [rip + 0x1ecea]
0xc71e:	mov	r14, r13
0xc721:	sub	r14, rbx
0xc724:	lea	rdi, [r14 + 1]
0xc728:	call	0x1d670
0xc72d:	mov	rdx, r14
0xc730:	mov	qword ptr [r12 + 0x60], rax
0xc735:	mov	rax, qword ptr [rip + 0x1eccc]
0xc73c:	mov	rsi, qword ptr [rax + 0x58]
0xc740:	mov	rdi, qword ptr [rax + 0x60]
0xc744:	add	rsi, rbx
0xc747:	call	0x4bb0
0xc74c:	mov	rax, qword ptr [rip + 0x1ecb5]
0xc753:	mov	rax, qword ptr [rax + 0x60]
0xc757:	mov	byte ptr [rax + r14], 0
0xc75c:	and	ebp, 2
0xc75f:	jne	0xc788
0xc761:	pop	rbx
0xc762:	pop	rbp
0xc763:	pop	r12
0xc765:	pop	r13
0xc767:	pop	r14
0xc769:	ret	
0xc76a:	nop	word ptr [rax + rax]
0xc770:	mov	rax, rbx
0xc773:	mov	rbx, r13
0xc776:	mov	r13, rax
0xc779:	test	bpl, 1
0xc77d:	je	0xc75c
0xc77f:	jmp	0xc708
0xc781:	nop	dword ptr [rax]
0xc788:	mov	rax, qword ptr [rip + 0x1ec79]
0xc78f:	mov	rdx, rbx
0xc792:	sub	rdx, r13
0xc795:	add	qword ptr [rax + 0x48], rdx
0xc799:	mov	rdi, qword ptr [rax + 0x58]
0xc79d:	add	qword ptr [rax + 0x38], rdx
0xc7a1:	mov	qword ptr [rax + 0x18], rbx
0xc7a5:	lea	rsi, [rdi + r13]
0xc7a9:	add	rdi, rbx
0xc7ac:	mov	qword ptr [rax + 0x20], rbx
0xc7b0:	call	0x48b0
0xc7b5:	mov	rbx, qword ptr [rip + 0x1ec4c]
0xc7bc:	mov	rax, qword ptr [rbx + 0x38]
0xc7c0:	mov	rdi, qword ptr [rbx + 0x58]
0xc7c4:	lea	rsi, [rax + 1]
0xc7c8:	mov	qword ptr [rbx + 0x50], rsi
0xc7cc:	call	0x1d690
0xc7d1:	mov	qword ptr [rbx + 0x58], rax
0xc7d5:	pop	rbx
0xc7d6:	pop	rbp
0xc7d7:	pop	r12
0xc7d9:	pop	r13
0xc7db:	pop	r14
0xc7dd:	ret	
0xc7de:	nop	
0xc7e0:	endbr64	
0xc7e4:	test	rdi, rdi
0xc7e7:	je	0xc818
0xc7e9:	push	rbp
0xc7ea:	mov	rbp, rdi
0xc7ed:	mov	rdi, qword ptr [rdi + 0x58]
0xc7f1:	test	rdi, rdi
0xc7f4:	je	0xc7fb
0xc7f6:	call	0x18d10
0xc7fb:	mov	rdi, qword ptr [rbp + 0x60]
0xc7ff:	test	rdi, rdi
0xc802:	je	0xc809
0xc804:	call	0x18d10
0xc809:	mov	rdi, rbp
0xc80c:	pop	rbp
0xc80d:	jmp	0x18d10
0xc812:	nop	word ptr [rax + rax]
0xc818:	ret	
0xc819:	nop	dword ptr [rax]
0xc820:	endbr64	
0xc824:	mov	rax, qword ptr [rip + 0x1ebdd]
0xc82b:	push	rbp
0xc82c:	mov	rdi, qword ptr [rax + 0x68]
0xc830:	xor	eax, eax
0xc832:	call	0x1aac0
0xc837:	mov	rax, qword ptr [rip + 0x1ebca]
0xc83e:	mov	rdi, qword ptr [rax]
0xc841:	call	0xc5c0
0xc846:	mov	rbp, qword ptr [rip + 0x1ebbb]
0xc84d:	test	rbp, rbp
0xc850:	je	0xc876
0xc852:	mov	rdi, qword ptr [rbp + 0x58]
0xc856:	test	rdi, rdi
0xc859:	je	0xc860
0xc85b:	call	0x18d10
0xc860:	mov	rdi, qword ptr [rbp + 0x60]
0xc864:	test	rdi, rdi
0xc867:	je	0xc86e
0xc869:	call	0x18d10
0xc86e:	mov	rdi, rbp
0xc871:	call	0x18d10
0xc876:	mov	qword ptr [rip + 0x1eb87], 0
0xc881:	pop	rbp
0xc882:	ret	
0xc883:	nop	word ptr cs:[rax + rax]
0xc88e:	nop	
0xc890:	endbr64	
0xc894:	mov	rax, qword ptr [rip + 0x1eb6d]
0xc89b:	movsxd	rcx, edi
0xc89e:	mov	edx, esi
0xc8a0:	mov	r8, rcx
0xc8a3:	mov	qword ptr [rax + 0x28], rcx
0xc8a7:	movsxd	rcx, esi
0xc8aa:	mov	rdi, qword ptr [rax]
0xc8ad:	xor	esi, esi
0xc8af:	mov	qword ptr [rax + 0x30], rcx
0xc8b3:	mov	ecx, 1
0xc8b8:	jmp	0xc5e0
0xc8bd:	nop	dword ptr [rax]
0xc8c0:	endbr64	
0xc8c4:	push	r12
0xc8c6:	mov	edi, 0x70
0xc8cb:	push	rbx
0xc8cc:	sub	rsp, 8
0xc8d0:	call	0x1d670
0xc8d5:	mov	rbx, qword ptr [rip + 0x1eb2c]
0xc8dc:	mov	r12, rax
0xc8df:	movdqu	xmm0, xmmword ptr [rbx]
0xc8e3:	movups	xmmword ptr [rax], xmm0
0xc8e6:	movdqu	xmm1, xmmword ptr [rbx + 0x10]
0xc8eb:	movups	xmmword ptr [rax + 0x10], xmm1
0xc8ef:	movdqu	xmm2, xmmword ptr [rbx + 0x20]
0xc8f4:	movups	xmmword ptr [rax + 0x20], xmm2
0xc8f8:	movdqu	xmm3, xmmword ptr [rbx + 0x30]
0xc8fd:	movups	xmmword ptr [rax + 0x30], xmm3
0xc901:	movdqu	xmm4, xmmword ptr [rbx + 0x40]
0xc906:	movups	xmmword ptr [rax + 0x40], xmm4
0xc90a:	movdqu	xmm5, xmmword ptr [rbx + 0x50]
0xc90f:	movups	xmmword ptr [rax + 0x50], xmm5
0xc913:	movdqu	xmm6, xmmword ptr [rbx + 0x60]
0xc918:	cmp	qword ptr [rax + 0x58], 0
0xc91d:	movups	xmmword ptr [rax + 0x60], xmm6
0xc921:	je	0xc94a
0xc923:	mov	rdi, qword ptr [rax + 0x50]
0xc927:	call	0x1d670
0xc92c:	mov	rdx, qword ptr [r12 + 0x50]
0xc931:	mov	qword ptr [rbx + 0x58], rax
0xc935:	mov	rax, qword ptr [rip + 0x1eacc]
0xc93c:	mov	rsi, qword ptr [r12 + 0x58]
0xc941:	mov	rdi, qword ptr [rax + 0x58]
0xc945:	call	0x4bb0
0xc94a:	mov	rdi, qword ptr [r12 + 0x60]
0xc94f:	test	rdi, rdi
0xc952:	je	0xc964
0xc954:	mov	rbx, qword ptr [rip + 0x1eaad]
0xc95b:	call	0x1d7a0
0xc960:	mov	qword ptr [rbx + 0x60], rax
0xc964:	add	rsp, 8
0xc968:	mov	rax, r12
0xc96b:	pop	rbx
0xc96c:	pop	r12
0xc96e:	ret	
0xc96f:	nop	
0xc970:	endbr64	
0xc974:	test	rdi, rdi
0xc977:	je	0xc9f0
0xc979:	push	r13
0xc97b:	push	r12
0xc97d:	push	rbp
0xc97e:	push	rbx
0xc97f:	mov	rbx, rdi
0xc982:	sub	rsp, 8
0xc986:	mov	rbp, qword ptr [rip + 0x1ea7b]
0xc98d:	mov	rdi, qword ptr [rbp + 0x58]
0xc991:	mov	r13, qword ptr [rbp + 0x28]
0xc995:	mov	r12, qword ptr [rbp + 0x30]
0xc999:	test	rdi, rdi
0xc99c:	je	0xc9a3
0xc99e:	call	0x18d10
0xc9a3:	mov	rdi, qword ptr [rbp + 0x60]
0xc9a7:	test	rdi, rdi
0xc9aa:	je	0xc9b1
0xc9ac:	call	0x18d10
0xc9b1:	mov	rdi, rbp
0xc9b4:	call	0x18d10
0xc9b9:	movsxd	rax, r13d
0xc9bc:	mov	edx, r12d
0xc9bf:	movsxd	r12, r12d
0xc9c2:	mov	qword ptr [rbx + 0x28], rax
0xc9c6:	mov	rdi, qword ptr [rbx]
0xc9c9:	mov	r8d, r13d
0xc9cc:	mov	ecx, 1
0xc9d1:	mov	qword ptr [rbx + 0x30], r12
0xc9d5:	xor	esi, esi
0xc9d7:	mov	qword ptr [rip + 0x1ea2a], rbx
0xc9de:	add	rsp, 8
0xc9e2:	pop	rbx
0xc9e3:	pop	rbp
0xc9e4:	pop	r12
0xc9e6:	pop	r13
0xc9e8:	jmp	0xc5e0
0xc9ed:	nop	dword ptr [rax]
0xc9f0:	ret	
0xc9f1:	nop	word ptr cs:[rax + rax]
0xc9fc:	nop	dword ptr [rax]
0xca00:	endbr64	
0xca04:	mov	rdx, qword ptr [rip + 0x1e9fd]
0xca0b:	mov	rax, qword ptr [rdx + 0x18]
0xca0f:	sub	rax, qword ptr [rdx + 0x40]
0xca13:	ret	
0xca14:	nop	word ptr cs:[rax + rax]
0xca1f:	nop	
0xca20:	endbr64	
0xca24:	mov	rax, qword ptr [rip + 0x1e9dd]
0xca2b:	mov	r8d, dword ptr [rax + 8]
0xca2f:	mov	dword ptr [rax + 8], edi
0xca32:	mov	eax, r8d
0xca35:	ret	
0xca36:	nop	word ptr cs:[rax + rax]
0xca40:	endbr64	
0xca44:	mov	rax, qword ptr [rip + 0x1e9bd]
0xca4b:	cmp	qword ptr [rax + 0x48], 0
0xca50:	sete	al
0xca53:	movzx	eax, al
0xca56:	ret	
0xca57:	nop	word ptr [rax + rax]
0xca60:	endbr64	
0xca64:	mov	rax, qword ptr [rip + 0x1e99d]
0xca6b:	mov	rdx, qword ptr [rax + 0x18]
0xca6f:	mov	qword ptr [rax + 0x20], rdx
0xca73:	ret	
0xca74:	nop	word ptr cs:[rax + rax]
0xca7f:	nop	
0xca80:	endbr64	
0xca84:	sub	rsp, 8
0xca88:	xor	eax, eax
0xca8a:	mov	edi, 3
0xca8f:	call	0xc6e0
0xca94:	mov	rax, qword ptr [rip + 0x1e96d]
0xca9b:	mov	dword ptr [rax + 0x10], 0x18
0xcaa2:	add	rsp, 8
0xcaa6:	ret	
0xcaa7:	nop	word ptr [rax + rax]
0xcab0:	endbr64	
0xcab4:	sub	rsp, 8
0xcab8:	xor	eax, eax
0xcaba:	mov	edi, 1
0xcabf:	call	0xc6e0
0xcac4:	mov	rax, qword ptr [rip + 0x1e93d]
0xcacb:	mov	dword ptr [rax + 0x10], 0x19
0xcad2:	add	rsp, 8
0xcad6:	ret	
0xcad7:	nop	word ptr [rax + rax]
0xcae0:	endbr64	
0xcae4:	mov	rax, qword ptr [rip + 0x1e91d]
0xcaeb:	mov	rdx, qword ptr [rax + 0x18]
0xcaef:	mov	rcx, qword ptr [rax + 0x20]
0xcaf3:	movsxd	rdx, edx
0xcaf6:	mov	qword ptr [rax + 0x18], rcx
0xcafa:	mov	qword ptr [rax + 0x20], rdx
0xcafe:	ret	
0xcaff:	nop	
0xcb00:	endbr64	
0xcb04:	mov	rax, qword ptr [rip + 0x1e8fd]
0xcb0b:	mov	rdx, qword ptr [rax + 0x18]
0xcb0f:	cmp	rdx, qword ptr [rax + 0x40]
0xcb13:	jbe	0xcb24
0xcb15:	sub	rdx, 1
0xcb19:	mov	dword ptr [rax + 0x10], 1
0xcb20:	mov	qword ptr [rax + 0x18], rdx
0xcb24:	ret	
0xcb25:	nop	word ptr cs:[rax + rax]
0xcb30:	endbr64	
0xcb34:	mov	rax, qword ptr [rip + 0x1e8cd]
0xcb3b:	mov	rdx, qword ptr [rax + 0x18]
0xcb3f:	cmp	rdx, qword ptr [rax + 0x38]
0xcb43:	jae	0xcb54
0xcb45:	add	rdx, 1
0xcb49:	mov	dword ptr [rax + 0x10], 2
0xcb50:	mov	qword ptr [rax + 0x18], rdx
0xcb54:	ret	
0xcb55:	nop	word ptr cs:[rax + rax]
0xcb60:	endbr64	
0xcb64:	mov	rdx, qword ptr [rip + 0x1e89d]
0xcb6b:	mov	rax, qword ptr [rdx + 0x18]
0xcb6f:	mov	rdi, qword ptr [rdx + 0x40]
0xcb73:	cmp	rax, rdi
0xcb76:	jbe	0xcc20
0xcb7c:	mov	r8, qword ptr [rdx + 0x58]
0xcb80:	jmp	0xcba9
0xcb82:	nop	word ptr [rax + rax]
0xcb88:	lea	ecx, [rsi - 0x30]
0xcb8b:	cmp	cl, 9
0xcb8e:	jbe	0xcbbf
0xcb90:	sub	esi, 0x24
0xcb93:	cmp	sil, 1
0xcb97:	jbe	0xcbbf
0xcb99:	mov	qword ptr [rdx + 0x18], rax
0xcb9d:	mov	dword ptr [rdx + 0x10], 1
0xcba4:	cmp	rdi, rax
0xcba7:	jae	0xcbef
0xcba9:	sub	rax, 1
0xcbad:	movzx	esi, byte ptr [r8 + rax]
0xcbb2:	mov	ecx, esi
0xcbb4:	and	ecx, 0xffffffdf
0xcbb7:	sub	ecx, 0x41
0xcbba:	cmp	cl, 0x19
0xcbbd:	ja	0xcb88
0xcbbf:	mov	rax, qword ptr [rdx + 0x18]
0xcbc3:	cmp	rdi, rax
0xcbc6:	jae	0xcbef
0xcbc8:	sub	rax, 1
0xcbcc:	movzx	esi, byte ptr [r8 + rax]
0xcbd1:	mov	ecx, esi
0xcbd3:	and	ecx, 0xffffffdf
0xcbd6:	sub	ecx, 0x41
0xcbd9:	cmp	cl, 0x19
0xcbdc:	jbe	0xcc00
0xcbde:	lea	ecx, [rsi - 0x30]
0xcbe1:	cmp	cl, 9
0xcbe4:	jbe	0xcc00
0xcbe6:	sub	esi, 0x24
0xcbe9:	cmp	sil, 1
0xcbed:	jbe	0xcc00
0xcbef:	mov	dword ptr [rdx + 0x10], 3
0xcbf6:	ret	
0xcbf7:	nop	word ptr [rax + rax]
0xcc00:	mov	qword ptr [rdx + 0x18], rax
0xcc04:	mov	dword ptr [rdx + 0x10], 1
0xcc0b:	cmp	rdi, rax
0xcc0e:	jb	0xcbc8
0xcc10:	mov	dword ptr [rdx + 0x10], 3
0xcc17:	ret	
0xcc18:	nop	dword ptr [rax + rax]
0xcc20:	ret	
0xcc21:	nop	word ptr cs:[rax + rax]
0xcc2c:	nop	dword ptr [rax]
0xcc30:	endbr64	
0xcc34:	mov	rdx, qword ptr [rip + 0x1e7cd]
0xcc3b:	mov	rax, qword ptr [rdx + 0x18]
0xcc3f:	mov	rdi, qword ptr [rdx + 0x38]
0xcc43:	cmp	rax, rdi
0xcc46:	jae	0xcce8
0xcc4c:	mov	r8, qword ptr [rdx + 0x58]
0xcc50:	jmp	0xcc7d
0xcc52:	nop	word ptr [rax + rax]
0xcc58:	lea	ecx, [rsi - 0x30]
0xcc5b:	cmp	cl, 9
0xcc5e:	jbe	0xcc8f
0xcc60:	sub	esi, 0x24
0xcc63:	cmp	sil, 1
0xcc67:	jbe	0xcc8f
0xcc69:	add	rax, 1
0xcc6d:	mov	dword ptr [rdx + 0x10], 2
0xcc74:	mov	qword ptr [rdx + 0x18], rax
0xcc78:	cmp	rdi, rax
0xcc7b:	je	0xccbb
0xcc7d:	movzx	esi, byte ptr [r8 + rax]
0xcc82:	mov	ecx, esi
0xcc84:	and	ecx, 0xffffffdf
0xcc87:	sub	ecx, 0x41
0xcc8a:	cmp	cl, 0x19
0xcc8d:	ja	0xcc58
0xcc8f:	mov	rax, qword ptr [rdx + 0x18]
0xcc93:	cmp	rdi, rax
0xcc96:	jbe	0xccbb
0xcc98:	movzx	esi, byte ptr [r8 + rax]
0xcc9d:	mov	ecx, esi
0xcc9f:	and	ecx, 0xffffffdf
0xcca2:	sub	ecx, 0x41
0xcca5:	cmp	cl, 0x19
0xcca8:	jbe	0xccc8
0xccaa:	lea	ecx, [rsi - 0x30]
0xccad:	cmp	cl, 9
0xccb0:	jbe	0xccc8
0xccb2:	sub	esi, 0x24
0xccb5:	cmp	sil, 1
0xccb9:	jbe	0xccc8
0xccbb:	mov	dword ptr [rdx + 0x10], 4
0xccc2:	ret	
0xccc3:	nop	dword ptr [rax + rax]
0xccc8:	add	rax, 1
0xcccc:	mov	dword ptr [rdx + 0x10], 2
0xccd3:	mov	qword ptr [rdx + 0x18], rax
0xccd7:	cmp	rdi, rax
0xccda:	jne	0xcc98
0xccdc:	mov	dword ptr [rdx + 0x10], 4
0xcce3:	ret	
0xcce4:	nop	dword ptr [rax]
0xcce8:	ret	
0xcce9:	nop	dword ptr [rax]
0xccf0:	endbr64	
0xccf4:	mov	rax, qword ptr [rip + 0x1e70d]
0xccfb:	mov	rdx, qword ptr [rax + 0x40]
0xccff:	mov	dword ptr [rax + 0x10], 5
0xcd06:	mov	qword ptr [rax + 0x18], rdx
0xcd0a:	ret	
0xcd0b:	nop	dword ptr [rax + rax]
0xcd10:	endbr64	
0xcd14:	mov	rax, qword ptr [rip + 0x1e6ed]
0xcd1b:	mov	rdx, qword ptr [rax + 0x38]
0xcd1f:	mov	dword ptr [rax + 0x10], 6
0xcd26:	mov	qword ptr [rax + 0x18], rdx
0xcd2a:	ret	
0xcd2b:	nop	dword ptr [rax + rax]
0xcd30:	endbr64	
0xcd34:	push	rbp
0xcd35:	push	rbx
0xcd36:	mov	ebx, edi
0xcd38:	sub	rsp, 8
0xcd3c:	call	0x4f00
0xcd41:	movsxd	rdx, ebx
0xcd44:	mov	rax, qword ptr [rax]
0xcd47:	test	byte ptr [rax + rdx*2 + 1], 0x40
0xcd4c:	je	0xcdab
0xcd4e:	mov	rbp, qword ptr [rip + 0x1e6b3]
0xcd55:	mov	rsi, qword ptr [rbp + 0x38]
0xcd59:	lea	rdx, [rsi + 1]
0xcd5d:	cmp	rdx, qword ptr [rbp + 0x50]
0xcd61:	jae	0xcdb8
0xcd63:	mov	rax, qword ptr [rbp + 0x18]
0xcd67:	mov	rcx, qword ptr [rbp + 0x58]
0xcd6b:	sub	rdx, rax
0xcd6e:	lea	rsi, [rcx + rax]
0xcd72:	lea	rdi, [rcx + rax + 1]
0xcd77:	call	0x4d40
0xcd7c:	mov	rax, qword ptr [rip + 0x1e685]
0xcd83:	mov	rdx, qword ptr [rax + 0x58]
0xcd87:	mov	rax, qword ptr [rax + 0x18]
0xcd8b:	mov	byte ptr [rdx + rax], bl
0xcd8e:	mov	rax, qword ptr [rip + 0x1e673]
0xcd95:	add	qword ptr [rax + 0x18], 1
0xcd9a:	add	qword ptr [rax + 0x38], 1
0xcd9f:	add	qword ptr [rax + 0x48], 1
0xcda4:	mov	dword ptr [rax + 0x10], 7
0xcdab:	add	rsp, 8
0xcdaf:	pop	rbx
0xcdb0:	pop	rbp
0xcdb1:	ret	
0xcdb2:	nop	word ptr [rax + rax]
0xcdb8:	add	rsi, 0x21
0xcdbc:	mov	rdi, qword ptr [rbp + 0x58]
0xcdc0:	mov	qword ptr [rbp + 0x50], rsi
0xcdc4:	call	0x1d690
0xcdc9:	mov	qword ptr [rbp + 0x58], rax
0xcdcd:	mov	rbp, qword ptr [rip + 0x1e634]
0xcdd4:	mov	rax, qword ptr [rbp + 0x38]
0xcdd8:	lea	rdx, [rax + 1]
0xcddc:	jmp	0xcd63
0xcdde:	nop	
0xcde0:	endbr64	
0xcde4:	mov	rax, qword ptr [rip + 0x1e61d]
0xcdeb:	mov	rcx, qword ptr [rax + 0x18]
0xcdef:	mov	rdx, qword ptr [rax + 0x38]
0xcdf3:	cmp	rcx, rdx
0xcdf6:	jb	0xce00
0xcdf8:	ret	
0xcdf9:	nop	dword ptr [rax]
0xce00:	push	rbx
0xce01:	mov	rax, qword ptr [rax + 0x58]
0xce05:	add	rdx, 1
0xce09:	sub	rdx, rcx
0xce0c:	lea	rsi, [rax + rcx + 1]
0xce11:	lea	rdi, [rax + rcx]
0xce15:	call	0x4bb0
0xce1a:	mov	rbx, qword ptr [rip + 0x1e5e7]
0xce21:	mov	rsi, qword ptr [rbx + 0x38]
0xce25:	sub	qword ptr [rbx + 0x48], 1
0xce2a:	lea	rax, [rsi - 1]
0xce2e:	mov	qword ptr [rbx + 0x38], rax
0xce32:	test	al, 0xf
0xce34:	je	0xce40
0xce36:	mov	dword ptr [rbx + 0x10], 8
0xce3d:	pop	rbx
0xce3e:	ret	
0xce3f:	nop	
0xce40:	mov	qword ptr [rbx + 0x50], rsi
0xce44:	mov	rdi, qword ptr [rbx + 0x58]
0xce48:	call	0x1d690
0xce4d:	mov	qword ptr [rbx + 0x58], rax
0xce51:	mov	rbx, qword ptr [rip + 0x1e5b0]
0xce58:	mov	dword ptr [rbx + 0x10], 8
0xce5f:	pop	rbx
0xce60:	ret	
0xce61:	nop	word ptr cs:[rax + rax]
0xce6c:	nop	dword ptr [rax]
0xce70:	endbr64	
0xce74:	mov	rax, qword ptr [rip + 0x1e58d]
0xce7b:	mov	rcx, qword ptr [rax + 0x18]
0xce7f:	cmp	rcx, qword ptr [rax + 0x40]
0xce83:	ja	0xce90
0xce85:	ret	
0xce86:	nop	word ptr cs:[rax + rax]
0xce90:	push	rbx
0xce91:	mov	rdx, qword ptr [rax + 0x38]
0xce95:	mov	rsi, qword ptr [rax + 0x58]
0xce99:	add	rdx, 1
0xce9d:	lea	rdi, [rsi + rcx - 1]
0xcea2:	sub	rdx, rcx
0xcea5:	add	rsi, rcx
0xcea8:	call	0x4bb0
0xcead:	mov	rbx, qword ptr [rip + 0x1e554]
0xceb4:	mov	rsi, qword ptr [rbx + 0x38]
0xceb8:	sub	qword ptr [rbx + 0x18], 1
0xcebd:	sub	qword ptr [rbx + 0x48], 1
0xcec2:	lea	rax, [rsi - 1]
0xcec6:	mov	qword ptr [rbx + 0x38], rax
0xceca:	test	al, 0xf
0xcecc:	je	0xcee0
0xcece:	mov	dword ptr [rbx + 0x10], 9
0xced5:	pop	rbx
0xced6:	ret	
0xced7:	nop	word ptr [rax + rax]
0xcee0:	mov	qword ptr [rbx + 0x50], rsi
0xcee4:	mov	rdi, qword ptr [rbx + 0x58]
0xcee8:	call	0x1d690
0xceed:	mov	qword ptr [rbx + 0x58], rax
0xcef1:	mov	rbx, qword ptr [rip + 0x1e510]
0xcef8:	mov	dword ptr [rbx + 0x10], 9
0xceff:	pop	rbx
0xcf00:	ret	
0xcf01:	nop	word ptr cs:[rax + rax]
0xcf0c:	nop	dword ptr [rax]
0xcf10:	endbr64	
0xcf14:	push	rbp
0xcf15:	push	rbx
0xcf16:	sub	rsp, 8
0xcf1a:	mov	r9, qword ptr [rip + 0x1e4e7]
0xcf21:	mov	rax, qword ptr [r9 + 0x18]
0xcf25:	mov	rbx, qword ptr [r9 + 0x20]
0xcf29:	mov	qword ptr [r9 + 0x20], rax
0xcf2d:	xor	eax, eax
0xcf2f:	call	0xcc30
0xcf34:	xor	eax, eax
0xcf36:	mov	edi, 3
0xcf3b:	mov	rbp, qword ptr [r9 + 0x18]
0xcf3f:	call	0xc6e0
0xcf44:	mov	rax, qword ptr [rip + 0x1e4bd]
0xcf4b:	mov	rdx, qword ptr [rax + 0x18]
0xcf4f:	cmp	rdx, rbx
0xcf52:	jae	0xcf65
0xcf54:	lea	rcx, [rdx + rbx]
0xcf58:	sub	rcx, rbp
0xcf5b:	cmp	rbx, rbp
0xcf5e:	cmovae	rdx, rcx
0xcf62:	mov	rbx, rdx
0xcf65:	mov	qword ptr [rax + 0x20], rbx
0xcf69:	mov	dword ptr [rax + 0x10], 0xa
0xcf70:	add	rsp, 8
0xcf74:	pop	rbx
0xcf75:	pop	rbp
0xcf76:	ret	
0xcf77:	nop	word ptr [rax + rax]
0xcf80:	endbr64	
0xcf84:	push	rbp
0xcf85:	push	rbx
0xcf86:	sub	rsp, 8
0xcf8a:	mov	rax, qword ptr [rip + 0x1e477]
0xcf91:	mov	rbp, qword ptr [rax + 0x18]
0xcf95:	mov	rbx, qword ptr [rax + 0x20]
0xcf99:	mov	qword ptr [rax + 0x20], rbp
0xcf9d:	xor	eax, eax
0xcf9f:	call	0xcb60
0xcfa4:	xor	eax, eax
0xcfa6:	mov	edi, 3
0xcfab:	call	0xc6e0
0xcfb0:	mov	rax, qword ptr [rip + 0x1e451]
0xcfb7:	mov	rdx, qword ptr [rax + 0x18]
0xcfbb:	cmp	rdx, rbx
0xcfbe:	jae	0xcfd1
0xcfc0:	lea	rcx, [rdx + rbx]
0xcfc4:	sub	rcx, rbp
0xcfc7:	cmp	rbx, rbp
0xcfca:	cmovae	rdx, rcx
0xcfce:	mov	rbx, rdx
0xcfd1:	mov	qword ptr [rax + 0x20], rbx
0xcfd5:	mov	dword ptr [rax + 0x10], 0xb
0xcfdc:	add	rsp, 8
0xcfe0:	pop	rbx
0xcfe1:	pop	rbp
0xcfe2:	ret	
0xcfe3:	nop	word ptr cs:[rax + rax]
0xcfee:	nop	
0xcff0:	endbr64	
0xcff4:	push	rbx
0xcff5:	mov	rbx, qword ptr [rip + 0x1e40c]
0xcffc:	mov	esi, 1
0xd001:	mov	qword ptr [rbx + 0x18], 0
0xd009:	mov	rdi, qword ptr [rbx + 0x58]
0xd00d:	mov	qword ptr [rbx + 0x20], 0
0xd015:	mov	qword ptr [rbx + 0x38], 0
0xd01d:	mov	qword ptr [rbx + 0x40], 0
0xd025:	mov	qword ptr [rbx + 0x48], 0
0xd02d:	mov	qword ptr [rbx + 0x50], 1
0xd035:	call	0x1d690
0xd03a:	mov	qword ptr [rbx + 0x58], rax
0xd03e:	mov	rax, qword ptr [rip + 0x1e3c3]
0xd045:	mov	rax, qword ptr [rax + 0x58]
0xd049:	mov	byte ptr [rax], 0
0xd04c:	mov	rax, qword ptr [rip + 0x1e3b5]
0xd053:	mov	dword ptr [rax + 0x10], 0xc
0xd05a:	pop	rbx
0xd05b:	ret	
0xd05c:	nop	dword ptr [rax]
0xd060:	endbr64	
0xd064:	push	rbx
0xd065:	mov	edi, 0x70
0xd06a:	sub	rsp, 0x10
0xd06e:	mov	rax, qword ptr fs:[0x28]
0xd077:	mov	qword ptr [rsp + 8], rax
0xd07c:	xor	eax, eax
0xd07e:	call	0x1d670
0xd083:	mov	qword ptr [rax + 8], 1
0xd08b:	mov	qword ptr [rax + 0x58], 0
0xd093:	mov	qword ptr [rax + 0x60], 0
0xd09b:	mov	qword ptr [rax + 0x28], 0
0xd0a3:	mov	qword ptr [rax + 0x30], 0
0xd0ab:	mov	qword ptr [rip + 0x1e356], rax
0xd0b2:	xor	eax, eax
0xd0b4:	call	0xcff0
0xd0b9:	mov	rbx, qword ptr [rip + 0x1e348]
0xd0c0:	xor	eax, eax
0xd0c2:	call	0xc590
0xd0c7:	lea	rdi, [rip + 0x135e4]
0xd0ce:	mov	qword ptr [rbx], rax
0xd0d1:	call	0x17c50
0xd0d6:	mov	ecx, 1
0xd0db:	mov	rsi, rsp
0xd0de:	mov	edx, 1
0xd0e3:	lea	rdi, [rip + 0x13e42]
0xd0ea:	call	0x17320
0xd0ef:	mov	rdi, qword ptr [rsp]
0xd0f3:	lea	rax, [rip + 0x13e24]
0xd0fa:	mov	rbx, qword ptr [rip + 0x1e307]
0xd101:	test	rdi, rdi
0xd104:	cmove	rdi, rax
0xd108:	xor	eax, eax
0xd10a:	call	0x19940
0xd10f:	lea	rdi, [rip + 0x1cb32]
0xd116:	mov	qword ptr [rbx + 0x68], rax
0xd11a:	mov	eax, dword ptr [rip + 0x1cb40]
0xd120:	test	eax, eax
0xd122:	lea	rax, [rip + 0x1cb07]
0xd129:	cmove	rdi, rax
0xd12d:	call	0x17c50
0xd132:	lea	rdi, [rip + 0x1d0c7]
0xd139:	mov	edx, 6
0xd13e:	lea	rsi, [rip + 0x1d0db]
0xd145:	call	0x17f70
0xd14a:	xor	eax, eax
0xd14c:	call	0x1a310
0xd151:	mov	rax, qword ptr [rip + 0x1e2b0]
0xd158:	mov	rdi, qword ptr [rax + 0x68]
0xd15c:	xor	eax, eax
0xd15e:	call	0x1a900
0xd163:	nop	dword ptr [rax + rax]
0xd168:	xor	eax, eax
0xd16a:	call	0x1ab40
0xd16f:	test	rax, rax
0xd172:	jne	0xd168
0xd174:	mov	edi, 0x200
0xd179:	call	0x1a620
0xd17e:	mov	rax, qword ptr [rsp + 8]
0xd183:	sub	rax, qword ptr fs:[0x28]
0xd18c:	jne	0xd194
0xd18e:	add	rsp, 0x10
0xd192:	pop	rbx
0xd193:	ret	
0xd194:	call	0x49d0
0xd199:	nop	dword ptr [rax]
0xd1a0:	endbr64	
0xd1a4:	sub	rsp, 8
0xd1a8:	mov	rax, qword ptr [rip + 0x1e259]
0xd1af:	or	edi, 2
0xd1b2:	mov	rdx, qword ptr [rax + 0x40]
0xd1b6:	mov	dword ptr [rax + 0x10], 6
0xd1bd:	mov	qword ptr [rax + 0x20], rdx
0xd1c1:	mov	rdx, qword ptr [rax + 0x38]
0xd1c5:	mov	qword ptr [rax + 0x18], rdx
0xd1c9:	xor	eax, eax
0xd1cb:	call	0xc6e0
0xd1d0:	mov	rax, qword ptr [rip + 0x1e231]
0xd1d7:	mov	rdx, qword ptr [rax + 0x18]
0xd1db:	mov	dword ptr [rax + 0x10], 0xd
0xd1e2:	mov	qword ptr [rax + 0x20], rdx
0xd1e6:	add	rsp, 8
0xd1ea:	ret	
0xd1eb:	nop	dword ptr [rax + rax]
0xd1f0:	endbr64	
0xd1f4:	mov	rax, qword ptr [rip + 0x1e20d]
0xd1fb:	push	rbx
0xd1fc:	mov	edi, 3
0xd201:	mov	rdx, qword ptr [rax + 0x18]
0xd205:	mov	rsi, qword ptr [rax + 0x20]
0xd209:	mov	dword ptr [rax + 0x10], 5
0xd210:	mov	rcx, qword ptr [rax + 0x40]
0xd214:	mov	qword ptr [rax + 0x20], rdx
0xd218:	mov	rbx, rsi
0xd21b:	mov	qword ptr [rax + 0x18], rcx
0xd21f:	sub	rbx, rdx
0xd222:	cmp	rsi, rdx
0xd225:	cmovbe	rbx, rcx
0xd229:	xor	eax, eax
0xd22b:	call	0xc6e0
0xd230:	mov	rdx, qword ptr [rip + 0x1e1d1]
0xd237:	mov	rax, qword ptr [rdx + 0x38]
0xd23b:	mov	dword ptr [rdx + 0x10], 0xe
0xd242:	cmp	rax, rbx
0xd245:	cmova	rax, rbx
0xd249:	mov	qword ptr [rdx + 0x20], rax
0xd24d:	pop	rbx
0xd24e:	ret	
0xd24f:	nop	
0xd250:	endbr64	
0xd254:	mov	rax, qword ptr [rip + 0x1e1ad]
0xd25b:	push	rbx
0xd25c:	mov	edi, 3
0xd261:	mov	rdx, qword ptr [rax + 0x18]
0xd265:	mov	rbx, qword ptr [rax + 0x20]
0xd269:	mov	dword ptr [rax + 0x10], 6
0xd270:	mov	qword ptr [rax + 0x20], rdx
0xd274:	mov	rdx, qword ptr [rax + 0x38]
0xd278:	mov	qword ptr [rax + 0x18], rdx
0xd27c:	xor	eax, eax
0xd27e:	call	0xc6e0
0xd283:	mov	rdx, qword ptr [rip + 0x1e17e]
0xd28a:	mov	rax, qword ptr [rdx + 0x38]
0xd28e:	mov	dword ptr [rdx + 0x10], 0xf
0xd295:	cmp	rax, rbx
0xd298:	cmova	rax, rbx
0xd29c:	mov	qword ptr [rdx + 0x20], rax
0xd2a0:	pop	rbx
0xd2a1:	ret	
0xd2a2:	nop	word ptr cs:[rax + rax]
0xd2ad:	nop	dword ptr [rax]
0xd2b0:	endbr64	
0xd2b4:	mov	rax, qword ptr [rip + 0x1e14d]
0xd2bb:	mov	rdx, qword ptr [rax + 0x58]
0xd2bf:	mov	rax, qword ptr [rax + 0x18]
0xd2c3:	cmp	byte ptr [rdx + rax], 0x20
0xd2c7:	je	0xd2d0
0xd2c9:	ret	
0xd2ca:	nop	word ptr [rax + rax]
0xd2d0:	sub	rsp, 8
0xd2d4:	nop	dword ptr [rax]
0xd2d8:	xor	eax, eax
0xd2da:	call	0xcde0
0xd2df:	mov	rax, qword ptr [rip + 0x1e122]
0xd2e6:	mov	rdx, qword ptr [rax + 0x58]
0xd2ea:	mov	rcx, qword ptr [rax + 0x18]
0xd2ee:	cmp	byte ptr [rdx + rcx], 0x20
0xd2f2:	je	0xd2d8
0xd2f4:	cmp	qword ptr [rax + 0x48], 0
0xd2f9:	jne	0xd31d
0xd2fb:	jmp	0xd324
0xd2fd:	nop	dword ptr [rax]
0xd300:	xor	eax, eax
0xd302:	call	0xce70
0xd307:	mov	rax, qword ptr [rip + 0x1e0fa]
0xd30e:	cmp	qword ptr [rax + 0x48], 0
0xd313:	je	0xd324
0xd315:	mov	rdx, qword ptr [rax + 0x58]
0xd319:	mov	rcx, qword ptr [rax + 0x18]
0xd31d:	cmp	byte ptr [rdx + rcx - 1], 0x20
0xd322:	je	0xd300
0xd324:	mov	dword ptr [rax + 0x10], 0x11
0xd32b:	add	rsp, 8
0xd32f:	ret	
0xd330:	endbr64	
0xd334:	mov	rax, qword ptr [rip + 0x1e0cd]
0xd33b:	mov	rdx, qword ptr [rax + 0x58]
0xd33f:	mov	rax, qword ptr [rax + 0x18]
0xd343:	cmp	byte ptr [rdx + rax], 0x20
0xd347:	je	0xd350
0xd349:	ret	
0xd34a:	nop	word ptr [rax + rax]
0xd350:	sub	rsp, 8
0xd354:	xor	eax, eax
0xd356:	call	0xd2b0
0xd35b:	mov	edi, 0x20
0xd360:	call	0xcd30
0xd365:	mov	rax, qword ptr [rip + 0x1e09c]
0xd36c:	mov	dword ptr [rax + 0x10], 0x10
0xd373:	add	rsp, 8
0xd377:	ret	
0xd378:	nop	dword ptr [rax + rax]
0xd380:	endbr64	
0xd384:	push	rbp
0xd385:	push	rbx
0xd386:	sub	rsp, 8
0xd38a:	mov	rbp, qword ptr [rip + 0x1e077]
0xd391:	mov	rbx, qword ptr [rbp + 0x18]
0xd395:	cmp	rbx, qword ptr [rbp + 0x38]
0xd399:	jb	0xd3a8
0xd39b:	add	rsp, 8
0xd39f:	pop	rbx
0xd3a0:	pop	rbp
0xd3a1:	ret	
0xd3a2:	nop	word ptr [rax + rax]
0xd3a8:	xor	eax, eax
0xd3aa:	call	0xcc30
0xd3af:	cmp	rbx, qword ptr [rbp + 0x18]
0xd3b3:	jae	0xd3e4
0xd3b5:	call	0x4ef0
0xd3ba:	nop	word ptr [rax + rax]
0xd3c0:	mov	rdx, qword ptr [rbp + 0x58]
0xd3c4:	mov	rcx, qword ptr [rax]
0xd3c7:	add	rdx, rbx
0xd3ca:	add	rbx, 1
0xd3ce:	movsx	rsi, byte ptr [rdx]
0xd3d2:	mov	ecx, dword ptr [rcx + rsi*4]
0xd3d5:	mov	byte ptr [rdx], cl
0xd3d7:	mov	rbp, qword ptr [rip + 0x1e02a]
0xd3de:	cmp	qword ptr [rbp + 0x18], rbx
0xd3e2:	ja	0xd3c0
0xd3e4:	mov	dword ptr [rbp + 0x10], 0x12
0xd3eb:	add	rsp, 8
0xd3ef:	pop	rbx
0xd3f0:	pop	rbp
0xd3f1:	ret	
0xd3f2:	nop	word ptr cs:[rax + rax]
0xd3fd:	nop	dword ptr [rax]
0xd400:	endbr64	
0xd404:	push	rbp
0xd405:	push	rbx
0xd406:	sub	rsp, 8
0xd40a:	mov	rbp, qword ptr [rip + 0x1dff7]
0xd411:	mov	rbx, qword ptr [rbp + 0x18]
0xd415:	cmp	rbx, qword ptr [rbp + 0x38]
0xd419:	jb	0xd428
0xd41b:	add	rsp, 8
0xd41f:	pop	rbx
0xd420:	pop	rbp
0xd421:	ret	
0xd422:	nop	word ptr [rax + rax]
0xd428:	xor	eax, eax
0xd42a:	call	0xcc30
0xd42f:	cmp	rbx, qword ptr [rbp + 0x18]
0xd433:	jae	0xd464
0xd435:	call	0x47c0
0xd43a:	nop	word ptr [rax + rax]
0xd440:	mov	rdx, qword ptr [rbp + 0x58]
0xd444:	mov	rcx, qword ptr [rax]
0xd447:	add	rdx, rbx
0xd44a:	add	rbx, 1
0xd44e:	movsx	rsi, byte ptr [rdx]
0xd452:	mov	ecx, dword ptr [rcx + rsi*4]
0xd455:	mov	byte ptr [rdx], cl
0xd457:	mov	rbp, qword ptr [rip + 0x1dfaa]
0xd45e:	cmp	qword ptr [rbp + 0x18], rbx
0xd462:	ja	0xd440
0xd464:	mov	dword ptr [rbp + 0x10], 0x13
0xd46b:	add	rsp, 8
0xd46f:	pop	rbx
0xd470:	pop	rbp
0xd471:	ret	
0xd472:	nop	word ptr cs:[rax + rax]
0xd47d:	nop	dword ptr [rax]
0xd480:	endbr64	
0xd484:	push	r14
0xd486:	push	r13
0xd488:	push	r12
0xd48a:	push	rbp
0xd48b:	mov	rbp, qword ptr [rip + 0x1df76]
0xd492:	push	rbx
0xd493:	mov	rbx, qword ptr [rbp + 0x18]
0xd497:	cmp	rbx, qword ptr [rbp + 0x38]
0xd49b:	jb	0xd4b0
0xd49d:	pop	rbx
0xd49e:	pop	rbp
0xd49f:	pop	r12
0xd4a1:	pop	r13
0xd4a3:	pop	r14
0xd4a5:	ret	
0xd4a6:	nop	word ptr cs:[rax + rax]
0xd4b0:	xor	eax, eax
0xd4b2:	call	0xcc30
0xd4b7:	cmp	rbx, qword ptr [rbp + 0x18]
0xd4bb:	jae	0xd528
0xd4bd:	call	0x4f00
0xd4c2:	mov	r14d, 1
0xd4c8:	mov	r13, rax
0xd4cb:	jmp	0xd4f3
0xd4cd:	nop	dword ptr [rax]
0xd4d0:	call	0x47c0
0xd4d5:	xor	r14d, r14d
0xd4d8:	mov	rax, qword ptr [rax]
0xd4db:	mov	eax, dword ptr [rax + r12*4]
0xd4df:	mov	byte ptr [rbp], al
0xd4e2:	mov	rbp, qword ptr [rip + 0x1df1f]
0xd4e9:	add	rbx, 1
0xd4ed:	cmp	qword ptr [rbp + 0x18], rbx
0xd4f1:	jbe	0xd528
0xd4f3:	mov	rax, qword ptr [rbp + 0x58]
0xd4f7:	add	rax, rbx
0xd4fa:	movsx	r12, byte ptr [rax]
0xd4fe:	mov	rbp, rax
0xd501:	mov	rax, qword ptr [r13]
0xd505:	test	byte ptr [rax + r12*2], 8
0xd50a:	je	0xd4e2
0xd50c:	test	r14d, r14d
0xd50f:	jne	0xd4d0
0xd511:	call	0x4ef0
0xd516:	mov	rax, qword ptr [rax]
0xd519:	mov	eax, dword ptr [rax + r12*4]
0xd51d:	mov	byte ptr [rbp], al
0xd520:	jmp	0xd4e2
0xd522:	nop	word ptr [rax + rax]
0xd528:	mov	dword ptr [rbp + 0x10], 0x14
0xd52f:	pop	rbx
0xd530:	pop	rbp
0xd531:	pop	r12
0xd533:	pop	r13
0xd535:	pop	r14
0xd537:	ret	
0xd538:	nop	dword ptr [rax + rax]
0xd540:	endbr64	
0xd544:	push	r12
0xd546:	mov	r12, rdi
0xd549:	push	rbp
0xd54a:	push	rbx
0xd54b:	call	0x49b0
0xd550:	mov	rbp, qword ptr [rip + 0x1deb1]
0xd557:	mov	rbx, rax
0xd55a:	mov	rsi, qword ptr [rbp + 0x40]
0xd55e:	sub	rax, rsi
0xd561:	add	qword ptr [rbp + 0x18], rax
0xd565:	add	qword ptr [rbp + 0x20], rax
0xd569:	mov	rax, qword ptr [rbp + 0x48]
0xd56d:	lea	rdx, [rax + 1]
0xd571:	lea	r8, [rbx + rdx]
0xd575:	cmp	r8, qword ptr [rbp + 0x50]
0xd579:	ja	0xd5d8
0xd57b:	mov	rdi, qword ptr [rbp + 0x58]
0xd57f:	add	rsi, rdi
0xd582:	add	rdi, rbx
0xd585:	call	0x4d40
0xd58a:	mov	rax, qword ptr [rip + 0x1de77]
0xd591:	mov	rdx, rbx
0xd594:	mov	rsi, r12
0xd597:	mov	rdi, qword ptr [rax + 0x58]
0xd59b:	call	0x4bb0
0xd5a0:	mov	rax, qword ptr [rip + 0x1de61]
0xd5a7:	mov	rsi, rbx
0xd5aa:	mov	rdi, qword ptr [rax + 0x58]
0xd5ae:	call	0x184d0
0xd5b3:	mov	rax, qword ptr [rip + 0x1de4e]
0xd5ba:	mov	qword ptr [rax + 0x40], rbx
0xd5be:	add	rbx, qword ptr [rax + 0x48]
0xd5c2:	mov	qword ptr [rax + 0x38], rbx
0xd5c6:	mov	dword ptr [rax + 0x10], 0x15
0xd5cd:	pop	rbx
0xd5ce:	pop	rbp
0xd5cf:	pop	r12
0xd5d1:	ret	
0xd5d2:	nop	word ptr [rax + rax]
0xd5d8:	mov	qword ptr [rbp + 0x50], r8
0xd5dc:	mov	rdi, qword ptr [rbp + 0x58]
0xd5e0:	mov	rsi, r8
0xd5e3:	call	0x1d690
0xd5e8:	mov	qword ptr [rbp + 0x58], rax
0xd5ec:	mov	rbp, qword ptr [rip + 0x1de15]
0xd5f3:	mov	rax, qword ptr [rbp + 0x48]
0xd5f7:	mov	rsi, qword ptr [rbp + 0x40]
0xd5fb:	lea	rdx, [rax + 1]
0xd5ff:	jmp	0xd57b
0xd604:	nop	word ptr cs:[rax + rax]
0xd60f:	nop	
0xd610:	endbr64	
0xd614:	test	rdi, rdi
0xd617:	je	0xd6f0
0xd61d:	push	r12
0xd61f:	push	rbp
0xd620:	mov	rbp, rdi
0xd623:	push	rbx
0xd624:	call	0x49b0
0xd629:	mov	r12, qword ptr [rip + 0x1ddd8]
0xd630:	mov	rbx, rax
0xd633:	mov	rax, qword ptr [r12 + 0x38]
0xd638:	lea	rdx, [rax + 1]
0xd63c:	mov	rax, qword ptr [r12 + 0x50]
0xd641:	lea	rcx, [rbx + rdx]
0xd645:	cmp	rcx, rax
0xd648:	ja	0xd6c0
0xd64a:	mov	rax, qword ptr [r12 + 0x18]
0xd64f:	mov	rdi, qword ptr [r12 + 0x58]
0xd654:	sub	rdx, rax
0xd657:	lea	rsi, [rdi + rax]
0xd65b:	add	rax, rbx
0xd65e:	add	rdi, rax
0xd661:	call	0x4d40
0xd666:	mov	rax, qword ptr [rip + 0x1dd9b]
0xd66d:	mov	rdx, rbx
0xd670:	mov	rsi, rbp
0xd673:	mov	rdi, qword ptr [rax + 0x18]
0xd677:	add	rdi, qword ptr [rax + 0x58]
0xd67b:	call	0x4bb0
0xd680:	mov	rax, qword ptr [rip + 0x1dd81]
0xd687:	mov	rsi, rbx
0xd68a:	mov	rdi, qword ptr [rax + 0x18]
0xd68e:	add	rdi, qword ptr [rax + 0x58]
0xd692:	call	0x184d0
0xd697:	mov	rax, qword ptr [rip + 0x1dd6a]
0xd69e:	add	qword ptr [rax + 0x18], rbx
0xd6a2:	add	qword ptr [rax + 0x38], rbx
0xd6a6:	add	qword ptr [rax + 0x48], rbx
0xd6aa:	mov	dword ptr [rax + 0x10], 0x16
0xd6b1:	pop	rbx
0xd6b2:	pop	rbp
0xd6b3:	pop	r12
0xd6b5:	ret	
0xd6b6:	nop	word ptr cs:[rax + rax]
0xd6c0:	lea	rsi, [rax + rbx + 0x21]
0xd6c5:	mov	rdi, qword ptr [r12 + 0x58]
0xd6ca:	mov	qword ptr [r12 + 0x50], rsi
0xd6cf:	call	0x1d690
0xd6d4:	mov	qword ptr [r12 + 0x58], rax
0xd6d9:	mov	r12, qword ptr [rip + 0x1dd28]
0xd6e0:	mov	rax, qword ptr [r12 + 0x38]
0xd6e5:	lea	rdx, [rax + 1]
0xd6e9:	jmp	0xd64a
0xd6ee:	nop	
0xd6f0:	ret	
0xd6f1:	nop	word ptr cs:[rax + rax]
0xd6fc:	nop	dword ptr [rax]
0xd700:	endbr64	
0xd704:	mov	rax, qword ptr [rip + 0x1dcfd]
0xd70b:	mov	rdi, qword ptr [rax + 0x60]
0xd70f:	test	rdi, rdi
0xd712:	je	0xd730
0xd714:	sub	rsp, 8
0xd718:	call	0xd610
0xd71d:	mov	rax, qword ptr [rip + 0x1dce4]
0xd724:	mov	dword ptr [rax + 0x10], 0x1a
0xd72b:	add	rsp, 8
0xd72f:	ret	
0xd730:	ret	
0xd731:	nop	word ptr cs:[rax + rax]
0xd73c:	nop	dword ptr [rax]
0xd740:	endbr64	
0xd744:	mov	rax, qword ptr [rip + 0x1dcbd]
0xd74b:	push	r12
0xd74d:	push	rbp
0xd74e:	push	rbx
0xd74f:	mov	rbx, qword ptr [rax + 0x40]
0xd753:	mov	r12, qword ptr [rax + 0x28]
0xd757:	mov	eax, dword ptr [rax + 0xc]
0xd75a:	lea	rbp, [rbx + 3]
0xd75e:	test	eax, eax
0xd760:	je	0xd7f0
0xd766:	mov	edx, dword ptr [rip + 0x1caa4]
0xd76c:	mov	esi, dword ptr [rip + 0x1ca9a]
0xd772:	mov	edi, dword ptr [rip + 0x1ca9c]
0xd778:	call	0xa570
0xd77d:	mov	rcx, qword ptr [rip + 0x1dc84]
0xd784:	cmp	r12, rbp
0xd787:	jb	0xd810
0xd78d:	mov	rsi, qword ptr [rcx + 0x18]
0xd791:	mov	rdx, qword ptr [rcx + 0x40]
0xd795:	xor	ebx, ebx
0xd797:	mov	rdi, qword ptr [rcx + 0x28]
0xd79b:	mov	rax, rdi
0xd79e:	sub	rax, rdx
0xd7a1:	mov	edx, 1
0xd7a6:	mov	r8, rax
0xd7a9:	shr	r8, 2
0xd7ad:	cmp	rax, 3
0xd7b1:	cmova	edx, r8d
0xd7b5:	xor	eax, eax
0xd7b7:	cmp	rdi, rsi
0xd7ba:	ja	0xd7d3
0xd7bc:	mov	rax, rsi
0xd7bf:	sub	rax, rdi
0xd7c2:	movsxd	rdi, edx
0xd7c5:	lea	r8d, [rdx + rax]
0xd7c9:	xor	edx, edx
0xd7cb:	div	rdi
0xd7ce:	mov	eax, r8d
0xd7d1:	sub	eax, edx
0xd7d3:	mov	edx, esi
0xd7d5:	mov	rdi, qword ptr [rcx]
0xd7d8:	xor	esi, esi
0xd7da:	sub	edx, eax
0xd7dc:	call	0xc680
0xd7e1:	cmp	r12, rbp
0xd7e4:	jb	0xd840
0xd7e6:	pop	rbx
0xd7e7:	pop	rbp
0xd7e8:	pop	r12
0xd7ea:	ret	
0xd7eb:	nop	dword ptr [rax + rax]
0xd7f0:	mov	edx, dword ptr [rip + 0x1ca0e]
0xd7f6:	mov	esi, dword ptr [rip + 0x1ca04]
0xd7fc:	mov	edi, dword ptr [rip + 0x1ca06]
0xd802:	jmp	0xd778
0xd807:	nop	word ptr [rax + rax]
0xd810:	mov	rbx, qword ptr [rcx + 0x40]
0xd814:	mov	rsi, qword ptr [rcx + 0x18]
0xd818:	mov	qword ptr [rcx + 0x40], 0
0xd820:	xor	edx, edx
0xd822:	add	qword ptr [rcx + 0x58], rbx
0xd826:	sub	rsi, rbx
0xd829:	sub	qword ptr [rcx + 0x38], rbx
0xd82d:	sub	qword ptr [rcx + 0x20], rbx
0xd831:	movsxd	rbx, ebx
0xd834:	mov	qword ptr [rcx + 0x18], rsi
0xd838:	jmp	0xd797
0xd83d:	nop	dword ptr [rax]
0xd840:	mov	rax, qword ptr [rip + 0x1dbc1]
0xd847:	movsxd	rbx, ebx
0xd84a:	mov	qword ptr [rax + 0x40], rbx
0xd84e:	sub	qword ptr [rax + 0x58], rbx
0xd852:	add	qword ptr [rax + 0x38], rbx
0xd856:	add	qword ptr [rax + 0x18], rbx
0xd85a:	add	qword ptr [rax + 0x20], rbx
0xd85e:	pop	rbx
0xd85f:	pop	rbp
0xd860:	pop	r12
0xd862:	ret	
0xd863:	nop	word ptr cs:[rax + rax]
0xd86e:	nop	
0xd870:	endbr64	
0xd874:	push	r15
0xd876:	push	r14
0xd878:	push	r13
0xd87a:	push	r12
0xd87c:	push	rbp
0xd87d:	push	rbx
0xd87e:	sub	rsp, 0x28
0xd882:	mov	rax, qword ptr fs:[0x28]
0xd88b:	mov	qword ptr [rsp + 0x18], rax
0xd890:	mov	rax, qword ptr [rip + 0x1db71]
0xd897:	lea	r14, [rsp + 0x17]
0xd89c:	mov	rdi, r14
0xd89f:	mov	rbx, qword ptr [rax + 0x40]
0xd8a3:	mov	r13, qword ptr [rax + 0x28]
0xd8a7:	call	0xa6a0
0xd8ac:	mov	rax, qword ptr [rip + 0x1db55]
0xd8b3:	add	rbx, 3
0xd8b7:	mov	ecx, dword ptr [rax + 0xc]
0xd8ba:	test	ecx, ecx
0xd8bc:	je	0xda20
0xd8c2:	mov	edx, dword ptr [rip + 0x1c948]
0xd8c8:	mov	esi, dword ptr [rip + 0x1c93e]
0xd8ce:	mov	edi, dword ptr [rip + 0x1c940]
0xd8d4:	call	0xa570
0xd8d9:	mov	rdx, qword ptr [rip + 0x1db28]
0xd8e0:	cmp	r13, rbx
0xd8e3:	jb	0xda90
0xd8e9:	mov	qword ptr [rsp + 8], 0
0xd8f2:	mov	rax, qword ptr [rdx + 0x18]
0xd8f6:	mov	rcx, qword ptr [rdx + 0x40]
0xd8fa:	mov	rdi, qword ptr [rdx + 0x28]
0xd8fe:	mov	r15, rdi
0xd901:	sub	r15, rcx
0xd904:	cmp	r15, 3
0xd908:	jbe	0xda80
0xd90e:	shr	r15, 2
0xd912:	movsxd	rcx, r15d
0xd915:	cmp	rdi, rax
0xd918:	ja	0xda70
0xd91e:	mov	edx, eax
0xd920:	sub	rax, rdi
0xd923:	sub	edx, edi
0xd925:	add	r15d, edx
0xd928:	xor	edx, edx
0xd92a:	div	rcx
0xd92d:	sub	r15d, edx
0xd930:	mov	r12d, r15d
0xd933:	call	0x1d670
0xd938:	mov	esi, 0x20
0xd93d:	mov	rbp, rax
0xd940:	mov	rax, qword ptr [rip + 0x1dac1]
0xd947:	mov	rdi, rbp
0xd94a:	mov	rdx, qword ptr [rax + 0x28]
0xd94e:	call	0x4a50
0xd953:	mov	rax, qword ptr [rip + 0x1daae]
0xd95a:	mov	edx, dword ptr [rax + 8]
0xd95d:	test	edx, edx
0xd95f:	je	0xda40
0xd965:	mov	rdx, qword ptr [rax + 0x38]
0xd969:	sub	rdx, qword ptr [rax + 0x40]
0xd96d:	mov	rdi, rbp
0xd970:	sub	rdx, r12
0xd973:	mov	rsi, qword ptr [rax + 0x28]
0xd977:	sub	rsi, qword ptr [rax + 0x40]
0xd97b:	cmp	rdx, rsi
0xd97e:	cmova	rdx, rsi
0xd982:	mov	rsi, qword ptr [rax + 0x40]
0xd986:	add	rsi, r12
0xd989:	add	rsi, qword ptr [rax + 0x58]
0xd98d:	call	0x4bb0
0xd992:	mov	rax, qword ptr [rip + 0x1da6f]
0xd999:	xor	edx, edx
0xd99b:	xor	esi, esi
0xd99d:	mov	rdi, qword ptr [rax]
0xd9a0:	call	0xc680
0xd9a5:	cmp	r13, rbx
0xd9a8:	jae	0xdaf0
0xd9ae:	mov	rax, qword ptr [rip + 0x1da53]
0xd9b5:	mov	rsi, rbp
0xd9b8:	mov	rdi, qword ptr [rax]
0xd9bb:	mov	rdx, qword ptr [rax + 0x28]
0xd9bf:	sub	edx, dword ptr [rax + 0x40]
0xd9c2:	call	0xc600
0xd9c7:	mov	rax, qword ptr [rip + 0x1da3a]
0xd9ce:	xor	esi, esi
0xd9d0:	mov	edx, dword ptr [rax + 0x18]
0xd9d3:	mov	rdi, qword ptr [rax]
0xd9d6:	sub	edx, r15d
0xd9d9:	call	0xc680
0xd9de:	cmp	r13, rbx
0xd9e1:	jb	0xdac8
0xd9e7:	mov	rdi, rbp
0xd9ea:	call	0x18d10
0xd9ef:	mov	rdi, r14
0xd9f2:	call	0xa6b0
0xd9f7:	mov	rax, qword ptr [rsp + 0x18]
0xd9fc:	sub	rax, qword ptr fs:[0x28]
0xda05:	jne	0xdb0b
0xda0b:	add	rsp, 0x28
0xda0f:	pop	rbx
0xda10:	pop	rbp
0xda11:	pop	r12
0xda13:	pop	r13
0xda15:	pop	r14
0xda17:	pop	r15
0xda19:	ret	
0xda1a:	nop	word ptr [rax + rax]
0xda20:	mov	edx, dword ptr [rip + 0x1c7de]
0xda26:	mov	esi, dword ptr [rip + 0x1c7d4]
0xda2c:	mov	edi, dword ptr [rip + 0x1c7d6]
0xda32:	jmp	0xd8d4
0xda37:	nop	word ptr [rax + rax]
0xda40:	mov	rsi, qword ptr [rax + 0x40]
0xda44:	mov	rdx, qword ptr [rax + 0x38]
0xda48:	mov	rdi, rbp
0xda4b:	mov	rax, qword ptr [rax + 0x28]
0xda4f:	sub	rdx, rsi
0xda52:	sub	rdx, r12
0xda55:	sub	rax, rsi
0xda58:	mov	esi, 0x2a
0xda5d:	cmp	rdx, rax
0xda60:	cmova	rdx, rax
0xda64:	call	0x4a50
0xda69:	jmp	0xd992
0xda6e:	nop	
0xda70:	xor	r12d, r12d
0xda73:	xor	r15d, r15d
0xda76:	jmp	0xd933
0xda7b:	nop	dword ptr [rax + rax]
0xda80:	mov	ecx, 1
0xda85:	mov	r15d, 1
0xda8b:	jmp	0xd915
0xda90:	mov	r12, qword ptr [rdx + 0x40]
0xda94:	mov	rax, qword ptr [rdx + 0x18]
0xda98:	mov	qword ptr [rdx + 0x40], 0
0xdaa0:	add	qword ptr [rdx + 0x58], r12
0xdaa4:	movsxd	rcx, r12d
0xdaa7:	sub	rax, r12
0xdaaa:	sub	qword ptr [rdx + 0x38], r12
0xdaae:	mov	qword ptr [rsp + 8], rcx
0xdab3:	xor	ecx, ecx
0xdab5:	sub	qword ptr [rdx + 0x20], r12
0xdab9:	mov	qword ptr [rdx + 0x18], rax
0xdabd:	jmp	0xd8fa
0xdac2:	nop	word ptr [rax + rax]
0xdac8:	mov	rax, qword ptr [rip + 0x1d939]
0xdacf:	movsxd	r12, dword ptr [rsp + 8]
0xdad4:	sub	qword ptr [rax + 0x58], r12
0xdad8:	add	qword ptr [rax + 0x38], r12
0xdadc:	add	qword ptr [rax + 0x18], r12
0xdae0:	add	qword ptr [rax + 0x20], r12
0xdae4:	mov	qword ptr [rax + 0x40], r12
0xdae8:	jmp	0xd9e7
0xdaed:	nop	dword ptr [rax]
0xdaf0:	mov	rax, qword ptr [rip + 0x1d911]
0xdaf7:	mov	rsi, qword ptr [rax + 0x58]
0xdafb:	mov	edx, dword ptr [rax + 0x40]
0xdafe:	mov	rdi, qword ptr [rax]
0xdb01:	call	0xc600
0xdb06:	jmp	0xd9ae
0xdb0b:	call	0x49d0
0xdb10:	endbr64	
0xdb14:	mov	rax, qword ptr [rip + 0x1d8ed]
0xdb1b:	push	rbx
0xdb1c:	mov	rbx, rdi
0xdb1f:	mov	rdi, qword ptr [rdi]
0xdb22:	mov	rsi, qword ptr [rax + 0x48]
0xdb26:	add	rsi, 1
0xdb2a:	call	0x1d690
0xdb2f:	mov	qword ptr [rbx], rax
0xdb32:	mov	rdi, rax
0xdb35:	mov	rax, qword ptr [rip + 0x1d8cc]
0xdb3c:	mov	rcx, qword ptr [rax + 0x48]
0xdb40:	mov	rsi, qword ptr [rax + 0x40]
0xdb44:	add	rsi, qword ptr [rax + 0x58]
0xdb48:	lea	rdx, [rcx + 1]
0xdb4c:	call	0x4bb0
0xdb51:	mov	rax, qword ptr [rip + 0x1d8b0]
0xdb58:	pop	rbx
0xdb59:	mov	eax, dword ptr [rax + 0x48]
0xdb5c:	ret	
0xdb5d:	nop	dword ptr [rax]
0xdb60:	endbr64	
0xdb64:	push	rbp
0xdb65:	xor	eax, eax
0xdb67:	mov	rbp, rdi
0xdb6a:	call	0xcff0
0xdb6f:	test	rbp, rbp
0xdb72:	lea	rax, [rip + 0x133bf]
0xdb79:	cmove	rbp, rax
0xdb7d:	mov	rdi, rbp
0xdb80:	call	0xd540
0xdb85:	xor	eax, eax
0xdb87:	call	0xd870
0xdb8c:	xor	eax, eax
0xdb8e:	pop	rbp
0xdb8f:	jmp	0xd740
0xdb94:	nop	word ptr cs:[rax + rax]
0xdb9f:	nop	
0xdba0:	endbr64	
0xdba4:	mov	rax, qword ptr [rip + 0x1d85d]
0xdbab:	mov	dword ptr [rax + 0xc], edi
0xdbae:	ret	
0xdbaf:	nop	
0xdbb0:	endbr64	
0xdbb4:	push	r12
0xdbb6:	push	rbp
0xdbb7:	push	rbx
0xdbb8:	cmp	edi, 1
0xdbbb:	je	0xdbd0
0xdbbd:	cmp	edi, 2
0xdbc0:	je	0xdc90
0xdbc6:	test	edi, edi
0xdbc8:	je	0xdc40
0xdbca:	pop	rbx
0xdbcb:	pop	rbp
0xdbcc:	pop	r12
0xdbce:	ret	
0xdbcf:	nop	
0xdbd0:	mov	ecx, dword ptr [rip + 0x1d83e]
0xdbd6:	test	ecx, ecx
0xdbd8:	je	0xdd38
0xdbde:	xor	eax, eax
0xdbe0:	call	0x1ab10
0xdbe5:	mov	rbp, rax
0xdbe8:	test	rax, rax
0xdbeb:	je	0xdbca
0xdbed:	mov	r12, qword ptr [rbp]
0xdbf1:	mov	rbx, qword ptr [rip + 0x1d810]
0xdbf8:	mov	rdi, r12
0xdbfb:	call	0x49b0
0xdc00:	mov	rdi, qword ptr [rbx + 0x40]
0xdc04:	mov	qword ptr [rbx + 0x48], rax
0xdc08:	lea	rsi, [rax + rdi]
0xdc0c:	mov	qword ptr [rbx + 0x38], rsi
0xdc10:	mov	qword ptr [rbx + 0x18], rsi
0xdc14:	add	rsi, 1
0xdc18:	cmp	rsi, qword ptr [rbx + 0x50]
0xdc1c:	ja	0xdd70
0xdc22:	add	rdi, qword ptr [rbx + 0x58]
0xdc26:	mov	rsi, r12
0xdc29:	call	0x48b0
0xdc2e:	pop	rbx
0xdc2f:	xor	eax, eax
0xdc31:	pop	rbp
0xdc32:	pop	r12
0xdc34:	jmp	0xd870
0xdc39:	nop	dword ptr [rax]
0xdc40:	mov	eax, dword ptr [rip + 0x1d7ce]
0xdc46:	test	eax, eax
0xdc48:	jne	0xdd18
0xdc4e:	xor	eax, eax
0xdc50:	call	0x1ab10
0xdc55:	test	rax, rax
0xdc58:	je	0xdd98
0xdc5e:	mov	rdx, qword ptr [rip + 0x1d7a3]
0xdc65:	mov	rsi, qword ptr [rax]
0xdc68:	mov	rbp, qword ptr [rdx + 0x40]
0xdc6c:	add	rbp, qword ptr [rdx + 0x58]
0xdc70:	mov	rdi, rbp
0xdc73:	call	0x4b30
0xdc78:	test	eax, eax
0xdc7a:	jne	0xdd58
0xdc80:	pop	rbx
0xdc81:	xor	eax, eax
0xdc83:	pop	rbp
0xdc84:	pop	r12
0xdc86:	jmp	0x1ab40
0xdc8b:	nop	dword ptr [rax + rax]
0xdc90:	mov	edx, dword ptr [rip + 0x1d77e]
0xdc96:	test	edx, edx
0xdc98:	je	0xdcf8
0xdc9a:	xor	eax, eax
0xdc9c:	call	0x1ab40
0xdca1:	mov	rbp, rax
0xdca4:	test	rax, rax
0xdca7:	jne	0xdbed
0xdcad:	mov	rax, qword ptr [rip + 0x1d754]
0xdcb4:	mov	edi, 2
0xdcb9:	mov	rdx, qword ptr [rax + 0x40]
0xdcbd:	mov	dword ptr [rax + 0x10], 6
0xdcc4:	mov	qword ptr [rax + 0x20], rdx
0xdcc8:	mov	rdx, qword ptr [rax + 0x38]
0xdccc:	mov	qword ptr [rax + 0x18], rdx
0xdcd0:	xor	eax, eax
0xdcd2:	call	0xc6e0
0xdcd7:	mov	rax, qword ptr [rip + 0x1d72a]
0xdcde:	mov	rdx, qword ptr [rax + 0x18]
0xdce2:	mov	dword ptr [rax + 0x10], 0xd
0xdce9:	mov	qword ptr [rax + 0x20], rdx
0xdced:	jmp	0xdc2e
0xdcf2:	nop	word ptr [rax + rax]
0xdcf8:	mov	dword ptr [rip + 0x1d712], 1
0xdd02:	xor	eax, eax
0xdd04:	call	0x1a570
0xdd09:	mov	dword ptr [rip + 0x1d701], eax
0xdd0f:	jmp	0xdc9a
0xdd11:	nop	dword ptr [rax]
0xdd18:	mov	edi, dword ptr [rip + 0x1d6f2]
0xdd1e:	xor	eax, eax
0xdd20:	call	0x1ac30
0xdd25:	mov	dword ptr [rip + 0x1d6e5], 0
0xdd2f:	jmp	0xdc4e
0xdd34:	nop	dword ptr [rax]
0xdd38:	mov	dword ptr [rip + 0x1d6d2], 1
0xdd42:	xor	eax, eax
0xdd44:	call	0x1a570
0xdd49:	mov	dword ptr [rip + 0x1d6c1], eax
0xdd4f:	jmp	0xdbde
0xdd54:	nop	dword ptr [rax]
0xdd58:	xor	eax, eax
0xdd5a:	mov	rdi, rbp
0xdd5d:	call	0x1a380
0xdd62:	xor	eax, eax
0xdd64:	call	0x1ab40
0xdd69:	jmp	0xdc80
0xdd6e:	nop	
0xdd70:	mov	qword ptr [rbx + 0x50], rsi
0xdd74:	mov	rdi, qword ptr [rbx + 0x58]
0xdd78:	call	0x1d690
0xdd7d:	mov	qword ptr [rbx + 0x58], rax
0xdd81:	mov	rbx, qword ptr [rip + 0x1d680]
0xdd88:	mov	r12, qword ptr [rbp]
0xdd8c:	mov	rdi, qword ptr [rbx + 0x40]
0xdd90:	jmp	0xdc22
0xdd95:	nop	dword ptr [rax]
0xdd98:	mov	rax, qword ptr [rip + 0x1d669]
0xdd9f:	mov	rdi, qword ptr [rax + 0x40]
0xdda3:	add	rdi, qword ptr [rax + 0x58]
0xdda7:	xor	eax, eax
0xdda9:	call	0x1a380
0xddae:	jmp	0xdc80
0xddb3:	nop	word ptr cs:[rax + rax]
0xddbd:	nop	dword ptr [rax]
0xddc0:	endbr64	
0xddc4:	mov	eax, dword ptr [rip + 0x1be96]
0xddca:	push	rbp
0xddcb:	mov	rbp, rdi
0xddce:	lea	rdi, [rip + 0x1be73]
0xddd5:	test	eax, eax
0xddd7:	lea	rax, [rip + 0x1be52]
0xddde:	cmove	rdi, rax
0xdde2:	call	0x17c50
0xdde7:	mov	edx, 9
0xddec:	lea	rsi, [rip + 0x1c4ad]
0xddf3:	lea	rdi, [rip + 0x1c466]
0xddfa:	call	0x17f70
0xddff:	mov	rdi, rbp
0xde02:	call	0x1d7a0
0xde07:	mov	rdi, rax
0xde0a:	mov	rbp, rax
0xde0d:	mov	qword ptr [rip + 0x1d794], rax
0xde14:	call	0x49b0
0xde19:	mov	rdi, rbp
0xde1c:	mov	rsi, rax
0xde1f:	call	0x184d0
0xde24:	xor	eax, eax
0xde26:	call	0xc590
0xde2b:	lea	rdi, [rip + 0x1d5ee]
0xde32:	pop	rbp
0xde33:	mov	qword ptr [rip + 0x1d78e], rax
0xde3a:	jmp	0x4a30
0xde3f:	nop	
0xde40:	endbr64	
0xde44:	mov	rdi, qword ptr [rip + 0x1d77d]
0xde4b:	jmp	0xc5c0
0xde50:	endbr64	
0xde54:	push	rbp
0xde55:	mov	rbp, rdi
0xde58:	push	rbx
0xde59:	mov	rbx, rsi
0xde5c:	sub	rsp, 8
0xde60:	mov	rdi, qword ptr [rip + 0x1d749]
0xde67:	test	rdi, rdi
0xde6a:	je	0xde71
0xde6c:	call	0x18d10
0xde71:	mov	rdi, rbp
0xde74:	call	0x1d670
0xde79:	mov	rdi, qword ptr [rip + 0x1d748]
0xde80:	mov	edx, ebx
0xde82:	xor	esi, esi
0xde84:	mov	qword ptr [rip + 0x1d725], rax
0xde8b:	add	rsp, 8
0xde8f:	mov	r8d, ebp
0xde92:	mov	ecx, 1
0xde97:	pop	rbx
0xde98:	pop	rbp
0xde99:	jmp	0xc5e0
0xde9e:	nop	
0xdea0:	endbr64	
0xdea4:	push	rbp
0xdea5:	mov	rbp, rsp
0xdea8:	push	r15
0xdeaa:	push	r14
0xdeac:	push	r13
0xdeae:	push	r12
0xdeb0:	push	rbx
0xdeb1:	sub	rsp, 0x68
0xdeb5:	mov	rax, qword ptr fs:[0x28]
0xdebe:	mov	qword ptr [rbp - 0x38], rax
0xdec2:	xor	eax, eax
0xdec4:	lea	rax, [rbp - 0x61]
0xdec8:	mov	rdi, rax
0xdecb:	mov	qword ptr [rbp - 0x80], rax
0xdecf:	call	0xa6a0
0xded4:	mov	rax, qword ptr [rip + 0x1d6ed]
0xdedb:	mov	esi, 0x20
0xdee0:	mov	rdi, qword ptr [rip + 0x1d6c9]
0xdee7:	movsxd	rdx, dword ptr [rax + 0xc]
0xdeeb:	call	0x4a50
0xdef0:	mov	rdi, qword ptr [rip + 0x1d6c9]
0xdef7:	call	0x49b0
0xdefc:	lea	r14, [rax + 1]
0xdf00:	mov	rdi, r14
0xdf03:	call	0x1d670
0xdf08:	mov	rcx, qword ptr [rip + 0x1d6b1]
0xdf0f:	mov	r13, rax
0xdf12:	movzx	eax, byte ptr [rcx]
0xdf15:	test	al, al
0xdf17:	je	0xe430
0xdf1d:	xor	esi, esi
0xdf1f:	xor	ebx, ebx
0xdf21:	lea	r15, [rip + 0x13188]
0xdf28:	xor	edx, edx
0xdf2a:	mov	dword ptr [rbp - 0x74], esi
0xdf2d:	jmp	0xdf48
0xdf2f:	nop	
0xdf30:	cmp	al, 9
0xdf32:	je	0xdf80
0xdf34:	add	dword ptr [rbp - 0x74], 1
0xdf38:	mov	byte ptr [r13 + r12], al
0xdf3d:	movsxd	rdx, ebx
0xdf40:	movzx	eax, byte ptr [rcx + rdx]
0xdf44:	test	al, al
0xdf46:	je	0xdfc0
0xdf48:	movsxd	r12, dword ptr [rbp - 0x74]
0xdf4c:	add	ebx, 1
0xdf4f:	cmp	al, 0x5c
0xdf51:	jne	0xdf30
0xdf53:	lea	rdx, [rcx + rdx + 1]
0xdf58:	movzx	eax, byte ptr [rdx]
0xdf5b:	test	al, al
0xdf5d:	je	0xe320
0xdf63:	sub	eax, 0x5c
0xdf66:	cmp	al, 0x17
0xdf68:	ja	0xe0d8
0xdf6e:	movzx	eax, al
0xdf71:	movsxd	rax, dword ptr [r15 + rax*4]
0xdf75:	add	rax, r15
0xdf78:	jmp	rax
0xdf7b:	 ----------
0xdf7f:	 ----------
0xdf80:	add	r14, 8
0xdf84:	mov	rdi, r13
0xdf87:	mov	rsi, r14
0xdf8a:	call	0x1d690
0xdf8f:	mov	rcx, qword ptr [rip + 0x1d62a]
0xdf96:	movsxd	rdx, ebx
0xdf99:	add	dword ptr [rbp - 0x74], 8
0xdf9d:	mov	r13, rax
0xdfa0:	movabs	rax, 0x2020202020202020
0xdfaa:	mov	qword ptr [r13 + r12], rax
0xdfaf:	movzx	eax, byte ptr [rcx + rdx]
0xdfb3:	test	al, al
0xdfb5:	jne	0xdf48
0xdfb7:	nop	word ptr [rax + rax]
0xdfc0:	movsxd	rax, dword ptr [rbp - 0x74]
0xdfc4:	add	rax, r13
0xdfc7:	mov	byte ptr [rax], 0
0xdfca:	mov	rdi, r13
0xdfcd:	call	0x49b0
0xdfd2:	cmp	byte ptr [rip + 0x1d5df], 0
0xdfd9:	mov	rdi, qword ptr [rip + 0x1d5d0]
0xdfe0:	mov	rdx, rax
0xdfe3:	mov	rax, qword ptr [rip + 0x1d5de]
0xdfea:	mov	ecx, edx
0xdfec:	jne	0xe350
0xdff2:	movsxd	rax, dword ptr [rax + 0xc]
0xdff6:	cmp	edx, eax
0xdff8:	jl	0xe120
0xdffe:	cmp	ecx, eax
0xe000:	mov	rsi, r13
0xe003:	cmovle	eax, ecx
0xe006:	movsxd	rdx, eax
0xe009:	call	0x4bb0
0xe00e:	mov	rdi, r13
0xe011:	call	0x18d10
0xe016:	mov	rsi, qword ptr [rip + 0x1d5ab]
0xe01d:	mov	rcx, qword ptr [rip + 0x1d58c]
0xe024:	xor	eax, eax
0xe026:	mov	edx, dword ptr [rsi + 0xc]
0xe029:	test	edx, edx
0xe02b:	jg	0xe039
0xe02d:	jmp	0xe054
0xe02f:	nop	
0xe030:	add	rax, 1
0xe034:	cmp	dword ptr [rsi + 0xc], eax
0xe037:	jle	0xe054
0xe039:	movzx	edx, byte ptr [rcx + rax]
0xe03d:	cmp	dl, 0xd
0xe040:	je	0xe047
0xe042:	cmp	dl, 0xa
0xe045:	jne	0xe030
0xe047:	mov	byte ptr [rcx + rax], 0x20
0xe04b:	add	rax, 1
0xe04f:	cmp	dword ptr [rsi + 0xc], eax
0xe052:	jg	0xe039
0xe054:	movzx	eax, byte ptr [rip + 0x1d55e]
0xe05b:	cmp	al, 1
0xe05d:	je	0xe330
0xe063:	cmp	al, 2
0xe065:	jne	0xe100
0xe06b:	mov	edx, dword ptr [rip + 0x1c20b]
0xe071:	mov	esi, dword ptr [rip + 0x1c201]
0xe077:	mov	edi, dword ptr [rip + 0x1c203]
0xe07d:	call	0xa570
0xe082:	mov	rdi, qword ptr [rip + 0x1d53f]
0xe089:	xor	edx, edx
0xe08b:	xor	esi, esi
0xe08d:	call	0xc680
0xe092:	mov	rdi, qword ptr [rip + 0x1d52f]
0xe099:	mov	rsi, qword ptr [rip + 0x1d510]
0xe0a0:	mov	edx, dword ptr [rdi + 0xc]
0xe0a3:	call	0xc600
0xe0a8:	mov	rdi, qword ptr [rbp - 0x80]
0xe0ac:	call	0xa6b0
0xe0b1:	mov	rax, qword ptr [rbp - 0x38]
0xe0b5:	sub	rax, qword ptr fs:[0x28]
0xe0be:	jne	0xe479
0xe0c4:	lea	rsp, [rbp - 0x28]
0xe0c8:	pop	rbx
0xe0c9:	pop	r12
0xe0cb:	pop	r13
0xe0cd:	pop	r14
0xe0cf:	pop	r15
0xe0d1:	pop	rbp
0xe0d2:	ret	
0xe0d3:	nop	dword ptr [rax + rax]
0xe0d8:	mov	edi, dword ptr [rbp - 0x74]
0xe0db:	mov	byte ptr [r13 + r12], 0x5c
0xe0e1:	add	ebx, 1
0xe0e4:	movzx	edx, byte ptr [rdx]
0xe0e7:	lea	eax, [rdi + 1]
0xe0ea:	add	edi, 2
0xe0ed:	cdqe	
0xe0ef:	mov	dword ptr [rbp - 0x74], edi
0xe0f2:	mov	byte ptr [r13 + rax], dl
0xe0f7:	jmp	0xdf3d
0xe0fc:	nop	dword ptr [rax]
0xe100:	mov	edx, dword ptr [rip + 0x1c15e]
0xe106:	mov	esi, dword ptr [rip + 0x1c154]
0xe10c:	mov	edi, dword ptr [rip + 0x1c156]
0xe112:	call	0xa570
0xe117:	jmp	0xe082
0xe11c:	nop	dword ptr [rax]
0xe120:	sub	rax, rdx
0xe123:	mov	rsi, r13
0xe126:	shr	rax, 1
0xe129:	add	rdi, rax
0xe12c:	call	0x4bb0
0xe131:	jmp	0xe00e
0xe136:	nop	word ptr cs:[rax + rax]
0xe140:	lea	rax, [rip + 0x1d2d9]
0xe147:	lea	rcx, [rip + 0x1d2d2]
0xe14e:	movzx	eax, byte ptr [rax]
0xe151:	test	al, al
0xe153:	je	0xe1d2
0xe155:	mov	rdi, rcx
0xe158:	mov	qword ptr [rbp - 0x90], rcx
0xe15f:	call	0x49b0
0xe164:	mov	rdi, r13
0xe167:	add	r14, rax
0xe16a:	mov	qword ptr [rbp - 0x88], rax
0xe171:	mov	rsi, r14
0xe174:	call	0x1d690
0xe179:	mov	rdx, qword ptr [rbp - 0x88]
0xe180:	mov	rcx, qword ptr [rbp - 0x90]
0xe187:	add	r12, rax
0xe18a:	mov	r13, rax
0xe18d:	cmp	edx, 8
0xe190:	jae	0xe360
0xe196:	test	dl, 4
0xe199:	jne	0xe438
0xe19f:	test	edx, edx
0xe1a1:	jne	0xe408
0xe1a7:	add	dword ptr [rbp - 0x74], edx
0xe1aa:	mov	rcx, qword ptr [rip + 0x1d40f]
0xe1b1:	add	ebx, 1
0xe1b4:	jmp	0xdf3d
0xe1b9:	nop	dword ptr [rax]
0xe1c0:	movzx	eax, byte ptr [rip + 0x1d35d]
0xe1c7:	lea	rcx, [rip + 0x1d356]
0xe1ce:	test	al, al
0xe1d0:	jne	0xe155
0xe1d2:	add	r14, 6
0xe1d6:	mov	rdi, r13
0xe1d9:	add	ebx, 1
0xe1dc:	mov	rsi, r14
0xe1df:	call	0x1d690
0xe1e4:	mov	edi, 0x2965
0xe1e9:	mov	edx, 6
0xe1ee:	add	dword ptr [rbp - 0x74], edx
0xe1f1:	add	r12, rax
0xe1f4:	mov	rcx, qword ptr [rip + 0x1d3c5]
0xe1fb:	mov	r13, rax
0xe1fe:	mov	dword ptr [r12], 0x6e6f6e28
0xe206:	mov	word ptr [r12 + 4], di
0xe20c:	jmp	0xdf3d
0xe211:	nop	dword ptr [rax]
0xe218:	xor	eax, eax
0xe21a:	call	0x18330
0xe21f:	lea	r10, [rbp - 0x60]
0xe223:	mov	edi, dword ptr [rax + 0x14]
0xe226:	movsxd	rsi, dword ptr [rax + 0x10]
0xe22a:	movsxd	rcx, dword ptr [rax + 0x18]
0xe22e:	lea	edx, [rdi + 0x76c]
0xe234:	mov	rdi, r10
0xe237:	push	rdx
0xe238:	mov	eax, dword ptr [rax + 0xc]
0xe23b:	mov	edx, 0x20
0xe240:	push	rax
0xe241:	lea	rax, [rip + 0x1c4b8]
0xe248:	mov	r9, qword ptr [rax + rsi*8]
0xe24c:	lea	rax, [rip + 0x1c50d]
0xe253:	mov	esi, 1
0xe258:	mov	r8, qword ptr [rax + rcx*8]
0xe25c:	lea	rcx, [rip + 0x12d65]
0xe263:	xor	eax, eax
0xe265:	mov	qword ptr [rbp - 0x88], r10
0xe26c:	call	0x4f10
0xe271:	mov	r10, qword ptr [rbp - 0x88]
0xe278:	mov	rdi, r10
0xe27b:	mov	qword ptr [rbp - 0x90], r10
0xe282:	call	0x49b0
0xe287:	mov	rdi, r13
0xe28a:	add	r14, rax
0xe28d:	mov	qword ptr [rbp - 0x88], rax
0xe294:	mov	rsi, r14
0xe297:	call	0x1d690
0xe29c:	mov	rdx, qword ptr [rbp - 0x88]
0xe2a3:	mov	r10, qword ptr [rbp - 0x90]
0xe2aa:	add	r12, rax
0xe2ad:	mov	r13, rax
0xe2b0:	cmp	edx, 8
0xe2b3:	jae	0xe3a8
0xe2b9:	test	dl, 4
0xe2bc:	jne	0xe44e
0xe2c2:	test	edx, edx
0xe2c4:	je	0xe2d7
0xe2c6:	movzx	eax, byte ptr [rbp - 0x60]
0xe2ca:	mov	byte ptr [r12], al
0xe2ce:	test	dl, 2
0xe2d1:	jne	0xe466
0xe2d7:	pop	rcx
0xe2d8:	add	dword ptr [rbp - 0x74], edx
0xe2db:	add	ebx, 1
0xe2de:	mov	rcx, qword ptr [rip + 0x1d2db]
0xe2e5:	pop	rsi
0xe2e6:	jmp	0xdf3d
0xe2eb:	nop	dword ptr [rax + rax]
0xe2f0:	add	dword ptr [rbp - 0x74], 1
0xe2f4:	add	ebx, 1
0xe2f7:	mov	byte ptr [r13 + r12], 0x5c
0xe2fd:	jmp	0xdf3d
0xe302:	nop	word ptr [rax + rax]
0xe308:	movzx	eax, byte ptr [rip + 0x1d152]
0xe30f:	lea	rcx, [rip + 0x1d14b]
0xe316:	jmp	0xe151
0xe31b:	nop	dword ptr [rax + rax]
0xe320:	add	dword ptr [rbp - 0x74], 1
0xe324:	mov	byte ptr [r13 + r12], 0x5c
0xe32a:	jmp	0xdf3d
0xe32f:	nop	
0xe330:	mov	edx, dword ptr [rip + 0x1bf3a]
0xe336:	mov	esi, dword ptr [rip + 0x1bf30]
0xe33c:	mov	edi, dword ptr [rip + 0x1bf32]
0xe342:	call	0xa570
0xe347:	jmp	0xe082
0xe34c:	nop	dword ptr [rax]
0xe350:	mov	eax, dword ptr [rax + 0xc]
0xe353:	jmp	0xdffe
0xe358:	nop	dword ptr [rax + rax]
0xe360:	mov	rax, qword ptr [rcx]
0xe363:	lea	rdi, [r12 + 8]
0xe368:	add	ebx, 1
0xe36b:	and	rdi, 0xfffffffffffffff8
0xe36f:	mov	qword ptr [r12], rax
0xe373:	mov	eax, edx
0xe375:	mov	rsi, qword ptr [rcx + rax - 8]
0xe37a:	mov	qword ptr [r12 + rax - 8], rsi
0xe37f:	sub	r12, rdi
0xe382:	mov	rsi, rcx
0xe385:	sub	rsi, r12
0xe388:	add	r12d, edx
0xe38b:	shr	r12d, 3
0xe38f:	mov	ecx, r12d
0xe392:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0xe395:	add	dword ptr [rbp - 0x74], edx
0xe398:	mov	rcx, qword ptr [rip + 0x1d221]
0xe39f:	jmp	0xdf3d
0xe3a4:	nop	dword ptr [rax]
0xe3a8:	mov	rax, qword ptr [rbp - 0x60]
0xe3ac:	lea	rsi, [r12 + 8]
0xe3b1:	and	rsi, 0xfffffffffffffff8
0xe3b5:	mov	qword ptr [r12], rax
0xe3b9:	mov	eax, edx
0xe3bb:	mov	rcx, qword ptr [r10 + rax - 8]
0xe3c0:	mov	qword ptr [r12 + rax - 8], rcx
0xe3c5:	sub	r12, rsi
0xe3c8:	sub	r10, r12
0xe3cb:	add	r12d, edx
0xe3ce:	and	r12d, 0xfffffff8
0xe3d2:	cmp	r12d, 8
0xe3d6:	jb	0xe2d7
0xe3dc:	mov	r11d, dword ptr [rbp - 0x74]
0xe3e0:	and	r12d, 0xfffffff8
0xe3e4:	xor	eax, eax
0xe3e6:	mov	ecx, eax
0xe3e8:	add	eax, 8
0xe3eb:	mov	rdi, qword ptr [r10 + rcx]
0xe3ef:	mov	qword ptr [rsi + rcx], rdi
0xe3f3:	cmp	eax, r12d
0xe3f6:	jb	0xe3e6
0xe3f8:	mov	dword ptr [rbp - 0x74], r11d
0xe3fc:	jmp	0xe2d7
0xe401:	nop	dword ptr [rax]
0xe408:	movzx	eax, byte ptr [rcx]
0xe40b:	mov	byte ptr [r12], al
0xe40f:	test	dl, 2
0xe412:	je	0xe1a7
0xe418:	mov	eax, edx
0xe41a:	movzx	ecx, word ptr [rcx + rax - 2]
0xe41f:	mov	word ptr [r12 + rax - 2], cx
0xe425:	jmp	0xe1a7
0xe42a:	nop	word ptr [rax + rax]
0xe430:	mov	rax, r13
0xe433:	jmp	0xdfc7
0xe438:	mov	eax, dword ptr [rcx]
0xe43a:	mov	dword ptr [r12], eax
0xe43e:	mov	eax, edx
0xe440:	mov	ecx, dword ptr [rcx + rax - 4]
0xe444:	mov	dword ptr [r12 + rax - 4], ecx
0xe449:	jmp	0xe1a7
0xe44e:	mov	eax, dword ptr [rbp - 0x60]
0xe451:	mov	dword ptr [r12], eax
0xe455:	mov	eax, edx
0xe457:	mov	ecx, dword ptr [r10 + rax - 4]
0xe45c:	mov	dword ptr [r12 + rax - 4], ecx
0xe461:	jmp	0xe2d7
0xe466:	mov	eax, edx
0xe468:	movzx	ecx, word ptr [r10 + rax - 2]
0xe46e:	mov	word ptr [r12 + rax - 2], cx
0xe474:	jmp	0xe2d7
0xe479:	call	0x49d0
0xe47e:	nop	
0xe480:	endbr64	
0xe484:	push	r12
0xe486:	mov	r12d, esi
0xe489:	push	rbp
0xe48a:	mov	rbp, rdi
0xe48d:	mov	rdi, qword ptr [rip + 0x1d12c]
0xe494:	push	rbx
0xe495:	mov	ebx, edx
0xe497:	test	rdi, rdi
0xe49a:	je	0xe4a1
0xe49c:	call	0x18d10
0xe4a1:	mov	rdi, rbp
0xe4a4:	call	0x1d7a0
0xe4a9:	mov	rdi, rax
0xe4ac:	mov	rbp, rax
0xe4af:	mov	qword ptr [rip + 0x1d10a], rax
0xe4b6:	call	0x49b0
0xe4bb:	mov	rdi, rbp
0xe4be:	mov	rsi, rax
0xe4c1:	call	0x184d0
0xe4c6:	mov	byte ptr [rip + 0x1d0ec], r12b
0xe4cd:	xor	eax, eax
0xe4cf:	mov	byte ptr [rip + 0x1d0e3], bl
0xe4d5:	pop	rbx
0xe4d6:	pop	rbp
0xe4d7:	pop	r12
0xe4d9:	jmp	0xdea0
0xe4de:	nop	
0xe4e0:	endbr64	
0xe4e4:	push	rbp
0xe4e5:	mov	rdi, qword ptr [rip + 0x1d0bc]
0xe4ec:	call	0x1d7a0
0xe4f1:	mov	rdi, qword ptr [rip + 0x1d0c8]
0xe4f8:	mov	rbp, rax
0xe4fb:	test	rdi, rdi
0xe4fe:	je	0xe505
0xe500:	call	0x18d10
0xe505:	mov	rdi, rbp
0xe508:	call	0x1d7a0
0xe50d:	mov	rdi, rax
0xe510:	mov	rbp, rax
0xe513:	mov	qword ptr [rip + 0x1d0a6], rax
0xe51a:	call	0x49b0
0xe51f:	mov	rdi, rbp
0xe522:	mov	rsi, rax
0xe525:	call	0x184d0
0xe52a:	xor	eax, eax
0xe52c:	pop	rbp
0xe52d:	mov	byte ptr [rip + 0x1d085], 0
0xe534:	mov	byte ptr [rip + 0x1d07d], 0
0xe53b:	jmp	0xdea0
0xe540:	endbr64	
0xe544:	mov	rax, qword ptr [rsi]
0xe547:	mov	rdx, qword ptr [rdi]
0xe54a:	mov	rax, qword ptr [rax + 8]
0xe54e:	sub	eax, dword ptr [rdx + 8]
0xe551:	ret	
0xe552:	nop	word ptr cs:[rax + rax]
0xe55d:	nop	dword ptr [rax]
0xe560:	push	rbp
0xe561:	mov	rbp, rdi
0xe564:	mov	rdi, rdx
0xe567:	push	rbx
0xe568:	mov	ebx, esi
0xe56a:	lea	rsi, [rip + 0x1bdff]
0xe571:	sub	rsp, 8
0xe575:	call	0x48b0
0xe57a:	movsxd	rsi, ebx
0xe57d:	mov	rcx, rax
0xe580:	lea	rsi, [rsi + rsi*4]
0xe584:	mov	rax, qword ptr [rbp + 0x38]
0xe588:	shl	rsi, 4
0xe58c:	mov	edx, dword ptr [rax + rsi + 0x10]
0xe590:	mov	eax, 0x2d
0xe595:	mov	edi, edx
0xe597:	and	edi, 0xf000
0xe59d:	cmp	edi, 0x8000
0xe5a3:	je	0xe600
0xe5a5:	mov	eax, 0x64
0xe5aa:	cmp	edi, 0x4000
0xe5b0:	je	0xe600
0xe5b2:	mov	eax, 0x63
0xe5b7:	cmp	edi, 0x2000
0xe5bd:	je	0xe600
0xe5bf:	mov	eax, 0x62
0xe5c4:	cmp	edi, 0x6000
0xe5ca:	je	0xe600
0xe5cc:	mov	eax, 0x70
0xe5d1:	cmp	edi, 0x1000
0xe5d7:	je	0xe600
0xe5d9:	mov	eax, 0x73
0xe5de:	cmp	edi, 0xc000
0xe5e4:	je	0xe600
0xe5e6:	cmp	edi, 0xa000
0xe5ec:	mov	eax, 0x6c
0xe5f1:	mov	edi, 0x3f
0xe5f6:	cmovne	eax, edi
0xe5f9:	nop	dword ptr [rax]
0xe600:	mov	byte ptr [rcx], al
0xe602:	lea	rax, [rcx + 9]
0xe606:	nop	word ptr cs:[rax + rax]
0xe610:	test	dl, 1
0xe613:	jne	0xe618
0xe615:	mov	byte ptr [rax], 0x2d
0xe618:	sub	rax, 1
0xe61c:	shr	edx, 1
0xe61e:	cmp	rax, rcx
0xe621:	jne	0xe610
0xe623:	mov	rax, qword ptr [rbp + 0x38]
0xe627:	mov	eax, dword ptr [rax + rsi + 0x10]
0xe62b:	test	ah, 8
0xe62e:	je	0xe644
0xe630:	cmp	byte ptr [rcx + 3], 0x78
0xe634:	mov	edx, 0x73
0xe639:	mov	esi, 0x53
0xe63e:	cmovne	edx, esi
0xe641:	mov	byte ptr [rcx + 3], dl
0xe644:	test	ah, 4
0xe647:	je	0xe65d
0xe649:	cmp	byte ptr [rcx + 6], 0x78
0xe64d:	mov	edx, 0x73
0xe652:	mov	esi, 0x53
0xe657:	cmovne	edx, esi
0xe65a:	mov	byte ptr [rcx + 6], dl
0xe65d:	test	ah, 2
0xe660:	je	0xe676
0xe662:	cmp	byte ptr [rcx + 9], 0x78
0xe666:	mov	eax, 0x74
0xe66b:	mov	edx, 0x54
0xe670:	cmovne	eax, edx
0xe673:	mov	byte ptr [rcx + 9], al
0xe676:	add	rsp, 8
0xe67a:	pop	rbx
0xe67b:	pop	rbp
0xe67c:	ret	
0xe67d:	nop	dword ptr [rax]
0xe680:	endbr64	
0xe684:	push	r13
0xe686:	push	r12
0xe688:	push	rbp
0xe689:	push	rbx
0xe68a:	sub	rsp, 8
0xe68e:	movzx	eax, byte ptr [rdi + 0x48]
0xe692:	test	al, al
0xe694:	sete	cl
0xe697:	cmp	byte ptr [rsi + 0x48], 0
0xe69b:	sete	dl
0xe69e:	cmp	cl, dl
0xe6a0:	je	0xe6c0
0xe6a2:	cmp	al, 1
0xe6a4:	sbb	r12d, r12d
0xe6a7:	or	r12d, 1
0xe6ab:	add	rsp, 8
0xe6af:	mov	eax, r12d
0xe6b2:	pop	rbx
0xe6b3:	pop	rbp
0xe6b4:	pop	r12
0xe6b6:	pop	r13
0xe6b8:	ret	
0xe6b9:	nop	dword ptr [rax]
0xe6c0:	mov	r12d, dword ptr [rip + 0x1cf61]
0xe6c7:	mov	rbx, rdi
0xe6ca:	mov	rbp, rsi
0xe6cd:	cmp	r12d, 8
0xe6d1:	ja	0xe6e7
0xe6d3:	lea	rdx, [rip + 0x131c6]
0xe6da:	mov	eax, r12d
0xe6dd:	movsxd	rax, dword ptr [rdx + rax*4]
0xe6e1:	add	rax, rdx
0xe6e4:	jmp	rax
0xe6e7:	lea	rdi, [rip + 0x12a22]
0xe6ee:	call	0x8b00
0xe6f3:	mov	rbp, qword ptr [rbp]
0xe6f7:	mov	r13, qword ptr [rbx]
0xe6fa:	mov	rsi, rbp
0xe6fd:	mov	rdi, r13
0xe700:	add	rsp, 8
0xe704:	pop	rbx
0xe705:	pop	rbp
0xe706:	pop	r12
0xe708:	pop	r13
0xe70a:	jmp	0x4b30
0xe70f:	nop	
0xe710:	mov	eax, dword ptr [rsi + 0x14]
0xe713:	cmp	dword ptr [rdi + 0x14], eax
0xe716:	je	0xe6f3
0xe718:	mov	rsi, qword ptr [rsi + 0x28]
0xe71c:	mov	rdi, qword ptr [rdi + 0x28]
0xe720:	jmp	0xe700
0xe722:	nop	word ptr [rax + rax]
0xe728:	mov	r12d, dword ptr [rdi + 0x18]
0xe72c:	mov	eax, dword ptr [rsi + 0x18]
0xe72f:	cmp	r12d, eax
0xe732:	je	0xe6f3
0xe734:	add	rsp, 8
0xe738:	sub	r12d, eax
0xe73b:	pop	rbx
0xe73c:	mov	eax, r12d
0xe73f:	pop	rbp
0xe740:	pop	r12
0xe742:	pop	r13
0xe744:	ret	
0xe745:	nop	dword ptr [rax]
0xe748:	mov	r12d, dword ptr [rdi + 0x14]
0xe74c:	mov	eax, dword ptr [rsi + 0x14]
0xe74f:	cmp	r12d, eax
0xe752:	jne	0xe734
0xe754:	jmp	0xe6f3
0xe756:	nop	word ptr cs:[rax + rax]
0xe760:	mov	r12d, dword ptr [rdi + 0x10]
0xe764:	mov	eax, dword ptr [rsi + 0x10]
0xe767:	cmp	r12d, eax
0xe76a:	jne	0xe734
0xe76c:	jmp	0xe6f3
0xe76e:	nop	
0xe770:	mov	r12, qword ptr [rdi + 0x20]
0xe774:	mov	rax, qword ptr [rsi + 0x20]
0xe778:	cmp	r12, rax
0xe77b:	jne	0xe734
0xe77d:	jmp	0xe6f3
0xe782:	nop	word ptr [rax + rax]
0xe788:	mov	rdx, qword ptr [rdi + 8]
0xe78c:	mov	rax, qword ptr [rsi + 8]
0xe790:	mov	r12d, edx
0xe793:	sub	r12d, eax
0xe796:	cmp	rdx, rax
0xe799:	jne	0xe6ab
0xe79f:	jmp	0xe6f3
0xe7a4:	nop	dword ptr [rax]
0xe7a8:	mov	r13, qword ptr [rdi]
0xe7ab:	mov	esi, 0x2e
0xe7b0:	mov	rdi, r13
0xe7b3:	call	0x4a20
0xe7b8:	mov	rbp, qword ptr [rbp]
0xe7bc:	mov	esi, 0x2e
0xe7c1:	mov	rbx, rax
0xe7c4:	mov	rdi, rbp
0xe7c7:	call	0x4a20
0xe7cc:	test	rbx, rbx
0xe7cf:	je	0xe818
0xe7d1:	test	rax, rax
0xe7d4:	je	0xe818
0xe7d6:	lea	rsi, [rax + 1]
0xe7da:	lea	rdi, [rbx + 1]
0xe7de:	call	0x4b30
0xe7e3:	mov	r12d, eax
0xe7e6:	test	eax, eax
0xe7e8:	je	0xe6fa
0xe7ee:	jmp	0xe6ab
0xe7f3:	nop	dword ptr [rax + rax]
0xe7f8:	mov	eax, dword ptr [rsi + 0x18]
0xe7fb:	cmp	dword ptr [rdi + 0x18], eax
0xe7fe:	je	0xe6f3
0xe804:	mov	rsi, qword ptr [rsi + 0x30]
0xe808:	mov	rdi, qword ptr [rdi + 0x30]
0xe80c:	jmp	0xe700
0xe811:	nop	dword ptr [rax]
0xe818:	or	rax, rbx
0xe81b:	je	0xe6fa
0xe821:	test	rbx, rbx
0xe824:	mov	eax, 0xffffffff
0xe829:	cmovne	r12d, eax
0xe82d:	jmp	0xe6ab
0xe832:	nop	word ptr cs:[rax + rax]
0xe83d:	nop	dword ptr [rax]
0xe840:	push	r13
0xe842:	mov	ecx, 0x12
0xe847:	push	r12
0xe849:	push	rbp
0xe84a:	mov	rbp, rdi
0xe84d:	push	rbx
0xe84e:	sub	rsp, 0x138
0xe855:	mov	rax, qword ptr fs:[0x28]
0xe85e:	mov	qword ptr [rsp + 0x128], rax
0xe866:	xor	eax, eax
0xe868:	mov	r8, rsp
0xe86b:	mov	rdi, r8
0xe86e:	rep stosq	qword ptr [rdi], rax
0xe871:	movsxd	rax, esi
0xe874:	mov	rsi, r8
0xe877:	lea	rbx, [rax + rax*4]
0xe87b:	mov	rax, qword ptr [rbp + 0x38]
0xe87f:	shl	rbx, 4
0xe883:	mov	rdi, qword ptr [rax + rbx]
0xe887:	call	0x18f90
0xe88c:	mov	rax, qword ptr [rbp + 0x38]
0xe890:	mov	edx, dword ptr [rsp + 0x18]
0xe894:	mov	edi, dword ptr [rsp + 0x1c]
0xe898:	mov	ecx, dword ptr [rsp + 0x20]
0xe89c:	add	rax, rbx
0xe89f:	cmp	qword ptr [rsp + 8], 0
0xe8a5:	mov	dword ptr [rax + 0x10], edx
0xe8a8:	mov	dword ptr [rax + 0x14], edi
0xe8ab:	mov	dword ptr [rax + 0x18], ecx
0xe8ae:	je	0xeab0
0xe8b4:	mov	ecx, edx
0xe8b6:	and	ecx, 0xf000
0xe8bc:	cmp	ecx, 0x4000
0xe8c2:	je	0xe908
0xe8c4:	cmp	ecx, 0x8000
0xe8ca:	je	0xeb88
0xe8d0:	mov	byte ptr [rax + 0x4a], 0
0xe8d4:	cmp	ecx, 0x1000
0xe8da:	je	0xeb30
0xe8e0:	cmp	ecx, 0xc000
0xe8e6:	je	0xebb0
0xe8ec:	cmp	ecx, 0xa000
0xe8f2:	je	0xebc0
0xe8f8:	mov	byte ptr [rax + 0x48], 1
0xe8fc:	mov	rdx, qword ptr [rsp + 0x30]
0xe901:	jmp	0xe911
0xe903:	nop	dword ptr [rax + rax]
0xe908:	mov	byte ptr [rax + 0x48], 0
0xe90c:	mov	rdx, qword ptr [rsp + 0x30]
0xe911:	mov	qword ptr [rax + 8], rdx
0xe915:	call	0x1d310
0xe91a:	mov	r12, rax
0xe91d:	test	rax, rax
0xe920:	je	0xeae4
0xe926:	mov	rdi, rax
0xe929:	call	0x49b0
0xe92e:	mov	r13, qword ptr [rbp + 0x38]
0xe932:	cmp	rax, 7
0xe936:	lea	rdi, [rax + 1]
0xe93a:	mov	eax, 9
0xe93f:	cmovbe	rdi, rax
0xe943:	add	r13, rbx
0xe946:	call	0x1d670
0xe94b:	mov	r8, r12
0xe94e:	mov	esi, 1
0xe953:	lea	rcx, [rip + 0x127c6]
0xe95a:	mov	qword ptr [r13 + 0x28], rax
0xe95e:	mov	rax, qword ptr [rbp + 0x38]
0xe962:	mov	rdx, -1
0xe969:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xe96e:	xor	eax, eax
0xe970:	call	0x4f10
0xe975:	mov	edi, dword ptr [rsp + 0x20]
0xe979:	call	0x1d4c0
0xe97e:	mov	r12, rax
0xe981:	test	rax, rax
0xe984:	je	0xeb40
0xe98a:	mov	rdi, rax
0xe98d:	call	0x49b0
0xe992:	mov	r13, qword ptr [rbp + 0x38]
0xe996:	cmp	rax, 7
0xe99a:	lea	rdi, [rax + 1]
0xe99e:	mov	eax, 9
0xe9a3:	cmovbe	rdi, rax
0xe9a7:	add	r13, rbx
0xe9aa:	call	0x1d670
0xe9af:	mov	r8, r12
0xe9b2:	mov	esi, 1
0xe9b7:	lea	rcx, [rip + 0x12762]
0xe9be:	mov	qword ptr [r13 + 0x30], rax
0xe9c2:	mov	rax, qword ptr [rbp + 0x38]
0xe9c6:	mov	rdx, -1
0xe9cd:	mov	rdi, qword ptr [rax + rbx + 0x30]
0xe9d2:	xor	eax, eax
0xe9d4:	call	0x4f10
0xe9d9:	mov	rdx, qword ptr [rsp + 0x58]
0xe9de:	mov	rax, qword ptr [rbp + 0x38]
0xe9e2:	lea	rdi, [rsp + 0x58]
0xe9e7:	mov	qword ptr [rax + rbx + 0x20], rdx
0xe9ec:	call	0x4840
0xe9f1:	mov	rcx, rax
0xe9f4:	movsxd	rax, dword ptr [rax + 8]
0xe9f8:	mov	r9d, dword ptr [rcx + 0xc]
0xe9fc:	mov	rdx, rax
0xe9ff:	imul	rax, rax, 0x2aaaaaab
0xea06:	mov	esi, edx
0xea08:	sar	esi, 0x1f
0xea0b:	sar	rax, 0x21
0xea0f:	sub	eax, esi
0xea11:	lea	esi, [rax + rax*2]
0xea14:	mov	eax, edx
0xea16:	shl	esi, 2
0xea19:	sub	eax, esi
0xea1b:	mov	esi, 0xc
0xea20:	cmove	eax, esi
0xea23:	cmp	edx, 0xc
0xea26:	mov	esi, 0x70
0xea2b:	mov	edx, 0x61
0xea30:	cmovge	edx, esi
0xea33:	mov	esi, dword ptr [rcx + 0x10]
0xea36:	add	rbx, qword ptr [rbp + 0x38]
0xea3a:	lea	rdi, [rbx + 0x38]
0xea3e:	push	rdx
0xea3f:	mov	edx, dword ptr [rcx + 4]
0xea42:	lea	r8d, [rsi + 1]
0xea46:	mov	esi, 1
0xea4b:	push	rdx
0xea4c:	push	rax
0xea4d:	movsxd	rax, dword ptr [rcx + 0x14]
0xea51:	mov	rdx, rax
0xea54:	imul	rax, rax, 0x51eb851f
0xea5b:	mov	ecx, edx
0xea5d:	sar	ecx, 0x1f
0xea60:	sar	rax, 0x25
0xea64:	sub	eax, ecx
0xea66:	lea	rcx, [rip + 0x126bd]
0xea6d:	imul	eax, eax, 0x64
0xea70:	sub	edx, eax
0xea72:	xor	eax, eax
0xea74:	push	rdx
0xea75:	mov	edx, 0x10
0xea7a:	call	0x4f10
0xea7f:	add	rsp, 0x20
0xea83:	mov	rax, qword ptr [rsp + 0x128]
0xea8b:	sub	rax, qword ptr fs:[0x28]
0xea94:	jne	0xec3e
0xea9a:	add	rsp, 0x138
0xeaa1:	pop	rbx
0xeaa2:	pop	rbp
0xeaa3:	pop	r12
0xeaa5:	pop	r13
0xeaa7:	ret	
0xeaa8:	nop	dword ptr [rax + rax]
0xeab0:	mov	byte ptr [rax + 0x48], 2
0xeab4:	mov	rdi, qword ptr [rax]
0xeab7:	call	0x18e80
0xeabc:	xor	edx, edx
0xeabe:	mov	edi, dword ptr [rsp + 0x1c]
0xeac2:	cmp	eax, -1
0xeac5:	cmove	eax, edx
0xeac8:	mov	rdx, qword ptr [rbp + 0x38]
0xeacc:	cdqe	
0xeace:	mov	qword ptr [rdx + rbx + 8], rax
0xead3:	call	0x1d310
0xead8:	mov	r12, rax
0xeadb:	test	rax, rax
0xeade:	jne	0xe926
0xeae4:	mov	r12, qword ptr [rbp + 0x38]
0xeae8:	mov	edi, 0x20
0xeaed:	call	0x1d670
0xeaf2:	mov	r8d, dword ptr [rsp + 0x1c]
0xeaf7:	mov	esi, 1
0xeafc:	lea	rcx, [rip + 0x12622]
0xeb03:	add	r12, rbx
0xeb06:	mov	rdx, -1
0xeb0d:	mov	qword ptr [r12 + 0x28], rax
0xeb12:	mov	rax, qword ptr [rbp + 0x38]
0xeb16:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xeb1b:	xor	eax, eax
0xeb1d:	call	0x4f10
0xeb22:	jmp	0xe975
0xeb27:	nop	word ptr [rax + rax]
0xeb30:	mov	byte ptr [rax + 0x48], 3
0xeb34:	mov	rdx, qword ptr [rsp + 0x30]
0xeb39:	jmp	0xe911
0xeb3e:	nop	
0xeb40:	mov	r12, qword ptr [rbp + 0x38]
0xeb44:	mov	edi, 0x20
0xeb49:	call	0x1d670
0xeb4e:	mov	r8d, dword ptr [rsp + 0x20]
0xeb53:	mov	esi, 1
0xeb58:	lea	rcx, [rip + 0x125c6]
0xeb5f:	add	r12, rbx
0xeb62:	mov	rdx, -1
0xeb69:	mov	qword ptr [r12 + 0x30], rax
0xeb6e:	mov	rax, qword ptr [rbp + 0x38]
0xeb72:	mov	rdi, qword ptr [rax + rbx + 0x30]
0xeb77:	xor	eax, eax
0xeb79:	call	0x4f10
0xeb7e:	jmp	0xe9d9
0xeb83:	nop	dword ptr [rax + rax]
0xeb88:	xor	ecx, ecx
0xeb8a:	and	edx, 0x49
0xeb8d:	mov	byte ptr [rax + 0x48], 1
0xeb91:	je	0xeb9b
0xeb93:	mov	edx, dword ptr [rbp + 0x10]
0xeb96:	test	edx, edx
0xeb98:	sete	cl
0xeb9b:	mov	byte ptr [rax + 0x4a], cl
0xeb9e:	mov	rdx, qword ptr [rsp + 0x30]
0xeba3:	jmp	0xe911
0xeba8:	nop	dword ptr [rax + rax]
0xebb0:	mov	byte ptr [rax + 0x48], 4
0xebb4:	mov	rdx, qword ptr [rsp + 0x30]
0xebb9:	jmp	0xe911
0xebbe:	nop	
0xebc0:	mov	rdi, qword ptr [rax]
0xebc3:	lea	rsi, [rsp + 0x90]
0xebcb:	call	0x18f40
0xebd0:	cmp	eax, -1
0xebd3:	je	0xec12
0xebd5:	mov	ecx, dword ptr [rsp + 0xa8]
0xebdc:	mov	rax, qword ptr [rbp + 0x38]
0xebe0:	mov	edx, ecx
0xebe2:	add	rax, rbx
0xebe5:	and	edx, 0xf000
0xebeb:	cmp	edx, 0x4000
0xebf1:	mov	rdx, qword ptr [rsp + 0xc0]
0xebf9:	setne	byte ptr [rax + 0x48]
0xebfd:	and	ecx, 0x49
0xec00:	mov	qword ptr [rsp + 0x30], rdx
0xec05:	setne	byte ptr [rax + 0x4a]
0xec09:	mov	edi, dword ptr [rsp + 0x1c]
0xec0d:	jmp	0xe911
0xec12:	mov	rax, qword ptr [rbp + 0x38]
0xec16:	add	rax, rbx
0xec19:	mov	byte ptr [rax + 0x48], 2
0xec1d:	mov	rdi, qword ptr [rax]
0xec20:	call	0x18e80
0xec25:	xor	edx, edx
0xec27:	cmp	eax, -1
0xec2a:	cmove	eax, edx
0xec2d:	movsxd	rdx, eax
0xec30:	mov	rax, qword ptr [rbp + 0x38]
0xec34:	mov	qword ptr [rsp + 0x30], rdx
0xec39:	add	rax, rbx
0xec3c:	jmp	0xec09
0xec3e:	call	0x49d0
0xec43:	nop	word ptr cs:[rax + rax]
0xec4e:	nop	
0xec50:	push	r15
0xec52:	push	r14
0xec54:	push	r13
0xec56:	push	r12
0xec58:	push	rbp
0xec59:	push	rbx
0xec5a:	mov	rbx, rdi
0xec5d:	sub	rsp, 0x6c8
0xec64:	mov	rax, qword ptr fs:[0x28]
0xec6d:	mov	qword ptr [rsp + 0x6b8], rax
0xec75:	xor	eax, eax
0xec77:	lea	rbp, [rsp + 0x1f]
0xec7c:	mov	rdi, rbp
0xec7f:	call	0xa6a0
0xec84:	cmp	dword ptr [rbx + 0x60], 2
0xec88:	jg	0xef20
0xec8e:	mov	eax, dword ptr [rbx + 0x64]
0xec91:	cmp	eax, 0x27
0xec94:	jle	0xeeb8
0xec9a:	mov	esi, dword ptr [rbx + 0x70]
0xec9d:	test	esi, esi
0xec9f:	je	0xee38
0xeca5:	mov	edx, dword ptr [rbx + 0x68]
0xeca8:	test	edx, edx
0xecaa:	jle	0xf0e8
0xecb0:	sub	edx, 1
0xecb3:	mov	rcx, qword ptr [rbx + 0x38]
0xecb7:	xor	edi, edi
0xecb9:	lea	rdx, [rdx + rdx*4]
0xecbd:	shl	rdx, 4
0xecc1:	lea	rax, [rcx + 8]
0xecc5:	lea	rdx, [rcx + rdx + 0x58]
0xecca:	nop	word ptr [rax + rax]
0xecd0:	cmp	byte ptr [rax + 0x41], 0
0xecd4:	je	0xece0
0xecd6:	cmp	byte ptr [rax + 0x40], 1
0xecda:	jne	0xece0
0xecdc:	add	rdi, qword ptr [rax]
0xecdf:	nop	
0xece0:	add	rax, 0x50
0xece4:	cmp	rax, rdx
0xece7:	jne	0xecd0
0xece9:	mov	r8d, 1
0xecef:	lea	rsi, [rsp + 0x20]
0xecf4:	mov	ecx, 1
0xecf9:	mov	edx, 0x19c
0xecfe:	call	0x1c520
0xed03:	cmp	byte ptr [rax], 0x20
0xed06:	mov	r8, rax
0xed09:	jne	0xed1d
0xed0b:	lea	rdx, [rax + 1]
0xed0f:	nop	
0xed10:	mov	r8, rdx
0xed13:	add	rdx, 1
0xed17:	cmp	byte ptr [rdx - 1], 0x20
0xed1b:	je	0xed10
0xed1d:	mov	r9d, dword ptr [rbx + 0x70]
0xed21:	lea	rdx, [rip + 0x136bd]
0xed28:	lea	rax, [rip + 0x126ec]
0xed2f:	mov	esi, 1
0xed34:	lea	r13, [rsp + 0x2b0]
0xed3c:	lea	rcx, [rip + 0x12410]
0xed43:	cmp	r9d, 1
0xed47:	mov	rdi, r13
0xed4a:	cmovle	rax, rdx
0xed4e:	sub	rsp, 8
0xed52:	mov	edx, 0x400
0xed57:	push	rax
0xed58:	xor	eax, eax
0xed5a:	call	0x4f10
0xed5f:	mov	edi, dword ptr [rip + 0x1b607]
0xed65:	call	0xa530
0xed6a:	mov	edi, dword ptr [rip + 0x1b5f8]
0xed70:	call	0xa4f0
0xed75:	pop	rdx
0xed76:	pop	rcx
0xed77:	mov	rdi, r13
0xed7a:	call	0x49b0
0xed7f:	mov	r8, qword ptr [rbx + 0x20]
0xed83:	mov	r12, rax
0xed86:	cmp	eax, 8
0xed89:	jae	0xee78
0xed8f:	test	al, 4
0xed91:	jne	0xf0b0
0xed97:	test	eax, eax
0xed99:	je	0xedb4
0xed9b:	movzx	eax, byte ptr [rsp + 0x2b0]
0xeda3:	mov	byte ptr [r8], al
0xeda6:	test	r12b, 2
0xedaa:	jne	0xf0ef
0xedb0:	mov	r8, qword ptr [rbx + 0x20]
0xedb4:	movsxd	rdx, dword ptr [rbx + 0x64]
0xedb8:	lea	rcx, [r12 + 2]
0xedbd:	cmp	rcx, rdx
0xedc0:	jb	0xef00
0xedc6:	mov	rdi, r8
0xedc9:	mov	rsi, r12
0xedcc:	call	0x184d0
0xedd1:	mov	edi, dword ptr [rip + 0x1b549]
0xedd7:	call	0xa510
0xeddc:	mov	eax, dword ptr [rbx + 0x60]
0xeddf:	mov	rdi, qword ptr [rbx + 8]
0xede3:	mov	edx, 2
0xede8:	lea	esi, [rax - 1]
0xedeb:	call	0xc680
0xedf0:	mov	eax, dword ptr [rbx + 0x64]
0xedf3:	mov	rdi, qword ptr [rbx + 8]
0xedf7:	mov	rsi, qword ptr [rbx + 0x20]
0xedfb:	lea	edx, [rax - 4]
0xedfe:	call	0xc600
0xee03:	mov	rdi, rbp
0xee06:	call	0xa6b0
0xee0b:	mov	rax, qword ptr [rsp + 0x6b8]
0xee13:	sub	rax, qword ptr fs:[0x28]
0xee1c:	jne	0xf107
0xee22:	add	rsp, 0x6c8
0xee29:	pop	rbx
0xee2a:	pop	rbp
0xee2b:	pop	r12
0xee2d:	pop	r13
0xee2f:	pop	r14
0xee31:	pop	r15
0xee33:	ret	
0xee34:	nop	dword ptr [rax]
0xee38:	mov	eax, dword ptr [rip + 0x1c7e2]
0xee3e:	test	eax, eax
0xee40:	jne	0xefc0
0xee46:	mov	byte ptr [rsp + 0x2b0], 0
0xee4e:	lea	r13, [rsp + 0x2b0]
0xee56:	mov	edi, dword ptr [rip + 0x1b508]
0xee5c:	call	0xa530
0xee61:	mov	edi, dword ptr [rip + 0x1b4f9]
0xee67:	call	0xa4f0
0xee6c:	jmp	0xed77
0xee71:	nop	dword ptr [rax]
0xee78:	mov	rax, qword ptr [rsp + 0x2b0]
0xee80:	lea	rdi, [r8 + 8]
0xee84:	mov	rsi, r13
0xee87:	and	rdi, 0xfffffffffffffff8
0xee8b:	mov	qword ptr [r8], rax
0xee8e:	mov	eax, r12d
0xee91:	mov	rdx, qword ptr [r13 + rax - 8]
0xee96:	mov	qword ptr [r8 + rax - 8], rdx
0xee9b:	sub	r8, rdi
0xee9e:	sub	rsi, r8
0xeea1:	add	r8d, r12d
0xeea4:	shr	r8d, 3
0xeea8:	mov	ecx, r8d
0xeeab:	rep movsq	qword ptr [rdi], qword ptr [rsi]
0xeeae:	jmp	0xedb0
0xeeb3:	nop	dword ptr [rax + rax]
0xeeb8:	cmp	eax, 0xd
0xeebb:	jle	0xee46
0xeebd:	mov	esi, dword ptr [rbx + 0x28]
0xeec0:	lea	r12, [rsp + 0x20]
0xeec5:	mov	rdi, rbx
0xeec8:	xor	eax, eax
0xeeca:	mov	rdx, r12
0xeecd:	lea	r13, [rsp + 0x2b0]
0xeed5:	call	0xe560
0xeeda:	mov	r8, r12
0xeedd:	mov	edx, 0x400
0xeee2:	mov	rdi, r13
0xeee5:	lea	rcx, [rip + 0x12289]
0xeeec:	mov	esi, 1
0xeef1:	xor	eax, eax
0xeef3:	call	0x4f10
0xeef8:	jmp	0xee56
0xeefd:	nop	dword ptr [rax]
0xef00:	lea	edx, [rdx - 2]
0xef03:	lea	rdi, [r8 + r12]
0xef07:	mov	esi, 0x20
0xef0c:	movsxd	rdx, edx
0xef0f:	sub	rdx, r12
0xef12:	call	0x4a50
0xef17:	mov	r8, qword ptr [rbx + 0x20]
0xef1b:	jmp	0xedc6
0xef20:	mov	esi, dword ptr [rip + 0x1b3fa]
0xef26:	xor	edi, edi
0xef28:	mov	edx, esi
0xef2a:	call	0xa570
0xef2f:	mov	eax, dword ptr [rbx + 0x64]
0xef32:	mov	rdi, qword ptr [rbx + 8]
0xef36:	lea	edx, [rax - 1]
0xef39:	mov	eax, dword ptr [rbx + 0x8c]
0xef3f:	lea	esi, [rax + 1]
0xef42:	call	0xc680
0xef47:	mov	rdi, qword ptr [rbx + 8]
0xef4b:	mov	esi, 0x20
0xef50:	call	0xc650
0xef55:	mov	eax, dword ptr [rbx + 0x60]
0xef58:	mov	ecx, dword ptr [rbx + 0x68]
0xef5b:	lea	edx, [rax - 1]
0xef5e:	cmp	edx, ecx
0xef60:	jg	0xec8e
0xef66:	sub	eax, 2
0xef69:	imul	eax, dword ptr [rbx + 0x28]
0xef6d:	mov	esi, dword ptr [rip + 0x1b3b5]
0xef73:	mov	edi, dword ptr [rip + 0x1b3b7]
0xef79:	cdq	
0xef7a:	idiv	ecx
0xef7c:	mov	edx, dword ptr [rip + 0x1b3aa]
0xef82:	mov	dword ptr [rbx + 0x8c], eax
0xef88:	call	0xa570
0xef8d:	mov	eax, dword ptr [rbx + 0x64]
0xef90:	mov	rdi, qword ptr [rbx + 8]
0xef94:	lea	edx, [rax - 1]
0xef97:	mov	eax, dword ptr [rbx + 0x8c]
0xef9d:	lea	esi, [rax + 1]
0xefa0:	call	0xc680
0xefa5:	mov	rdi, qword ptr [rbx + 8]
0xefa9:	mov	esi, 0x23
0xefae:	call	0xc650
0xefb3:	jmp	0xec8e
0xefb8:	nop	dword ptr [rax + rax]
0xefc0:	lea	r9, [rsp + 0x20]
0xefc5:	mov	esi, dword ptr [rbx + 0x28]
0xefc8:	xor	eax, eax
0xefca:	mov	rdi, rbx
0xefcd:	mov	rdx, r9
0xefd0:	mov	qword ptr [rsp + 8], r9
0xefd5:	lea	r13, [rsp + 0x2b0]
0xefdd:	call	0xe560
0xefe2:	mov	eax, dword ptr [rbx + 0x64]
0xefe5:	lea	r12d, [rax - 0x1a]
0xefe9:	movsxd	rax, dword ptr [rbx + 0x28]
0xefed:	movsxd	r12, r12d
0xeff0:	lea	r15, [rax + rax*4]
0xeff4:	shl	r15, 4
0xeff8:	add	r15, qword ptr [rbx + 0x38]
0xeffc:	mov	rsi, qword ptr [r15]
0xefff:	mov	rdi, rsi
0xf002:	mov	qword ptr [rsp], rsi
0xf006:	call	0x49b0
0xf00b:	mov	rsi, qword ptr [rsp]
0xf00f:	mov	ecx, 0x400
0xf014:	mov	rdi, r13
0xf017:	cmp	r12, rax
0xf01a:	cmovbe	rax, r12
0xf01e:	mov	rdx, rax
0xf021:	mov	r14, rax
0xf024:	call	0x4b70
0xf029:	mov	rdx, r12
0xf02c:	lea	rdi, [r13 + r14]
0xf031:	mov	esi, 0x20
0xf036:	sub	rdx, r14
0xf039:	call	0x4a50
0xf03e:	cmp	byte ptr [r15 + 0x48], 0
0xf043:	mov	r9, qword ptr [rsp + 8]
0xf048:	jne	0xf088
0xf04a:	mov	rax, qword ptr [r15]
0xf04d:	cmp	byte ptr [rax], 0x2e
0xf050:	jne	0xf058
0xf052:	cmp	byte ptr [rax + 1], 0x2e
0xf056:	je	0xf0d0
0xf058:	lea	r8, [rip + 0x120ec]
0xf05f:	lea	rdi, [r13 + r12]
0xf064:	lea	rcx, [rip + 0x120f8]
0xf06b:	mov	rdx, -1
0xf072:	xor	eax, eax
0xf074:	mov	esi, 1
0xf079:	call	0x4f10
0xf07e:	jmp	0xee56
0xf083:	nop	dword ptr [rax + rax]
0xf088:	mov	r8, qword ptr [r15 + 8]
0xf08c:	lea	rdi, [r13 + r12]
0xf091:	mov	esi, 1
0xf096:	xor	eax, eax
0xf098:	lea	rcx, [rip + 0x120cf]
0xf09f:	mov	rdx, -1
0xf0a6:	call	0x4f10
0xf0ab:	jmp	0xee56
0xf0b0:	mov	eax, dword ptr [rsp + 0x2b0]
0xf0b7:	mov	dword ptr [r8], eax
0xf0ba:	mov	eax, r12d
0xf0bd:	mov	edx, dword ptr [r13 + rax - 4]
0xf0c2:	mov	dword ptr [r8 + rax - 4], edx
0xf0c7:	mov	r8, qword ptr [rbx + 0x20]
0xf0cb:	jmp	0xedb4
0xf0d0:	cmp	byte ptr [rax + 2], 0
0xf0d4:	lea	r8, [rip + 0x12068]
0xf0db:	je	0xf05f
0xf0dd:	jmp	0xf058
0xf0e2:	nop	word ptr [rax + rax]
0xf0e8:	xor	edi, edi
0xf0ea:	jmp	0xece9
0xf0ef:	mov	eax, r12d
0xf0f2:	movzx	edx, word ptr [r13 + rax - 2]
0xf0f8:	mov	word ptr [r8 + rax - 2], dx
0xf0fe:	mov	r8, qword ptr [rbx + 0x20]
0xf102:	jmp	0xedb4
0xf107:	call	0x49d0
0xf10c:	nop	dword ptr [rax]
0xf110:	mov	eax, dword ptr [rdi + 0x2c]
0xf113:	mov	edx, dword ptr [rdi + 0x28]
0xf116:	mov	ecx, dword ptr [rdi + 0x60]
0xf119:	mov	esi, dword ptr [rdi + 0x68]
0xf11c:	cmp	eax, edx
0xf11e:	jg	0xf130
0xf120:	lea	edi, [rcx + rax - 2]
0xf124:	cmp	edx, edi
0xf126:	jge	0xf130
0xf128:	cmp	edi, esi
0xf12a:	jle	0xf159
0xf12c:	nop	dword ptr [rax]
0xf130:	sub	ecx, 2
0xf133:	mov	eax, ecx
0xf135:	shr	eax, 0x1f
0xf138:	add	eax, ecx
0xf13a:	sar	eax, 1
0xf13c:	sub	edx, eax
0xf13e:	mov	eax, 0
0xf143:	lea	edi, [rcx + rdx]
0xf146:	cmovns	eax, edx
0xf149:	cmp	esi, edi
0xf14b:	jg	0xf159
0xf14d:	mov	eax, esi
0xf14f:	mov	edx, 0
0xf154:	sub	eax, ecx
0xf156:	cmovs	eax, edx
0xf159:	ret	
0xf15a:	nop	word ptr [rax + rax]
0xf160:	endbr64	
0xf164:	push	r12
0xf166:	push	rbp
0xf167:	mov	rbp, rdi
0xf16a:	mov	edi, 0x98
0xf16f:	sub	rsp, 8
0xf173:	call	0x1d670
0xf178:	mov	ecx, 0x100
0xf17d:	mov	rdi, rbp
0xf180:	mov	dword ptr [rax + 0x50], 0xffffffff
0xf187:	mov	r12, rax
0xf18a:	mov	qword ptr [rax + 0x20], 0
0xf192:	mov	qword ptr [rax + 0x28], 0
0xf19a:	mov	qword ptr [rax], 0
0xf1a1:	mov	qword ptr [rax + 0x48], 0
0xf1a9:	mov	qword ptr [rax + 0x58], 0
0xf1b1:	movabs	rax, 0x100000001
0xf1bb:	mov	qword ptr [r12 + 0x60], rax
0xf1c0:	movabs	rax, 0x3fffffff00000000
0xf1ca:	mov	dword ptr [r12 + 0x68], 0
0xf1d3:	mov	word ptr [r12 + 0x6c], cx
0xf1d9:	mov	qword ptr [r12 + 0x80], 0
0xf1e5:	mov	qword ptr [r12 + 0x88], 1
0xf1f1:	mov	qword ptr [r12 + 0x70], 0
0xf1fa:	mov	qword ptr [r12 + 0x10], rax
0xf1ff:	mov	qword ptr [r12 + 0x38], 0
0xf208:	call	0x49c0
0xf20d:	cmp	eax, -1
0xf210:	je	0xf3b0
0xf216:	xor	eax, eax
0xf218:	call	0x18fe0
0xf21d:	mov	qword ptr [r12 + 0x18], rax
0xf222:	mov	rdi, rax
0xf225:	test	rax, rax
0xf228:	je	0xf3c8
0xf22e:	call	0x18040
0xf233:	mov	rdi, qword ptr [r12 + 0x18]
0xf238:	call	0x49b0
0xf23d:	mov	qword ptr [r12 + 0x78], rax
0xf242:	xor	eax, eax
0xf244:	call	0xc590
0xf249:	mov	edx, dword ptr [rip + 0x1c3b1]
0xf24f:	mov	qword ptr [r12 + 8], rax
0xf254:	test	edx, edx
0xf256:	je	0xf280
0xf258:	mov	eax, dword ptr [rip + 0x1c3d6]
0xf25e:	mov	dword ptr [r12 + 0x80], eax
0xf266:	mov	eax, dword ptr [rip + 0x1c3c4]
0xf26c:	mov	dword ptr [r12 + 0x84], eax
0xf274:	add	rsp, 8
0xf278:	mov	rax, r12
0xf27b:	pop	rbp
0xf27c:	pop	r12
0xf27e:	ret	
0xf27f:	nop	
0xf280:	lea	rdi, [rip + 0x11406]
0xf287:	call	0x17c50
0xf28c:	xor	esi, esi
0xf28e:	lea	rdi, [rip + 0x11ee5]
0xf295:	call	0x17d10
0xf29a:	lea	rdi, [rip + 0x11411]
0xf2a1:	mov	dword ptr [rip + 0x1c385], eax
0xf2a7:	call	0x17c50
0xf2ac:	xor	ecx, ecx
0xf2ae:	mov	edx, 6
0xf2b3:	lea	rsi, [rip + 0x1b326]
0xf2ba:	lea	rdi, [rip + 0x11ecb]
0xf2c1:	call	0x17d70
0xf2c6:	xor	ecx, ecx
0xf2c8:	mov	edx, 9
0xf2cd:	lea	rsi, [rip + 0x1b2ac]
0xf2d4:	mov	dword ptr [r12 + 0x80], eax
0xf2dc:	lea	rdi, [rip + 0x11ec0]
0xf2e3:	mov	dword ptr [rip + 0x1c34b], eax
0xf2e9:	call	0x17d70
0xf2ee:	mov	esi, 1
0xf2f3:	lea	rdi, [rip + 0x11ebf]
0xf2fa:	mov	dword ptr [r12 + 0x84], eax
0xf302:	mov	dword ptr [rip + 0x1c328], eax
0xf308:	call	0x17e50
0xf30d:	mov	esi, 1
0xf312:	lea	rdi, [rip + 0x11eac]
0xf319:	mov	dword ptr [rip + 0x1c301], eax
0xf31f:	call	0x17e50
0xf324:	lea	rdi, [rip + 0x1a91d]
0xf32b:	mov	dword ptr [rip + 0x1c2f3], eax
0xf331:	mov	eax, dword ptr [rip + 0x1a929]
0xf337:	test	eax, eax
0xf339:	lea	rax, [rip + 0x1a8f0]
0xf340:	cmove	rdi, rax
0xf344:	call	0x17c50
0xf349:	mov	edx, 0x14
0xf34e:	lea	rsi, [rip + 0x1b18b]
0xf355:	lea	rdi, [rip + 0x1afc4]
0xf35c:	call	0x17f70
0xf361:	mov	edi, 8
0xf366:	call	0x19100
0xf36b:	mov	edi, 8
0xf370:	mov	qword ptr [rip + 0x1c2a1], rax
0xf377:	call	0x19100
0xf37c:	mov	edi, 8
0xf381:	mov	qword ptr [rip + 0x1c288], rax
0xf388:	call	0x19100
0xf38d:	mov	dword ptr [rip + 0x1c269], 1
0xf397:	mov	qword ptr [rip + 0x1c26a], rax
0xf39e:	add	rsp, 8
0xf3a2:	mov	rax, r12
0xf3a5:	pop	rbp
0xf3a6:	pop	r12
0xf3a8:	ret	
0xf3a9:	nop	dword ptr [rax]
0xf3b0:	lea	rdi, [rip + 0x12641]
0xf3b7:	call	0x8b00
0xf3bc:	jmp	0xf216
0xf3c1:	nop	dword ptr [rax]
0xf3c8:	lea	rdi, [rip + 0x11581]
0xf3cf:	call	0x8b00
0xf3d4:	mov	rdi, qword ptr [r12 + 0x18]
0xf3d9:	jmp	0xf22e
0xf3de:	nop	
0xf3e0:	endbr64	
0xf3e4:	push	r12
0xf3e6:	mov	r12, rdi
0xf3e9:	push	rbp
0xf3ea:	push	rbx
0xf3eb:	mov	rdi, qword ptr [rdi]
0xf3ee:	test	rdi, rdi
0xf3f1:	je	0xf3f8
0xf3f3:	call	0x4ac0
0xf3f8:	mov	eax, dword ptr [r12 + 0x68]
0xf3fd:	mov	r8, qword ptr [r12 + 0x38]
0xf402:	test	eax, eax
0xf404:	jle	0xf43e
0xf406:	xor	ebx, ebx
0xf408:	nop	dword ptr [rax + rax]
0xf410:	lea	rbp, [rbx + rbx*4]
0xf414:	shl	rbp, 4
0xf418:	mov	rdi, qword ptr [r8 + rbp]
0xf41c:	test	rdi, rdi
0xf41f:	je	0xf433
0xf421:	call	0x18d10
0xf426:	mov	r8, qword ptr [r12 + 0x38]
0xf42b:	mov	qword ptr [r8 + rbp], 0
0xf433:	add	rbx, 1
0xf437:	cmp	dword ptr [r12 + 0x68], ebx
0xf43c:	jg	0xf410
0xf43e:	mov	rdi, r8
0xf441:	call	0x18d10
0xf446:	mov	rdi, qword ptr [r12 + 0x20]
0xf44b:	call	0x18d10
0xf450:	mov	rdi, qword ptr [r12 + 8]
0xf455:	call	0xc5c0
0xf45a:	pop	rbx
0xf45b:	mov	rdi, r12
0xf45e:	pop	rbp
0xf45f:	pop	r12
0xf461:	jmp	0x18d10
0xf466:	nop	word ptr cs:[rax + rax]
0xf470:	endbr64	
0xf474:	mov	rax, qword ptr [rdi + 8]
0xf478:	ret	
0xf479:	nop	dword ptr [rax]
0xf480:	endbr64	
0xf484:	mov	dword ptr [rdi + 0x14], 0x3fffffff
0xf48b:	ret	
0xf48c:	nop	dword ptr [rax]
0xf490:	endbr64	
0xf494:	movsxd	rax, dword ptr [rdi + 0x28]
0xf498:	lea	rax, [rax + rax*4]
0xf49c:	shl	rax, 4
0xf4a0:	add	rax, qword ptr [rdi + 0x38]
0xf4a4:	mov	rax, qword ptr [rax]
0xf4a7:	ret	
0xf4a8:	nop	dword ptr [rax + rax]
0xf4b0:	endbr64	
0xf4b4:	movsxd	rax, dword ptr [rdi + 0x28]
0xf4b8:	lea	rax, [rax + rax*4]
0xf4bc:	shl	rax, 4
0xf4c0:	add	rax, qword ptr [rdi + 0x38]
0xf4c4:	mov	eax, dword ptr [rax + 0x14]
0xf4c7:	ret	
0xf4c8:	nop	dword ptr [rax + rax]
0xf4d0:	endbr64	
0xf4d4:	movsxd	rax, dword ptr [rdi + 0x28]
0xf4d8:	lea	rax, [rax + rax*4]
0xf4dc:	shl	rax, 4
0xf4e0:	add	rax, qword ptr [rdi + 0x38]
0xf4e4:	mov	eax, dword ptr [rax + 0x18]
0xf4e7:	ret	
0xf4e8:	nop	dword ptr [rax + rax]
0xf4f0:	endbr64	
0xf4f4:	movsxd	rax, dword ptr [rdi + 0x28]
0xf4f8:	lea	rax, [rax + rax*4]
0xf4fc:	shl	rax, 4
0xf500:	add	rax, qword ptr [rdi + 0x38]
0xf504:	mov	eax, dword ptr [rax + 0x10]
0xf507:	ret	
0xf508:	nop	dword ptr [rax + rax]
0xf510:	endbr64	
0xf514:	movsxd	rax, dword ptr [rdi + 0x28]
0xf518:	lea	rax, [rax + rax*4]
0xf51c:	shl	rax, 4
0xf520:	add	rax, qword ptr [rdi + 0x38]
0xf524:	movsx	eax, byte ptr [rax + 0x48]
0xf528:	ret	
0xf529:	nop	dword ptr [rax]
0xf530:	endbr64	
0xf534:	mov	eax, dword ptr [rdi + 0x60]
0xf537:	mov	esi, dword ptr [rdi + 0x68]
0xf53a:	mov	r8d, 0
0xf540:	lea	edx, [rax - 2]
0xf543:	mov	eax, dword ptr [rdi + 0x28]
0xf546:	mov	ecx, edx
0xf548:	shr	ecx, 0x1f
0xf54b:	add	ecx, edx
0xf54d:	sar	ecx, 1
0xf54f:	sub	eax, ecx
0xf551:	lea	ecx, [rdx + rax]
0xf554:	cmovs	eax, r8d
0xf558:	cmp	esi, ecx
0xf55a:	jg	0xf568
0xf55c:	mov	eax, esi
0xf55e:	sub	eax, edx
0xf560:	mov	edx, 0
0xf565:	cmovs	eax, edx
0xf568:	mov	dword ptr [rdi + 0x2c], eax
0xf56b:	ret	
0xf56c:	nop	dword ptr [rax]
0xf570:	endbr64	
0xf574:	mov	byte ptr [rdi + 0x6d], 1
0xf578:	ret	
0xf579:	nop	dword ptr [rax]
0xf580:	endbr64	
0xf584:	mov	byte ptr [rdi + 0x6d], 0
0xf588:	ret	
0xf589:	nop	dword ptr [rax]
0xf590:	endbr64	
0xf594:	mov	eax, dword ptr [rip + 0x1c092]
0xf59a:	push	r14
0xf59c:	mov	r14d, ecx
0xf59f:	push	r13
0xf5a1:	mov	r13d, edx
0xf5a4:	push	r12
0xf5a6:	mov	r12d, esi
0xf5a9:	push	rbp
0xf5aa:	mov	rbp, r8
0xf5ad:	push	rbx
0xf5ae:	mov	rbx, rdi
0xf5b1:	mov	dword ptr [rdi + 0x58], esi
0xf5b4:	mov	dword ptr [rdi + 0x5c], edx
0xf5b7:	mov	dword ptr [rdi + 0x60], ecx
0xf5ba:	mov	dword ptr [rdi + 0x64], r8d
0xf5be:	mov	dword ptr [rdi + 0x8c], 0
0xf5c8:	test	eax, eax
0xf5ca:	jle	0xf648
0xf5cc:	lea	edx, [rcx - 1]
0xf5cf:	cmp	eax, edx
0xf5d1:	jge	0xf648
0xf5d3:	mov	dword ptr [rbx + 0x88], eax
0xf5d9:	mov	rdi, qword ptr [rbx + 0x20]
0xf5dd:	movsxd	rsi, ebp
0xf5e0:	call	0x1d690
0xf5e5:	mov	rdi, qword ptr [rbx + 8]
0xf5e9:	mov	ecx, r14d
0xf5ec:	mov	edx, r13d
0xf5ef:	mov	qword ptr [rbx + 0x20], rax
0xf5f3:	mov	esi, r12d
0xf5f6:	mov	r8d, ebp
0xf5f9:	call	0xc5e0
0xf5fe:	mov	eax, dword ptr [rbx + 0x60]
0xf601:	mov	esi, dword ptr [rbx + 0x68]
0xf604:	mov	edi, 0
0xf609:	lea	edx, [rax - 2]
0xf60c:	mov	eax, dword ptr [rbx + 0x28]
0xf60f:	mov	ecx, edx
0xf611:	shr	ecx, 0x1f
0xf614:	add	ecx, edx
0xf616:	sar	ecx, 1
0xf618:	sub	eax, ecx
0xf61a:	lea	ecx, [rdx + rax]
0xf61d:	cmovs	eax, edi
0xf620:	cmp	esi, ecx
0xf622:	jg	0xf630
0xf624:	mov	eax, esi
0xf626:	sub	eax, edx
0xf628:	mov	edx, 0
0xf62d:	cmovs	eax, edx
0xf630:	mov	dword ptr [rbx + 0x2c], eax
0xf633:	mov	dword ptr [rbx + 0x74], 0
0xf63a:	pop	rbx
0xf63b:	pop	rbp
0xf63c:	pop	r12
0xf63e:	pop	r13
0xf640:	pop	r14
0xf642:	ret	
0xf643:	nop	dword ptr [rax + rax]
0xf648:	mov	eax, ecx
0xf64a:	shr	eax, 0x1f
0xf64d:	add	eax, ecx
0xf64f:	sar	eax, 1
0xf651:	jmp	0xf5d3
0xf653:	nop	word ptr cs:[rax + rax]
0xf65e:	nop	
0xf660:	endbr64	
0xf664:	mov	byte ptr [rdi + 0x6e], sil
0xf668:	ret	
0xf669:	nop	dword ptr [rax]
0xf670:	endbr64	
0xf674:	push	r13
0xf676:	push	r12
0xf678:	push	rbp
0xf679:	push	rbx
0xf67a:	sub	rsp, 8
0xf67e:	test	ecx, ecx
0xf680:	js	0xf6ce
0xf682:	movsxd	rax, ecx
0xf685:	mov	rbp, rsi
0xf688:	mov	r13, rdx
0xf68b:	mov	r12d, ecx
0xf68e:	lea	rbx, [rax + rax*4]
0xf692:	shl	rbx, 4
0xf696:	add	rbx, qword ptr [rdi + 0x38]
0xf69a:	jmp	0xf6ae
0xf69c:	nop	dword ptr [rax]
0xf6a0:	sub	r12d, 1
0xf6a4:	sub	rbx, 0x50
0xf6a8:	cmp	r12d, -1
0xf6ac:	je	0xf6c0
0xf6ae:	mov	rsi, qword ptr [rbx]
0xf6b1:	mov	rdx, r13
0xf6b4:	mov	rdi, rbp
0xf6b7:	call	0x4c30
0xf6bc:	test	eax, eax
0xf6be:	jne	0xf6a0
0xf6c0:	add	rsp, 8
0xf6c4:	mov	eax, r12d
0xf6c7:	pop	rbx
0xf6c8:	pop	rbp
0xf6c9:	pop	r12
0xf6cb:	pop	r13
0xf6cd:	ret	
0xf6ce:	mov	r12d, 0xffffffff
0xf6d4:	jmp	0xf6c0
0xf6d6:	nop	word ptr cs:[rax + rax]
0xf6e0:	endbr64	
0xf6e4:	push	r14
0xf6e6:	push	r13
0xf6e8:	push	r12
0xf6ea:	push	rbp
0xf6eb:	push	rbx
0xf6ec:	mov	r14d, dword ptr [rdi + 0x68]
0xf6f0:	cmp	ecx, r14d
0xf6f3:	jge	0xf740
0xf6f5:	movsxd	rax, ecx
0xf6f8:	mov	rbp, rsi
0xf6fb:	mov	r13, rdx
0xf6fe:	mov	r12d, ecx
0xf701:	lea	rbx, [rax + rax*4]
0xf705:	shl	rbx, 4
0xf709:	add	rbx, qword ptr [rdi + 0x38]
0xf70d:	jmp	0xf71d
0xf70f:	nop	
0xf710:	add	r12d, 1
0xf714:	add	rbx, 0x50
0xf718:	cmp	r12d, r14d
0xf71b:	je	0xf740
0xf71d:	mov	rsi, qword ptr [rbx]
0xf720:	mov	rdx, r13
0xf723:	mov	rdi, rbp
0xf726:	call	0x4c30
0xf72b:	test	eax, eax
0xf72d:	jne	0xf710
0xf72f:	pop	rbx
0xf730:	mov	eax, r12d
0xf733:	pop	rbp
0xf734:	pop	r12
0xf736:	pop	r13
0xf738:	pop	r14
0xf73a:	ret	
0xf73b:	nop	dword ptr [rax + rax]
0xf740:	mov	r12d, 0xffffffff
0xf746:	pop	rbx
0xf747:	pop	rbp
0xf748:	mov	eax, r12d
0xf74b:	pop	r12
0xf74d:	pop	r13
0xf74f:	pop	r14
0xf751:	ret	
0xf752:	nop	word ptr cs:[rax + rax]
0xf75d:	nop	dword ptr [rax]
0xf760:	endbr64	
0xf764:	push	r14
0xf766:	mov	r14d, ecx
0xf769:	push	r13
0xf76b:	mov	r13, rdx
0xf76e:	push	r12
0xf770:	mov	r12, rdi
0xf773:	push	rbp
0xf774:	push	rbx
0xf775:	mov	rbx, rsi
0xf778:	call	0x49b0
0xf77d:	mov	rdi, rbx
0xf780:	mov	rbp, rax
0xf783:	call	0x49b0
0xf788:	lea	rdi, [rbp + rax + 1]
0xf78d:	call	0x1d670
0xf792:	mov	r8, rbx
0xf795:	mov	rcx, r12
0xf798:	mov	esi, 1
0xf79d:	mov	rbp, rax
0xf7a0:	mov	rdi, rax
0xf7a3:	mov	rdx, -1
0xf7aa:	xor	eax, eax
0xf7ac:	call	0x4f10
0xf7b1:	mov	edx, r14d
0xf7b4:	mov	rsi, r13
0xf7b7:	mov	rdi, rbp
0xf7ba:	call	0x8070
0xf7bf:	mov	rdi, rbp
0xf7c2:	mov	r12d, eax
0xf7c5:	call	0x18d10
0xf7ca:	pop	rbx
0xf7cb:	mov	eax, r12d
0xf7ce:	pop	rbp
0xf7cf:	pop	r12
0xf7d1:	pop	r13
0xf7d3:	pop	r14
0xf7d5:	ret	
0xf7d6:	nop	word ptr cs:[rax + rax]
0xf7e0:	endbr64	
0xf7e4:	push	r15
0xf7e6:	mov	r15d, r8d
0xf7e9:	push	r14
0xf7eb:	mov	r14, rcx
0xf7ee:	push	r13
0xf7f0:	mov	r13, rdx
0xf7f3:	push	r12
0xf7f5:	mov	r12, rdi
0xf7f8:	push	rbp
0xf7f9:	push	rbx
0xf7fa:	mov	rbx, rsi
0xf7fd:	sub	rsp, 0x18
0xf801:	call	0x49b0
0xf806:	mov	rdi, rbx
0xf809:	mov	qword ptr [rsp + 8], rax
0xf80e:	call	0x49b0
0xf813:	mov	rdi, r13
0xf816:	mov	rbp, rax
0xf819:	call	0x49b0
0xf81e:	mov	rdx, qword ptr [rsp + 8]
0xf823:	lea	rdi, [rdx + rbp + 1]
0xf828:	add	rdi, rax
0xf82b:	call	0x1d670
0xf830:	mov	r9, r13
0xf833:	mov	r8, rbx
0xf836:	mov	rcx, r12
0xf839:	mov	rbp, rax
0xf83c:	mov	rdi, rax
0xf83f:	mov	esi, 1
0xf844:	xor	eax, eax
0xf846:	mov	rdx, -1
0xf84d:	call	0x4f10
0xf852:	mov	edx, r15d
0xf855:	mov	rsi, r14
0xf858:	mov	rdi, rbp
0xf85b:	call	0x8070
0xf860:	mov	rdi, rbp
0xf863:	mov	r12d, eax
0xf866:	call	0x18d10
0xf86b:	add	rsp, 0x18
0xf86f:	mov	eax, r12d
0xf872:	pop	rbx
0xf873:	pop	rbp
0xf874:	pop	r12
0xf876:	pop	r13
0xf878:	pop	r14
0xf87a:	pop	r15
0xf87c:	ret	
0xf87d:	nop	dword ptr [rax]
0xf880:	endbr64	
0xf884:	push	r15
0xf886:	mov	r15, rdi
0xf889:	mov	rdi, rsi
0xf88c:	push	r14
0xf88e:	push	r13
0xf890:	push	r12
0xf892:	push	rbp
0xf893:	mov	rbp, rsi
0xf896:	push	rbx
0xf897:	mov	ebx, edx
0xf899:	sub	rsp, 0x198
0xf8a0:	mov	rax, qword ptr fs:[0x28]
0xf8a9:	mov	qword ptr [rsp + 0x188], rax
0xf8b1:	xor	eax, eax
0xf8b3:	call	0x4950
0xf8b8:	mov	r12, rax
0xf8bb:	test	rax, rax
0xf8be:	je	0xfda8
0xf8c4:	mov	rdi, rbp
0xf8c7:	call	0x49c0
0xf8cc:	cmp	eax, -1
0xf8cf:	je	0x10050
0xf8d5:	mov	rdi, qword ptr [r15]
0xf8d8:	test	rdi, rdi
0xf8db:	je	0xf8e2
0xf8dd:	call	0x4ac0
0xf8e2:	mov	rax, qword ptr [r15 + 0x78]
0xf8e6:	mov	qword ptr [r15], r12
0xf8e9:	lea	rdi, [rax + 1]
0xf8ed:	call	0x1d670
0xf8f2:	mov	rsi, qword ptr [r15 + 0x18]
0xf8f6:	mov	rdi, rax
0xf8f9:	mov	qword ptr [rsp + 0x18], rax
0xf8fe:	call	0x48b0
0xf903:	cmp	byte ptr [rbp], 0x2f
0xf907:	je	0xfb20
0xf90d:	xor	eax, eax
0xf90f:	call	0x18fe0
0xf914:	mov	r12, rax
0xf917:	test	rax, rax
0xf91a:	je	0xff20
0xf920:	mov	rdi, qword ptr [r15 + 0x18]
0xf924:	call	0x18d10
0xf929:	mov	qword ptr [r15 + 0x18], r12
0xf92d:	mov	rdi, r12
0xf930:	call	0x18040
0xf935:	mov	rbp, qword ptr [r15 + 0x18]
0xf939:	mov	rdi, rbp
0xf93c:	call	0x49b0
0xf941:	lea	rsi, [rsp + 0xf0]
0xf949:	mov	rdi, rbp
0xf94c:	mov	qword ptr [r15 + 0x78], rax
0xf950:	call	0x18f40
0xf955:	cmp	qword ptr [rsp + 0x120], 0x7ff
0xf961:	jg	0xff08
0xf967:	lea	rsi, [rsp + 0x70]
0xf96c:	lea	rdi, [rip + 0x11d6b]
0xf973:	call	0x4c00
0xf978:	xor	eax, eax
0xf97a:	cmp	qword ptr [rsp + 0x70], 0x4d44
0xf983:	sete	al
0xf986:	mov	dword ptr [r15 + 0x10], eax
0xf98a:	test	ebx, ebx
0xf98c:	je	0xf99b
0xf98e:	mov	r13d, dword ptr [r15 + 0x70]
0xf992:	test	r13d, r13d
0xf995:	jne	0xff78
0xf99b:	mov	rbp, qword ptr [r15 + 0x38]
0xf99f:	test	rbp, rbp
0xf9a2:	je	0x10018
0xf9a8:	mov	r12d, dword ptr [r15 + 0x68]
0xf9ac:	test	r12d, r12d
0xf9af:	jle	0xf9e6
0xf9b1:	xor	ebx, ebx
0xf9b3:	nop	dword ptr [rax + rax]
0xf9b8:	lea	r12, [rbx + rbx*4]
0xf9bc:	shl	r12, 4
0xf9c0:	mov	rdi, qword ptr [rbp + r12]
0xf9c5:	test	rdi, rdi
0xf9c8:	je	0xf9dc
0xf9ca:	call	0x18d10
0xf9cf:	mov	rbp, qword ptr [r15 + 0x38]
0xf9d3:	mov	qword ptr [rbp + r12], 0
0xf9dc:	add	rbx, 1
0xf9e0:	cmp	dword ptr [r15 + 0x68], ebx
0xf9e4:	jg	0xf9b8
0xf9e6:	mov	rdi, rbp
0xf9e9:	xor	ebp, ebp
0xf9eb:	call	0x18d10
0xf9f0:	mov	qword ptr [r15 + 0x38], 0
0xf9f8:	mov	dword ptr [rsp + 0xc], 0
0xfa00:	mov	dword ptr [rsp], 0
0xfa07:	mov	edi, 0x50
0xfa0c:	call	0x1d670
0xfa11:	mov	dword ptr [r15 + 0x70], 0
0xfa19:	mov	dword ptr [r15 + 0x30], 0
0xfa21:	mov	dword ptr [rsp + 0x14], 0xffffffff
0xfa29:	mov	dword ptr [rsp + 0x10], 0
0xfa31:	mov	qword ptr [r15 + 0x38], rax
0xfa35:	xor	eax, eax
0xfa37:	nop	word ptr [rax + rax]
0xfa40:	mov	dword ptr [r15 + 0x68], eax
0xfa44:	mov	rdi, qword ptr [r15]
0xfa47:	call	0x4c10
0xfa4c:	test	rax, rax
0xfa4f:	je	0xfbf0
0xfa55:	movabs	rdx, 0xffff000000
0xfa5f:	and	rdx, qword ptr [rax + 0x10]
0xfa63:	cmp	rdx, 0x2e000000
0xfa6a:	je	0xfb70
0xfa70:	cmp	byte ptr [rax + 0x13], 0x2e
0xfa74:	lea	r13, [rax + 0x13]
0xfa78:	je	0xfb38
0xfa7e:	mov	eax, dword ptr [r15 + 0x68]
0xfa82:	add	eax, 1
0xfa85:	mov	rdi, qword ptr [r15 + 0x38]
0xfa89:	cdqe	
0xfa8b:	lea	rsi, [rax + rax*4]
0xfa8f:	shl	rsi, 4
0xfa93:	call	0x1d690
0xfa98:	mov	ebx, dword ptr [rsp + 0xc]
0xfa9c:	mov	qword ptr [r15 + 0x38], rax
0xfaa0:	mov	r14, rax
0xfaa3:	test	ebx, ebx
0xfaa5:	jne	0xfb90
0xfaab:	movsxd	rax, dword ptr [r15 + 0x68]
0xfaaf:	lea	rdx, [rax + rax*4]
0xfab3:	shl	rdx, 4
0xfab7:	add	r14, rdx
0xfaba:	mov	byte ptr [r14 + 0x49], 0
0xfabf:	mov	byte ptr [r14 + 0x4b], 0
0xfac4:	mov	rdi, r13
0xfac7:	call	0x49b0
0xfacc:	lea	edi, [rax + 1]
0xfacf:	mov	rbx, rax
0xfad2:	movsxd	rdi, edi
0xfad5:	call	0x1d670
0xfada:	mov	rsi, r13
0xfadd:	mov	qword ptr [r14], rax
0xfae0:	movsxd	rax, dword ptr [r15 + 0x68]
0xfae4:	lea	rax, [rax + rax*4]
0xfae8:	shl	rax, 4
0xfaec:	add	rax, qword ptr [r15 + 0x38]
0xfaf0:	mov	rdi, qword ptr [rax]
0xfaf3:	call	0x48b0
0xfaf8:	mov	eax, dword ptr [r15 + 0x30]
0xfafc:	mov	esi, dword ptr [r15 + 0x68]
0xfb00:	mov	rdi, r15
0xfb03:	cmp	eax, ebx
0xfb05:	cmovl	eax, ebx
0xfb08:	mov	dword ptr [r15 + 0x30], eax
0xfb0c:	xor	eax, eax
0xfb0e:	call	0xe840
0xfb13:	mov	eax, dword ptr [r15 + 0x68]
0xfb17:	add	eax, 1
0xfb1a:	jmp	0xfa40
0xfb1f:	nop	
0xfb20:	mov	rdi, rbp
0xfb23:	call	0x1d7a0
0xfb28:	mov	qword ptr [r15 + 0x18], rax
0xfb2c:	mov	r12, rax
0xfb2f:	jmp	0xf92d
0xfb34:	nop	dword ptr [rax]
0xfb38:	cmp	byte ptr [r13 + 1], 0x2e
0xfb3d:	jne	0xfa7e
0xfb43:	cmp	byte ptr [r13 + 2], 0
0xfb48:	jne	0xfa7e
0xfb4e:	mov	rdx, qword ptr [r15 + 0x18]
0xfb52:	mov	eax, dword ptr [r15 + 0x68]
0xfb56:	cmp	byte ptr [rdx + 1], 0
0xfb5a:	je	0xfb80
0xfb5c:	mov	dword ptr [rsp + 0x14], eax
0xfb60:	mov	dword ptr [rsp + 0x10], 1
0xfb68:	jmp	0xfa82
0xfb6d:	nop	dword ptr [rax]
0xfb70:	mov	eax, dword ptr [r15 + 0x68]
0xfb74:	jmp	0xfa40
0xfb79:	nop	dword ptr [rax]
0xfb80:	mov	dword ptr [rsp + 0x10], 1
0xfb88:	jmp	0xfa40
0xfb8d:	nop	dword ptr [rax]
0xfb90:	mov	r11d, dword ptr [rsp]
0xfb94:	test	r11d, r11d
0xfb97:	jle	0x1002c
0xfb9d:	mov	rbx, rbp
0xfba0:	xor	r12d, r12d
0xfba3:	jmp	0xfbba
0xfba5:	nop	dword ptr [rax]
0xfba8:	add	r12d, 1
0xfbac:	add	rbx, 0x50
0xfbb0:	cmp	dword ptr [rsp], r12d
0xfbb4:	je	0xfaab
0xfbba:	mov	rsi, qword ptr [rbx]
0xfbbd:	mov	rdi, r13
0xfbc0:	call	0x4b30
0xfbc5:	test	eax, eax
0xfbc7:	jne	0xfba8
0xfbc9:	movsxd	rax, dword ptr [r15 + 0x68]
0xfbcd:	lea	rdx, [rax + rax*4]
0xfbd1:	movsx	eax, byte ptr [rbx + 0x49]
0xfbd5:	shl	rdx, 4
0xfbd9:	add	r14, rdx
0xfbdc:	mov	byte ptr [r14 + 0x49], al
0xfbe0:	add	dword ptr [r15 + 0x70], eax
0xfbe4:	jmp	0xfabf
0xfbe9:	nop	dword ptr [rax]
0xfbf0:	mov	r9d, dword ptr [rsp + 0x10]
0xfbf5:	test	r9d, r9d
0xfbf8:	je	0xfe48
0xfbfe:	movsxd	rax, dword ptr [rsp + 0x14]
0xfc03:	cmp	eax, -1
0xfc06:	je	0xfe00
0xfc0c:	mov	rdi, qword ptr [r15 + 0x38]
0xfc10:	lea	rax, [rax + rax*4]
0xfc14:	shl	rax, 4
0xfc18:	add	rax, rdi
0xfc1b:	mov	edx, dword ptr [rax + 0x10]
0xfc1e:	and	edx, 0xf000
0xfc24:	cmp	edx, 0x4000
0xfc2a:	je	0xfc33
0xfc2c:	mov	dword ptr [rax + 0x10], 0x4000
0xfc33:	mov	edx, dword ptr [rsp + 0xc]
0xfc37:	test	edx, edx
0xfc39:	je	0xffb0
0xfc3f:	mov	eax, dword ptr [rsp]
0xfc42:	test	eax, eax
0xfc44:	jle	0xfc7d
0xfc46:	sub	eax, 1
0xfc49:	mov	rbx, rbp
0xfc4c:	lea	rax, [rax + rax*4]
0xfc50:	shl	rax, 4
0xfc54:	lea	r12, [rbp + rax + 0x50]
0xfc59:	nop	dword ptr [rax]
0xfc60:	mov	rdi, qword ptr [rbx]
0xfc63:	test	rdi, rdi
0xfc66:	je	0xfc74
0xfc68:	call	0x18d10
0xfc6d:	mov	qword ptr [rbx], 0
0xfc74:	add	rbx, 0x50
0xfc78:	cmp	r12, rbx
0xfc7b:	jne	0xfc60
0xfc7d:	mov	rdi, rbp
0xfc80:	call	0x18d10
0xfc85:	mov	esi, dword ptr [r15 + 0x68]
0xfc89:	mov	rdi, qword ptr [r15 + 0x38]
0xfc8d:	mov	eax, dword ptr [r15 + 0x84]
0xfc94:	mov	dword ptr [r15 + 0x74], 0
0xfc9c:	mov	dword ptr [rip + 0x1b986], eax
0xfca2:	movsxd	rax, dword ptr [rsp + 0x14]
0xfca7:	cmp	eax, -1
0xfcaa:	je	0xfe29
0xfcb0:	lea	rax, [rax + rax*4]
0xfcb4:	shl	rax, 4
0xfcb8:	add	rax, rdi
0xfcbb:	movdqu	xmm5, xmmword ptr [rax]
0xfcbf:	movdqu	xmm4, xmmword ptr [rdi]
0xfcc3:	sub	esi, 1
0xfcc6:	add	rdi, 0x50
0xfcca:	movdqu	xmm3, xmmword ptr [rdi - 0x40]
0xfccf:	movdqu	xmm2, xmmword ptr [rdi - 0x30]
0xfcd4:	movsxd	rsi, esi
0xfcd7:	mov	edx, 0x50
0xfcdc:	movups	xmmword ptr [rdi - 0x50], xmm5
0xfce0:	movdqu	xmm6, xmmword ptr [rax + 0x10]
0xfce5:	movdqu	xmm1, xmmword ptr [rdi - 0x20]
0xfcea:	lea	rcx, [rip - 0x1671]
0xfcf1:	movdqu	xmm0, xmmword ptr [rdi - 0x10]
0xfcf6:	movaps	xmmword ptr [rsp + 0x20], xmm4
0xfcfb:	movups	xmmword ptr [rdi - 0x40], xmm6
0xfcff:	movdqu	xmm7, xmmword ptr [rax + 0x20]
0xfd04:	movaps	xmmword ptr [rsp + 0x30], xmm3
0xfd09:	movups	xmmword ptr [rdi - 0x30], xmm7
0xfd0d:	movdqu	xmm5, xmmword ptr [rax + 0x30]
0xfd12:	movaps	xmmword ptr [rsp + 0x40], xmm2
0xfd17:	movups	xmmword ptr [rdi - 0x20], xmm5
0xfd1b:	movdqu	xmm6, xmmword ptr [rax + 0x40]
0xfd20:	movaps	xmmword ptr [rsp + 0x50], xmm1
0xfd25:	movups	xmmword ptr [rdi - 0x10], xmm6
0xfd29:	movups	xmmword ptr [rax], xmm4
0xfd2c:	movups	xmmword ptr [rax + 0x10], xmm3
0xfd30:	movups	xmmword ptr [rax + 0x20], xmm2
0xfd34:	movups	xmmword ptr [rax + 0x30], xmm1
0xfd38:	movups	xmmword ptr [rax + 0x40], xmm0
0xfd3c:	movaps	xmmword ptr [rsp + 0x60], xmm0
0xfd41:	call	0x48e0
0xfd46:	mov	edx, dword ptr [r15 + 0x68]
0xfd4a:	mov	eax, dword ptr [r15 + 0x28]
0xfd4e:	mov	rdi, r15
0xfd51:	mov	r13d, 1
0xfd57:	cmp	edx, eax
0xfd59:	lea	ecx, [rdx - 1]
0xfd5c:	cmovle	eax, ecx
0xfd5f:	mov	dword ptr [r15 + 0x28], eax
0xfd63:	xor	eax, eax
0xfd65:	call	0xf110
0xfd6a:	mov	rdi, qword ptr [rsp + 0x18]
0xfd6f:	mov	dword ptr [r15 + 0x2c], eax
0xfd73:	call	0x18d10
0xfd78:	mov	rax, qword ptr [rsp + 0x188]
0xfd80:	sub	rax, qword ptr fs:[0x28]
0xfd89:	jne	0x100b2
0xfd8f:	add	rsp, 0x198
0xfd96:	mov	eax, r13d
0xfd99:	pop	rbx
0xfd9a:	pop	rbp
0xfd9b:	pop	r12
0xfd9d:	pop	r13
0xfd9f:	pop	r14
0xfda1:	pop	r15
0xfda3:	ret	
0xfda4:	nop	dword ptr [rax]
0xfda8:	cmp	byte ptr [rbp], 0x2e
0xfdac:	jne	0xfdf0
0xfdae:	cmp	byte ptr [rbp + 1], 0x2e
0xfdb2:	jne	0xfdf0
0xfdb4:	movzx	r13d, byte ptr [rbp + 2]
0xfdb9:	test	r13d, r13d
0xfdbc:	jne	0xfdf0
0xfdbe:	xor	eax, eax
0xfdc0:	call	0x18fe0
0xfdc5:	mov	rbp, rax
0xfdc8:	test	rax, rax
0xfdcb:	je	0x10060
0xfdd1:	mov	rdi, rbp
0xfdd4:	call	0x4950
0xfdd9:	mov	r12, rax
0xfddc:	test	rax, rax
0xfddf:	jne	0xf8c4
0xfde5:	mov	rdi, rbp
0xfde8:	call	0x18d10
0xfded:	jmp	0xfd78
0xfdef:	nop	
0xfdf0:	xor	r13d, r13d
0xfdf3:	jmp	0xfd78
0xfdf8:	nop	dword ptr [rax + rax]
0xfe00:	mov	eax, dword ptr [rsp + 0xc]
0xfe04:	test	eax, eax
0xfe06:	jne	0xfc3f
0xfe0c:	mov	esi, dword ptr [r15 + 0x68]
0xfe10:	mov	rdi, qword ptr [r15 + 0x38]
0xfe14:	mov	dword ptr [r15 + 0x74], 0
0xfe1c:	mov	eax, dword ptr [r15 + 0x84]
0xfe23:	mov	dword ptr [rip + 0x1b7ff], eax
0xfe29:	movsxd	rsi, esi
0xfe2c:	lea	rcx, [rip - 0x17b3]
0xfe33:	mov	edx, 0x50
0xfe38:	call	0x48e0
0xfe3d:	jmp	0xfd46
0xfe42:	nop	word ptr [rax + rax]
0xfe48:	mov	eax, dword ptr [r15 + 0x68]
0xfe4c:	mov	rdi, qword ptr [r15 + 0x38]
0xfe50:	add	eax, 1
0xfe53:	cdqe	
0xfe55:	lea	rsi, [rax + rax*4]
0xfe59:	shl	rsi, 4
0xfe5d:	call	0x1d690
0xfe62:	movsxd	rdx, dword ptr [r15 + 0x68]
0xfe66:	mov	edi, 3
0xfe6b:	mov	qword ptr [r15 + 0x38], rax
0xfe6f:	lea	rdx, [rdx + rdx*4]
0xfe73:	shl	rdx, 4
0xfe77:	lea	rbx, [rax + rdx]
0xfe7b:	mov	byte ptr [rbx + 0x49], 0
0xfe7f:	mov	byte ptr [rbx + 0x4b], 1
0xfe83:	call	0x1d670
0xfe88:	mov	ecx, 0x2e2e
0xfe8d:	mov	edx, 2
0xfe92:	mov	rdi, r15
0xfe95:	mov	qword ptr [rbx], rax
0xfe98:	movsxd	rax, dword ptr [r15 + 0x68]
0xfe9c:	lea	rax, [rax + rax*4]
0xfea0:	shl	rax, 4
0xfea4:	add	rax, qword ptr [r15 + 0x38]
0xfea8:	mov	rax, qword ptr [rax]
0xfeab:	mov	word ptr [rax], cx
0xfeae:	mov	byte ptr [rax + 2], 0
0xfeb2:	mov	eax, dword ptr [r15 + 0x30]
0xfeb6:	mov	esi, dword ptr [r15 + 0x68]
0xfeba:	cmp	eax, edx
0xfebc:	cmovl	eax, edx
0xfebf:	mov	dword ptr [r15 + 0x30], eax
0xfec3:	xor	eax, eax
0xfec5:	call	0xe840
0xfeca:	movsxd	rax, dword ptr [r15 + 0x68]
0xfece:	mov	rdi, qword ptr [r15 + 0x38]
0xfed2:	mov	r8d, dword ptr [rsp + 0xc]
0xfed7:	mov	rsi, rax
0xfeda:	lea	rax, [rax + rax*4]
0xfede:	shl	rax, 4
0xfee2:	add	esi, 1
0xfee5:	add	rax, rdi
0xfee8:	mov	dword ptr [rax + 0x10], 0x4000
0xfeef:	mov	byte ptr [rax + 0x48], 0
0xfef3:	mov	dword ptr [r15 + 0x68], esi
0xfef7:	test	r8d, r8d
0xfefa:	je	0xfc8d
0xff00:	jmp	0xfc3f
0xff05:	nop	dword ptr [rax]
0xff08:	mov	rdi, qword ptr [rip + 0x1a571]
0xff0f:	call	0xdb60
0xff14:	xor	eax, eax
0xff16:	call	0xa820
0xff1b:	jmp	0xf967
0xff20:	mov	r13, qword ptr [r15 + 0x18]
0xff24:	mov	rdi, r13
0xff27:	call	0x49b0
0xff2c:	mov	qword ptr [r15 + 0x78], rax
0xff30:	cmp	byte ptr [rbp], 0x2e
0xff34:	mov	r12, rax
0xff37:	jne	0xffd0
0xff3d:	cmp	byte ptr [rbp + 1], 0x2e
0xff41:	jne	0xffd0
0xff47:	cmp	byte ptr [rbp + 2], 0
0xff4b:	jne	0xffd0
0xff51:	mov	esi, 0x2f
0xff56:	mov	rdi, r13
0xff59:	call	0x4a20
0xff5e:	test	rax, rax
0xff61:	je	0x1008b
0xff67:	mov	byte ptr [rax], 0
0xff6a:	mov	r12, qword ptr [r15 + 0x18]
0xff6e:	jmp	0xf92d
0xff73:	nop	dword ptr [rax + rax]
0xff78:	mov	rsi, qword ptr [r15 + 0x18]
0xff7c:	mov	rdi, qword ptr [rsp + 0x18]
0xff81:	call	0x4b30
0xff86:	test	eax, eax
0xff88:	jne	0xf99b
0xff8e:	mov	eax, dword ptr [r15 + 0x68]
0xff92:	mov	rbp, qword ptr [r15 + 0x38]
0xff96:	mov	dword ptr [rsp + 0xc], 1
0xff9e:	mov	qword ptr [r15 + 0x38], 0
0xffa6:	mov	dword ptr [rsp], eax
0xffa9:	jmp	0xfa07
0xffae:	nop	
0xffb0:	mov	edx, dword ptr [r15 + 0x84]
0xffb7:	mov	esi, dword ptr [r15 + 0x68]
0xffbb:	mov	dword ptr [r15 + 0x74], 0
0xffc3:	mov	dword ptr [rip + 0x1b65f], edx
0xffc9:	jmp	0xfcbb
0xffce:	nop	
0xffd0:	mov	rdi, rbp
0xffd3:	mov	r14d, 0x2f
0xffd9:	call	0x49b0
0xffde:	mov	rdi, r13
0xffe1:	lea	rsi, [r12 + rax + 2]
0xffe6:	call	0x1d690
0xffeb:	mov	qword ptr [r15 + 0x18], rax
0xffef:	mov	rdi, rax
0xfff2:	mov	r12, rax
0xfff5:	call	0x49b0
0xfffa:	mov	rsi, rbp
0xfffd:	mov	word ptr [r12 + rax], r14w
0x10002:	mov	rdi, qword ptr [r15 + 0x18]
0x10006:	call	0x4df0
0x1000b:	mov	r12, qword ptr [r15 + 0x18]
0x1000f:	jmp	0xf92d
0x10014:	nop	dword ptr [rax]
0x10018:	mov	dword ptr [rsp + 0xc], 0
0x10020:	mov	dword ptr [rsp], 0
0x10027:	jmp	0xfa07
0x1002c:	movsxd	rax, dword ptr [r15 + 0x68]
0x10030:	mov	r10d, dword ptr [rsp]
0x10034:	lea	rdx, [rax + rax*4]
0x10038:	shl	rdx, 4
0x1003c:	add	r14, rdx
0x1003f:	test	r10d, r10d
0x10042:	jne	0xfabf
0x10048:	jmp	0xfaba
0x1004d:	nop	dword ptr [rax]
0x10050:	mov	rdi, r12
0x10053:	xor	r13d, r13d
0x10056:	call	0x4ac0
0x1005b:	jmp	0xfd78
0x10060:	mov	rdi, qword ptr [r15 + 0x18]
0x10064:	call	0x1d7a0
0x10069:	mov	esi, 0x2f
0x1006e:	mov	rdi, rax
0x10071:	mov	rbp, rax
0x10074:	call	0x4a20
0x10079:	mov	r12, rax
0x1007c:	test	rax, rax
0x1007f:	je	0x100a4
0x10081:	mov	byte ptr [r12], 0
0x10086:	jmp	0xfdd1
0x1008b:	lea	rdi, [rip + 0x11151]
0x10092:	mov	qword ptr [rsp], rax
0x10096:	call	0x8b00
0x1009b:	mov	rax, qword ptr [rsp]
0x1009f:	jmp	0xff67
0x100a4:	lea	rdi, [rip + 0x1112a]
0x100ab:	call	0x8b00
0x100b0:	jmp	0x10081
0x100b2:	call	0x49d0
0x100b7:	nop	word ptr [rax + rax]
0x100c0:	endbr64	
0x100c4:	mov	eax, dword ptr [rdi + 0x70]
0x100c7:	mov	dword ptr [rdi + 0x50], 0xffffffff
0x100ce:	mov	dword ptr [rdi + 0x54], eax
0x100d1:	ret	
0x100d2:	nop	word ptr cs:[rax + rax]
0x100dd:	nop	dword ptr [rax]
0x100e0:	endbr64	
0x100e4:	mov	eax, dword ptr [rdi + 0x54]
0x100e7:	movsxd	rdx, dword ptr [rdi + 0x50]
0x100eb:	test	eax, eax
0x100ed:	je	0x10128
0x100ef:	mov	ecx, dword ptr [rdi + 0x68]
0x100f2:	lea	eax, [rdx + 1]
0x100f5:	cmp	ecx, eax
0x100f7:	jle	0x10154
0x100f9:	mov	rsi, qword ptr [rdi + 0x38]
0x100fd:	lea	rdx, [rdx + rdx*4]
0x10101:	shl	rdx, 4
0x10105:	lea	rdx, [rsi + rdx + 0x99]
0x1010d:	jmp	0x1011b
0x1010f:	nop	
0x10110:	add	eax, 1
0x10113:	add	rdx, 0x50
0x10117:	cmp	ecx, eax
0x10119:	je	0x10154
0x1011b:	cmp	byte ptr [rdx], 0
0x1011e:	je	0x10110
0x10120:	mov	dword ptr [rdi + 0x50], eax
0x10123:	ret	
0x10124:	nop	dword ptr [rax]
0x10128:	test	edx, edx
0x1012a:	je	0x10154
0x1012c:	mov	rdx, qword ptr [rdi + 0x18]
0x10130:	mov	eax, dword ptr [rdi + 0x28]
0x10133:	mov	dword ptr [rdi + 0x50], 0
0x1013a:	cmp	byte ptr [rdx], 0x2f
0x1013d:	jne	0x10150
0x1013f:	cmp	byte ptr [rdx + 1], 0
0x10143:	jne	0x10150
0x10145:	ret	
0x10146:	nop	word ptr cs:[rax + rax]
0x10150:	test	eax, eax
0x10152:	jne	0x10145
0x10154:	mov	eax, 0xffffffff
0x10159:	ret	
0x1015a:	nop	word ptr [rax + rax]
0x10160:	endbr64	
0x10164:	push	r13
0x10166:	push	r12
0x10168:	push	rbp
0x10169:	push	rbx
0x1016a:	sub	rsp, 0x18
0x1016e:	mov	rax, qword ptr fs:[0x28]
0x10177:	mov	qword ptr [rsp + 8], rax
0x1017c:	xor	eax, eax
0x1017e:	cmp	dword ptr [rdi + 0x64], 0x13
0x10182:	jle	0x1018d
0x10184:	cmp	byte ptr [rdi + 0x6d], 0
0x10188:	mov	rbx, rdi
0x1018b:	jne	0x101b0
0x1018d:	mov	rax, qword ptr [rsp + 8]
0x10192:	sub	rax, qword ptr fs:[0x28]
0x1019b:	jne	0x10236
0x101a1:	add	rsp, 0x18
0x101a5:	pop	rbx
0x101a6:	pop	rbp
0x101a7:	pop	r12
0x101a9:	pop	r13
0x101ab:	ret	
0x101ac:	nop	dword ptr [rax]
0x101b0:	lea	r13, [rsp + 7]
0x101b5:	mov	rdi, r13
0x101b8:	call	0xa6a0
0x101bd:	movsxd	rdx, dword ptr [rbx + 0x64]
0x101c1:	mov	rdi, qword ptr [rbx + 0x20]
0x101c5:	mov	esi, 0x20
0x101ca:	mov	rbp, rdx
0x101cd:	lea	r12d, [rdx - 0x13]
0x101d1:	call	0x4a50
0x101d6:	mov	rsi, qword ptr [rbx + 0x20]
0x101da:	mov	rdi, qword ptr [rbx + 0x18]
0x101de:	mov	edx, r12d
0x101e1:	call	0x18200
0x101e6:	mov	rdi, qword ptr [rbx + 0x20]
0x101ea:	movsxd	rsi, r12d
0x101ed:	call	0x184d0
0x101f2:	mov	edx, dword ptr [rip + 0x1a128]
0x101f8:	mov	esi, dword ptr [rip + 0x1a152]
0x101fe:	mov	edi, dword ptr [rip + 0x1a150]
0x10204:	call	0xa570
0x10209:	mov	rdi, qword ptr [rbx + 8]
0x1020d:	xor	esi, esi
0x1020f:	mov	edx, 2
0x10214:	call	0xc680
0x10219:	mov	rdi, qword ptr [rbx + 8]
0x1021d:	mov	rsi, qword ptr [rbx + 0x20]
0x10221:	lea	edx, [rbp - 0x12]
0x10224:	call	0xc600
0x10229:	mov	rdi, r13
0x1022c:	call	0xa6b0
0x10231:	jmp	0x1018d
0x10236:	call	0x49d0
0x1023b:	nop	dword ptr [rax + rax]
0x10240:	endbr64	
0x10244:	push	r15
0x10246:	push	r14
0x10248:	push	r13
0x1024a:	push	r12
0x1024c:	push	rbp
0x1024d:	push	rbx
0x1024e:	sub	rsp, 0x2f8
0x10255:	mov	rax, qword ptr fs:[0x28]
0x1025e:	mov	qword ptr [rsp + 0x2e8], rax
0x10266:	xor	eax, eax
0x10268:	cmp	byte ptr [rdi + 0x6d], 0
0x1026c:	jne	0x102a0
0x1026e:	mov	rax, qword ptr [rsp + 0x2e8]
0x10276:	sub	rax, qword ptr fs:[0x28]
0x1027f:	jne	0x103f2
0x10285:	add	rsp, 0x2f8
0x1028c:	pop	rbx
0x1028d:	pop	rbp
0x1028e:	pop	r12
0x10290:	pop	r13
0x10292:	pop	r14
0x10294:	pop	r15
0x10296:	ret	
0x10297:	nop	word ptr [rax + rax]
0x102a0:	mov	eax, dword ptr [rdi + 0x64]
0x102a3:	lea	r14, [rsp + 0xf]
0x102a8:	mov	rbx, rdi
0x102ab:	mov	rdi, r14
0x102ae:	lea	r12d, [rax - 4]
0x102b2:	call	0xa6a0
0x102b7:	mov	qword ptr [rsp + 0x18], -1
0x102c0:	cmp	r12d, 5
0x102c4:	jle	0x10350
0x102ca:	mov	rdi, qword ptr [rbx + 0x18]
0x102ce:	xor	esi, esi
0x102d0:	lea	rdx, [rsp + 0x10]
0x102d5:	call	0x1c490
0x102da:	test	eax, eax
0x102dc:	js	0x10350
0x102de:	cmp	qword ptr [rsp + 0x18], -1
0x102e4:	je	0x10350
0x102e6:	call	0x4a60
0x102eb:	test	eax, eax
0x102ed:	je	0x103e8
0x102f3:	mov	rdi, qword ptr [rsp + 0x28]
0x102f8:	xor	eax, eax
0x102fa:	test	rdi, rdi
0x102fd:	mov	edx, 0xc
0x10302:	mov	r8d, 1
0x10308:	cmovs	rdi, rax
0x1030c:	imul	rdi, qword ptr [rsp + 0x10]
0x10312:	mov	eax, 0x9c
0x10317:	mov	ecx, 1
0x1031c:	lea	rsi, [rsp + 0x50]
0x10321:	cmp	rdi, 0x2710
0x10328:	cmovge	edx, eax
0x1032b:	call	0x1c520
0x10330:	mov	edi, dword ptr [rip + 0x1a026]
0x10336:	mov	rbp, rax
0x10339:	call	0xa530
0x1033e:	mov	edi, dword ptr [rip + 0x1a014]
0x10344:	call	0xa4f0
0x10349:	jmp	0x10388
0x1034b:	nop	dword ptr [rax + rax]
0x10350:	lea	rbp, [rsp + 0x50]
0x10355:	mov	ecx, 0x51
0x1035a:	movabs	rax, 0x2020202020202020
0x10364:	mov	rdi, rbp
0x10367:	rep stosq	qword ptr [rdi], rax
0x1036a:	mov	eax, 0x2020
0x1036f:	mov	word ptr [rdi], ax
0x10372:	mov	byte ptr [rdi + 2], 0x20
0x10376:	xor	edi, edi
0x10378:	call	0xa530
0x1037d:	mov	edi, dword ptr [rip + 0x19f9d]
0x10383:	call	0xa4f0
0x10388:	mov	edi, dword ptr [rip + 0x19f92]
0x1038e:	movsxd	r15, r12d
0x10391:	call	0xa510
0x10396:	mov	rdi, rbp
0x10399:	mov	r13d, dword ptr [rbx + 0x64]
0x1039d:	call	0x49b0
0x103a2:	mov	rdi, qword ptr [rbx + 8]
0x103a6:	cmp	rax, r15
0x103a9:	lea	edx, [r13 - 2]
0x103ad:	cmova	eax, r12d
0x103b1:	xor	esi, esi
0x103b3:	sub	edx, eax
0x103b5:	call	0xc680
0x103ba:	mov	rdi, rbp
0x103bd:	call	0x49b0
0x103c2:	mov	rdi, qword ptr [rbx + 8]
0x103c6:	mov	rsi, rbp
0x103c9:	cmp	r15, rax
0x103cc:	cmovae	r12d, eax
0x103d0:	mov	edx, r12d
0x103d3:	call	0xc600
0x103d8:	mov	rdi, r14
0x103db:	call	0xa6b0
0x103e0:	jmp	0x1026e
0x103e5:	nop	dword ptr [rax]
0x103e8:	mov	rdi, qword ptr [rsp + 0x20]
0x103ed:	jmp	0x102f8
0x103f2:	call	0x49d0
0x103f7:	nop	word ptr [rax + rax]
0x10400:	endbr64	
0x10404:	cmp	byte ptr [rdi + 0x6d], 0
0x10408:	jne	0x10410
0x1040a:	ret	
0x1040b:	nop	dword ptr [rax + rax]
0x10410:	xor	eax, eax
0x10412:	jmp	0xec50
0x10417:	nop	word ptr [rax + rax]
0x10420:	endbr64	
0x10424:	push	r12
0x10426:	push	rbp
0x10427:	push	rbx
0x10428:	sub	rsp, 0x2a0
0x1042f:	mov	rax, qword ptr fs:[0x28]
0x10438:	mov	qword ptr [rsp + 0x298], rax
0x10440:	xor	eax, eax
0x10442:	cmp	edx, 5
0x10445:	ja	0x10660
0x1044b:	mov	ebp, ecx
0x1044d:	mov	edx, edx
0x1044f:	lea	rcx, [rip + 0x1146e]
0x10456:	mov	rbx, rdi
0x10459:	movsxd	rax, dword ptr [rcx + rdx*4]
0x1045d:	add	rax, rcx
0x10460:	jmp	rax
0x10463:	 ----------
0x104cf:	 ----------
0x104d0:	mov	rax, qword ptr [rsp + 0x298]
0x104d8:	sub	rax, qword ptr fs:[0x28]
0x104e1:	jne	0x1075a
0x104e7:	add	rsp, 0x2a0
0x104ee:	pop	rbx
0x104ef:	pop	rbp
0x104f0:	pop	r12
0x104f2:	ret	
0x104f3:	nop	dword ptr [rax + rax]
0x104f8:	mov	rdx, rsp
0x104fb:	xor	eax, eax
0x104fd:	call	0xe560
0x10502:	movsxd	rax, dword ptr [rbx + 0x64]
0x10506:	mov	rdx, qword ptr [rbx + 0x20]
0x1050a:	movsxd	rcx, ebp
0x1050d:	sub	rax, rcx
0x10510:	lea	rax, [rdx + rax - 2]
0x10515:	mov	rdx, qword ptr [rsp]
0x10519:	mov	qword ptr [rax], rdx
0x1051c:	movzx	edx, word ptr [rsp + 8]
0x10521:	mov	word ptr [rax + 8], dx
0x10525:	jmp	0x104d0
0x10527:	nop	word ptr [rax + rax]
0x10530:	movsxd	rax, dword ptr [rdi + 0x64]
0x10534:	mov	rdx, qword ptr [rdi + 0x20]
0x10538:	movsxd	rcx, ebp
0x1053b:	movsxd	rsi, esi
0x1053e:	sub	rax, rcx
0x10541:	lea	rdx, [rdx + rax - 2]
0x10546:	lea	rax, [rsi + rsi*4]
0x1054a:	shl	rax, 4
0x1054e:	add	rax, qword ptr [rdi + 0x38]
0x10552:	lea	rcx, [rax + 0x38]
0x10556:	mov	rax, qword ptr [rax + 0x38]
0x1055a:	mov	qword ptr [rdx], rax
0x1055d:	mov	eax, dword ptr [rcx + 8]
0x10560:	mov	dword ptr [rdx + 8], eax
0x10563:	movzx	eax, word ptr [rcx + 0xc]
0x10567:	mov	word ptr [rdx + 0xc], ax
0x1056b:	movzx	eax, byte ptr [rcx + 0xe]
0x1056f:	mov	byte ptr [rdx + 0xe], al
0x10572:	jmp	0x104d0
0x10577:	nop	word ptr [rax + rax]
0x10580:	movsxd	rsi, esi
0x10583:	mov	edx, 0xc
0x10588:	mov	ecx, 1
0x1058d:	mov	r8d, 1
0x10593:	lea	rax, [rsi + rsi*4]
0x10597:	mov	rsi, rsp
0x1059a:	shl	rax, 4
0x1059e:	add	rax, qword ptr [rdi + 0x38]
0x105a2:	mov	rdi, qword ptr [rax + 8]
0x105a6:	mov	eax, 0x9c
0x105ab:	cmp	rdi, 0x2710
0x105b2:	cmovge	edx, eax
0x105b5:	call	0x1c520
0x105ba:	mov	rdi, rax
0x105bd:	mov	r12, rax
0x105c0:	call	0x49b0
0x105c5:	mov	edx, 0xa
0x105ca:	movsxd	rsi, dword ptr [rbx + 0x64]
0x105ce:	movsxd	rcx, ebp
0x105d1:	cmp	rax, rdx
0x105d4:	cmovbe	rdx, rax
0x105d8:	sub	rsi, rcx
0x105db:	mov	rcx, qword ptr [rbx + 0x20]
0x105df:	lea	rcx, [rcx + rsi - 2]
0x105e4:	cmp	rax, 9
0x105e8:	ja	0x10621
0x105ea:	movabs	rdi, 0x2020202020202020
0x105f4:	mov	eax, 0xa
0x105f9:	sub	eax, edx
0x105fb:	movsxd	r10, eax
0x105fe:	cmp	eax, 8
0x10601:	jae	0x106e0
0x10607:	test	al, 4
0x10609:	jne	0x10734
0x1060f:	test	eax, eax
0x10611:	je	0x1061e
0x10613:	mov	byte ptr [rcx], 0x20
0x10616:	test	al, 2
0x10618:	jne	0x10749
0x1061e:	add	rcx, r10
0x10621:	cmp	edx, 8
0x10624:	jae	0x10690
0x10626:	test	dl, 4
0x10629:	jne	0x1071e
0x1062f:	test	edx, edx
0x10631:	je	0x104d0
0x10637:	movzx	eax, byte ptr [r12]
0x1063c:	mov	byte ptr [rcx], al
0x1063e:	test	dl, 2
0x10641:	je	0x104d0
0x10647:	mov	edx, edx
0x10649:	movzx	eax, word ptr [r12 + rdx - 2]
0x1064f:	mov	word ptr [rcx + rdx - 2], ax
0x10654:	jmp	0x104d0
0x10659:	nop	dword ptr [rax]
0x10660:	mov	rax, qword ptr [rsp + 0x298]
0x10668:	sub	rax, qword ptr fs:[0x28]
0x10671:	jne	0x1075a
0x10677:	add	rsp, 0x2a0
0x1067e:	lea	rdi, [rip + 0x10b67]
0x10685:	pop	rbx
0x10686:	pop	rbp
0x10687:	pop	r12
0x10689:	jmp	0x8b00
0x1068e:	nop	
0x10690:	mov	rax, qword ptr [r12]
0x10694:	mov	qword ptr [rcx], rax
0x10697:	mov	eax, edx
0x10699:	mov	rsi, qword ptr [r12 + rax - 8]
0x1069e:	mov	qword ptr [rcx + rax - 8], rsi
0x106a3:	lea	rsi, [rcx + 8]
0x106a7:	and	rsi, 0xfffffffffffffff8
0x106ab:	sub	rcx, rsi
0x106ae:	add	edx, ecx
0x106b0:	sub	r12, rcx
0x106b3:	and	edx, 0xfffffff8
0x106b6:	cmp	edx, 8
0x106b9:	jb	0x104d0
0x106bf:	and	edx, 0xfffffff8
0x106c2:	xor	eax, eax
0x106c4:	mov	ecx, eax
0x106c6:	add	eax, 8
0x106c9:	mov	rdi, qword ptr [r12 + rcx]
0x106cd:	mov	qword ptr [rsi + rcx], rdi
0x106d1:	cmp	eax, edx
0x106d3:	jb	0x106c4
0x106d5:	jmp	0x104d0
0x106da:	nop	word ptr [rax + rax]
0x106e0:	mov	esi, eax
0x106e2:	lea	r8, [rcx + 8]
0x106e6:	mov	qword ptr [rcx], rdi
0x106e9:	and	r8, 0xfffffffffffffff8
0x106ed:	mov	qword ptr [rcx + rsi - 8], rdi
0x106f2:	mov	rsi, rcx
0x106f5:	sub	rsi, r8
0x106f8:	add	eax, esi
0x106fa:	and	eax, 0xfffffff8
0x106fd:	cmp	eax, 8
0x10700:	jb	0x1061e
0x10706:	and	eax, 0xfffffff8
0x10709:	xor	esi, esi
0x1070b:	mov	r9d, esi
0x1070e:	add	esi, 8
0x10711:	mov	qword ptr [r8 + r9], rdi
0x10715:	cmp	esi, eax
0x10717:	jb	0x1070b
0x10719:	jmp	0x1061e
0x1071e:	mov	eax, dword ptr [r12]
0x10722:	mov	edx, edx
0x10724:	mov	dword ptr [rcx], eax
0x10726:	mov	eax, dword ptr [r12 + rdx - 4]
0x1072b:	mov	dword ptr [rcx + rdx - 4], eax
0x1072f:	jmp	0x104d0
0x10734:	mov	eax, eax
0x10736:	mov	dword ptr [rcx], 0x20202020
0x1073c:	mov	dword ptr [rcx + rax - 4], 0x20202020
0x10744:	jmp	0x1061e
0x10749:	mov	eax, eax
0x1074b:	mov	esi, 0x2020
0x10750:	mov	word ptr [rcx + rax - 2], si
0x10755:	jmp	0x1061e
0x1075a:	call	0x49d0
0x1075f:	nop	
0x10760:	push	r15
0x10762:	push	r14
0x10764:	mov	r14d, 4
0x1076a:	push	r13
0x1076c:	mov	r13, rdi
0x1076f:	push	r12
0x10771:	push	rbp
0x10772:	push	rbx
0x10773:	mov	ebx, esi
0x10775:	mov	esi, 0x20
0x1077a:	sub	rsp, 0x28
0x1077e:	movsxd	rdx, dword ptr [rdi + 0x64]
0x10782:	mov	rdi, qword ptr [rdi + 0x20]
0x10786:	call	0x4a50
0x1078b:	mov	ebp, dword ptr [r13 + 0x64]
0x1078f:	cmp	ebp, 0x27
0x10792:	jle	0x107b0
0x10794:	movsxd	rax, dword ptr [r13 + 0x80]
0x1079b:	cmp	ebp, 0x49
0x1079e:	jg	0x107a5
0x107a0:	cmp	eax, 5
0x107a3:	je	0x107b0
0x107a5:	lea	rdx, [rip + 0x11234]
0x107ac:	movsxd	r14, dword ptr [rdx + rax*4]
0x107b0:	movsxd	rax, ebx
0x107b3:	lea	r12, [rax + rax*4]
0x107b7:	mov	rax, qword ptr [r13 + 0x38]
0x107bb:	shl	r12, 4
0x107bf:	add	rax, r12
0x107c2:	test	ebx, ebx
0x107c4:	jle	0x107e8
0x107c6:	cmp	byte ptr [rax + 0x48], 4
0x107ca:	ja	0x4f20
0x107d0:	movzx	edx, byte ptr [rax + 0x48]
0x107d4:	lea	rcx, [rip + 0x11101]
0x107db:	movsxd	rdx, dword ptr [rcx + rdx*4]
0x107df:	add	rdx, rcx
0x107e2:	jmp	rdx
0x107e5:	 ----------
0x107e7:	 ----------
0x107e8:	mov	rdx, qword ptr [r13 + 0x18]
0x107ec:	mov	byte ptr [rsp + 8], 0
0x107f1:	cmp	byte ptr [rdx], 0x2f
0x107f4:	je	0x10c18
0x107fa:	mov	r15, qword ptr [rax]
0x107fd:	mov	rdi, r15
0x10800:	call	0x49b0
0x10805:	movsxd	rdx, ebp
0x10808:	mov	rbp, rdx
0x1080b:	sub	rbp, r14
0x1080e:	cmp	rax, rbp
0x10811:	jbe	0x1082b
0x10813:	movsxd	rcx, dword ptr [r13 + 0x74]
0x10817:	lea	rsi, [rbp + rcx]
0x1081c:	cmp	rax, rsi
0x1081f:	jb	0x10a90
0x10825:	sub	rax, rcx
0x10828:	add	r15, rcx
0x1082b:	cmp	rbp, rax
0x1082e:	mov	rsi, r15
0x10831:	cmova	rbp, rax
0x10835:	mov	rax, qword ptr [r13 + 0x20]
0x10839:	mov	rdx, rbp
0x1083c:	lea	rdi, [rax + 1]
0x10840:	call	0x4bb0
0x10845:	mov	rax, qword ptr [r13 + 0x20]
0x10849:	mov	rsi, rbp
0x1084c:	lea	rdi, [rax + 1]
0x10850:	call	0x184d0
0x10855:	movzx	ecx, byte ptr [rsp + 8]
0x1085a:	test	cl, cl
0x1085c:	je	0x10866
0x1085e:	mov	rax, qword ptr [r13 + 0x20]
0x10862:	mov	byte ptr [rax + rbp + 1], cl
0x10866:	mov	eax, dword ptr [r13 + 0x64]
0x1086a:	cmp	eax, 0x27
0x1086d:	jle	0x108a0
0x1086f:	mov	edx, dword ptr [r13 + 0x80]
0x10876:	cmp	edx, 4
0x10879:	je	0x108a0
0x1087b:	jg	0x109e0
0x10881:	cmp	edx, 1
0x10884:	jg	0x109c0
0x1088a:	test	edx, edx
0x1088c:	jns	0x10c30
0x10892:	lea	rdi, [rip + 0x10953]
0x10899:	call	0x8b00
0x1089e:	nop	
0x108a0:	mov	rax, qword ptr [r13 + 0x38]
0x108a4:	cmp	byte ptr [rax + r12 + 0x49], 0
0x108aa:	je	0x108b9
0x108ac:	movsxd	rax, dword ptr [r13 + 0x64]
0x108b0:	mov	rdx, qword ptr [r13 + 0x20]
0x108b4:	mov	byte ptr [rdx + rax - 3], 0x2a
0x108b9:	cmp	ebx, dword ptr [r13 + 0x28]
0x108bd:	je	0x10948
0x108c3:	mov	rax, qword ptr [r13 + 0x38]
0x108c7:	mov	ecx, dword ptr [rip + 0x1938f]
0x108cd:	movzx	edx, byte ptr [rax + r12 + 0x49]
0x108d3:	test	ecx, ecx
0x108d5:	je	0x108e8
0x108d7:	add	rax, r12
0x108da:	cmp	byte ptr [rax + 0x48], 0
0x108de:	movzx	edx, byte ptr [rax + 0x49]
0x108e2:	jne	0x1097e
0x108e8:	test	dl, dl
0x108ea:	jne	0x109a0
0x108f0:	mov	esi, dword ptr [rip + 0x19a46]
0x108f6:	mov	r9d, dword ptr [rip + 0x19a27]
0x108fd:	mov	edi, dword ptr [rip + 0x19a3d]
0x10903:	mov	edx, r9d
0x10906:	call	0xa570
0x1090b:	sub	ebx, dword ptr [r13 + 0x2c]
0x1090f:	mov	rdi, qword ptr [r13 + 8]
0x10913:	mov	edx, 1
0x10918:	lea	esi, [rbx + 1]
0x1091b:	call	0xc680
0x10920:	mov	eax, dword ptr [r13 + 0x64]
0x10924:	mov	rsi, qword ptr [r13 + 0x20]
0x10928:	mov	rdi, qword ptr [r13 + 8]
0x1092c:	add	rsp, 0x28
0x10930:	pop	rbx
0x10931:	lea	edx, [rax - 2]
0x10934:	pop	rbp
0x10935:	pop	r12
0x10937:	pop	r13
0x10939:	pop	r14
0x1093b:	pop	r15
0x1093d:	jmp	0xc600
0x10942:	nop	word ptr [rax + rax]
0x10948:	cmp	byte ptr [r13 + 0x6c], 1
0x1094d:	mov	rdx, qword ptr [r13 + 0x20]
0x10951:	sbb	eax, eax
0x10953:	and	eax, 0xffffffec
0x10956:	add	eax, 0x3e
0x10959:	mov	byte ptr [rdx], al
0x1095b:	mov	rax, qword ptr [r13 + 0x38]
0x1095f:	mov	esi, dword ptr [rip + 0x192f7]
0x10965:	add	rax, r12
0x10968:	test	esi, esi
0x1096a:	je	0x10a50
0x10970:	cmp	byte ptr [rax + 0x48], 0
0x10974:	movzx	edx, byte ptr [rax + 0x49]
0x10978:	je	0x10a50
0x1097e:	test	dl, dl
0x10980:	je	0x10b10
0x10986:	cmp	ebx, dword ptr [r13 + 0x28]
0x1098a:	jne	0x109a0
0x1098c:	cmp	byte ptr [r13 + 0x6c], 1
0x10991:	je	0x10c08
0x10997:	nop	word ptr [rax + rax]
0x109a0:	mov	esi, dword ptr [rip + 0x1998e]
0x109a6:	mov	r9d, dword ptr [rip + 0x19977]
0x109ad:	mov	edi, dword ptr [rip + 0x19985]
0x109b3:	jmp	0x10903
0x109b8:	nop	dword ptr [rax + rax]
0x109c0:	mov	ecx, 0xb
0x109c5:	mov	esi, ebx
0x109c7:	mov	rdi, r13
0x109ca:	xor	eax, eax
0x109cc:	call	0x10420
0x109d1:	jmp	0x108a0
0x109d6:	nop	word ptr cs:[rax + rax]
0x109e0:	cmp	edx, 5
0x109e3:	jne	0x10892
0x109e9:	cmp	eax, 0x49
0x109ec:	jle	0x108a0
0x109f2:	xor	edx, edx
0x109f4:	mov	esi, ebx
0x109f6:	mov	rdi, r13
0x109f9:	xor	eax, eax
0x109fb:	mov	ecx, 0x36
0x10a00:	call	0x10420
0x10a05:	mov	esi, ebx
0x10a07:	mov	rdi, r13
0x10a0a:	xor	eax, eax
0x10a0c:	mov	ecx, 0x26
0x10a11:	mov	edx, 1
0x10a16:	call	0x10420
0x10a1b:	mov	esi, ebx
0x10a1d:	mov	rdi, r13
0x10a20:	xor	eax, eax
0x10a22:	mov	ecx, 0x16
0x10a27:	mov	edx, 2
0x10a2c:	call	0x10420
0x10a31:	mov	ecx, 0xb
0x10a36:	mov	esi, ebx
0x10a38:	mov	rdi, r13
0x10a3b:	mov	edx, 3
0x10a40:	xor	eax, eax
0x10a42:	call	0x10420
0x10a47:	jmp	0x108a0
0x10a4c:	nop	dword ptr [rax]
0x10a50:	movzx	edx, byte ptr [rax + 0x49]
0x10a54:	cmp	ebx, dword ptr [r13 + 0x28]
0x10a58:	jne	0x108e8
0x10a5e:	cmp	byte ptr [r13 + 0x6c], 1
0x10a63:	jne	0x108e8
0x10a69:	mov	esi, dword ptr [rip + 0x198d9]
0x10a6f:	test	dl, dl
0x10a71:	jne	0x10c08
0x10a77:	mov	r9d, dword ptr [rip + 0x198ce]
0x10a7e:	test	dl, dl
0x10a80:	je	0x108fd
0x10a86:	jmp	0x109ad
0x10a8b:	nop	dword ptr [rax + rax]
0x10a90:	add	r14, rax
0x10a93:	mov	rcx, rdx
0x10a96:	sub	rcx, r14
0x10a99:	sub	r14, rdx
0x10a9c:	add	rax, rcx
0x10a9f:	add	r15, r14
0x10aa2:	jmp	0x1082b
0x10aa7:	nop	word ptr [rax + rax]
0x10ab0:	mov	byte ptr [rsp + 8], 0x3d
0x10ab5:	add	r14, 1
0x10ab9:	jmp	0x107fa
0x10abe:	nop	
0x10ac0:	mov	byte ptr [rsp + 8], 0x7c
0x10ac5:	jmp	0x10ab5
0x10ac7:	nop	word ptr [rax + rax]
0x10ad0:	movzx	ecx, byte ptr [rax + 0x4a]
0x10ad4:	mov	byte ptr [rsp + 8], cl
0x10ad8:	test	cl, cl
0x10ada:	je	0x107fa
0x10ae0:	mov	byte ptr [rsp + 8], 0x2a
0x10ae5:	jmp	0x10ab5
0x10ae7:	nop	word ptr [rax + rax]
0x10af0:	mov	byte ptr [rsp + 8], 0x40
0x10af5:	jmp	0x10ab5
0x10af7:	nop	word ptr [rax + rax]
0x10b00:	mov	byte ptr [rsp + 8], 0x2f
0x10b05:	jmp	0x10ab5
0x10b07:	nop	word ptr [rax + rax]
0x10b10:	mov	rdi, qword ptr [r13 + 8]
0x10b14:	mov	esi, ebx
0x10b16:	sub	esi, dword ptr [r13 + 0x2c]
0x10b1a:	mov	edx, 1
0x10b1f:	add	esi, 1
0x10b22:	call	0xc680
0x10b27:	mov	rax, qword ptr [r13 + 0x38]
0x10b2b:	cmp	byte ptr [rax + r12 + 0x49], 0
0x10b31:	jne	0x10c50
0x10b37:	mov	eax, dword ptr [rip + 0x197ff]
0x10b3d:	mov	r15d, dword ptr [rip + 0x197fc]
0x10b44:	mov	dword ptr [rsp + 0xc], eax
0x10b48:	cmp	ebx, dword ptr [r13 + 0x28]
0x10b4c:	je	0x10c70
0x10b52:	mov	eax, dword ptr [rip + 0x197cc]
0x10b58:	mov	dword ptr [rsp + 8], eax
0x10b5c:	mov	edx, dword ptr [rsp + 8]
0x10b60:	mov	esi, dword ptr [rsp + 0xc]
0x10b64:	mov	edi, r15d
0x10b67:	call	0xa570
0x10b6c:	mov	rax, qword ptr [r13 + 0x20]
0x10b70:	mov	rdi, qword ptr [r13 + 8]
0x10b74:	movsx	esi, byte ptr [rax]
0x10b77:	call	0xc650
0x10b7c:	mov	rax, qword ptr [r13 + 0x38]
0x10b80:	lea	rdx, [rax + r12]
0x10b84:	cmp	byte ptr [rdx + 0x4b], 0
0x10b88:	je	0x10c90
0x10b8e:	movsx	edi, byte ptr [rdx + 0x4e]
0x10b92:	cmp	dil, 2
0x10b96:	je	0x10bb6
0x10b98:	movsx	esi, byte ptr [rdx + 0x4c]
0x10b9c:	cmp	ebx, dword ptr [r13 + 0x28]
0x10ba0:	jne	0x10bad
0x10ba2:	cmp	byte ptr [r13 + 0x6c], 1
0x10ba7:	je	0x10d52
0x10bad:	movsx	edx, byte ptr [rdx + 0x4d]
0x10bb1:	call	0xa570
0x10bb6:	mov	rax, qword ptr [r13 + 0x20]
0x10bba:	mov	rdi, qword ptr [r13 + 8]
0x10bbe:	lea	edx, [rbp + 1]
0x10bc1:	lea	rsi, [rax + 1]
0x10bc5:	call	0xc600
0x10bca:	mov	eax, dword ptr [r13 + 0x64]
0x10bce:	mov	rdi, qword ptr [r13 + 8]
0x10bd2:	lea	edx, [rax - 4]
0x10bd5:	mov	rax, qword ptr [r13 + 0x20]
0x10bd9:	sub	edx, ebp
0x10bdb:	lea	rsi, [rax + rbp + 2]
0x10be0:	call	0xc600
0x10be5:	mov	edx, dword ptr [rsp + 8]
0x10be9:	mov	esi, dword ptr [rsp + 0xc]
0x10bed:	mov	edi, r15d
0x10bf0:	add	rsp, 0x28
0x10bf4:	pop	rbx
0x10bf5:	pop	rbp
0x10bf6:	pop	r12
0x10bf8:	pop	r13
0x10bfa:	pop	r14
0x10bfc:	pop	r15
0x10bfe:	jmp	0xa570
0x10c03:	nop	dword ptr [rax + rax]
0x10c08:	mov	esi, dword ptr [rip + 0x19736]
0x10c0e:	jmp	0x10a77
0x10c13:	nop	dword ptr [rax + rax]
0x10c18:	cmp	byte ptr [rdx + 1], 0
0x10c1c:	jne	0x107fa
0x10c22:	jmp	0x107c6
0x10c27:	nop	word ptr [rax + rax]
0x10c30:	mov	ecx, 0x10
0x10c35:	mov	esi, ebx
0x10c37:	mov	rdi, r13
0x10c3a:	xor	eax, eax
0x10c3c:	call	0x10420
0x10c41:	jmp	0x108a0
0x10c46:	nop	word ptr cs:[rax + rax]
0x10c50:	mov	eax, dword ptr [rip + 0x196de]
0x10c56:	mov	r15d, dword ptr [rip + 0x196db]
0x10c5d:	mov	dword ptr [rsp + 0xc], eax
0x10c61:	jmp	0x10b48
0x10c66:	nop	word ptr cs:[rax + rax]
0x10c70:	cmp	byte ptr [r13 + 0x6c], 1
0x10c75:	jne	0x10b52
0x10c7b:	mov	eax, dword ptr [rip + 0x196cb]
0x10c81:	mov	dword ptr [rsp + 8], eax
0x10c85:	jmp	0x10b5c
0x10c8a:	nop	word ptr [rax + rax]
0x10c90:	mov	r14, qword ptr [rip + 0x1adf9]
0x10c97:	mov	byte ptr [rdx + 0x4b], 1
0x10c9b:	test	r14, r14
0x10c9e:	je	0x10d49
0x10ca4:	mov	qword ptr [rsp + 0x18], 0
0x10cad:	mov	qword ptr [rsp + 0x10], 0
0x10cb6:	nop	word ptr cs:[rax + rax]
0x10cc0:	mov	rsi, qword ptr [rax + r12]
0x10cc4:	mov	rdi, qword ptr [r14]
0x10cc7:	mov	edx, 0x15
0x10ccc:	call	0x4a40
0x10cd1:	test	eax, eax
0x10cd3:	jne	0x10cee
0x10cd5:	mov	rdi, qword ptr [r14]
0x10cd8:	call	0x49b0
0x10cdd:	cmp	qword ptr [rsp + 0x10], rax
0x10ce2:	jae	0x10cee
0x10ce4:	mov	qword ptr [rsp + 0x18], r14
0x10ce9:	mov	qword ptr [rsp + 0x10], rax
0x10cee:	mov	r14, qword ptr [r14 + 0x18]
0x10cf2:	mov	rax, qword ptr [r13 + 0x38]
0x10cf6:	test	r14, r14
0x10cf9:	jne	0x10cc0
0x10cfb:	mov	rsi, qword ptr [rsp + 0x18]
0x10d00:	lea	rdx, [rax + r12]
0x10d04:	test	rsi, rsi
0x10d07:	je	0x10d49
0x10d09:	mov	eax, dword ptr [rsi + 0x10]
0x10d0c:	xor	ecx, ecx
0x10d0e:	cmp	eax, -1
0x10d11:	cmove	eax, ecx
0x10d14:	mov	byte ptr [rdx + 0x4e], al
0x10d17:	movsx	edi, al
0x10d1a:	mov	eax, dword ptr [rsi + 8]
0x10d1d:	mov	ecx, eax
0x10d1f:	cmp	eax, -1
0x10d22:	movzx	eax, byte ptr [rip + 0x19613]
0x10d29:	cmovne	eax, ecx
0x10d2c:	mov	byte ptr [rdx + 0x4c], al
0x10d2f:	mov	eax, dword ptr [rsi + 0xc]
0x10d32:	mov	ecx, eax
0x10d34:	cmp	eax, -1
0x10d37:	movzx	eax, byte ptr [rip + 0x195e6]
0x10d3e:	cmovne	eax, ecx
0x10d41:	mov	byte ptr [rdx + 0x4d], al
0x10d44:	jmp	0x10b92
0x10d49:	mov	byte ptr [rdx + 0x4e], 2
0x10d4d:	jmp	0x10bb6
0x10d52:	mov	edx, dword ptr [rsp + 8]
0x10d56:	mov	edi, r15d
0x10d59:	call	0xa570
0x10d5e:	jmp	0x10bb6
0x10d63:	nop	word ptr cs:[rax + rax]
0x10d6e:	nop	
0x10d70:	push	r13
0x10d72:	push	r12
0x10d74:	push	rbp
0x10d75:	push	rbx
0x10d76:	mov	rbx, rdi
0x10d79:	sub	rsp, 0x18
0x10d7d:	mov	rax, qword ptr fs:[0x28]
0x10d86:	mov	qword ptr [rsp + 8], rax
0x10d8b:	xor	eax, eax
0x10d8d:	lea	r12, [rsp + 7]
0x10d92:	mov	rdi, r12
0x10d95:	call	0xa6a0
0x10d9a:	mov	ebp, dword ptr [rbx + 0x2c]
0x10d9d:	mov	eax, ebp
0x10d9f:	cmp	ebp, dword ptr [rbx + 0x68]
0x10da2:	jl	0x10dcb
0x10da4:	jmp	0x10dd9
0x10da6:	nop	word ptr cs:[rax + rax]
0x10db0:	cmp	byte ptr [rbx + 0x6d], 0
0x10db4:	je	0x10dc0
0x10db6:	mov	esi, ebp
0x10db8:	mov	rdi, rbx
0x10dbb:	call	0x10760
0x10dc0:	add	ebp, 1
0x10dc3:	cmp	ebp, dword ptr [rbx + 0x68]
0x10dc6:	jge	0x10dd9
0x10dc8:	mov	eax, dword ptr [rbx + 0x2c]
0x10dcb:	mov	edx, ebp
0x10dcd:	sub	edx, eax
0x10dcf:	mov	eax, dword ptr [rbx + 0x60]
0x10dd2:	sub	eax, 2
0x10dd5:	cmp	edx, eax
0x10dd7:	jl	0x10db0
0x10dd9:	mov	edx, dword ptr [rip + 0x19545]
0x10ddf:	xor	edi, edi
0x10de1:	mov	esi, 7
0x10de6:	call	0xa570
0x10deb:	movsxd	rdx, dword ptr [rbx + 0x64]
0x10def:	mov	rdi, qword ptr [rbx + 0x20]
0x10df3:	mov	esi, 0x20
0x10df8:	call	0x4a50
0x10dfd:	mov	eax, dword ptr [rbx + 0x60]
0x10e00:	lea	r13d, [rax - 2]
0x10e04:	mov	eax, dword ptr [rbx + 0x14]
0x10e07:	cmp	r13d, eax
0x10e0a:	cmovg	r13d, eax
0x10e0e:	cmp	r13d, ebp
0x10e11:	jle	0x10e49
0x10e13:	nop	dword ptr [rax + rax]
0x10e18:	mov	rdi, qword ptr [rbx + 8]
0x10e1c:	mov	esi, ebp
0x10e1e:	sub	esi, dword ptr [rbx + 0x2c]
0x10e21:	mov	edx, 1
0x10e26:	add	esi, 1
0x10e29:	add	ebp, 1
0x10e2c:	call	0xc680
0x10e31:	mov	eax, dword ptr [rbx + 0x64]
0x10e34:	mov	rsi, qword ptr [rbx + 0x20]
0x10e38:	mov	rdi, qword ptr [rbx + 8]
0x10e3c:	lea	edx, [rax - 2]
0x10e3f:	call	0xc600
0x10e44:	cmp	r13d, ebp
0x10e47:	jne	0x10e18
0x10e49:	mov	eax, dword ptr [rbx + 0x68]
0x10e4c:	mov	rdi, r12
0x10e4f:	mov	dword ptr [rbx + 0x14], eax
0x10e52:	call	0xa6b0
0x10e57:	mov	rax, qword ptr [rsp + 8]
0x10e5c:	sub	rax, qword ptr fs:[0x28]
0x10e65:	jne	0x10e72
0x10e67:	add	rsp, 0x18
0x10e6b:	pop	rbx
0x10e6c:	pop	rbp
0x10e6d:	pop	r12
0x10e6f:	pop	r13
0x10e71:	ret	
0x10e72:	call	0x49d0
0x10e77:	nop	word ptr [rax + rax]
0x10e80:	endbr64	
0x10e84:	cmp	byte ptr [rdi + 0x6d], 0
0x10e88:	jne	0x10e90
0x10e8a:	ret	
0x10e8b:	nop	dword ptr [rax + rax]
0x10e90:	xor	eax, eax
0x10e92:	jmp	0x10d70
0x10e97:	nop	word ptr [rax + rax]
0x10ea0:	endbr64	
0x10ea4:	cmp	byte ptr [rdi + 0x6d], 0
0x10ea8:	jne	0x10eb0
0x10eaa:	ret	
0x10eab:	nop	dword ptr [rax + rax]
0x10eb0:	jmp	0x10760
0x10eb5:	nop	word ptr cs:[rax + rax]
0x10ec0:	endbr64	
0x10ec4:	push	r13
0x10ec6:	push	r12
0x10ec8:	push	rbp
0x10ec9:	push	rbx
0x10eca:	mov	rbx, rdi
0x10ecd:	sub	rsp, 0x18
0x10ed1:	movsxd	rdi, dword ptr [rdi + 0x64]
0x10ed5:	mov	rax, qword ptr fs:[0x28]
0x10ede:	mov	qword ptr [rsp + 8], rax
0x10ee3:	xor	eax, eax
0x10ee5:	call	0x1d670
0x10eea:	cmp	byte ptr [rbx + 0x6d], 0
0x10eee:	jne	0x10f10
0x10ef0:	mov	rax, qword ptr [rsp + 8]
0x10ef5:	sub	rax, qword ptr fs:[0x28]
0x10efe:	jne	0x11006
0x10f04:	add	rsp, 0x18
0x10f08:	pop	rbx
0x10f09:	pop	rbp
0x10f0a:	pop	r12
0x10f0c:	pop	r13
0x10f0e:	ret	
0x10f0f:	nop	
0x10f10:	lea	r13, [rsp + 7]
0x10f15:	mov	r12, rax
0x10f18:	mov	ebp, 1
0x10f1d:	mov	rdi, r13
0x10f20:	call	0xa6a0
0x10f25:	mov	esi, dword ptr [rip + 0x193f5]
0x10f2b:	xor	edi, edi
0x10f2d:	mov	edx, esi
0x10f2f:	call	0xa570
0x10f34:	cmp	dword ptr [rbx + 0x60], 2
0x10f38:	jle	0x10fa4
0x10f3a:	nop	word ptr [rax + rax]
0x10f40:	mov	rdi, qword ptr [rbx + 8]
0x10f44:	xor	edx, edx
0x10f46:	mov	esi, ebp
0x10f48:	add	ebp, 1
0x10f4b:	call	0xc680
0x10f50:	mov	rdi, qword ptr [rbx + 8]
0x10f54:	mov	esi, 0x20
0x10f59:	call	0xc650
0x10f5e:	mov	eax, dword ptr [rbx + 0x60]
0x10f61:	lea	edx, [rax - 1]
0x10f64:	cmp	edx, ebp
0x10f66:	jg	0x10f40
0x10f68:	cmp	eax, 2
0x10f6b:	jle	0x10fa4
0x10f6d:	mov	ebp, 1
0x10f72:	nop	word ptr [rax + rax]
0x10f78:	mov	eax, dword ptr [rbx + 0x64]
0x10f7b:	mov	rdi, qword ptr [rbx + 8]
0x10f7f:	mov	esi, ebp
0x10f81:	add	ebp, 1
0x10f84:	lea	edx, [rax - 1]
0x10f87:	call	0xc680
0x10f8c:	mov	rdi, qword ptr [rbx + 8]
0x10f90:	mov	esi, 0x20
0x10f95:	call	0xc650
0x10f9a:	mov	eax, dword ptr [rbx + 0x60]
0x10f9d:	sub	eax, 1
0x10fa0:	cmp	eax, ebp
0x10fa2:	jg	0x10f78
0x10fa4:	movsxd	rdx, dword ptr [rbx + 0x64]
0x10fa8:	mov	rdi, r12
0x10fab:	mov	esi, 0x20
0x10fb0:	call	0x4a50
0x10fb5:	mov	rdi, qword ptr [rbx + 8]
0x10fb9:	xor	edx, edx
0x10fbb:	xor	esi, esi
0x10fbd:	call	0xc680
0x10fc2:	mov	edx, dword ptr [rbx + 0x64]
0x10fc5:	mov	rdi, qword ptr [rbx + 8]
0x10fc9:	mov	rsi, r12
0x10fcc:	call	0xc600
0x10fd1:	mov	eax, dword ptr [rbx + 0x60]
0x10fd4:	mov	rdi, qword ptr [rbx + 8]
0x10fd8:	xor	edx, edx
0x10fda:	lea	esi, [rax - 1]
0x10fdd:	call	0xc680
0x10fe2:	mov	edx, dword ptr [rbx + 0x64]
0x10fe5:	mov	rdi, qword ptr [rbx + 8]
0x10fe9:	mov	rsi, r12
0x10fec:	call	0xc600
0x10ff1:	mov	rdi, r12
0x10ff4:	call	0x18d10
0x10ff9:	mov	rdi, r13
0x10ffc:	call	0xa6b0
0x11001:	jmp	0x10ef0
0x11006:	call	0x49d0
0x1100b:	nop	dword ptr [rax + rax]
0x11010:	endbr64	
0x11014:	push	rbp
0x11015:	xor	eax, eax
0x11017:	mov	rbp, rdi
0x1101a:	call	0x10ec0
0x1101f:	xor	eax, eax
0x11021:	mov	rdi, rbp
0x11024:	call	0x10160
0x11029:	cmp	byte ptr [rbp + 0x6d], 0
0x1102d:	je	0x11039
0x1102f:	mov	rdi, rbp
0x11032:	xor	eax, eax
0x11034:	call	0xec50
0x11039:	xor	eax, eax
0x1103b:	mov	rdi, rbp
0x1103e:	call	0x10240
0x11043:	cmp	byte ptr [rbp + 0x6d], 0
0x11047:	jne	0x11050
0x11049:	pop	rbp
0x1104a:	ret	
0x1104b:	nop	dword ptr [rax + rax]
0x11050:	mov	rdi, rbp
0x11053:	xor	eax, eax
0x11055:	pop	rbp
0x11056:	jmp	0x10d70
0x1105b:	nop	dword ptr [rax + rax]
0x11060:	endbr64	
0x11064:	mov	edx, dword ptr [rdi + 0x68]
0x11067:	test	edx, edx
0x11069:	jle	0x110ab
0x1106b:	sub	edx, 1
0x1106e:	mov	rcx, qword ptr [rdi + 0x38]
0x11072:	lea	rdx, [rdx + rdx*4]
0x11076:	shl	rdx, 4
0x1107a:	lea	rax, [rcx + 0x49]
0x1107e:	lea	rdx, [rcx + rdx + 0x99]
0x11086:	nop	word ptr cs:[rax + rax]
0x11090:	cmp	byte ptr [rax], 0
0x11093:	jne	0x110a2
0x11095:	cmp	byte ptr [rax - 1], 0
0x11099:	je	0x110a2
0x1109b:	mov	byte ptr [rax], 1
0x1109e:	add	dword ptr [rdi + 0x70], 1
0x110a2:	add	rax, 0x50
0x110a6:	cmp	rax, rdx
0x110a9:	jne	0x11090
0x110ab:	ret	
0x110ac:	nop	dword ptr [rax]
0x110b0:	endbr64	
0x110b4:	mov	edx, dword ptr [rdi + 0x68]
0x110b7:	test	edx, edx
0x110b9:	jle	0x110ec
0x110bb:	sub	edx, 1
0x110be:	mov	rcx, qword ptr [rdi + 0x38]
0x110c2:	lea	rdx, [rdx + rdx*4]
0x110c6:	shl	rdx, 4
0x110ca:	lea	rax, [rcx + 0x49]
0x110ce:	lea	rdx, [rcx + rdx + 0x99]
0x110d6:	nop	word ptr cs:[rax + rax]
0x110e0:	mov	byte ptr [rax], 0
0x110e3:	add	rax, 0x50
0x110e7:	cmp	rax, rdx
0x110ea:	jne	0x110e0
0x110ec:	mov	dword ptr [rdi + 0x70], 0
0x110f3:	ret	
0x110f4:	nop	word ptr cs:[rax + rax]
0x110ff:	nop	
0x11100:	endbr64	
0x11104:	mov	rax, qword ptr [rdi + 0x18]
0x11108:	ret	
0x11109:	nop	dword ptr [rax]
0x11110:	endbr64	
0x11114:	mov	eax, dword ptr [rip + 0x1a996]
0x1111a:	test	eax, eax
0x1111c:	jne	0x11120
0x1111e:	ret	
0x1111f:	nop	
0x11120:	push	rbp
0x11121:	xor	eax, eax
0x11123:	push	rbx
0x11124:	sub	rsp, 8
0x11128:	mov	dword ptr [rip + 0x1a97e], 0
0x11132:	call	0xc8c0
0x11137:	mov	edx, 4
0x1113c:	lea	rsi, [rip + 0xf3ef]
0x11143:	lea	rdi, [rip + 0x100af]
0x1114a:	mov	rbp, rax
0x1114d:	call	0x8070
0x11152:	mov	rdi, rbp
0x11155:	mov	ebx, eax
0x11157:	call	0xc970
0x1115c:	xor	eax, eax
0x1115e:	and	ebx, 0xffffffdf
0x11161:	call	0xd870
0x11166:	xor	eax, eax
0x11168:	call	0xd740
0x1116d:	xor	eax, eax
0x1116f:	call	0xa820
0x11174:	xor	eax, eax
0x11176:	cmp	bl, 0x4e
0x11179:	setne	al
0x1117c:	add	rsp, 8
0x11180:	pop	rbx
0x11181:	pop	rbp
0x11182:	ret	
0x11183:	nop	word ptr cs:[rax + rax]
0x1118e:	nop	
0x11190:	endbr64	
0x11194:	push	rbp
0x11195:	mov	rbp, rsi
0x11198:	sub	rsp, 0x130
0x1119f:	mov	rax, qword ptr fs:[0x28]
0x111a8:	mov	qword ptr [rsp + 0x128], rax
0x111b0:	xor	eax, eax
0x111b2:	mov	rsi, rsp
0x111b5:	call	0x18f40
0x111ba:	test	eax, eax
0x111bc:	je	0x111e0
0x111be:	xor	eax, eax
0x111c0:	mov	rdx, qword ptr [rsp + 0x128]
0x111c8:	sub	rdx, qword ptr fs:[0x28]
0x111d1:	jne	0x11217
0x111d3:	add	rsp, 0x130
0x111da:	pop	rbp
0x111db:	ret	
0x111dc:	nop	dword ptr [rax]
0x111e0:	lea	rsi, [rsp + 0x90]
0x111e8:	mov	rdi, rbp
0x111eb:	call	0x18f40
0x111f0:	test	eax, eax
0x111f2:	jne	0x111be
0x111f4:	mov	rax, qword ptr [rsp + 0x90]
0x111fc:	cmp	qword ptr [rsp], rax
0x11200:	jne	0x111be
0x11202:	mov	rax, qword ptr [rsp + 0x98]
0x1120a:	cmp	qword ptr [rsp + 8], rax
0x1120f:	sete	al
0x11212:	movzx	eax, al
0x11215:	jmp	0x111c0
0x11217:	call	0x49d0
0x1121c:	nop	dword ptr [rax]
0x11220:	endbr64	
0x11224:	push	rbx
0x11225:	mov	edx, dword ptr [rdi + 0x70]
0x11228:	mov	rbx, rdi
0x1122b:	mov	ecx, 0x1e
0x11230:	test	edx, edx
0x11232:	je	0x11268
0x11234:	lea	rdx, [rip + 0xffd8]
0x1123b:	lea	rdi, [rip + 0x107de]
0x11242:	xor	eax, eax
0x11244:	call	0xf760
0x11249:	xor	r8d, r8d
0x1124c:	cmp	al, 0x6f
0x1124e:	je	0x1125e
0x11250:	cmp	al, 0x73
0x11252:	je	0x11280
0x11254:	mov	r8d, 2
0x1125a:	cmp	al, 0x61
0x1125c:	je	0x11298
0x1125e:	mov	eax, r8d
0x11261:	pop	rbx
0x11262:	ret	
0x11263:	nop	dword ptr [rax + rax]
0x11268:	lea	rdx, [rip + 0xffa9]
0x1126f:	lea	rdi, [rip + 0x107da]
0x11276:	xor	eax, eax
0x11278:	call	0xf760
0x1127d:	jmp	0x11249
0x1127f:	nop	
0x11280:	cmp	dword ptr [rbx + 0x70], 1
0x11284:	mov	r8d, 2
0x1128a:	pop	rbx
0x1128b:	sbb	r8d, -1
0x1128f:	mov	eax, r8d
0x11292:	ret	
0x11293:	nop	dword ptr [rax + rax]
0x11298:	mov	eax, dword ptr [rbx + 0x70]
0x1129b:	test	eax, eax
0x1129d:	je	0x1125e
0x1129f:	mov	dword ptr [rbx + 0x90], 0
0x112a9:	xor	r8d, r8d
0x112ac:	pop	rbx
0x112ad:	mov	eax, r8d
0x112b0:	ret	
0x112b1:	nop	word ptr cs:[rax + rax]
0x112bc:	nop	dword ptr [rax]
0x112c0:	endbr64	
0x112c4:	push	rbp
0x112c5:	mov	rbp, rdi
0x112c8:	sub	rsp, 0xa0
0x112cf:	mov	rax, qword ptr fs:[0x28]
0x112d8:	mov	qword ptr [rsp + 0x98], rax
0x112e0:	xor	eax, eax
0x112e2:	mov	rsi, rsp
0x112e5:	call	0x18f40
0x112ea:	test	eax, eax
0x112ec:	jne	0x112fe
0x112ee:	mov	eax, dword ptr [rsp + 0x18]
0x112f2:	and	eax, 0xf000
0x112f7:	cmp	eax, 0x8000
0x112fc:	je	0x11320
0x112fe:	mov	rax, qword ptr [rsp + 0x98]
0x11306:	sub	rax, qword ptr fs:[0x28]
0x1130f:	jne	0x1132a
0x11311:	add	rsp, 0xa0
0x11318:	pop	rbp
0x11319:	ret	
0x1131a:	nop	word ptr [rax + rax]
0x11320:	mov	rdi, rbp
0x11323:	call	0x4870
0x11328:	jmp	0x112fe
0x1132a:	call	0x49d0
0x1132f:	nop	
0x11330:	endbr64	
0x11334:	push	r15
0x11336:	push	r14
0x11338:	mov	r14, rdx
0x1133b:	push	r13
0x1133d:	push	r12
0x1133f:	mov	r12d, ecx
0x11342:	push	rbp
0x11343:	and	r12d, 0xf000
0x1134a:	mov	rbp, rdi
0x1134d:	push	rbx
0x1134e:	mov	ebx, ecx
0x11350:	sub	rsp, 0x178
0x11357:	mov	qword ptr [rsp + 8], rsi
0x1135c:	mov	dword ptr [rsp + 0x30], r8d
0x11361:	mov	dword ptr [rsp + 0x34], r9d
0x11366:	mov	rax, qword ptr fs:[0x28]
0x1136f:	mov	qword ptr [rsp + 0x168], rax
0x11377:	xor	eax, eax
0x11379:	cmp	r12d, 0xa000
0x11380:	je	0x11a10
0x11386:	cmp	r12d, 0x4000
0x1138d:	je	0x11828
0x11393:	mov	rdi, r14
0x11396:	call	0x49b0
0x1139b:	mov	rdi, r14
0x1139e:	mov	r13, rax
0x113a1:	call	0x1d7a0
0x113a6:	lea	rsi, [rsp + 0x40]
0x113ab:	mov	rdi, rax
0x113ae:	mov	qword ptr [rsp + 0x18], rax
0x113b3:	call	0x18f40
0x113b8:	test	eax, eax
0x113ba:	je	0x11630
0x113c0:	mov	rdi, qword ptr [rsp + 0x18]
0x113c5:	call	0x190c0
0x113ca:	cmp	byte ptr [rax], 0
0x113cd:	mov	r13, rax
0x113d0:	je	0x11ae5
0x113d6:	mov	esi, dword ptr [rbp + 0x90]
0x113dc:	test	esi, esi
0x113de:	je	0x113f4
0x113e0:	mov	rdi, qword ptr [rsp + 0x18]
0x113e5:	xor	esi, esi
0x113e7:	call	0x4d90
0x113ec:	test	eax, eax
0x113ee:	je	0x11a60
0x113f4:	mov	rdi, qword ptr [rsp + 8]
0x113f9:	call	0x49b0
0x113fe:	lea	rdi, [rax + 0x20]
0x11402:	call	0x1d670
0x11407:	mov	r8, qword ptr [rsp + 8]
0x1140c:	lea	rcx, [rip + 0xfe34]
0x11413:	mov	r13, rax
0x11416:	cmp	r12d, 0x8000
0x1141d:	je	0x11a48
0x11423:	mov	rdx, -1
0x1142a:	mov	esi, 1
0x1142f:	mov	rdi, r13
0x11432:	xor	eax, eax
0x11434:	call	0x4f10
0x11439:	mov	edx, 1
0x1143e:	mov	esi, 1
0x11443:	mov	rdi, r13
0x11446:	call	0xe480
0x1144b:	xor	eax, eax
0x1144d:	call	0xa820
0x11452:	mov	rdi, r13
0x11455:	call	0x18d10
0x1145a:	mov	rdi, qword ptr [rsp + 8]
0x1145f:	xor	esi, esi
0x11461:	xor	eax, eax
0x11463:	call	0x4d30
0x11468:	mov	r15d, eax
0x1146b:	cmp	eax, -1
0x1146e:	je	0x11a90
0x11474:	mov	ecx, dword ptr [rbp + 0x10]
0x11477:	test	ecx, ecx
0x11479:	je	0x1147e
0x1147b:	and	ebx, 0xffffffb6
0x1147e:	mov	rdi, qword ptr [rsp + 0x18]
0x11483:	mov	esi, ebx
0x11485:	call	0x4e00
0x1148a:	mov	edi, r15d
0x1148d:	mov	dword ptr [rsp + 0x28], eax
0x11491:	cmp	eax, -1
0x11494:	je	0x11ae0
0x1149a:	call	0x182f0
0x1149f:	mov	qword ptr [rsp + 0x10], 0x8000
0x114a8:	mov	r13, rax
0x114ab:	cmp	rax, 0x8000
0x114b1:	jle	0x11b38
0x114b7:	mov	eax, ebx
0x114b9:	and	ebx, 0xb000
0x114bf:	and	eax, 0xf000
0x114c4:	mov	dword ptr [rsp + 0x2c], eax
0x114c8:	cmp	ebx, 0x2000
0x114ce:	je	0x11b00
0x114d4:	test	r13, r13
0x114d7:	je	0x11c58
0x114dd:	mov	rdi, qword ptr [rsp + 0x10]
0x114e2:	call	0x1d670
0x114e7:	mov	r14, rax
0x114ea:	test	r13, r13
0x114ed:	jle	0x11aa0
0x114f3:	movabs	rdx, 0xa3d70a3d70a3d70b
0x114fd:	mov	rax, r13
0x11500:	imul	rdx
0x11503:	mov	rax, r13
0x11506:	sar	rax, 0x3f
0x1150a:	add	rdx, r13
0x1150d:	sar	rdx, 6
0x11511:	sub	rdx, rax
0x11514:	mov	qword ptr [rsp + 0x38], rdx
0x11519:	xor	r12d, r12d
0x1151c:	jmp	0x11530
0x1151e:	nop	
0x11520:	add	r12, 0x8000
0x11527:	cmp	r12, r13
0x1152a:	jge	0x11aa0
0x11530:	mov	rax, qword ptr [rsp + 0x10]
0x11535:	mov	rbp, r13
0x11538:	mov	edx, dword ptr [rip + 0x1a572]
0x1153e:	sub	rbp, r12
0x11541:	cmp	rbp, rax
0x11544:	cmovg	rbp, rax
0x11548:	test	edx, edx
0x1154a:	jne	0x11690
0x11550:	mov	edi, 1
0x11555:	call	0x18b70
0x1155a:	mov	edi, r15d
0x1155d:	movsxd	rdx, ebp
0x11560:	mov	rsi, r14
0x11563:	call	0x18d30
0x11568:	xor	edi, edi
0x1156a:	mov	ebx, eax
0x1156c:	call	0x18b70
0x11571:	cmp	ebp, ebx
0x11573:	je	0x11583
0x11575:	test	ebx, ebx
0x11577:	js	0x11bf0
0x1157d:	je	0x11aa0
0x11583:	mov	eax, dword ptr [rip + 0x1a527]
0x11589:	test	eax, eax
0x1158b:	jne	0x11778
0x11591:	movsxd	rbp, ebx
0x11594:	mov	edi, dword ptr [rsp + 0x28]
0x11598:	mov	rsi, r14
0x1159b:	mov	rdx, rbp
0x1159e:	call	0x18da0
0x115a3:	cmp	ebx, eax
0x115a5:	jne	0x11b50
0x115ab:	add	rbp, r12
0x115ae:	cmp	rbp, r13
0x115b1:	jg	0x11520
0x115b7:	mov	rdi, qword ptr [rsp + 8]
0x115bc:	call	0x49b0
0x115c1:	lea	rdi, [rax + 0x20]
0x115c5:	call	0x1d670
0x115ca:	cmp	dword ptr [rsp + 0x2c], 0x8000
0x115d2:	mov	rbx, rax
0x115d5:	je	0x117e0
0x115db:	mov	r9, qword ptr [rsp + 8]
0x115e0:	mov	rdi, rax
0x115e3:	mov	r8, rbp
0x115e6:	mov	esi, 1
0x115eb:	lea	rcx, [rip + 0xfc7b]
0x115f2:	mov	rdx, -1
0x115f9:	xor	eax, eax
0x115fb:	call	0x4f10
0x11600:	mov	rdi, rbx
0x11603:	mov	edx, 1
0x11608:	mov	esi, 1
0x1160d:	call	0xe480
0x11612:	xor	eax, eax
0x11614:	call	0xa820
0x11619:	mov	rdi, rbx
0x1161c:	call	0x18d10
0x11621:	jmp	0x11520
0x11626:	nop	word ptr cs:[rax + rax]
0x11630:	mov	eax, dword ptr [rsp + 0x58]
0x11634:	and	eax, 0xf000
0x11639:	cmp	eax, 0x4000
0x1163e:	jne	0x113c0
0x11644:	mov	r14, qword ptr [rsp + 8]
0x11649:	mov	rdi, r14
0x1164c:	call	0x49b0
0x11651:	mov	rdi, qword ptr [rsp + 0x18]
0x11656:	lea	rsi, [r13 + rax + 2]
0x1165b:	call	0x1d690
0x11660:	mov	rdi, rax
0x11663:	mov	r15, rax
0x11666:	mov	qword ptr [rsp + 0x18], rax
0x1166b:	call	0x49b0
0x11670:	mov	rsi, r14
0x11673:	mov	byte ptr [r15 + rax], 0x2f
0x11678:	lea	rdi, [r15 + rax + 1]
0x1167d:	call	0x48b0
0x11682:	jmp	0x113c0
0x11687:	nop	word ptr [rax + rax]
0x11690:	mov	dword ptr [rip + 0x1a416], 0
0x1169a:	xor	eax, eax
0x1169c:	call	0xc8c0
0x116a1:	mov	edx, 4
0x116a6:	lea	rsi, [rip + 0xee85]
0x116ad:	lea	rdi, [rip + 0xfb45]
0x116b4:	mov	qword ptr [rsp + 0x20], rax
0x116b9:	call	0x8070
0x116be:	mov	rdi, qword ptr [rsp + 0x20]
0x116c3:	mov	ebx, eax
0x116c5:	call	0xc970
0x116ca:	xor	eax, eax
0x116cc:	and	ebx, 0xffffffdf
0x116cf:	call	0xd870
0x116d4:	xor	eax, eax
0x116d6:	call	0xd740
0x116db:	xor	eax, eax
0x116dd:	call	0xa820
0x116e2:	cmp	bl, 0x4e
0x116e5:	je	0x11550
0x116eb:	mov	edi, r15d
0x116ee:	call	0x4ab0
0x116f3:	mov	edi, dword ptr [rsp + 0x28]
0x116f7:	call	0x4ab0
0x116fc:	mov	rdi, qword ptr [rsp + 0x18]
0x11701:	lea	rsi, [rsp + 0xd0]
0x11709:	call	0x18f40
0x1170e:	test	eax, eax
0x11710:	jne	0x11729
0x11712:	mov	eax, dword ptr [rsp + 0xe8]
0x11719:	and	eax, 0xf000
0x1171e:	cmp	eax, 0x8000
0x11723:	je	0x11ced
0x11729:	mov	rdi, r14
0x1172c:	mov	r13d, 2
0x11732:	call	0x18d10
0x11737:	mov	rdi, qword ptr [rsp + 0x18]
0x1173c:	call	0x18d10
0x11741:	nop	dword ptr [rax]
0x11748:	mov	rax, qword ptr [rsp + 0x168]
0x11750:	sub	rax, qword ptr fs:[0x28]
0x11759:	jne	0x11cfc
0x1175f:	add	rsp, 0x178
0x11766:	mov	eax, r13d
0x11769:	pop	rbx
0x1176a:	pop	rbp
0x1176b:	pop	r12
0x1176d:	pop	r13
0x1176f:	pop	r14
0x11771:	pop	r15
0x11773:	ret	
0x11774:	nop	dword ptr [rax]
0x11778:	mov	dword ptr [rip + 0x1a32e], 0
0x11782:	xor	eax, eax
0x11784:	call	0xc8c0
0x11789:	mov	edx, 4
0x1178e:	lea	rsi, [rip + 0xed9d]
0x11795:	lea	rdi, [rip + 0xfa5d]
0x1179c:	mov	qword ptr [rsp + 0x20], rax
0x117a1:	call	0x8070
0x117a6:	mov	rdi, qword ptr [rsp + 0x20]
0x117ab:	mov	ebp, eax
0x117ad:	call	0xc970
0x117b2:	xor	eax, eax
0x117b4:	and	ebp, 0xffffffdf
0x117b7:	call	0xd870
0x117bc:	xor	eax, eax
0x117be:	call	0xd740
0x117c3:	xor	eax, eax
0x117c5:	call	0xa820
0x117ca:	cmp	bpl, 0x4e
0x117ce:	je	0x11591
0x117d4:	jmp	0x116eb
0x117d9:	nop	dword ptr [rax]
0x117e0:	cmp	r13, 0x1869f
0x117e7:	jle	0x119f0
0x117ed:	mov	rax, rbp
0x117f0:	cqo	
0x117f2:	idiv	qword ptr [rsp + 0x38]
0x117f7:	mov	r8, rax
0x117fa:	mov	r9, qword ptr [rsp + 8]
0x117ff:	mov	esi, 1
0x11804:	mov	rdi, rbx
0x11807:	xor	eax, eax
0x11809:	lea	rcx, [rip + 0xfa4b]
0x11810:	mov	rdx, -1
0x11817:	call	0x4f10
0x1181c:	jmp	0x11600
0x11821:	nop	dword ptr [rax]
0x11828:	lea	rsi, [rsp + 0x40]
0x1182d:	mov	rdi, r14
0x11830:	call	0x18f40
0x11835:	test	eax, eax
0x11837:	jne	0x118c3
0x1183d:	mov	eax, dword ptr [rsp + 0x58]
0x11841:	mov	r13d, 0xb
0x11847:	and	eax, 0xf000
0x1184c:	cmp	eax, 0x4000
0x11851:	jne	0x11748
0x11857:	mov	rdi, r14
0x1185a:	call	0x49b0
0x1185f:	mov	r15, qword ptr [rsp + 8]
0x11864:	mov	rbx, rax
0x11867:	mov	rdi, r15
0x1186a:	call	0x49b0
0x1186f:	lea	rdi, [rbx + rax + 2]
0x11874:	call	0x1d670
0x11879:	mov	r9, r15
0x1187c:	mov	r8, r14
0x1187f:	mov	esi, 1
0x11884:	mov	rdi, rax
0x11887:	mov	r12, rax
0x1188a:	xor	eax, eax
0x1188c:	mov	rdx, -1
0x11893:	lea	rcx, [rip + 0xee67]
0x1189a:	call	0x4f10
0x1189f:	mov	edi, dword ptr [rbp + 0x90]
0x118a5:	test	edi, edi
0x118a7:	je	0x118bb
0x118a9:	xor	esi, esi
0x118ab:	mov	rdi, r12
0x118ae:	call	0x4d90
0x118b3:	test	eax, eax
0x118b5:	je	0x11cbb
0x118bb:	mov	rdi, r12
0x118be:	call	0x18d10
0x118c3:	mov	r15, qword ptr [rsp + 8]
0x118c8:	mov	r13d, 6
0x118ce:	mov	rdi, r15
0x118d1:	call	0x49b0
0x118d6:	mov	rdi, r14
0x118d9:	mov	rbx, rax
0x118dc:	call	0x49b0
0x118e1:	lea	rdi, [rbx + rax + 0x21]
0x118e6:	call	0x1d670
0x118eb:	mov	rdi, r14
0x118ee:	mov	r12, rax
0x118f1:	call	0x190c0
0x118f6:	cmp	byte ptr [rax], 0
0x118f9:	je	0x11748
0x118ff:	mov	rdi, r15
0x11902:	call	0x49b0
0x11907:	mov	rdi, r14
0x1190a:	mov	rbx, rax
0x1190d:	call	0x49b0
0x11912:	lea	rdi, [rbx + rax + 0x20]
0x11917:	call	0x1d670
0x1191c:	mov	r9, r14
0x1191f:	mov	r8, r15
0x11922:	mov	esi, 1
0x11927:	lea	rcx, [rip + 0xf8ed]
0x1192e:	mov	r13, rax
0x11931:	mov	rdi, rax
0x11934:	xor	eax, eax
0x11936:	mov	rdx, -1
0x1193d:	call	0x4f10
0x11942:	mov	edx, 1
0x11947:	mov	esi, 1
0x1194c:	mov	rdi, r13
0x1194f:	call	0xe480
0x11954:	xor	eax, eax
0x11956:	call	0xa820
0x1195b:	mov	rdi, r13
0x1195e:	mov	r13d, 0xc
0x11964:	call	0x18d10
0x11969:	mov	r9, r14
0x1196c:	mov	r8, r15
0x1196f:	mov	esi, 1
0x11974:	lea	rcx, [rip + 0xf8a7]
0x1197b:	mov	rdx, -1
0x11982:	mov	rdi, r12
0x11985:	xor	eax, eax
0x11987:	call	0x4f10
0x1198c:	mov	esi, 1
0x11991:	mov	rdi, r12
0x11994:	call	0x193f0
0x11999:	mov	rdi, r12
0x1199c:	mov	ebx, eax
0x1199e:	call	0x18d10
0x119a3:	mov	rdi, qword ptr [rbp + 0x18]
0x119a7:	call	0xc4b0
0x119ac:	mov	eax, ebx
0x119ae:	and	eax, 0x7f
0x119b1:	add	eax, 1
0x119b4:	cmp	al, 1
0x119b6:	jg	0x11748
0x119bc:	mov	r13d, 1
0x119c2:	test	bl, 0x7f
0x119c5:	jne	0x11748
0x119cb:	and	bh, 0xff
0x119ce:	je	0x11748
0x119d4:	lea	rdi, [rip + 0xf857]
0x119db:	mov	r13d, 9
0x119e1:	call	0x195e0
0x119e6:	jmp	0x11748
0x119eb:	nop	dword ptr [rax + rax]
0x119f0:	lea	rax, [rbp + rbp*4]
0x119f5:	lea	r8, [rax + rax*4]
0x119f9:	shl	r8, 2
0x119fd:	mov	rax, r8
0x11a00:	cqo	
0x11a02:	idiv	r13
0x11a05:	mov	r8, rax
0x11a08:	jmp	0x117fa
0x11a0d:	nop	dword ptr [rax]
0x11a10:	mov	rdi, qword ptr [rsp + 8]
0x11a15:	lea	rsi, [rsp + 0xd0]
0x11a1d:	call	0x18f40
0x11a22:	cmp	eax, -1
0x11a25:	je	0x11393
0x11a2b:	mov	ebx, dword ptr [rsp + 0xe8]
0x11a32:	mov	r12d, ebx
0x11a35:	and	r12d, 0xf000
0x11a3c:	jmp	0x11386
0x11a41:	nop	dword ptr [rax]
0x11a48:	mov	r8, qword ptr [rsp + 8]
0x11a4d:	lea	rcx, [rip + 0xf7e1]
0x11a54:	jmp	0x11423
0x11a59:	nop	dword ptr [rax]
0x11a60:	call	0xe4e0
0x11a65:	mov	rsi, r13
0x11a68:	xor	eax, eax
0x11a6a:	mov	rdi, rbp
0x11a6d:	call	0x11220
0x11a72:	mov	r13d, eax
0x11a75:	xor	eax, eax
0x11a77:	call	0xa820
0x11a7c:	test	r13d, r13d
0x11a7f:	je	0x113f4
0x11a85:	jmp	0x11748
0x11a8a:	nop	word ptr [rax + rax]
0x11a90:	mov	r13d, 4
0x11a96:	jmp	0x11748
0x11a9b:	nop	dword ptr [rax + rax]
0x11aa0:	call	0x49e0
0x11aa5:	test	eax, eax
0x11aa7:	je	0x11c90
0x11aad:	mov	edi, r15d
0x11ab0:	mov	r13d, 1
0x11ab6:	call	0x4ab0
0x11abb:	mov	edi, dword ptr [rsp + 0x28]
0x11abf:	call	0x4ab0
0x11ac4:	mov	rdi, r14
0x11ac7:	call	0x18d10
0x11acc:	mov	rdi, qword ptr [rsp + 0x18]
0x11ad1:	call	0x18d10
0x11ad6:	jmp	0x11748
0x11adb:	nop	dword ptr [rax + rax]
0x11ae0:	call	0x4ab0
0x11ae5:	mov	rdi, qword ptr [rsp + 0x18]
0x11aea:	mov	r13d, 6
0x11af0:	call	0x18d10
0x11af5:	jmp	0x11748
0x11afa:	nop	word ptr [rax + rax]
0x11b00:	movabs	r13, 0x7fffffffffffffff
0x11b0a:	mov	edi, 0x8000
0x11b0f:	call	0x1d670
0x11b14:	mov	qword ptr [rsp + 0x10], 0x8000
0x11b1d:	mov	r14, rax
0x11b20:	movabs	rax, 0x147ae147ae147ae
0x11b2a:	mov	qword ptr [rsp + 0x38], rax
0x11b2f:	jmp	0x11519
0x11b34:	nop	dword ptr [rax]
0x11b38:	mov	edi, r15d
0x11b3b:	call	0x182f0
0x11b40:	mov	qword ptr [rsp + 0x10], rax
0x11b45:	mov	r13, rax
0x11b48:	jmp	0x114b7
0x11b4d:	nop	dword ptr [rax]
0x11b50:	mov	dword ptr [rsp + 8], eax
0x11b54:	call	0x4860
0x11b59:	mov	edi, r15d
0x11b5c:	mov	ebx, dword ptr [rax]
0x11b5e:	call	0x4ab0
0x11b63:	mov	edi, dword ptr [rsp + 0x28]
0x11b67:	call	0x4ab0
0x11b6c:	mov	rdi, qword ptr [rsp + 0x18]
0x11b71:	lea	rsi, [rsp + 0xd0]
0x11b79:	call	0x18f40
0x11b7e:	mov	edx, dword ptr [rsp + 8]
0x11b82:	test	eax, eax
0x11b84:	jne	0x11bb0
0x11b86:	mov	eax, dword ptr [rsp + 0xe8]
0x11b8d:	and	eax, 0xf000
0x11b92:	cmp	eax, 0x8000
0x11b97:	jne	0x11bb0
0x11b99:	mov	rdi, qword ptr [rsp + 0x18]
0x11b9e:	call	0x4870
0x11ba3:	mov	edx, dword ptr [rsp + 8]
0x11ba7:	nop	word ptr [rax + rax]
0x11bb0:	mov	rdi, r14
0x11bb3:	mov	dword ptr [rsp + 8], edx
0x11bb7:	call	0x18d10
0x11bbc:	mov	rdi, qword ptr [rsp + 0x18]
0x11bc1:	call	0x18d10
0x11bc6:	mov	edx, dword ptr [rsp + 8]
0x11bca:	cmp	ebx, 0x1c
0x11bcd:	sete	r13b
0x11bd1:	test	edx, edx
0x11bd3:	setg	al
0x11bd6:	or	r13d, eax
0x11bd9:	movzx	r13d, r13b
0x11bdd:	add	r13d, 7
0x11be1:	jmp	0x11748
0x11be6:	nop	word ptr cs:[rax + rax]
0x11bf0:	mov	edi, r15d
0x11bf3:	call	0x4ab0
0x11bf8:	mov	edi, dword ptr [rsp + 0x28]
0x11bfc:	call	0x4ab0
0x11c01:	mov	rdi, qword ptr [rsp + 0x18]
0x11c06:	lea	rsi, [rsp + 0xd0]
0x11c0e:	call	0x18f40
0x11c13:	test	eax, eax
0x11c15:	jne	0x11c38
0x11c17:	mov	eax, dword ptr [rsp + 0xe8]
0x11c1e:	and	eax, 0xf000
0x11c23:	cmp	eax, 0x8000
0x11c28:	jne	0x11c38
0x11c2a:	mov	rdi, qword ptr [rsp + 0x18]
0x11c2f:	call	0x4870
0x11c34:	nop	dword ptr [rax]
0x11c38:	mov	rdi, r14
0x11c3b:	mov	r13d, 5
0x11c41:	call	0x18d10
0x11c46:	mov	rdi, qword ptr [rsp + 0x18]
0x11c4b:	call	0x18d10
0x11c50:	jmp	0x11748
0x11c55:	nop	dword ptr [rax]
0x11c58:	call	0x49e0
0x11c5d:	test	eax, eax
0x11c5f:	je	0x11ca7
0x11c61:	mov	edi, r15d
0x11c64:	mov	r13d, 1
0x11c6a:	call	0x4ab0
0x11c6f:	mov	edi, dword ptr [rsp + 0x28]
0x11c73:	call	0x4ab0
0x11c78:	mov	rdi, qword ptr [rsp + 0x18]
0x11c7d:	call	0x18d10
0x11c82:	jmp	0x11748
0x11c87:	nop	word ptr [rax + rax]
0x11c90:	mov	edx, dword ptr [rsp + 0x34]
0x11c94:	mov	esi, dword ptr [rsp + 0x30]
0x11c98:	mov	rdi, qword ptr [rsp + 0x18]
0x11c9d:	call	0x4cc0
0x11ca2:	jmp	0x11aad
0x11ca7:	mov	edx, dword ptr [rsp + 0x34]
0x11cab:	mov	esi, dword ptr [rsp + 0x30]
0x11caf:	mov	rdi, qword ptr [rsp + 0x18]
0x11cb4:	call	0x4cc0
0x11cb9:	jmp	0x11c61
0x11cbb:	call	0xe4e0
0x11cc0:	mov	rdi, rbp
0x11cc3:	mov	rsi, r12
0x11cc6:	xor	eax, eax
0x11cc8:	call	0x11220
0x11ccd:	mov	r13d, eax
0x11cd0:	xor	eax, eax
0x11cd2:	call	0xa820
0x11cd7:	mov	rdi, r12
0x11cda:	call	0x18d10
0x11cdf:	test	r13d, r13d
0x11ce2:	je	0x118c3
0x11ce8:	jmp	0x11748
0x11ced:	mov	rdi, qword ptr [rsp + 0x18]
0x11cf2:	call	0x4870
0x11cf7:	jmp	0x11729
0x11cfc:	call	0x49d0
0x11d01:	nop	word ptr cs:[rax + rax]
0x11d0c:	nop	dword ptr [rax]
0x11d10:	endbr64	
0x11d14:	push	r15
0x11d16:	and	ecx, 0xf000
0x11d1c:	push	r14
0x11d1e:	mov	r14, rdi
0x11d21:	push	r13
0x11d23:	push	r12
0x11d25:	mov	r12, rdx
0x11d28:	push	rbp
0x11d29:	mov	rbp, rsi
0x11d2c:	push	rbx
0x11d2d:	sub	rsp, 0x148
0x11d34:	mov	rax, qword ptr fs:[0x28]
0x11d3d:	mov	qword ptr [rsp + 0x138], rax
0x11d45:	xor	eax, eax
0x11d47:	cmp	ecx, 0x4000
0x11d4d:	je	0x11f20
0x11d53:	mov	rdi, rdx
0x11d56:	lea	rbx, [rsp + 0x10]
0x11d5b:	call	0x49b0
0x11d60:	mov	rdi, r12
0x11d63:	mov	r13, rax
0x11d66:	call	0x1d7a0
0x11d6b:	mov	rsi, rbx
0x11d6e:	mov	rdi, rax
0x11d71:	mov	r12, rax
0x11d74:	call	0x18f40
0x11d79:	test	eax, eax
0x11d7b:	je	0x11ed0
0x11d81:	mov	rdi, r12
0x11d84:	call	0x190c0
0x11d89:	cmp	byte ptr [rax], 0
0x11d8c:	mov	r15, rax
0x11d8f:	je	0x12170
0x11d95:	cmp	r12, rax
0x11d98:	je	0x120e8
0x11d9e:	mov	edx, dword ptr [r14 + 0x90]
0x11da5:	test	edx, edx
0x11da7:	je	0x11dbb
0x11da9:	xor	esi, esi
0x11dab:	mov	rdi, r12
0x11dae:	call	0x4d90
0x11db3:	test	eax, eax
0x11db5:	je	0x12140
0x11dbb:	mov	rdi, rbp
0x11dbe:	call	0x49b0
0x11dc3:	lea	rdi, [rax + 0x20]
0x11dc7:	call	0x1d670
0x11dcc:	mov	r8, rbp
0x11dcf:	mov	esi, 1
0x11dd4:	lea	rcx, [rip + 0xf4c2]
0x11ddb:	mov	r13, rax
0x11dde:	mov	rdi, rax
0x11de1:	mov	rdx, -1
0x11de8:	xor	eax, eax
0x11dea:	call	0x4f10
0x11def:	mov	edx, 1
0x11df4:	mov	esi, 1
0x11df9:	mov	rdi, r13
0x11dfc:	call	0xe480
0x11e01:	xor	eax, eax
0x11e03:	call	0xa820
0x11e08:	mov	rdi, r13
0x11e0b:	mov	r13d, 6
0x11e11:	call	0x18d10
0x11e16:	lea	rsi, [rsp + 0xa0]
0x11e1e:	mov	rdi, rbp
0x11e21:	call	0x18f40
0x11e26:	cmp	eax, -1
0x11e29:	je	0x11ea1
0x11e2b:	mov	rsi, rbx
0x11e2e:	mov	rdi, r12
0x11e31:	call	0x18f40
0x11e36:	cmp	eax, -1
0x11e39:	je	0x121c8
0x11e3f:	mov	rax, qword ptr [rsp + 0xa0]
0x11e47:	cmp	qword ptr [rsp + 0x10], rax
0x11e4c:	jne	0x11e5a
0x11e4e:	mov	eax, dword ptr [r14 + 0x10]
0x11e52:	test	eax, eax
0x11e54:	je	0x12188
0x11e5a:	mov	r9d, dword ptr [rsp + 0xc0]
0x11e62:	mov	rdx, r12
0x11e65:	mov	rsi, rbp
0x11e68:	xor	eax, eax
0x11e6a:	mov	r8d, dword ptr [rsp + 0xbc]
0x11e72:	mov	ecx, dword ptr [rsp + 0xb8]
0x11e79:	mov	rdi, r14
0x11e7c:	call	0x11330
0x11e81:	mov	r13d, eax
0x11e84:	cmp	eax, 3
0x11e87:	je	0x11ea1
0x11e89:	jg	0x120d0
0x11e8f:	cmp	eax, 1
0x11e92:	je	0x121a8
0x11e98:	cmp	eax, 2
0x11e9b:	jne	0x12210
0x11ea1:	mov	rax, qword ptr [rsp + 0x138]
0x11ea9:	sub	rax, qword ptr fs:[0x28]
0x11eb2:	jne	0x122c1
0x11eb8:	add	rsp, 0x148
0x11ebf:	mov	eax, r13d
0x11ec2:	pop	rbx
0x11ec3:	pop	rbp
0x11ec4:	pop	r12
0x11ec6:	pop	r13
0x11ec8:	pop	r14
0x11eca:	pop	r15
0x11ecc:	ret	
0x11ecd:	nop	dword ptr [rax]
0x11ed0:	mov	eax, dword ptr [rsp + 0x28]
0x11ed4:	and	eax, 0xf000
0x11ed9:	cmp	eax, 0x4000
0x11ede:	jne	0x11d81
0x11ee4:	mov	rdi, rbp
0x11ee7:	call	0x49b0
0x11eec:	mov	rdi, r12
0x11eef:	lea	rsi, [r13 + rax + 2]
0x11ef4:	call	0x1d690
0x11ef9:	mov	rdi, rax
0x11efc:	mov	r12, rax
0x11eff:	call	0x49b0
0x11f04:	mov	rsi, rbp
0x11f07:	mov	byte ptr [r12 + rax], 0x2f
0x11f0c:	lea	rdi, [r12 + rax + 1]
0x11f11:	call	0x48b0
0x11f16:	jmp	0x11d81
0x11f1b:	nop	dword ptr [rax + rax]
0x11f20:	lea	rsi, [rsp + 0x10]
0x11f25:	mov	rdi, rdx
0x11f28:	call	0x18f40
0x11f2d:	test	eax, eax
0x11f2f:	jne	0x11fb7
0x11f35:	mov	eax, dword ptr [rsp + 0x28]
0x11f39:	mov	r13d, 9
0x11f3f:	and	eax, 0xf000
0x11f44:	cmp	eax, 0x4000
0x11f49:	jne	0x11ea1
0x11f4f:	mov	rdi, r12
0x11f52:	call	0x49b0
0x11f57:	mov	rdi, rbp
0x11f5a:	mov	rbx, rax
0x11f5d:	call	0x49b0
0x11f62:	lea	rdi, [rbx + rax + 2]
0x11f67:	call	0x1d670
0x11f6c:	mov	esi, 1
0x11f71:	mov	r9, rbp
0x11f74:	mov	r8, r12
0x11f77:	mov	rdi, rax
0x11f7a:	mov	r15, rax
0x11f7d:	xor	eax, eax
0x11f7f:	mov	rdx, -1
0x11f86:	lea	rcx, [rip + 0xe774]
0x11f8d:	call	0x4f10
0x11f92:	mov	esi, dword ptr [r14 + 0x90]
0x11f99:	test	esi, esi
0x11f9b:	je	0x11faf
0x11f9d:	xor	esi, esi
0x11f9f:	mov	rdi, r15
0x11fa2:	call	0x4d90
0x11fa7:	test	eax, eax
0x11fa9:	je	0x12278
0x11faf:	mov	rdi, r15
0x11fb2:	call	0x18d10
0x11fb7:	mov	rdi, rbp
0x11fba:	call	0x49b0
0x11fbf:	mov	rdi, r12
0x11fc2:	mov	rbx, rax
0x11fc5:	call	0x49b0
0x11fca:	lea	rdi, [rbx + rax + 0x21]
0x11fcf:	call	0x1d670
0x11fd4:	mov	rdi, r12
0x11fd7:	mov	r13, rax
0x11fda:	call	0x190c0
0x11fdf:	cmp	byte ptr [rax], 0
0x11fe2:	je	0x12178
0x11fe8:	mov	rdi, rbp
0x11feb:	call	0x49b0
0x11ff0:	mov	rdi, r12
0x11ff3:	mov	rbx, rax
0x11ff6:	call	0x49b0
0x11ffb:	lea	rdi, [rbx + rax + 0x20]
0x12000:	call	0x1d670
0x12005:	mov	r9, r12
0x12008:	mov	r8, rbp
0x1200b:	mov	esi, 1
0x12010:	lea	rcx, [rip + 0xf26c]
0x12017:	mov	r15, rax
0x1201a:	mov	rdi, rax
0x1201d:	xor	eax, eax
0x1201f:	mov	rdx, -1
0x12026:	call	0x4f10
0x1202b:	mov	edx, 1
0x12030:	mov	esi, 1
0x12035:	mov	rdi, r15
0x12038:	call	0xe480
0x1203d:	xor	eax, eax
0x1203f:	call	0xa820
0x12044:	mov	rdi, r15
0x12047:	call	0x18d10
0x1204c:	mov	r9, r12
0x1204f:	mov	r8, rbp
0x12052:	mov	rdi, r13
0x12055:	lea	rcx, [rip + 0xf22e]
0x1205c:	mov	rdx, -1
0x12063:	mov	esi, 1
0x12068:	xor	eax, eax
0x1206a:	call	0x4f10
0x1206f:	mov	esi, 1
0x12074:	mov	rdi, r13
0x12077:	call	0x193f0
0x1207c:	mov	rdi, r13
0x1207f:	mov	r13d, 0xc
0x12085:	mov	ebx, eax
0x12087:	call	0x18d10
0x1208c:	mov	rdi, qword ptr [r14 + 0x18]
0x12090:	call	0xc4b0
0x12095:	mov	eax, ebx
0x12097:	and	eax, 0x7f
0x1209a:	add	eax, 1
0x1209d:	cmp	al, 1
0x1209f:	jg	0x11ea1
0x120a5:	mov	r13d, 8
0x120ab:	test	bl, 0x7f
0x120ae:	jne	0x11ea1
0x120b4:	and	bh, 0xff
0x120b7:	jne	0x122b0
0x120bd:	mov	r13d, 1
0x120c3:	jmp	0x11ea1
0x120c8:	nop	dword ptr [rax + rax]
0x120d0:	cmp	eax, 8
0x120d3:	jne	0x12210
0x120d9:	mov	r13d, 0xa
0x120df:	jmp	0x11ea1
0x120e4:	nop	dword ptr [rax]
0x120e8:	mov	rdi, r12
0x120eb:	call	0x49b0
0x120f0:	lea	rdi, [rax + 3]
0x120f4:	mov	r13, rax
0x120f7:	call	0x1d670
0x120fc:	mov	ecx, 0x2f2e
0x12101:	lea	rdx, [r13 + 1]
0x12105:	mov	rsi, r15
0x12108:	mov	word ptr [rax], cx
0x1210b:	lea	rcx, [rax + 2]
0x1210f:	mov	r12, rax
0x12112:	mov	rdi, rcx
0x12115:	mov	qword ptr [rsp + 8], rcx
0x1211a:	call	0x4bb0
0x1211f:	mov	rdi, r15
0x12122:	call	0x18d10
0x12127:	mov	edx, dword ptr [r14 + 0x90]
0x1212e:	mov	r15, qword ptr [rsp + 8]
0x12133:	test	edx, edx
0x12135:	jne	0x11da9
0x1213b:	jmp	0x11dbb
0x12140:	call	0xe4e0
0x12145:	xor	eax, eax
0x12147:	mov	rsi, r15
0x1214a:	mov	rdi, r14
0x1214d:	call	0x11220
0x12152:	mov	r13d, eax
0x12155:	xor	eax, eax
0x12157:	call	0xa820
0x1215c:	test	r13d, r13d
0x1215f:	je	0x11dbb
0x12165:	jmp	0x11ea1
0x1216a:	nop	word ptr [rax + rax]
0x12170:	mov	rdi, r12
0x12173:	call	0x18d10
0x12178:	mov	r13d, 4
0x1217e:	jmp	0x11ea1
0x12183:	nop	dword ptr [rax + rax]
0x12188:	xor	eax, eax
0x1218a:	call	0x18ab0
0x1218f:	mov	eax, dword ptr [rsp + 0x28]
0x12193:	and	eax, 0xf000
0x12198:	sub	eax, 0x4000
0x1219d:	test	eax, 0xffffb000
0x121a2:	je	0x12250
0x121a8:	mov	rdi, rbp
0x121ab:	mov	r13d, 5
0x121b1:	call	0x4870
0x121b6:	cmp	eax, -1
0x121b9:	jne	0x120bd
0x121bf:	jmp	0x11ea1
0x121c4:	nop	dword ptr [rax]
0x121c8:	movzx	r13d, byte ptr [r15 - 1]
0x121cd:	mov	byte ptr [r15 - 1], 0
0x121d2:	mov	rsi, rbx
0x121d5:	cmp	byte ptr [r12], 0
0x121da:	je	0x12200
0x121dc:	mov	rdi, r12
0x121df:	call	0x18f40
0x121e4:	mov	byte ptr [r15 - 1], r13b
0x121e8:	cmp	eax, -1
0x121eb:	jne	0x11e3f
0x121f1:	mov	r13d, 7
0x121f7:	jmp	0x11ea1
0x121fc:	nop	dword ptr [rax]
0x12200:	lea	rdi, [rip + 0xf0a0]
0x12207:	call	0x18f40
0x1220c:	jmp	0x121e4
0x1220e:	nop	
0x12210:	sub	r13d, 1
0x12214:	lea	rax, [rip + 0x18205]
0x1221b:	xor	ecx, ecx
0x1221d:	mov	rsi, rbp
0x12220:	movsxd	r13, r13d
0x12223:	mov	r8d, 0xe
0x12229:	lea	rdi, [rip + 0xf079]
0x12230:	mov	rdx, qword ptr [rax + r13*8]
0x12234:	xor	eax, eax
0x12236:	mov	r13d, 0xb
0x1223c:	call	0xf7e0
0x12241:	jmp	0x11ea1
0x12246:	nop	word ptr cs:[rax + rax]
0x12250:	mov	rdi, r12
0x12253:	call	0x4870
0x12258:	mov	rsi, r12
0x1225b:	mov	rdi, rbp
0x1225e:	call	0x4e10
0x12263:	cmp	eax, -1
0x12266:	jne	0x121a8
0x1226c:	jmp	0x12178
0x12271:	nop	dword ptr [rax]
0x12278:	call	0xe4e0
0x1227d:	mov	rdi, r14
0x12280:	mov	rsi, r15
0x12283:	xor	eax, eax
0x12285:	call	0x11220
0x1228a:	mov	r13d, eax
0x1228d:	xor	eax, eax
0x1228f:	call	0xa820
0x12294:	mov	rdi, r15
0x12297:	call	0x18d10
0x1229c:	test	r13d, r13d
0x1229f:	je	0x11fb7
0x122a5:	jmp	0x11ea1
0x122aa:	nop	word ptr [rax + rax]
0x122b0:	lea	rdi, [rip + 0xefe3]
0x122b7:	call	0x195e0
0x122bc:	jmp	0x11ea1
0x122c1:	call	0x49d0
0x122c6:	nop	word ptr cs:[rax + rax]
0x122d0:	endbr64	
0x122d4:	push	r15
0x122d6:	push	r14
0x122d8:	push	r13
0x122da:	mov	r13, rsi
0x122dd:	push	r12
0x122df:	mov	r12, rdi
0x122e2:	mov	rdi, rsi
0x122e5:	push	rbp
0x122e6:	push	rbx
0x122e7:	sub	rsp, 0x18
0x122eb:	call	0x49b0
0x122f0:	lea	rdi, [rax + 1]
0x122f4:	mov	rbx, rax
0x122f7:	call	0x1d670
0x122fc:	movsxd	r14, dword ptr [r12 + 0x30]
0x12301:	mov	rsi, r13
0x12304:	mov	rbp, rax
0x12307:	mov	rdi, rax
0x1230a:	cmp	r14, rbx
0x1230d:	cmova	r14, rbx
0x12311:	mov	rdx, r14
0x12314:	call	0x4880
0x12319:	mov	byte ptr [rbp + r14], 0
0x1231f:	mov	ebx, dword ptr [r12 + 0x68]
0x12324:	test	ebx, ebx
0x12326:	jle	0x12450
0x1232c:	mov	r15, qword ptr [r12 + 0x38]
0x12331:	xor	r12d, r12d
0x12334:	mov	qword ptr [rsp + 8], r15
0x12339:	mov	r13, r15
0x1233c:	jmp	0x1234d
0x1233e:	nop	
0x12340:	add	r12d, 1
0x12344:	add	r15, 0x50
0x12348:	cmp	ebx, r12d
0x1234b:	je	0x12380
0x1234d:	mov	rsi, qword ptr [r15]
0x12350:	mov	rdi, rbp
0x12353:	call	0x4b30
0x12358:	test	eax, eax
0x1235a:	jne	0x12340
0x1235c:	mov	rdi, rbp
0x1235f:	call	0x18d10
0x12364:	add	rsp, 0x18
0x12368:	mov	eax, r12d
0x1236b:	pop	rbx
0x1236c:	pop	rbp
0x1236d:	pop	r12
0x1236f:	pop	r13
0x12371:	pop	r14
0x12373:	pop	r15
0x12375:	ret	
0x12376:	nop	word ptr cs:[rax + rax]
0x12380:	xor	r12d, r12d
0x12383:	jmp	0x12395
0x12385:	nop	dword ptr [rax]
0x12388:	add	r12d, 1
0x1238c:	add	r13, 0x50
0x12390:	cmp	ebx, r12d
0x12393:	je	0x123b0
0x12395:	mov	rsi, qword ptr [r13]
0x12399:	mov	rdi, rbp
0x1239c:	call	0x4830
0x123a1:	test	eax, eax
0x123a3:	jne	0x12388
0x123a5:	cmp	ebx, r12d
0x123a8:	jne	0x1235c
0x123aa:	nop	word ptr [rax + rax]
0x123b0:	mov	r15, qword ptr [rsp + 8]
0x123b5:	xor	r12d, r12d
0x123b8:	jmp	0x123cd
0x123ba:	nop	word ptr [rax + rax]
0x123c0:	add	r12d, 1
0x123c4:	add	r15, 0x50
0x123c8:	cmp	r12d, ebx
0x123cb:	je	0x12400
0x123cd:	mov	r13, qword ptr [r15]
0x123d0:	mov	rdi, r13
0x123d3:	call	0x49b0
0x123d8:	mov	rsi, r13
0x123db:	mov	rdi, rbp
0x123de:	cmp	rax, r14
0x123e1:	cmova	rax, r14
0x123e5:	mov	rdx, rax
0x123e8:	call	0x4890
0x123ed:	test	eax, eax
0x123ef:	jne	0x123c0
0x123f1:	cmp	r12d, ebx
0x123f4:	jne	0x1235c
0x123fa:	nop	word ptr [rax + rax]
0x12400:	xor	r12d, r12d
0x12403:	jmp	0x1241a
0x12405:	nop	dword ptr [rax]
0x12408:	add	r15, 0x50
0x1240c:	add	r12d, 1
0x12410:	mov	qword ptr [rsp + 8], r15
0x12415:	cmp	r12d, ebx
0x12418:	je	0x12450
0x1241a:	mov	r15, qword ptr [rsp + 8]
0x1241f:	mov	r13, qword ptr [r15]
0x12422:	mov	rdi, r13
0x12425:	call	0x49b0
0x1242a:	mov	rsi, r13
0x1242d:	mov	rdi, rbp
0x12430:	cmp	rax, r14
0x12433:	cmova	rax, r14
0x12437:	mov	rdx, rax
0x1243a:	call	0x4c30
0x1243f:	test	eax, eax
0x12441:	jne	0x12408
0x12443:	cmp	r12d, ebx
0x12446:	jne	0x1235c
0x1244c:	nop	dword ptr [rax]
0x12450:	xor	r12d, r12d
0x12453:	jmp	0x1235c
0x12458:	nop	dword ptr [rax + rax]
0x12460:	endbr64	
0x12464:	sub	rsp, 0xa8
0x1246b:	mov	rax, qword ptr fs:[0x28]
0x12474:	mov	qword ptr [rsp + 0x98], rax
0x1247c:	xor	eax, eax
0x1247e:	mov	rsi, rsp
0x12481:	call	0x4b90
0x12486:	mov	r8d, eax
0x12489:	xor	eax, eax
0x1248b:	test	r8d, r8d
0x1248e:	js	0x124a4
0x12490:	mov	eax, dword ptr [rsp + 0x18]
0x12494:	and	eax, 0xf000
0x12499:	cmp	eax, 0x4000
0x1249e:	sete	al
0x124a1:	movzx	eax, al
0x124a4:	mov	rdx, qword ptr [rsp + 0x98]
0x124ac:	sub	rdx, qword ptr fs:[0x28]
0x124b5:	jne	0x124bf
0x124b7:	add	rsp, 0xa8
0x124be:	ret	
0x124bf:	call	0x49d0
0x124c4:	nop	word ptr cs:[rax + rax]
0x124cf:	nop	
0x124d0:	endbr64	
0x124d4:	push	r13
0x124d6:	push	r12
0x124d8:	mov	r12d, esi
0x124db:	push	rbp
0x124dc:	push	rbx
0x124dd:	sub	rsp, 0xa8
0x124e4:	mov	rax, qword ptr fs:[0x28]
0x124ed:	mov	qword ptr [rsp + 0x98], rax
0x124f5:	xor	eax, eax
0x124f7:	mov	r13, rsp
0x124fa:	call	0x1d7a0
0x124ff:	cmp	byte ptr [rax], 0
0x12502:	mov	rbp, rax
0x12505:	mov	rbx, rax
0x12508:	je	0x12560
0x1250a:	nop	word ptr [rax + rax]
0x12510:	movzx	eax, byte ptr [rbx + 1]
0x12514:	add	rbx, 1
0x12518:	test	al, al
0x1251a:	je	0x12560
0x1251c:	cmp	rbp, rbx
0x1251f:	je	0x12510
0x12521:	cmp	al, 0x2f
0x12523:	jne	0x12510
0x12525:	mov	byte ptr [rbx], 0
0x12528:	mov	rsi, r13
0x1252b:	mov	rdi, rbp
0x1252e:	call	0x4b90
0x12533:	test	eax, eax
0x12535:	js	0x12590
0x12537:	mov	eax, dword ptr [rsp + 0x18]
0x1253b:	and	eax, 0xf000
0x12540:	cmp	eax, 0x4000
0x12545:	jne	0x12590
0x12547:	mov	byte ptr [rbx], 0x2f
0x1254a:	movzx	eax, byte ptr [rbx + 1]
0x1254e:	add	rbx, 1
0x12552:	test	al, al
0x12554:	jne	0x1251c
0x12556:	nop	word ptr cs:[rax + rax]
0x12560:	mov	rdi, rbp
0x12563:	call	0x18d10
0x12568:	xor	eax, eax
0x1256a:	mov	rdx, qword ptr [rsp + 0x98]
0x12572:	sub	rdx, qword ptr fs:[0x28]
0x1257b:	jne	0x125ae
0x1257d:	add	rsp, 0xa8
0x12584:	pop	rbx
0x12585:	pop	rbp
0x12586:	pop	r12
0x12588:	pop	r13
0x1258a:	ret	
0x1258b:	nop	dword ptr [rax + rax]
0x12590:	mov	esi, r12d
0x12593:	mov	rdi, rbp
0x12596:	call	0x48c0
0x1259b:	test	eax, eax
0x1259d:	je	0x12547
0x1259f:	mov	rdi, rbp
0x125a2:	call	0x18d10
0x125a7:	mov	eax, 0xffffffff
0x125ac:	jmp	0x1256a
0x125ae:	call	0x49d0
0x125b3:	nop	word ptr cs:[rax + rax]
0x125be:	nop	
0x125c0:	endbr64	
0x125c4:	push	r15
0x125c6:	movsxd	rsi, esi
0x125c9:	mov	r10, rdx
0x125cc:	movsxd	r8, r8d
0x125cf:	push	r14
0x125d1:	lea	rax, [rsi + rsi*4]
0x125d5:	mov	rsi, rdi
0x125d8:	push	r13
0x125da:	shl	rax, 4
0x125de:	push	r12
0x125e0:	push	rbp
0x125e1:	push	rbx
0x125e2:	sub	rsp, 0x68
0x125e6:	mov	qword ptr [rsp + 0x48], rdi
0x125eb:	mov	rdi, rax
0x125ee:	mov	qword ptr [rsp + 0x50], rax
0x125f3:	add	rax, qword ptr [rsi + 0x38]
0x125f7:	mov	qword ptr [rsp + 0x20], rdx
0x125fc:	mov	rdx, rax
0x125ff:	mov	rax, qword ptr [rax]
0x12602:	mov	qword ptr [rsp + 0x38], rcx
0x12607:	mov	rcx, qword ptr [rcx + 0x38]
0x1260b:	mov	qword ptr [rsp + 0x10], rax
0x12610:	lea	rax, [r8 + r8*4]
0x12614:	shl	rax, 4
0x12618:	mov	qword ptr [rsp + 0x28], r9
0x1261d:	lea	rsi, [rcx + rax]
0x12621:	mov	qword ptr [rsp + 0x58], rax
0x12626:	mov	eax, dword ptr [rdx + 0x10]
0x12629:	mov	ecx, dword ptr [rcx + rdi + 0x10]
0x1262d:	mov	rbx, qword ptr [rsi]
0x12630:	mov	qword ptr [r9], 0
0x12637:	mov	r8d, eax
0x1263a:	mov	qword ptr [r10], 0
0x12641:	mov	edi, ecx
0x12643:	and	r8d, 0xf000
0x1264a:	and	edi, 0xf000
0x12650:	cmp	r8d, 0x4000
0x12657:	je	0x12669
0x12659:	and	eax, 0xd000
0x1265e:	cmp	eax, 0x8000
0x12663:	jne	0x12928
0x12669:	mov	rax, qword ptr [rdx + 8]
0x1266d:	mov	qword ptr [rsp + 8], rax
0x12672:	cmp	edi, 0x4000
0x12678:	je	0x12ac0
0x1267e:	and	ecx, 0xd000
0x12684:	mov	dword ptr [rsp + 0x40], 0
0x1268c:	mov	dword ptr [rsp + 0x44], 1
0x12694:	cmp	ecx, 0x8000
0x1269a:	je	0x12ac0
0x126a0:	cmp	qword ptr [rsp + 8], 0
0x126a6:	je	0x12c90
0x126ac:	mov	r14, qword ptr [rsp + 0x38]
0x126b1:	mov	rdi, qword ptr [r14 + 0x18]
0x126b5:	call	0x49b0
0x126ba:	mov	rdi, rbx
0x126bd:	mov	rbp, rax
0x126c0:	call	0x49b0
0x126c5:	lea	rdi, [rbp + rax + 2]
0x126ca:	call	0x1d670
0x126cf:	mov	r8, qword ptr [r14 + 0x18]
0x126d3:	mov	r9, rbx
0x126d6:	lea	rcx, [rip + 0xe024]
0x126dd:	mov	rdx, -1
0x126e4:	mov	esi, 1
0x126e9:	mov	rdi, rax
0x126ec:	mov	r12, rax
0x126ef:	xor	eax, eax
0x126f1:	call	0x4f10
0x126f6:	mov	rbx, qword ptr [rsp + 0x10]
0x126fb:	mov	rdi, rbx
0x126fe:	call	0x49b0
0x12703:	lea	rdi, [rax + 0x21]
0x12707:	call	0x1d670
0x1270c:	mov	r8, rbx
0x1270f:	mov	esi, 1
0x12714:	lea	rcx, [rip + 0xebbd]
0x1271b:	mov	rbp, rax
0x1271e:	mov	rdi, rax
0x12721:	mov	rdx, -1
0x12728:	xor	eax, eax
0x1272a:	call	0x4f10
0x1272f:	mov	edx, 1
0x12734:	mov	esi, 1
0x12739:	mov	rdi, rbp
0x1273c:	call	0xe480
0x12741:	xor	eax, eax
0x12743:	call	0xa820
0x12748:	mov	rdi, rbp
0x1274b:	call	0x18d10
0x12750:	mov	rdi, qword ptr [rsp + 0x10]
0x12755:	xor	esi, esi
0x12757:	xor	eax, eax
0x12759:	call	0x4d30
0x1275e:	mov	r15d, eax
0x12761:	cmp	eax, -1
0x12764:	je	0x12c6b
0x1276a:	mov	rdi, r12
0x1276d:	xor	esi, esi
0x1276f:	xor	eax, eax
0x12771:	call	0x4d30
0x12776:	mov	rdi, r12
0x12779:	mov	dword ptr [rsp + 0x1c], eax
0x1277d:	cmp	eax, -1
0x12780:	je	0x12c77
0x12786:	call	0x18d10
0x1278b:	mov	edi, 0x8000
0x12790:	xor	r12d, r12d
0x12793:	call	0x1d670
0x12798:	mov	edi, 0x8000
0x1279d:	mov	rbp, rax
0x127a0:	call	0x1d670
0x127a5:	mov	rdi, qword ptr [rsp + 0x10]
0x127aa:	mov	r13, rax
0x127ad:	call	0x49b0
0x127b2:	lea	rdi, [rax + 0x21]
0x127b6:	call	0x1d670
0x127bb:	mov	dword ptr [rsp + 0x18], r15d
0x127c0:	movabs	rdx, 0xa3d70a3d70a3d70b
0x127ca:	mov	r14, rax
0x127cd:	mov	rax, qword ptr [rsp + 8]
0x127d2:	imul	rdx
0x127d5:	mov	rax, qword ptr [rsp + 8]
0x127da:	add	rdx, rax
0x127dd:	sar	rax, 0x3f
0x127e1:	sar	rdx, 6
0x127e5:	sub	rdx, rax
0x127e8:	mov	qword ptr [rsp + 0x30], rdx
0x127ed:	jmp	0x1282b
0x127ef:	nop	
0x127f0:	mov	r8, qword ptr [rsp + 0x10]
0x127f5:	mov	esi, 1
0x127fa:	mov	rdi, r14
0x127fd:	xor	eax, eax
0x127ff:	lea	rcx, [rip + 0xeab8]
0x12806:	mov	rdx, -1
0x1280d:	call	0x4f10
0x12812:	mov	edx, 1
0x12817:	mov	esi, 1
0x1281c:	mov	rdi, r14
0x1281f:	call	0xe480
0x12824:	xor	eax, eax
0x12826:	call	0xa820
0x1282b:	mov	ecx, dword ptr [rip + 0x1927f]
0x12831:	test	ecx, ecx
0x12833:	jne	0x12a30
0x12839:	mov	edi, 1
0x1283e:	call	0x18b70
0x12843:	mov	edi, dword ptr [rsp + 0x18]
0x12847:	mov	edx, 0x8000
0x1284c:	mov	rsi, rbp
0x1284f:	call	0x47a0
0x12854:	xor	edi, edi
0x12856:	mov	rbx, rax
0x12859:	call	0x18b70
0x1285e:	test	ebx, ebx
0x12860:	js	0x12af0
0x12866:	mov	rcx, qword ptr [rsp + 0x20]
0x1286b:	movsxd	rax, ebx
0x1286e:	mov	edi, 1
0x12873:	add	qword ptr [rcx], rax
0x12876:	call	0x18b70
0x1287b:	mov	edi, dword ptr [rsp + 0x1c]
0x1287f:	mov	edx, 0x8000
0x12884:	mov	rsi, r13
0x12887:	call	0x47a0
0x1288c:	xor	edi, edi
0x1288e:	mov	r15, rax
0x12891:	call	0x18b70
0x12896:	test	r15d, r15d
0x12899:	js	0x12b20
0x1289f:	mov	rax, qword ptr [rsp + 0x28]
0x128a4:	movsxd	rdx, r15d
0x128a7:	add	qword ptr [rax], rdx
0x128aa:	cmp	r15d, ebx
0x128ad:	cmovle	ebx, r15d
0x128b1:	test	ebx, ebx
0x128b3:	je	0x12b40
0x128b9:	movsxd	r15, ebx
0x128bc:	mov	rsi, r13
0x128bf:	mov	rdi, rbp
0x128c2:	mov	rdx, r15
0x128c5:	call	0x4af0
0x128ca:	test	eax, eax
0x128cc:	jne	0x12b70
0x128d2:	add	r12, r15
0x128d5:	cmp	qword ptr [rsp + 8], 0
0x128db:	je	0x127f0
0x128e1:	cmp	qword ptr [rsp + 8], 0x1869f
0x128ea:	jle	0x12a10
0x128f0:	mov	rax, r12
0x128f3:	cqo	
0x128f5:	idiv	qword ptr [rsp + 0x30]
0x128fa:	mov	r8, rax
0x128fd:	mov	r9, qword ptr [rsp + 0x10]
0x12902:	mov	esi, 1
0x12907:	mov	rdi, r14
0x1290a:	xor	eax, eax
0x1290c:	lea	rcx, [rip + 0xe9b4]
0x12913:	mov	rdx, -1
0x1291a:	call	0x4f10
0x1291f:	jmp	0x12812
0x12924:	nop	dword ptr [rax]
0x12928:	cmp	edi, 0x4000
0x1292e:	je	0x129f0
0x12934:	and	ecx, 0xd000
0x1293a:	cmp	ecx, 0x8000
0x12940:	je	0x129f0
0x12946:	mov	r14, qword ptr [rsp + 0x38]
0x1294b:	mov	rdi, qword ptr [r14 + 0x18]
0x1294f:	call	0x49b0
0x12954:	mov	rdi, rbx
0x12957:	mov	rbp, rax
0x1295a:	call	0x49b0
0x1295f:	lea	rdi, [rbp + rax + 2]
0x12964:	call	0x1d670
0x12969:	mov	r8, qword ptr [r14 + 0x18]
0x1296d:	mov	r9, rbx
0x12970:	lea	rcx, [rip + 0xdd8a]
0x12977:	mov	rdx, -1
0x1297e:	mov	esi, 1
0x12983:	mov	rdi, rax
0x12986:	mov	r12, rax
0x12989:	xor	eax, eax
0x1298b:	call	0x4f10
0x12990:	mov	rbx, qword ptr [rsp + 0x10]
0x12995:	mov	rdi, rbx
0x12998:	call	0x49b0
0x1299d:	lea	rdi, [rax + 0x21]
0x129a1:	call	0x1d670
0x129a6:	mov	r8, rbx
0x129a9:	mov	esi, 1
0x129ae:	lea	rcx, [rip + 0xe909]
0x129b5:	mov	rdi, rax
0x129b8:	mov	rbp, rax
0x129bb:	mov	rdx, -1
0x129c2:	xor	eax, eax
0x129c4:	call	0x4f10
0x129c9:	mov	dword ptr [rsp + 0x44], 1
0x129d1:	mov	qword ptr [rsp + 8], 0
0x129da:	mov	dword ptr [rsp + 0x40], 1
0x129e2:	jmp	0x1272f
0x129e7:	nop	word ptr [rax + rax]
0x129f0:	mov	rax, qword ptr [rsi + 8]
0x129f4:	mov	dword ptr [rsp + 0x40], 1
0x129fc:	mov	dword ptr [rsp + 0x44], 0
0x12a04:	mov	qword ptr [rsp + 8], rax
0x12a09:	jmp	0x126a0
0x12a0e:	nop	
0x12a10:	lea	rax, [r12 + r12*4]
0x12a14:	lea	rax, [rax + rax*4]
0x12a18:	shl	rax, 2
0x12a1c:	cqo	
0x12a1e:	idiv	qword ptr [rsp + 8]
0x12a23:	mov	r8, rax
0x12a26:	jmp	0x128fd
0x12a2b:	nop	dword ptr [rax + rax]
0x12a30:	mov	dword ptr [rip + 0x19076], 0
0x12a3a:	xor	eax, eax
0x12a3c:	call	0xc8c0
0x12a41:	mov	edx, 4
0x12a46:	lea	rsi, [rip + 0xdae5]
0x12a4d:	lea	rdi, [rip + 0xe7a5]
0x12a54:	mov	r15, rax
0x12a57:	call	0x8070
0x12a5c:	mov	rdi, r15
0x12a5f:	mov	ebx, eax
0x12a61:	call	0xc970
0x12a66:	xor	eax, eax
0x12a68:	and	ebx, 0xffffffdf
0x12a6b:	call	0xd870
0x12a70:	xor	eax, eax
0x12a72:	call	0xd740
0x12a77:	xor	eax, eax
0x12a79:	call	0xa820
0x12a7e:	cmp	bl, 0x4e
0x12a81:	je	0x12839
0x12a87:	mov	rdi, r14
0x12a8a:	mov	r15d, dword ptr [rsp + 0x18]
0x12a8f:	mov	r12, -1
0x12a96:	call	0x18d10
0x12a9b:	mov	rdi, rbp
0x12a9e:	call	0x18d10
0x12aa3:	mov	rdi, r13
0x12aa6:	call	0x18d10
0x12aab:	mov	edi, r15d
0x12aae:	call	0x4ab0
0x12ab3:	mov	edi, dword ptr [rsp + 0x1c]
0x12ab7:	call	0x4ab0
0x12abc:	jmp	0x12b09
0x12abe:	nop	
0x12ac0:	mov	rcx, qword ptr [rsp + 8]
0x12ac5:	mov	rax, qword ptr [rsi + 8]
0x12ac9:	mov	dword ptr [rsp + 0x40], 0
0x12ad1:	mov	dword ptr [rsp + 0x44], 0
0x12ad9:	cmp	rcx, rax
0x12adc:	cmovge	rax, rcx
0x12ae0:	mov	qword ptr [rsp + 8], rax
0x12ae5:	jmp	0x126a0
0x12aea:	nop	word ptr [rax + rax]
0x12af0:	mov	edi, dword ptr [rsp + 0x18]
0x12af4:	mov	r12, -2
0x12afb:	call	0x4ab0
0x12b00:	mov	edi, dword ptr [rsp + 0x1c]
0x12b04:	call	0x4ab0
0x12b09:	add	rsp, 0x68
0x12b0d:	mov	rax, r12
0x12b10:	pop	rbx
0x12b11:	pop	rbp
0x12b12:	pop	r12
0x12b14:	pop	r13
0x12b16:	pop	r14
0x12b18:	pop	r15
0x12b1a:	ret	
0x12b1b:	nop	dword ptr [rax + rax]
0x12b20:	mov	edi, dword ptr [rsp + 0x18]
0x12b24:	mov	r12, -3
0x12b2b:	call	0x4ab0
0x12b30:	mov	edi, dword ptr [rsp + 0x1c]
0x12b34:	call	0x4ab0
0x12b39:	jmp	0x12b09
0x12b3b:	nop	dword ptr [rax + rax]
0x12b40:	mov	r15d, dword ptr [rsp + 0x18]
0x12b45:	mov	rdi, r14
0x12b48:	call	0x18d10
0x12b4d:	mov	rdi, rbp
0x12b50:	call	0x18d10
0x12b55:	mov	rdi, r13
0x12b58:	call	0x18d10
0x12b5d:	mov	edi, r15d
0x12b60:	call	0x4ab0
0x12b65:	mov	edi, dword ptr [rsp + 0x1c]
0x12b69:	call	0x4ab0
0x12b6e:	jmp	0x12b09
0x12b70:	mov	r15d, dword ptr [rsp + 0x18]
0x12b75:	xor	eax, eax
0x12b77:	nop	word ptr [rax + rax]
0x12b80:	movzx	ecx, byte ptr [r13 + rax]
0x12b86:	mov	edx, eax
0x12b88:	cmp	byte ptr [rbp + rax], cl
0x12b8c:	jne	0x12b99
0x12b8e:	lea	edx, [rax + 1]
0x12b91:	add	rax, 1
0x12b95:	cmp	ebx, eax
0x12b97:	jg	0x12b80
0x12b99:	movsxd	rdx, edx
0x12b9c:	add	r12, rdx
0x12b9f:	mov	edx, dword ptr [rsp + 0x40]
0x12ba3:	test	edx, edx
0x12ba5:	jne	0x12bea
0x12ba7:	mov	rax, qword ptr [rsp + 0x48]
0x12bac:	mov	rcx, qword ptr [rsp + 0x50]
0x12bb1:	mov	rax, qword ptr [rax + 0x38]
0x12bb5:	mov	rax, qword ptr [rax + rcx + 8]
0x12bba:	mov	rcx, qword ptr [rsp + 0x20]
0x12bbf:	mov	qword ptr [rcx], rax
0x12bc2:	mov	eax, dword ptr [rsp + 0x44]
0x12bc6:	test	eax, eax
0x12bc8:	jne	0x12c24
0x12bca:	mov	rax, qword ptr [rsp + 0x38]
0x12bcf:	mov	rcx, qword ptr [rsp + 0x58]
0x12bd4:	mov	rax, qword ptr [rax + 0x38]
0x12bd8:	mov	rax, qword ptr [rax + rcx + 8]
0x12bdd:	mov	rcx, qword ptr [rsp + 0x28]
0x12be2:	mov	qword ptr [rcx], rax
0x12be5:	jmp	0x12b45
0x12bea:	mov	edi, 1
0x12bef:	call	0x18b70
0x12bf4:	mov	rbx, qword ptr [rsp + 0x20]
0x12bf9:	jmp	0x12c07
0x12bfb:	nop	dword ptr [rax + rax]
0x12c00:	cdqe	
0x12c02:	add	qword ptr [rbx], rax
0x12c05:	je	0x12c1b
0x12c07:	mov	edx, 0x8000
0x12c0c:	mov	rsi, rbp
0x12c0f:	mov	edi, r15d
0x12c12:	call	0x47a0
0x12c17:	test	eax, eax
0x12c19:	jg	0x12c00
0x12c1b:	xor	edi, edi
0x12c1d:	call	0x18b70
0x12c22:	jmp	0x12bc2
0x12c24:	mov	edi, 1
0x12c29:	call	0x18b70
0x12c2e:	mov	qword ptr [rsp + 8], rbp
0x12c33:	mov	rbx, qword ptr [rsp + 0x28]
0x12c38:	mov	ebp, dword ptr [rsp + 0x1c]
0x12c3c:	jmp	0x12c47
0x12c3e:	nop	
0x12c40:	cdqe	
0x12c42:	add	qword ptr [rbx], rax
0x12c45:	je	0x12c5a
0x12c47:	mov	edx, 0x8000
0x12c4c:	mov	rsi, r13
0x12c4f:	mov	edi, ebp
0x12c51:	call	0x47a0
0x12c56:	test	eax, eax
0x12c58:	jg	0x12c40
0x12c5a:	xor	edi, edi
0x12c5c:	mov	rbp, qword ptr [rsp + 8]
0x12c61:	call	0x18b70
0x12c66:	jmp	0x12b45
0x12c6b:	mov	r12, -4
0x12c72:	jmp	0x12b09
0x12c77:	call	0x18d10
0x12c7c:	mov	edi, r15d
0x12c7f:	mov	r12, -5
0x12c86:	call	0x4ab0
0x12c8b:	jmp	0x12b09
0x12c90:	xor	r12d, r12d
0x12c93:	jmp	0x12b09
0x12c98:	nop	dword ptr [rax + rax]
0x12ca0:	endbr64	
0x12ca4:	push	r15
0x12ca6:	push	r14
0x12ca8:	push	r13
0x12caa:	push	r12
0x12cac:	push	rbp
0x12cad:	mov	rbp, rsi
0x12cb0:	push	rbx
0x12cb1:	mov	rbx, rdi
0x12cb4:	sub	rsp, 0x38
0x12cb8:	mov	r13d, dword ptr [rdi + 0x28]
0x12cbc:	mov	rdi, qword ptr [rip + 0x1780d]
0x12cc3:	mov	rax, qword ptr fs:[0x28]
0x12ccc:	mov	qword ptr [rsp + 0x28], rax
0x12cd1:	xor	eax, eax
0x12cd3:	mov	r14d, dword ptr [rsi + 0x28]
0x12cd7:	call	0xdb60
0x12cdc:	xor	eax, eax
0x12cde:	call	0xa820
0x12ce3:	mov	r15, qword ptr [rbx + 0x18]
0x12ce7:	mov	rsi, qword ptr [rbp + 0x18]
0x12ceb:	mov	rdi, r15
0x12cee:	call	0x4b30
0x12cf3:	mov	rdx, qword ptr [rbx + 0x38]
0x12cf7:	mov	r8d, eax
0x12cfa:	movsxd	rax, r13d
0x12cfd:	lea	r12, [rax + rax*4]
0x12d01:	shl	r12, 4
0x12d05:	add	rdx, r12
0x12d08:	test	r8d, r8d
0x12d0b:	jne	0x12d39
0x12d0d:	movsxd	rax, r14d
0x12d10:	mov	rdi, qword ptr [rdx]
0x12d13:	mov	qword ptr [rsp + 8], rdx
0x12d18:	lea	rax, [rax + rax*4]
0x12d1c:	shl	rax, 4
0x12d20:	add	rax, qword ptr [rbp + 0x38]
0x12d24:	mov	rsi, qword ptr [rax]
0x12d27:	call	0x4b30
0x12d2c:	mov	rdx, qword ptr [rsp + 8]
0x12d31:	test	eax, eax
0x12d33:	je	0x12e40
0x12d39:	cmp	byte ptr [rdx + 0x48], 1
0x12d3d:	jne	0x12d57
0x12d3f:	movsxd	rax, r14d
0x12d42:	lea	r10, [rax + rax*4]
0x12d46:	mov	rax, qword ptr [rbp + 0x38]
0x12d4a:	shl	r10, 4
0x12d4e:	add	rax, r10
0x12d51:	cmp	byte ptr [rax + 0x48], 1
0x12d55:	je	0x12da0
0x12d57:	mov	ecx, 0x1e
0x12d5c:	xor	edx, edx
0x12d5e:	mov	rsi, r15
0x12d61:	xor	eax, eax
0x12d63:	lea	rdi, [rip + 0xede6]
0x12d6a:	call	0xf760
0x12d6f:	xor	eax, eax
0x12d71:	call	0xe4e0
0x12d76:	mov	rax, qword ptr [rsp + 0x28]
0x12d7b:	sub	rax, qword ptr fs:[0x28]
0x12d84:	jne	0x12fbc
0x12d8a:	add	rsp, 0x38
0x12d8e:	xor	eax, eax
0x12d90:	pop	rbx
0x12d91:	pop	rbp
0x12d92:	pop	r12
0x12d94:	pop	r13
0x12d96:	pop	r14
0x12d98:	pop	r15
0x12d9a:	jmp	0xa820
0x12d9f:	nop	
0x12da0:	mov	rcx, qword ptr [rax + 8]
0x12da4:	cmp	qword ptr [rdx + 8], rcx
0x12da8:	je	0x12df2
0x12daa:	mov	edx, dword ptr [rdx + 0x10]
0x12dad:	mov	ecx, edx
0x12daf:	and	ecx, 0xf000
0x12db5:	cmp	ecx, 0x4000
0x12dbb:	je	0x12dcb
0x12dbd:	and	edx, 0xd000
0x12dc3:	cmp	edx, 0x8000
0x12dc9:	jne	0x12df2
0x12dcb:	mov	eax, dword ptr [rax + 0x10]
0x12dce:	mov	edx, eax
0x12dd0:	and	edx, 0xf000
0x12dd6:	cmp	edx, 0x4000
0x12ddc:	je	0x12ee8
0x12de2:	and	eax, 0xd000
0x12de7:	cmp	eax, 0x8000
0x12dec:	je	0x12ee8
0x12df2:	mov	esi, r13d
0x12df5:	lea	rdx, [rsp + 0x18]
0x12dfa:	lea	r9, [rsp + 0x20]
0x12dff:	mov	r8d, r14d
0x12e02:	mov	rcx, rbp
0x12e05:	mov	rdi, rbx
0x12e08:	xor	eax, eax
0x12e0a:	mov	qword ptr [rsp + 8], r10
0x12e0f:	call	0x125c0
0x12e14:	mov	r13, rax
0x12e17:	lea	eax, [rax + 5]
0x12e1a:	cmp	r13d, -5
0x12e1e:	jb	0x12f17
0x12e24:	lea	rdx, [rip + 0xeac5]
0x12e2b:	mov	r10, qword ptr [rsp + 8]
0x12e30:	movsxd	rax, dword ptr [rdx + rax*4]
0x12e34:	add	rax, rdx
0x12e37:	jmp	rax
0x12e3a:	 ----------
0x12e3f:	 ----------
0x12e40:	mov	rax, qword ptr [rsp + 0x28]
0x12e45:	sub	rax, qword ptr fs:[0x28]
0x12e4e:	jne	0x12fbc
0x12e54:	add	rsp, 0x38
0x12e58:	mov	edx, 0x1c
0x12e5d:	xor	esi, esi
0x12e5f:	pop	rbx
0x12e60:	lea	rdi, [rip + 0xec11]
0x12e67:	pop	rbp
0x12e68:	pop	r12
0x12e6a:	pop	r13
0x12e6c:	pop	r14
0x12e6e:	pop	r15
0x12e70:	jmp	0x8070
0x12e75:	nop	dword ptr [rax]
0x12e78:	mov	rax, qword ptr [rbx + 0x38]
0x12e7c:	mov	rsi, qword ptr [rax + r12]
0x12e80:	mov	ecx, 0x1e
0x12e85:	xor	edx, edx
0x12e87:	lea	rdi, [rip + 0xec4a]
0x12e8e:	xor	eax, eax
0x12e90:	call	0xf760
0x12e95:	jmp	0x12d6f
0x12e9a:	nop	word ptr [rax + rax]
0x12ea0:	mov	rax, qword ptr [rbp + 0x38]
0x12ea4:	mov	rsi, qword ptr [rax + r10]
0x12ea8:	jmp	0x12e80
0x12eaa:	nop	word ptr [rax + rax]
0x12eb0:	mov	rax, qword ptr [rbx + 0x38]
0x12eb4:	mov	rsi, qword ptr [rax + r12]
0x12eb8:	mov	ecx, 0x1e
0x12ebd:	xor	edx, edx
0x12ebf:	lea	rdi, [rip + 0xe423]
0x12ec6:	xor	eax, eax
0x12ec8:	call	0xf760
0x12ecd:	jmp	0x12d6f
0x12ed2:	nop	word ptr [rax + rax]
0x12ed8:	mov	rax, qword ptr [rbp + 0x38]
0x12edc:	mov	rsi, qword ptr [rax + r10]
0x12ee0:	jmp	0x12eb8
0x12ee2:	nop	word ptr [rax + rax]
0x12ee8:	mov	edx, 0xc
0x12eed:	lea	rsi, [rip + 0xd63e]
0x12ef4:	mov	qword ptr [rsp + 8], r10
0x12ef9:	lea	rdi, [rip + 0xebb0]
0x12f00:	call	0x8070
0x12f05:	mov	r10, qword ptr [rsp + 8]
0x12f0a:	cmp	al, 0x79
0x12f0c:	jne	0x12d6f
0x12f12:	jmp	0x12df2
0x12f17:	mov	rax, qword ptr [rsp + 0x18]
0x12f1c:	mov	rdx, qword ptr [rsp + 0x20]
0x12f21:	cmp	rax, r13
0x12f24:	je	0x12f87
0x12f26:	cmp	rax, rdx
0x12f29:	cmovg	rax, rdx
0x12f2d:	cmp	rax, r13
0x12f30:	je	0x12fa4
0x12f32:	mov	edi, 0x80
0x12f37:	call	0x1d670
0x12f3c:	mov	r9, r13
0x12f3f:	mov	r8, r13
0x12f42:	mov	esi, 1
0x12f47:	mov	rbp, rax
0x12f4a:	mov	rdi, rax
0x12f4d:	xor	eax, eax
0x12f4f:	mov	rdx, -1
0x12f56:	lea	rcx, [rip + 0xe3af]
0x12f5d:	call	0x4f10
0x12f62:	mov	ecx, 0x14
0x12f67:	xor	edx, edx
0x12f69:	mov	rsi, rbp
0x12f6c:	lea	rdi, [rip + 0xe3a5]
0x12f73:	xor	eax, eax
0x12f75:	call	0xf760
0x12f7a:	mov	rdi, rbp
0x12f7d:	call	0x18d10
0x12f82:	jmp	0x12d6f
0x12f87:	cmp	rax, rdx
0x12f8a:	jne	0x12f26
0x12f8c:	mov	edx, 0x14
0x12f91:	xor	esi, esi
0x12f93:	lea	rdi, [rip + 0xe365]
0x12f9a:	call	0x8070
0x12f9f:	jmp	0x12d6f
0x12fa4:	mov	edx, 0x14
0x12fa9:	xor	esi, esi
0x12fab:	lea	rdi, [rip + 0xeb4e]
0x12fb2:	call	0x8070
0x12fb7:	jmp	0x12d6f
0x12fbc:	call	0x49d0
0x12fc1:	nop	word ptr cs:[rax + rax]
0x12fcc:	nop	dword ptr [rax]
0x12fd0:	endbr64	
0x12fd4:	push	r15
0x12fd6:	push	r14
0x12fd8:	push	r13
0x12fda:	push	r12
0x12fdc:	mov	r12, rdi
0x12fdf:	push	rbp
0x12fe0:	mov	rbp, rsi
0x12fe3:	push	rbx
0x12fe4:	sub	rsp, 0x48
0x12fe8:	mov	rdi, qword ptr [rip + 0x174d9]
0x12fef:	mov	dword ptr [rsp + 0x14], edx
0x12ff3:	mov	rax, qword ptr fs:[0x28]
0x12ffc:	mov	qword ptr [rsp + 0x38], rax
0x13001:	xor	eax, eax
0x13003:	call	0xdb60
0x13008:	xor	eax, eax
0x1300a:	call	0xa820
0x1300f:	mov	rsi, qword ptr [rbp + 0x18]
0x13013:	mov	rdi, qword ptr [r12 + 0x18]
0x13018:	call	0x4b30
0x1301d:	test	eax, eax
0x1301f:	je	0x132d0
0x13025:	mov	ecx, dword ptr [r12 + 0x68]
0x1302a:	test	ecx, ecx
0x1302c:	jle	0x1306d
0x1302e:	lea	edx, [rcx - 1]
0x13031:	mov	rsi, qword ptr [r12 + 0x38]
0x13036:	lea	rdx, [rdx + rdx*4]
0x1303a:	shl	rdx, 4
0x1303e:	lea	rax, [rsi + 0x49]
0x13042:	lea	rdx, [rsi + rdx + 0x99]
0x1304a:	nop	word ptr [rax + rax]
0x13050:	cmp	byte ptr [rax], 0
0x13053:	jne	0x13064
0x13055:	cmp	byte ptr [rax - 1], 0
0x13059:	je	0x13064
0x1305b:	mov	byte ptr [rax], 1
0x1305e:	add	dword ptr [r12 + 0x70], 1
0x13064:	add	rax, 0x50
0x13068:	cmp	rax, rdx
0x1306b:	jne	0x13050
0x1306d:	mov	edx, dword ptr [rbp + 0x68]
0x13070:	test	edx, edx
0x13072:	jle	0x130ab
0x13074:	sub	edx, 1
0x13077:	mov	rsi, qword ptr [rbp + 0x38]
0x1307b:	lea	rdx, [rdx + rdx*4]
0x1307f:	shl	rdx, 4
0x13083:	lea	rax, [rsi + 0x49]
0x13087:	lea	rdx, [rsi + rdx + 0x99]
0x1308f:	nop	
0x13090:	cmp	byte ptr [rax], 0
0x13093:	jne	0x130a2
0x13095:	cmp	byte ptr [rax - 1], 0
0x13099:	je	0x130a2
0x1309b:	mov	byte ptr [rax], 1
0x1309e:	add	dword ptr [rbp + 0x70], 1
0x130a2:	add	rax, 0x50
0x130a6:	cmp	rax, rdx
0x130a9:	jne	0x13090
0x130ab:	lea	rax, [rsp + 0x30]
0x130b0:	mov	dword ptr [rsp + 0x10], 1
0x130b8:	mov	ebx, 0x50
0x130bd:	mov	qword ptr [rsp + 0x18], rax
0x130c2:	cmp	ecx, 1
0x130c5:	jg	0x130e8
0x130c7:	jmp	0x13188
0x130cc:	nop	dword ptr [rax]
0x130d0:	add	dword ptr [rsp + 0x10], 1
0x130d5:	add	rbx, 0x50
0x130d9:	mov	eax, dword ptr [rsp + 0x10]
0x130dd:	cmp	dword ptr [r12 + 0x68], eax
0x130e2:	jle	0x13188
0x130e8:	mov	rax, qword ptr [r12 + 0x38]
0x130ed:	cmp	byte ptr [rax + rbx + 0x48], 1
0x130f2:	jne	0x130d0
0x130f4:	cmp	dword ptr [rbp + 0x68], 1
0x130f8:	jle	0x130d0
0x130fa:	mov	r14d, 0x50
0x13100:	mov	r13d, 1
0x13106:	jmp	0x1311e
0x13108:	nop	dword ptr [rax + rax]
0x13110:	add	r13d, 1
0x13114:	add	r14, 0x50
0x13118:	cmp	dword ptr [rbp + 0x68], r13d
0x1311c:	jle	0x130d0
0x1311e:	xor	eax, eax
0x13120:	call	0x18ab0
0x13125:	mov	r15, qword ptr [rbp + 0x38]
0x13129:	add	r15, r14
0x1312c:	cmp	byte ptr [r15 + 0x48], 1
0x13131:	jne	0x13110
0x13133:	mov	rdx, qword ptr [r12 + 0x38]
0x13138:	mov	rsi, qword ptr [r15]
0x1313b:	add	rdx, rbx
0x1313e:	mov	rdi, qword ptr [rdx]
0x13141:	mov	qword ptr [rsp + 8], rdx
0x13146:	call	0x4b30
0x1314b:	mov	rdx, qword ptr [rsp + 8]
0x13150:	test	eax, eax
0x13152:	jne	0x13110
0x13154:	mov	rax, qword ptr [r15 + 8]
0x13158:	cmp	qword ptr [rdx + 8], rax
0x1315c:	je	0x13440
0x13162:	mov	rsi, qword ptr [rdx + 0x20]
0x13166:	mov	rax, qword ptr [r15 + 0x20]
0x1316a:	cmp	rsi, rax
0x1316d:	jl	0x133f3
0x13173:	mov	byte ptr [r15 + 0x49], 0
0x13178:	sub	dword ptr [rbp + 0x70], 1
0x1317c:	jmp	0x130d0
0x13181:	nop	dword ptr [rax]
0x13188:	xor	eax, eax
0x1318a:	call	0xe4e0
0x1318f:	xor	eax, eax
0x13191:	mov	rdi, r12
0x13194:	call	0x10ec0
0x13199:	xor	eax, eax
0x1319b:	mov	rdi, r12
0x1319e:	call	0x10160
0x131a3:	cmp	byte ptr [r12 + 0x6d], 0
0x131a9:	jne	0x13290
0x131af:	xor	eax, eax
0x131b1:	mov	rdi, r12
0x131b4:	call	0x10240
0x131b9:	cmp	byte ptr [r12 + 0x6d], 0
0x131bf:	jne	0x13280
0x131c5:	xor	eax, eax
0x131c7:	mov	rdi, rbp
0x131ca:	call	0x10ec0
0x131cf:	xor	eax, eax
0x131d1:	mov	rdi, rbp
0x131d4:	call	0x10160
0x131d9:	cmp	byte ptr [rbp + 0x6d], 0
0x131dd:	jne	0x13258
0x131df:	xor	eax, eax
0x131e1:	mov	rdi, rbp
0x131e4:	call	0x10240
0x131e9:	cmp	byte ptr [rbp + 0x6d], 0
0x131ed:	jne	0x13238
0x131ef:	xor	eax, eax
0x131f1:	call	0xa820
0x131f6:	mov	edx, dword ptr [r12 + 0x70]
0x131fb:	test	edx, edx
0x131fd:	jne	0x132a0
0x13203:	mov	eax, dword ptr [rbp + 0x70]
0x13206:	test	eax, eax
0x13208:	jne	0x132a0
0x1320e:	mov	rax, qword ptr [rsp + 0x38]
0x13213:	sub	rax, qword ptr fs:[0x28]
0x1321c:	jne	0x134c3
0x13222:	add	rsp, 0x48
0x13226:	pop	rbx
0x13227:	pop	rbp
0x13228:	pop	r12
0x1322a:	pop	r13
0x1322c:	pop	r14
0x1322e:	pop	r15
0x13230:	ret	
0x13231:	nop	dword ptr [rax]
0x13238:	mov	rdi, rbp
0x1323b:	xor	eax, eax
0x1323d:	call	0x10d70
0x13242:	xor	eax, eax
0x13244:	call	0xa820
0x13249:	mov	edx, dword ptr [r12 + 0x70]
0x1324e:	test	edx, edx
0x13250:	je	0x13203
0x13252:	jmp	0x132a0
0x13254:	nop	dword ptr [rax]
0x13258:	xor	eax, eax
0x1325a:	mov	rdi, rbp
0x1325d:	call	0xec50
0x13262:	xor	eax, eax
0x13264:	mov	rdi, rbp
0x13267:	call	0x10240
0x1326c:	cmp	byte ptr [rbp + 0x6d], 0
0x13270:	je	0x131ef
0x13276:	jmp	0x13238
0x13278:	nop	dword ptr [rax + rax]
0x13280:	mov	rdi, r12
0x13283:	xor	eax, eax
0x13285:	call	0x10d70
0x1328a:	jmp	0x131c5
0x1328f:	nop	
0x13290:	mov	rdi, r12
0x13293:	xor	eax, eax
0x13295:	call	0xec50
0x1329a:	jmp	0x131af
0x1329f:	nop	
0x132a0:	mov	rax, qword ptr [rsp + 0x38]
0x132a5:	sub	rax, qword ptr fs:[0x28]
0x132ae:	jne	0x134c3
0x132b4:	add	rsp, 0x48
0x132b8:	xor	eax, eax
0x132ba:	pop	rbx
0x132bb:	pop	rbp
0x132bc:	pop	r12
0x132be:	pop	r13
0x132c0:	pop	r14
0x132c2:	pop	r15
0x132c4:	jmp	0xa5a0
0x132c9:	nop	dword ptr [rax]
0x132d0:	mov	edx, 0x1c
0x132d5:	xor	esi, esi
0x132d7:	lea	rdi, [rip + 0xe89a]
0x132de:	call	0x8070
0x132e3:	mov	edx, dword ptr [r12 + 0x68]
0x132e8:	test	edx, edx
0x132ea:	jle	0x1331c
0x132ec:	sub	edx, 1
0x132ef:	mov	rcx, qword ptr [r12 + 0x38]
0x132f4:	lea	rdx, [rdx + rdx*4]
0x132f8:	shl	rdx, 4
0x132fc:	lea	rax, [rcx + 0x49]
0x13300:	lea	rdx, [rcx + rdx + 0x99]
0x13308:	nop	dword ptr [rax + rax]
0x13310:	mov	byte ptr [rax], 0
0x13313:	add	rax, 0x50
0x13317:	cmp	rdx, rax
0x1331a:	jne	0x13310
0x1331c:	mov	dword ptr [r12 + 0x70], 0
0x13325:	mov	edx, dword ptr [rbp + 0x68]
0x13328:	test	edx, edx
0x1332a:	jle	0x1335c
0x1332c:	sub	edx, 1
0x1332f:	mov	rcx, qword ptr [rbp + 0x38]
0x13333:	lea	rdx, [rdx + rdx*4]
0x13337:	shl	rdx, 4
0x1333b:	lea	rax, [rcx + 0x49]
0x1333f:	lea	rdx, [rcx + rdx + 0x99]
0x13347:	nop	word ptr [rax + rax]
0x13350:	mov	byte ptr [rax], 0
0x13353:	add	rax, 0x50
0x13357:	cmp	rdx, rax
0x1335a:	jne	0x13350
0x1335c:	mov	dword ptr [rbp + 0x70], 0
0x13363:	xor	eax, eax
0x13365:	mov	rdi, r12
0x13368:	call	0x10ec0
0x1336d:	xor	eax, eax
0x1336f:	mov	rdi, r12
0x13372:	call	0x10160
0x13377:	cmp	byte ptr [r12 + 0x6d], 0
0x1337d:	jne	0x13431
0x13383:	xor	eax, eax
0x13385:	mov	rdi, r12
0x13388:	call	0x10240
0x1338d:	cmp	byte ptr [r12 + 0x6d], 0
0x13393:	jne	0x13422
0x13399:	xor	eax, eax
0x1339b:	mov	rdi, rbp
0x1339e:	call	0x10ec0
0x133a3:	xor	eax, eax
0x133a5:	mov	rdi, rbp
0x133a8:	call	0x10160
0x133ad:	cmp	byte ptr [rbp + 0x6d], 0
0x133b1:	jne	0x13402
0x133b3:	xor	eax, eax
0x133b5:	mov	rdi, rbp
0x133b8:	call	0x10240
0x133bd:	cmp	byte ptr [rbp + 0x6d], 0
0x133c1:	je	0x1320e
0x133c7:	mov	rax, qword ptr [rsp + 0x38]
0x133cc:	sub	rax, qword ptr fs:[0x28]
0x133d5:	jne	0x134c3
0x133db:	add	rsp, 0x48
0x133df:	mov	rdi, rbp
0x133e2:	xor	eax, eax
0x133e4:	pop	rbx
0x133e5:	pop	rbp
0x133e6:	pop	r12
0x133e8:	pop	r13
0x133ea:	pop	r14
0x133ec:	pop	r15
0x133ee:	jmp	0x10d70
0x133f3:	mov	byte ptr [rdx + 0x49], 0
0x133f7:	sub	dword ptr [r12 + 0x70], 1
0x133fd:	jmp	0x130d0
0x13402:	xor	eax, eax
0x13404:	mov	rdi, rbp
0x13407:	call	0xec50
0x1340c:	xor	eax, eax
0x1340e:	mov	rdi, rbp
0x13411:	call	0x10240
0x13416:	cmp	byte ptr [rbp + 0x6d], 0
0x1341a:	je	0x1320e
0x13420:	jmp	0x133c7
0x13422:	mov	rdi, r12
0x13425:	xor	eax, eax
0x13427:	call	0x10d70
0x1342c:	jmp	0x13399
0x13431:	mov	rdi, r12
0x13434:	xor	eax, eax
0x13436:	call	0xec50
0x1343b:	jmp	0x13383
0x13440:	mov	ecx, dword ptr [rsp + 0x14]
0x13444:	test	ecx, ecx
0x13446:	je	0x13468
0x13448:	mov	rsi, qword ptr [rdx + 0x20]
0x1344c:	mov	rax, qword ptr [r15 + 0x20]
0x13450:	cmp	rsi, rax
0x13453:	jne	0x1316a
0x13459:	mov	byte ptr [rdx + 0x49], 0
0x1345d:	sub	dword ptr [r12 + 0x70], 1
0x13463:	jmp	0x13173
0x13468:	mov	r9, qword ptr [rsp + 0x18]
0x1346d:	mov	esi, dword ptr [rsp + 0x10]
0x13471:	xor	eax, eax
0x13473:	lea	rdx, [rsp + 0x28]
0x13478:	mov	r8d, r13d
0x1347b:	mov	rcx, rbp
0x1347e:	mov	rdi, r12
0x13481:	call	0x125c0
0x13486:	cmp	rax, -1
0x1348a:	je	0x13188
0x13490:	mov	rdx, qword ptr [r12 + 0x38]
0x13495:	add	rdx, rbx
0x13498:	cmp	qword ptr [rsp + 0x28], rax
0x1349d:	je	0x134b3
0x1349f:	add	r14, qword ptr [rbp + 0x38]
0x134a3:	mov	rsi, qword ptr [rdx + 0x20]
0x134a7:	mov	rax, qword ptr [r14 + 0x20]
0x134ab:	mov	r15, r14
0x134ae:	jmp	0x1316a
0x134b3:	cmp	qword ptr [rsp + 0x30], rax
0x134b8:	jne	0x1349f
0x134ba:	add	r14, qword ptr [rbp + 0x38]
0x134be:	mov	r15, r14
0x134c1:	jmp	0x13459
0x134c3:	call	0x49d0
0x134c8:	nop	dword ptr [rax + rax]
0x134d0:	endbr64	
0x134d4:	push	r15
0x134d6:	movsxd	rsi, esi
0x134d9:	mov	r15d, edx
0x134dc:	push	r14
0x134de:	push	r13
0x134e0:	lea	r13, [rsi + rsi*4]
0x134e4:	push	r12
0x134e6:	shl	r13, 4
0x134ea:	mov	r12, rdi
0x134ed:	push	rbp
0x134ee:	push	rbx
0x134ef:	sub	rsp, 8
0x134f3:	mov	rax, qword ptr [rdi + 0x38]
0x134f7:	mov	r14, qword ptr [rax + r13]
0x134fb:	mov	rdi, r14
0x134fe:	call	0x1d7a0
0x13503:	mov	rdi, r14
0x13506:	mov	rbp, rax
0x13509:	call	0x49b0
0x1350e:	mov	rbx, rax
0x13511:	test	r15d, r15d
0x13514:	jne	0x13580
0x13516:	test	eax, eax
0x13518:	jle	0x13543
0x1351a:	call	0x4ef0
0x1351f:	lea	edi, [rbx - 1]
0x13522:	xor	edx, edx
0x13524:	nop	dword ptr [rax]
0x13528:	movsx	rsi, byte ptr [r14 + rdx]
0x1352d:	mov	rcx, qword ptr [rax]
0x13530:	mov	ecx, dword ptr [rcx + rsi*4]
0x13533:	mov	byte ptr [rbp + rdx], cl
0x13537:	mov	rcx, rdx
0x1353a:	add	rdx, 1
0x1353e:	cmp	rdi, rcx
0x13541:	jne	0x13528
0x13543:	mov	rsi, rbp
0x13546:	mov	rdi, r14
0x13549:	call	0x4b30
0x1354e:	test	eax, eax
0x13550:	jne	0x135ba
0x13552:	mov	rax, qword ptr [r12 + 0x38]
0x13557:	mov	byte ptr [rax + r13 + 0x49], 0
0x1355d:	mov	eax, 1
0x13562:	sub	dword ptr [r12 + 0x70], 1
0x13568:	add	rsp, 8
0x1356c:	pop	rbx
0x1356d:	pop	rbp
0x1356e:	pop	r12
0x13570:	pop	r13
0x13572:	pop	r14
0x13574:	pop	r15
0x13576:	ret	
0x13577:	nop	word ptr [rax + rax]
0x13580:	test	eax, eax
0x13582:	jle	0x13543
0x13584:	call	0x47c0
0x13589:	lea	edi, [rbx - 1]
0x1358c:	xor	edx, edx
0x1358e:	nop	
0x13590:	movsx	rsi, byte ptr [r14 + rdx]
0x13595:	mov	rcx, qword ptr [rax]
0x13598:	mov	ecx, dword ptr [rcx + rsi*4]
0x1359b:	mov	byte ptr [rbp + rdx], cl
0x1359f:	mov	rcx, rdx
0x135a2:	add	rdx, 1
0x135a6:	cmp	rcx, rdi
0x135a9:	jne	0x13590
0x135ab:	mov	rsi, rbp
0x135ae:	mov	rdi, r14
0x135b1:	call	0x4b30
0x135b6:	test	eax, eax
0x135b8:	je	0x13552
0x135ba:	lea	edi, [rbx + 0x21]
0x135bd:	mov	ebx, 1
0x135c2:	movsxd	rdi, edi
0x135c5:	call	0x1d670
0x135ca:	mov	r8, r14
0x135cd:	mov	esi, 1
0x135d2:	lea	rcx, [rip + 0xdd5b]
0x135d9:	mov	r15, rax
0x135dc:	mov	rdi, rax
0x135df:	mov	rdx, -1
0x135e6:	xor	eax, eax
0x135e8:	call	0x4f10
0x135ed:	mov	edx, 1
0x135f2:	mov	esi, 1
0x135f7:	mov	rdi, r15
0x135fa:	call	0xe480
0x135ff:	xor	eax, eax
0x13601:	call	0xa820
0x13606:	mov	rdi, r15
0x13609:	call	0x18d10
0x1360e:	mov	rax, qword ptr [r12 + 0x38]
0x13613:	cmp	byte ptr [rax + r13 + 0x48], 0
0x13619:	je	0x13698
0x1361b:	mov	rsi, rbp
0x1361e:	mov	rdi, r14
0x13621:	call	0x4e10
0x13626:	test	eax, eax
0x13628:	je	0x137a5
0x1362e:	call	0x4860
0x13633:	mov	r15d, dword ptr [rax]
0x13636:	xor	eax, eax
0x13638:	call	0xe4e0
0x1363d:	xor	eax, eax
0x1363f:	call	0xa820
0x13644:	cmp	r15d, 1
0x13648:	sete	al
0x1364b:	cmp	r15d, 0xd
0x1364f:	sete	dl
0x13652:	or	al, dl
0x13654:	jne	0x13745
0x1365a:	and	ebx, 1
0x1365d:	je	0x13745
0x13663:	cmp	dword ptr [r12 + 0x90], 1
0x1366c:	je	0x13760
0x13672:	mov	rdi, rbp
0x13675:	call	0x4870
0x1367a:	mov	ebx, eax
0x1367c:	test	eax, eax
0x1367e:	je	0x1361b
0x13680:	add	rsp, 8
0x13684:	mov	eax, 5
0x13689:	pop	rbx
0x1368a:	pop	rbp
0x1368b:	pop	r12
0x1368d:	pop	r13
0x1368f:	pop	r14
0x13691:	pop	r15
0x13693:	ret	
0x13694:	nop	dword ptr [rax]
0x13698:	xor	esi, esi
0x1369a:	mov	rdi, rbp
0x1369d:	call	0x4d90
0x136a2:	test	eax, eax
0x136a4:	jne	0x13732
0x136aa:	cmp	dword ptr [r12 + 0x90], 1
0x136b3:	je	0x1378b
0x136b9:	mov	rdi, rbp
0x136bc:	call	0x49b0
0x136c1:	lea	rdi, [rax + 0x21]
0x136c5:	call	0x1d670
0x136ca:	mov	rdx, -1
0x136d1:	mov	r8, rbp
0x136d4:	lea	rcx, [rip + 0xdc6c]
0x136db:	mov	r15, rax
0x136de:	mov	rdi, rax
0x136e1:	mov	esi, 1
0x136e6:	xor	eax, eax
0x136e8:	call	0x4f10
0x136ed:	mov	esi, 1
0x136f2:	mov	rdi, r15
0x136f5:	call	0x193f0
0x136fa:	mov	rdi, r15
0x136fd:	mov	ebx, eax
0x136ff:	call	0x18d10
0x13704:	mov	rdi, qword ptr [r12 + 0x18]
0x13709:	call	0xc4b0
0x1370e:	mov	edx, ebx
0x13710:	mov	eax, 7
0x13715:	and	edx, 0x7f
0x13718:	add	edx, 1
0x1371b:	cmp	dl, 1
0x1371e:	jg	0x13568
0x13724:	test	bl, 0x7f
0x13727:	jne	0x13680
0x1372d:	and	bh, 0xff
0x13730:	jne	0x1377a
0x13732:	mov	rsi, rbp
0x13735:	mov	rdi, r14
0x13738:	call	0x4dc0
0x1373d:	test	eax, eax
0x1373f:	je	0x13552
0x13745:	add	rsp, 8
0x13749:	mov	eax, 6
0x1374e:	pop	rbx
0x1374f:	pop	rbp
0x13750:	pop	r12
0x13752:	pop	r13
0x13754:	pop	r14
0x13756:	pop	r15
0x13758:	ret	
0x13759:	nop	dword ptr [rax]
0x13760:	xor	eax, eax
0x13762:	mov	rsi, rbp
0x13765:	mov	rdi, r12
0x13768:	call	0x11220
0x1376d:	test	eax, eax
0x1376f:	je	0x13672
0x13775:	jmp	0x13568
0x1377a:	lea	rdi, [rip + 0xd469]
0x13781:	call	0x195e0
0x13786:	jmp	0x13680
0x1378b:	xor	eax, eax
0x1378d:	mov	rsi, rbp
0x13790:	mov	rdi, r12
0x13793:	call	0x11220
0x13798:	test	eax, eax
0x1379a:	je	0x136b9
0x137a0:	jmp	0x13568
0x137a5:	mov	rdi, r14
0x137a8:	call	0x4870
0x137ad:	test	eax, eax
0x137af:	je	0x13552
0x137b5:	mov	eax, 4
0x137ba:	jmp	0x13568
0x137bf:	nop	
0x137c0:	endbr64	
0x137c4:	push	r15
0x137c6:	push	r14
0x137c8:	mov	r14, rdi
0x137cb:	push	r13
0x137cd:	push	r12
0x137cf:	mov	r12, rdx
0x137d2:	push	rbp
0x137d3:	push	rbx
0x137d4:	sub	rsp, 0x118
0x137db:	mov	rax, qword ptr fs:[0x28]
0x137e4:	mov	qword ptr [rsp + 0x108], rax
0x137ec:	xor	eax, eax
0x137ee:	test	rdx, rdx
0x137f1:	je	0x13be4
0x137f7:	movsxd	rcx, dword ptr [r14 + 0x68]
0x137fb:	test	ecx, ecx
0x137fd:	jle	0x1382c
0x137ff:	lea	edx, [rcx - 1]
0x13802:	mov	rsi, qword ptr [r14 + 0x38]
0x13806:	lea	rdx, [rdx + rdx*4]
0x1380a:	shl	rdx, 4
0x1380e:	lea	rax, [rsi + 0x49]
0x13812:	lea	rdx, [rsi + rdx + 0x99]
0x1381a:	nop	word ptr [rax + rax]
0x13820:	mov	byte ptr [rax], 0
0x13823:	add	rax, 0x50
0x13827:	cmp	rax, rdx
0x1382a:	jne	0x13820
0x1382c:	mov	dword ptr [r14 + 0x70], 0
0x13834:	lea	rdi, [rcx*8]
0x1383c:	call	0x1d670
0x13841:	mov	qword ptr [rsp], rax
0x13845:	movsxd	rax, dword ptr [r14 + 0x68]
0x13849:	test	eax, eax
0x1384b:	jle	0x13c59
0x13851:	lea	rdi, [rax + rax*4]
0x13855:	xor	r8d, r8d
0x13858:	xor	eax, eax
0x1385a:	xor	r13d, r13d
0x1385d:	shl	rdi, 4
0x13861:	mov	r9d, 0x400
0x13867:	jmp	0x13879
0x13869:	nop	dword ptr [rax]
0x13870:	add	rax, 0x50
0x13874:	cmp	rdi, rax
0x13877:	je	0x138f8
0x13879:	mov	rcx, qword ptr [r14 + 0x38]
0x1387d:	add	rcx, rax
0x13880:	mov	edx, dword ptr [rcx + 0x10]
0x13883:	and	edx, 0xf000
0x13889:	cmp	edx, 0x8000
0x1388f:	jne	0x13870
0x13891:	mov	rdx, qword ptr [rcx + 8]
0x13895:	test	edx, 0x3ff
0x1389b:	je	0x138be
0x1389d:	mov	r10, rdx
0x138a0:	sar	r10, 0x3f
0x138a4:	shr	r10, 0x36
0x138a8:	lea	rsi, [rdx + r10]
0x138ac:	and	esi, 0x3ff
0x138b2:	sub	rsi, r10
0x138b5:	mov	r10, r9
0x138b8:	sub	r10, rsi
0x138bb:	add	rdx, r10
0x138be:	test	rdx, rdx
0x138c1:	lea	rsi, [rdx + 0x3ff]
0x138c8:	cmovs	rdx, rsi
0x138cc:	sar	rdx, 0xa
0x138d0:	cmp	r12, rdx
0x138d3:	jl	0x13af0
0x138d9:	mov	rbx, qword ptr [rsp]
0x138dd:	movsxd	rdx, r13d
0x138e0:	add	rax, 0x50
0x138e4:	add	r13d, 1
0x138e8:	mov	qword ptr [rbx + rdx*8], rcx
0x138ec:	cmp	rdi, rax
0x138ef:	jne	0x13879
0x138f1:	nop	dword ptr [rax]
0x138f8:	mov	rbx, qword ptr [rsp]
0x138fc:	movsxd	rsi, r13d
0x138ff:	mov	edx, 8
0x13904:	lea	rcx, [rip - 0x53cb]
0x1390b:	mov	dword ptr [rsp + 0x10], r8d
0x13910:	mov	rdi, rbx
0x13913:	call	0x48e0
0x13918:	test	r13d, r13d
0x1391b:	je	0x13c86
0x13921:	lea	eax, [r13 - 1]
0x13925:	mov	r8d, r13d
0x13928:	xor	r15d, r15d
0x1392b:	xor	r11d, r11d
0x1392e:	lea	r10, [rbx + rax*8 + 8]
0x13933:	mov	rax, r12
0x13936:	xor	r9d, r9d
0x13939:	mov	edx, 0x400
0x1393e:	mov	r13, r10
0x13941:	mov	r12, rbx
0x13944:	mov	rcx, rax
0x13947:	nop	word ptr [rax + rax]
0x13950:	mov	rdi, qword ptr [r12]
0x13954:	mov	rax, qword ptr [rdi + 8]
0x13958:	test	eax, 0x3ff
0x1395d:	je	0x13980
0x1395f:	mov	r10, rax
0x13962:	sar	r10, 0x3f
0x13966:	shr	r10, 0x36
0x1396a:	lea	rsi, [rax + r10]
0x1396e:	and	esi, 0x3ff
0x13974:	sub	rsi, r10
0x13977:	mov	r10, rdx
0x1397a:	sub	r10, rsi
0x1397d:	add	rax, r10
0x13980:	test	rax, rax
0x13983:	lea	rbp, [rax + 0x3ff]
0x1398a:	cmovns	rbp, rax
0x1398e:	sar	rbp, 0xa
0x13992:	test	r15d, r15d
0x13995:	jle	0x13af9
0x1399b:	mov	rax, r9
0x1399e:	xor	ebx, ebx
0x139a0:	jmp	0x139b8
0x139a2:	nop	word ptr [rax + rax]
0x139a8:	add	ebx, 1
0x139ab:	add	rax, 8
0x139af:	cmp	ebx, r15d
0x139b2:	je	0x13b10
0x139b8:	mov	rsi, qword ptr [rax]
0x139bb:	cmp	rsi, rbp
0x139be:	jl	0x139a8
0x139c0:	sub	rsi, rbp
0x139c3:	mov	qword ptr [rax], rsi
0x139c6:	test	ebx, ebx
0x139c8:	jne	0x13b00
0x139ce:	mov	byte ptr [rdi + 0x49], 1
0x139d2:	add	dword ptr [r14 + 0x70], 1
0x139d7:	add	r12, 8
0x139db:	cmp	r13, r12
0x139de:	jne	0x13950
0x139e4:	mov	r13d, r8d
0x139e7:	mov	r12, rcx
0x139ea:	xor	eax, eax
0x139ec:	mov	rdi, r14
0x139ef:	mov	qword ptr [rsp + 8], r9
0x139f4:	call	0x10ec0
0x139f9:	xor	eax, eax
0x139fb:	mov	rdi, r14
0x139fe:	call	0x10160
0x13a03:	cmp	byte ptr [r14 + 0x6d], 0
0x13a08:	mov	r9, qword ptr [rsp + 8]
0x13a0d:	je	0x13a1e
0x13a0f:	mov	rdi, r14
0x13a12:	xor	eax, eax
0x13a14:	call	0xec50
0x13a19:	mov	r9, qword ptr [rsp + 8]
0x13a1e:	xor	eax, eax
0x13a20:	mov	rdi, r14
0x13a23:	mov	qword ptr [rsp + 8], r9
0x13a28:	call	0x10240
0x13a2d:	cmp	byte ptr [r14 + 0x6d], 0
0x13a32:	mov	r9, qword ptr [rsp + 8]
0x13a37:	je	0x13a48
0x13a39:	mov	rdi, r14
0x13a3c:	xor	eax, eax
0x13a3e:	call	0x10d70
0x13a43:	mov	r9, qword ptr [rsp + 8]
0x13a48:	test	r9, r9
0x13a4b:	je	0x13a55
0x13a4d:	mov	rdi, r9
0x13a50:	call	0x18d10
0x13a55:	mov	rdi, qword ptr [rsp]
0x13a59:	call	0x18d10
0x13a5e:	test	r13d, r13d
0x13a61:	je	0x13bad
0x13a67:	mov	eax, dword ptr [rsp + 0x10]
0x13a6b:	lea	rbp, [rsp + 0x60]
0x13a70:	test	eax, eax
0x13a72:	je	0x13b7b
0x13a78:	sub	rsp, 8
0x13a7c:	mov	r9d, r13d
0x13a7f:	mov	edx, 0xa0
0x13a84:	mov	rdi, rbp
0x13a87:	push	rax
0x13a88:	lea	rax, [rip + 0xd8d2]
0x13a8f:	mov	esi, 1
0x13a94:	lea	r8, [rip + 0xd8ba]
0x13a9b:	push	r15
0x13a9d:	lea	rcx, [rip + 0xe104]
0x13aa4:	push	rax
0x13aa5:	xor	eax, eax
0x13aa7:	call	0x4f10
0x13aac:	add	rsp, 0x20
0x13ab0:	xor	esi, esi
0x13ab2:	mov	edx, 0x36
0x13ab7:	mov	rdi, rbp
0x13aba:	call	0x8070
0x13abf:	mov	rax, qword ptr [rsp + 0x108]
0x13ac7:	sub	rax, qword ptr fs:[0x28]
0x13ad0:	jne	0x13c91
0x13ad6:	add	rsp, 0x118
0x13add:	pop	rbx
0x13ade:	pop	rbp
0x13adf:	pop	r12
0x13ae1:	pop	r13
0x13ae3:	pop	r14
0x13ae5:	pop	r15
0x13ae7:	ret	
0x13ae8:	nop	dword ptr [rax + rax]
0x13af0:	add	r8d, 1
0x13af4:	jmp	0x13870
0x13af9:	xor	ebx, ebx
0x13afb:	nop	dword ptr [rax + rax]
0x13b00:	cmp	r15d, ebx
0x13b03:	jne	0x139d7
0x13b09:	nop	dword ptr [rax]
0x13b10:	cmp	r11d, r15d
0x13b13:	je	0x13b40
0x13b15:	mov	rsi, rcx
0x13b18:	movsxd	rax, r15d
0x13b1b:	add	r15d, 1
0x13b1f:	sub	rsi, rbp
0x13b22:	mov	qword ptr [r9 + rax*8], rsi
0x13b26:	test	ebx, ebx
0x13b28:	jne	0x139d7
0x13b2e:	mov	rax, qword ptr [r12]
0x13b32:	mov	byte ptr [rax + 0x49], 1
0x13b36:	add	dword ptr [r14 + 0x70], 1
0x13b3b:	jmp	0x139d7
0x13b40:	add	r11d, 0x10
0x13b44:	mov	rdi, r9
0x13b47:	mov	qword ptr [rsp + 0x18], rcx
0x13b4c:	movsxd	rsi, r11d
0x13b4f:	mov	dword ptr [rsp + 0x14], r8d
0x13b54:	shl	rsi, 3
0x13b58:	mov	dword ptr [rsp + 8], r11d
0x13b5d:	call	0x1d690
0x13b62:	mov	rcx, qword ptr [rsp + 0x18]
0x13b67:	mov	r8d, dword ptr [rsp + 0x14]
0x13b6c:	mov	edx, 0x400
0x13b71:	mov	r11d, dword ptr [rsp + 8]
0x13b76:	mov	r9, rax
0x13b79:	jmp	0x13b15
0x13b7b:	sub	rsp, 8
0x13b7f:	lea	rcx, [rip + 0xe05a]
0x13b86:	mov	r9d, r13d
0x13b89:	xor	eax, eax
0x13b8b:	push	r15
0x13b8d:	mov	edx, 0xa0
0x13b92:	mov	esi, 1
0x13b97:	mov	rdi, rbp
0x13b9a:	lea	r8, [rip + 0xd7b4]
0x13ba1:	call	0x4f10
0x13ba6:	pop	rdx
0x13ba7:	pop	rcx
0x13ba8:	jmp	0x13ab0
0x13bad:	mov	eax, dword ptr [rsp + 0x10]
0x13bb1:	lea	rbp, [rsp + 0x60]
0x13bb6:	test	eax, eax
0x13bb8:	je	0x13c32
0x13bba:	mov	r9, r12
0x13bbd:	lea	r8, [rip + 0xd791]
0x13bc4:	mov	rdi, rbp
0x13bc7:	xor	eax, eax
0x13bc9:	lea	rcx, [rip + 0xe048]
0x13bd0:	mov	edx, 0xa0
0x13bd5:	mov	esi, 1
0x13bda:	call	0x4f10
0x13bdf:	jmp	0x13ab0
0x13be4:	mov	rdi, qword ptr [rsi + 0x18]
0x13be8:	lea	rdx, [rsp + 0x20]
0x13bed:	xor	esi, esi
0x13bef:	mov	qword ptr [rsp + 0x28], -1
0x13bf8:	call	0x1c490
0x13bfd:	test	eax, eax
0x13bff:	js	0x137f7
0x13c05:	cmp	qword ptr [rsp + 0x28], -1
0x13c0b:	je	0x137f7
0x13c11:	call	0x4a60
0x13c16:	mov	r12, qword ptr [rsp + 0x30]
0x13c1b:	test	eax, eax
0x13c1d:	cmovne	r12, qword ptr [rsp + 0x38]
0x13c23:	imul	r12, qword ptr [rsp + 0x20]
0x13c29:	shr	r12, 0xa
0x13c2d:	jmp	0x137f7
0x13c32:	mov	edx, 0xa0
0x13c37:	mov	esi, 1
0x13c3c:	mov	rdi, rbp
0x13c3f:	xor	eax, eax
0x13c41:	lea	r8, [rip + 0xd70d]
0x13c48:	lea	rcx, [rip + 0xd729]
0x13c4f:	call	0x4f10
0x13c54:	jmp	0x13ab0
0x13c59:	mov	rdi, qword ptr [rsp]
0x13c5d:	lea	rcx, [rip - 0x5724]
0x13c64:	xor	esi, esi
0x13c66:	xor	r13d, r13d
0x13c69:	mov	edx, 8
0x13c6e:	xor	r15d, r15d
0x13c71:	call	0x48e0
0x13c76:	mov	dword ptr [rsp + 0x10], 0
0x13c7e:	xor	r9d, r9d
0x13c81:	jmp	0x139ea
0x13c86:	xor	r15d, r15d
0x13c89:	xor	r9d, r9d
0x13c8c:	jmp	0x139ea
0x13c91:	call	0x49d0
0x13c96:	nop	word ptr cs:[rax + rax]
0x13ca0:	endbr64	
0x13ca4:	push	r15
0x13ca6:	xor	r15d, r15d
0x13ca9:	push	r14
0x13cab:	push	r13
0x13cad:	push	r12
0x13caf:	xor	r12d, r12d
0x13cb2:	push	rbp
0x13cb3:	mov	rbp, rdi
0x13cb6:	push	rbx
0x13cb7:	sub	rsp, 0x18
0x13cbb:	call	0x49b0
0x13cc0:	lea	rdi, [rax + 1]
0x13cc4:	call	0x1d670
0x13cc9:	mov	esi, 8
0x13cce:	mov	edi, 2
0x13cd3:	mov	r13, rax
0x13cd6:	call	0x1d740
0x13cdb:	mov	r14, rax
0x13cde:	xor	eax, eax
0x13ce0:	movzx	ebx, byte ptr [rbp]
0x13ce4:	add	rbp, 1
0x13ce8:	cmp	bl, 0x5c
0x13ceb:	je	0x13d25
0x13ced:	jg	0x13cf9
0x13cef:	cmp	bl, 9
0x13cf2:	je	0x13d40
0x13cf4:	test	bl, 0xdf
0x13cf7:	je	0x13d40
0x13cf9:	test	r12d, r12d
0x13cfc:	je	0x13d0a
0x13cfe:	movsxd	rcx, eax
0x13d01:	add	eax, 1
0x13d04:	mov	byte ptr [r13 + rcx], 0x5c
0x13d0a:	movsxd	rcx, eax
0x13d0d:	add	rbp, 1
0x13d11:	add	eax, 1
0x13d14:	xor	r12d, r12d
0x13d17:	mov	byte ptr [r13 + rcx], bl
0x13d1c:	movzx	ebx, byte ptr [rbp - 1]
0x13d20:	cmp	bl, 0x5c
0x13d23:	jne	0x13ced
0x13d25:	test	r12d, r12d
0x13d28:	je	0x13d36
0x13d2a:	movsxd	rcx, eax
0x13d2d:	add	eax, 1
0x13d30:	mov	byte ptr [r13 + rcx], 0x5c
0x13d36:	xor	r12d, 1
0x13d3a:	jmp	0x13ce0
0x13d3c:	nop	dword ptr [rax]
0x13d40:	test	bl, bl
0x13d42:	je	0x13d60
0x13d44:	test	r12b, 1
0x13d48:	je	0x13d60
0x13d4a:	movsxd	rcx, eax
0x13d4d:	mov	r12d, 1
0x13d53:	add	eax, 1
0x13d56:	mov	byte ptr [r13 + rcx], bl
0x13d5b:	jmp	0x13ce0
0x13d5d:	nop	dword ptr [rax]
0x13d60:	test	eax, eax
0x13d62:	je	0x13da6
0x13d64:	cdqe	
0x13d66:	movsxd	rdx, r15d
0x13d69:	mov	rdi, r13
0x13d6c:	mov	byte ptr [r13 + rax], 0
0x13d72:	lea	eax, [r15 + 1]
0x13d76:	lea	r15, [rdx*8]
0x13d7e:	lea	rcx, [r14 + r15]
0x13d82:	mov	dword ptr [rsp + 4], eax
0x13d86:	mov	qword ptr [rsp + 8], rcx
0x13d8b:	call	0x1d7a0
0x13d90:	mov	rcx, qword ptr [rsp + 8]
0x13d95:	mov	qword ptr [rcx], rax
0x13d98:	mov	qword ptr [r14 + r15 + 8], 0
0x13da1:	mov	r15d, dword ptr [rsp + 4]
0x13da6:	test	bl, bl
0x13da8:	je	0x13dd0
0x13daa:	lea	esi, [r15 + 2]
0x13dae:	mov	rdi, r14
0x13db1:	movsxd	rsi, esi
0x13db4:	shl	rsi, 3
0x13db8:	call	0x1d690
0x13dbd:	mov	r14, rax
0x13dc0:	xor	eax, eax
0x13dc2:	jmp	0x13ce0
0x13dc7:	nop	word ptr [rax + rax]
0x13dd0:	mov	rdi, r13
0x13dd3:	call	0x18d10
0x13dd8:	add	rsp, 0x18
0x13ddc:	mov	rax, r14
0x13ddf:	pop	rbx
0x13de0:	pop	rbp
0x13de1:	pop	r12
0x13de3:	pop	r13
0x13de5:	pop	r14
0x13de7:	pop	r15
0x13de9:	ret	
0x13dea:	nop	word ptr [rax + rax]
0x13df0:	endbr64	
0x13df4:	push	rbp
0x13df5:	mov	rbp, rdi
0x13df8:	push	rbx
0x13df9:	sub	rsp, 8
0x13dfd:	mov	rdi, qword ptr [rdi]
0x13e00:	test	rdi, rdi
0x13e03:	je	0x13e22
0x13e05:	mov	rbx, rbp
0x13e08:	nop	dword ptr [rax + rax]
0x13e10:	call	0x18d10
0x13e15:	mov	rdi, qword ptr [rbx + 8]
0x13e19:	add	rbx, 8
0x13e1d:	test	rdi, rdi
0x13e20:	jne	0x13e10
0x13e22:	add	rsp, 8
0x13e26:	mov	rdi, rbp
0x13e29:	pop	rbx
0x13e2a:	pop	rbp
0x13e2b:	jmp	0x18d10
0x13e30:	endbr64	
0x13e34:	push	r15
0x13e36:	push	r14
0x13e38:	push	r13
0x13e3a:	push	r12
0x13e3c:	push	rbp
0x13e3d:	push	rbx
0x13e3e:	sub	rsp, 0x48
0x13e42:	mov	rax, qword ptr fs:[0x28]
0x13e4b:	mov	qword ptr [rsp + 0x38], rax
0x13e50:	xor	eax, eax
0x13e52:	cmp	esi, 0x33
0x13e55:	ja	0x14857
0x13e5b:	mov	r12, rdx
0x13e5e:	mov	eax, esi
0x13e60:	lea	rdx, [rip + 0xda9d]
0x13e67:	mov	rbp, rdi
0x13e6a:	movsxd	rax, dword ptr [rdx + rax*4]
0x13e6e:	mov	r15d, esi
0x13e71:	mov	r13, rcx
0x13e74:	add	rax, rdx
0x13e77:	jmp	rax
0x13e7a:	 ----------
0x13e83:	 ----------
0x13e84:	movsxd	rax, dword ptr [rbp + 0x28]
0x13e88:	mov	rdx, qword ptr [rbp + 0x18]
0x13e8c:	mov	dword ptr [rbp + 0x84], r15d
0x13e93:	mov	rdi, qword ptr [rbp + 0x38]
0x13e97:	mov	dword ptr [rip + 0x1778a], r15d
0x13e9e:	lea	rax, [rax + rax*4]
0x13ea2:	shl	rax, 4
0x13ea6:	cmp	byte ptr [rdx], 0x2f
0x13ea9:	mov	rbx, qword ptr [rdi + rax]
0x13ead:	mov	eax, dword ptr [rbp + 0x68]
0x13eb0:	jne	0x13ebc
0x13eb2:	cmp	byte ptr [rdx + 1], 0
0x13eb6:	je	0x1498b
0x13ebc:	sub	eax, 1
0x13ebf:	add	rdi, 0x50
0x13ec3:	mov	edx, 0x50
0x13ec8:	movsxd	rsi, eax
0x13ecb:	lea	rcx, [rip - 0x5852]
0x13ed2:	call	0x48e0
0x13ed7:	mov	ecx, dword ptr [rbp + 0x68]
0x13eda:	test	ecx, ecx
0x13edc:	jle	0x14cab
0x13ee2:	mov	rdx, qword ptr [rbp + 0x38]
0x13ee6:	xor	eax, eax
0x13ee8:	jmp	0x13efb
0x13eea:	nop	word ptr [rax + rax]
0x13ef0:	add	eax, 1
0x13ef3:	add	rdx, 0x50
0x13ef7:	cmp	eax, ecx
0x13ef9:	je	0x13f00
0x13efb:	cmp	qword ptr [rdx], rbx
0x13efe:	jne	0x13ef0
0x13f00:	mov	dword ptr [rbp + 0x28], eax
0x13f03:	mov	rdi, rbp
0x13f06:	xor	eax, eax
0x13f08:	call	0xf110
0x13f0d:	mov	dword ptr [rbp + 0x2c], eax
0x13f10:	jmp	0x13f40
0x13f12:	nop	word ptr [rax + rax]
0x13f18:	sub	r15d, 9
0x13f1c:	cmp	dword ptr [rbp + 0x64], 0x4f
0x13f20:	mov	dword ptr [rbp + 0x80], r15d
0x13f27:	jg	0x13f40
0x13f29:	cmp	r15d, 5
0x13f2d:	jne	0x13f40
0x13f2f:	mov	dword ptr [rbp + 0x80], 0
0x13f39:	nop	dword ptr [rax]
0x13f40:	cmp	byte ptr [rbp + 0x6d], 0
0x13f44:	je	0x13f50
0x13f46:	mov	rdi, rbp
0x13f49:	xor	eax, eax
0x13f4b:	call	0x10d70
0x13f50:	mov	rax, qword ptr [rsp + 0x38]
0x13f55:	sub	rax, qword ptr fs:[0x28]
0x13f5e:	jne	0x14ce9
0x13f64:	add	rsp, 0x48
0x13f68:	xor	eax, eax
0x13f6a:	pop	rbx
0x13f6b:	pop	rbp
0x13f6c:	pop	r12
0x13f6e:	pop	r13
0x13f70:	pop	r14
0x13f72:	pop	r15
0x13f74:	ret	
0x13f75:	nop	dword ptr [rax]
0x13f78:	movsxd	rax, dword ptr [rdi + 0x28]
0x13f7c:	mov	esi, 0x2e
0x13f81:	lea	rax, [rax + rax*4]
0x13f85:	shl	rax, 4
0x13f89:	add	rax, qword ptr [rdi + 0x38]
0x13f8d:	mov	r12, qword ptr [rax]
0x13f90:	mov	rdi, r12
0x13f93:	call	0x4a20
0x13f98:	mov	rbx, rax
0x13f9b:	test	rax, rax
0x13f9e:	je	0x13f50
0x13fa0:	cmp	r12, rax
0x13fa3:	je	0x13f50
0x13fa5:	mov	rdi, rax
0x13fa8:	call	0x49b0
0x13fad:	lea	rdi, [rax + 2]
0x13fb1:	call	0x4c20
0x13fb6:	mov	r8, rbx
0x13fb9:	mov	esi, 1
0x13fbe:	xor	ebx, ebx
0x13fc0:	mov	rdi, rax
0x13fc3:	mov	r13, rax
0x13fc6:	xor	eax, eax
0x13fc8:	mov	rdx, -1
0x13fcf:	lea	rcx, [rip + 0xd3be]
0x13fd6:	call	0x4f10
0x13fdb:	mov	eax, dword ptr [rbp + 0x68]
0x13fde:	test	eax, eax
0x13fe0:	jle	0x14132
0x13fe6:	nop	word ptr cs:[rax + rax]
0x13ff0:	mov	rax, qword ptr [rbp + 0x38]
0x13ff4:	lea	r12, [rbx + rbx*4]
0x13ff8:	shl	r12, 4
0x13ffc:	add	rax, r12
0x13fff:	cmp	byte ptr [rax + 0x48], 0
0x14003:	je	0x14048
0x14005:	cmp	dword ptr [rip + 0x17618], 1
0x1400c:	mov	rsi, qword ptr [rax]
0x1400f:	mov	rdi, r13
0x14012:	sbb	edx, edx
0x14014:	and	edx, 4
0x14017:	add	edx, 1
0x1401a:	call	0x4a40
0x1401f:	test	eax, eax
0x14021:	jne	0x14048
0x14023:	add	r12, qword ptr [rbp + 0x38]
0x14027:	movzx	eax, byte ptr [r12 + 0x49]
0x1402d:	cmp	r15d, 0x32
0x14031:	je	0x149b3
0x14037:	test	al, al
0x14039:	je	0x14048
0x1403b:	mov	byte ptr [r12 + 0x49], 0
0x14041:	sub	dword ptr [rbp + 0x70], 1
0x14045:	nop	dword ptr [rax]
0x14048:	add	rbx, 1
0x1404c:	cmp	dword ptr [rbp + 0x68], ebx
0x1404f:	jg	0x13ff0
0x14051:	jmp	0x14132
0x14056:	nop	word ptr cs:[rax + rax]
0x14060:	xor	eax, eax
0x14062:	mov	rdi, rcx
0x14065:	call	0x13ca0
0x1406a:	cmp	qword ptr [rax], 0
0x1406e:	mov	r14, rax
0x14071:	mov	r13, rax
0x14074:	je	0x1412a
0x1407a:	nop	word ptr [rax + rax]
0x14080:	mov	edx, dword ptr [rbp + 0x68]
0x14083:	xor	ebx, ebx
0x14085:	test	edx, edx
0x14087:	jle	0x140f9
0x14089:	nop	dword ptr [rax]
0x14090:	mov	rax, qword ptr [rbp + 0x38]
0x14094:	lea	r12, [rbx + rbx*4]
0x14098:	shl	r12, 4
0x1409c:	add	rax, r12
0x1409f:	cmp	byte ptr [rax + 0x48], 0
0x140a3:	je	0x140f0
0x140a5:	cmp	dword ptr [rip + 0x17578], 1
0x140ac:	mov	rsi, qword ptr [rax]
0x140af:	sbb	edx, edx
0x140b1:	mov	rdi, qword ptr [r13]
0x140b5:	and	edx, 4
0x140b8:	add	edx, 1
0x140bb:	call	0x4a40
0x140c0:	test	eax, eax
0x140c2:	jne	0x140f0
0x140c4:	add	r12, qword ptr [rbp + 0x38]
0x140c8:	movzx	eax, byte ptr [r12 + 0x49]
0x140ce:	cmp	r15d, 0x24
0x140d2:	je	0x14840
0x140d8:	test	al, al
0x140da:	je	0x140f0
0x140dc:	mov	byte ptr [r12 + 0x49], 0
0x140e2:	sub	dword ptr [rbp + 0x70], 1
0x140e6:	nop	word ptr cs:[rax + rax]
0x140f0:	add	rbx, 1
0x140f4:	cmp	dword ptr [rbp + 0x68], ebx
0x140f7:	jg	0x14090
0x140f9:	add	r13, 8
0x140fd:	cmp	qword ptr [r13], 0
0x14102:	jne	0x14080
0x14108:	mov	rdi, qword ptr [r14]
0x1410b:	test	rdi, rdi
0x1410e:	je	0x1412a
0x14110:	mov	rbx, r14
0x14113:	nop	dword ptr [rax + rax]
0x14118:	call	0x18d10
0x1411d:	mov	rdi, qword ptr [rbx + 8]
0x14121:	add	rbx, 8
0x14125:	test	rdi, rdi
0x14128:	jne	0x14118
0x1412a:	mov	rdi, r14
0x1412d:	call	0x18d10
0x14132:	cmp	byte ptr [rbp + 0x6d], 0
0x14136:	je	0x13f50
0x1413c:	mov	rdi, rbp
0x1413f:	xor	eax, eax
0x14141:	call	0x10d70
0x14146:	cmp	byte ptr [rbp + 0x6d], 0
0x1414a:	je	0x13f50
0x14150:	mov	rdi, rbp
0x14153:	xor	eax, eax
0x14155:	call	0xec50
0x1415a:	jmp	0x13f50
0x1415f:	mov	rax, qword ptr [rdi + 0x18]
0x14163:	cmp	byte ptr [rax], 0x2f
0x14166:	je	0x149a4
0x1416c:	mov	esi, dword ptr [rbp + 0x28]
0x1416f:	test	esi, esi
0x14171:	je	0x14187
0x14173:	mov	dword ptr [rbp + 0x28], 0
0x1417a:	mov	rdi, rbp
0x1417d:	xor	eax, eax
0x1417f:	call	0xf110
0x14184:	mov	dword ptr [rbp + 0x2c], eax
0x14187:	mov	rax, qword ptr [rsp + 0x38]
0x1418c:	sub	rax, qword ptr fs:[0x28]
0x14195:	jne	0x14ce9
0x1419b:	add	rsp, 0x48
0x1419f:	mov	rsi, r12
0x141a2:	mov	rdi, rbp
0x141a5:	xor	eax, eax
0x141a7:	pop	rbx
0x141a8:	pop	rbp
0x141a9:	pop	r12
0x141ab:	pop	r13
0x141ad:	pop	r14
0x141af:	pop	r15
0x141b1:	jmp	0x162b0
0x141b6:	mov	edx, dword ptr [rdi + 0x68]
0x141b9:	test	edx, edx
0x141bb:	jle	0x141ec
0x141bd:	sub	edx, 1
0x141c0:	mov	rcx, qword ptr [rdi + 0x38]
0x141c4:	lea	rdx, [rdx + rdx*4]
0x141c8:	shl	rdx, 4
0x141cc:	lea	rax, [rcx + 0x49]
0x141d0:	lea	rdx, [rcx + rdx + 0x99]
0x141d8:	nop	dword ptr [rax + rax]
0x141e0:	mov	byte ptr [rax], 0
0x141e3:	add	rax, 0x50
0x141e7:	cmp	rdx, rax
0x141ea:	jne	0x141e0
0x141ec:	cmp	byte ptr [rbp + 0x6d], 0
0x141f0:	mov	dword ptr [rbp + 0x70], 0
0x141f7:	je	0x13f50
0x141fd:	jmp	0x1413c
0x14202:	movzx	edx, byte ptr [rdi + 0x6d]
0x14206:	mov	ebx, r8d
0x14209:	xor	r13d, r13d
0x1420c:	xor	r12d, r12d
0x1420f:	test	r8d, r8d
0x14212:	jne	0x14249
0x14214:	jmp	0x1488f
0x14219:	nop	dword ptr [rax]
0x14220:	test	r12d, r12d
0x14223:	jne	0x14240
0x14225:	mov	r12d, 1
0x1422b:	test	dl, dl
0x1422d:	je	0x14240
0x1422f:	mov	rdi, rbp
0x14232:	call	0x10760
0x14237:	movzx	edx, byte ptr [rbp + 0x6d]
0x1423b:	nop	dword ptr [rax + rax]
0x14240:	sub	ebx, 1
0x14243:	je	0x14870
0x14249:	mov	esi, dword ptr [rbp + 0x28]
0x1424c:	test	esi, esi
0x1424e:	je	0x14870
0x14254:	lea	eax, [rsi - 1]
0x14257:	mov	dword ptr [rbp + 0x28], eax
0x1425a:	cmp	esi, dword ptr [rbp + 0x2c]
0x1425d:	jne	0x14220
0x1425f:	sub	esi, dword ptr [rbp + 0x88]
0x14265:	mov	eax, 0
0x1426a:	mov	r13d, 1
0x14270:	cmovs	esi, eax
0x14273:	mov	dword ptr [rbp + 0x2c], esi
0x14276:	jmp	0x14240
0x14278:	mov	rsi, r12
0x1427b:	xor	eax, eax
0x1427d:	call	0x15bb0
0x14282:	jmp	0x13f50
0x14287:	mov	rsi, r12
0x1428a:	xor	eax, eax
0x1428c:	call	0x15910
0x14291:	jmp	0x13f50
0x14296:	mov	edx, dword ptr [rcx]
0x14298:	mov	rsi, r12
0x1429b:	xor	eax, eax
0x1429d:	call	0x167a0
0x142a2:	jmp	0x13f50
0x142a7:	mov	edx, dword ptr [rcx]
0x142a9:	mov	rsi, r12
0x142ac:	xor	eax, eax
0x142ae:	call	0x12fd0
0x142b3:	jmp	0x13f50
0x142b8:	mov	rdi, qword ptr [rdi + 0x48]
0x142bc:	call	0x19120
0x142c1:	mov	qword ptr [rbp + 0x48], 0
0x142c9:	jmp	0x13f50
0x142ce:	mov	eax, dword ptr [rdi + 0x30]
0x142d1:	mov	edx, dword ptr [rdi + 0x64]
0x142d4:	mov	esi, 4
0x142d9:	add	r8d, dword ptr [rdi + 0x74]
0x142dd:	add	eax, 1
0x142e0:	cmp	edx, 0x27
0x142e3:	jle	0x14300
0x142e5:	movsxd	rcx, dword ptr [rdi + 0x80]
0x142ec:	cmp	edx, 0x49
0x142ef:	jg	0x142f6
0x142f1:	cmp	ecx, 5
0x142f4:	je	0x14300
0x142f6:	lea	rsi, [rip + 0xd6e3]
0x142fd:	mov	esi, dword ptr [rsi + rcx*4]
0x14300:	sub	edx, esi
0x14302:	sub	eax, edx
0x14304:	mov	edx, 0
0x14309:	cmovs	eax, edx
0x1430c:	cmp	eax, r8d
0x1430f:	cmovg	eax, r8d
0x14313:	mov	dword ptr [rbp + 0x74], eax
0x14316:	mov	rdi, rbp
0x14319:	xor	eax, eax
0x1431b:	call	0x10ec0
0x14320:	xor	eax, eax
0x14322:	mov	rdi, rbp
0x14325:	call	0x10160
0x1432a:	cmp	byte ptr [rbp + 0x6d], 0
0x1432e:	je	0x1433a
0x14330:	mov	rdi, rbp
0x14333:	xor	eax, eax
0x14335:	call	0xec50
0x1433a:	mov	rdi, rbp
0x1433d:	xor	eax, eax
0x1433f:	call	0x10240
0x14344:	jmp	0x13f40
0x14349:	sub	dword ptr [rdi + 0x74], r8d
0x1434d:	mov	eax, dword ptr [rdi + 0x74]
0x14350:	xor	edx, edx
0x14352:	test	eax, eax
0x14354:	cmovs	eax, edx
0x14357:	jmp	0x14313
0x14359:	xor	esi, esi
0x1435b:	mov	rdi, rcx
0x1435e:	mov	edx, 0xa
0x14363:	call	0x4ba0
0x14368:	mov	rsi, r12
0x1436b:	mov	rdi, rbp
0x1436e:	movsxd	rdx, eax
0x14371:	xor	eax, eax
0x14373:	call	0x137c0
0x14378:	jmp	0x13f50
0x1437d:	mov	rsi, r12
0x14380:	xor	eax, eax
0x14382:	call	0x12ca0
0x14387:	jmp	0x13f50
0x1438c:	mov	eax, dword ptr [rdi + 0x60]
0x1438f:	mov	edx, dword ptr [r12 + 0x60]
0x14394:	mov	dword ptr [rdi + 0x60], edx
0x14397:	mov	edx, dword ptr [r12 + 0x64]
0x1439c:	mov	dword ptr [r12 + 0x60], eax
0x143a1:	mov	eax, dword ptr [rdi + 0x64]
0x143a4:	mov	dword ptr [rdi + 0x64], edx
0x143a7:	mov	edx, dword ptr [r12 + 0x58]
0x143ac:	mov	dword ptr [r12 + 0x64], eax
0x143b1:	mov	eax, dword ptr [rdi + 0x58]
0x143b4:	mov	dword ptr [rdi + 0x58], edx
0x143b7:	mov	edx, dword ptr [r12 + 0x5c]
0x143bc:	mov	dword ptr [r12 + 0x58], eax
0x143c1:	mov	eax, dword ptr [rdi + 0x5c]
0x143c4:	mov	dword ptr [rdi + 0x5c], edx
0x143c7:	mov	dword ptr [r12 + 0x5c], eax
0x143cc:	movsxd	rcx, dword ptr [rdi + 0x60]
0x143d0:	movsxd	rdx, dword ptr [rdi + 0x5c]
0x143d4:	movsxd	rsi, dword ptr [rdi + 0x58]
0x143d8:	movsxd	r8, dword ptr [rdi + 0x64]
0x143dc:	call	0xf590
0x143e1:	movsxd	rcx, dword ptr [r12 + 0x60]
0x143e6:	movsxd	rdx, dword ptr [r12 + 0x5c]
0x143eb:	mov	rdi, r12
0x143ee:	movsxd	rsi, dword ptr [r12 + 0x58]
0x143f3:	movsxd	r8, dword ptr [r12 + 0x64]
0x143f8:	call	0xf590
0x143fd:	jmp	0x13f50
0x14402:	mov	rsi, r12
0x14405:	xor	eax, eax
0x14407:	call	0x14e20
0x1440c:	jmp	0x13f50
0x14411:	mov	eax, dword ptr [rdi + 0x84]
0x14417:	add	eax, 1
0x1441a:	movsxd	r15, eax
0x1441d:	cdq	
0x1441e:	imul	r15, r15, 0x38e38e39
0x14425:	sar	r15, 0x21
0x14429:	sub	r15d, edx
0x1442c:	lea	edx, [r15 + r15*8]
0x14430:	sub	eax, edx
0x14432:	mov	r15d, eax
0x14435:	jmp	0x13e84
0x1443a:	mov	eax, dword ptr [rdi + 0x80]
0x14440:	add	eax, 1
0x14443:	movsxd	r15, eax
0x14446:	cdq	
0x14447:	imul	r15, r15, 0x2aaaaaab
0x1444e:	shr	r15, 0x20
0x14452:	sub	r15d, edx
0x14455:	lea	edx, [r15 + r15*2]
0x14459:	add	edx, edx
0x1445b:	sub	eax, edx
0x1445d:	mov	r15d, eax
0x14460:	jmp	0x13f1c
0x14465:	mov	edx, dword ptr [rdi + 0x68]
0x14468:	mov	dword ptr [rdi + 0x70], 0
0x1446f:	test	edx, edx
0x14471:	jle	0x14132
0x14477:	sub	edx, 1
0x1447a:	mov	rcx, qword ptr [rdi + 0x38]
0x1447e:	lea	rdx, [rdx + rdx*4]
0x14482:	shl	rdx, 4
0x14486:	lea	rax, [rcx + 0x49]
0x1448a:	lea	rcx, [rcx + rdx + 0x99]
0x14492:	nop	word ptr [rax + rax]
0x14498:	cmp	byte ptr [rax - 1], 0
0x1449c:	je	0x144ac
0x1449e:	cmp	byte ptr [rax], 0
0x144a1:	sete	dl
0x144a4:	mov	byte ptr [rax], dl
0x144a6:	movzx	edx, dl
0x144a9:	add	dword ptr [rbp + 0x70], edx
0x144ac:	add	rax, 0x50
0x144b0:	cmp	rcx, rax
0x144b3:	jne	0x14498
0x144b5:	jmp	0x14132
0x144ba:	mov	rsi, rcx
0x144bd:	xor	eax, eax
0x144bf:	call	0x161d0
0x144c4:	jmp	0x13f50
0x144c9:	mov	rdx, rcx
0x144cc:	mov	rsi, r12
0x144cf:	xor	eax, eax
0x144d1:	call	0x165f0
0x144d6:	jmp	0x13f50
0x144db:	mov	rcx, qword ptr [rcx + 8]
0x144df:	mov	rdi, rcx
0x144e2:	mov	qword ptr [rsp + 8], rcx
0x144e7:	call	0x49b0
0x144ec:	mov	rcx, qword ptr [rsp + 8]
0x144f1:	mov	qword ptr [rsp + 0x10], rax
0x144f6:	mov	r14, rax
0x144f9:	mov	eax, dword ptr [r13]
0x144fd:	cmp	eax, 2
0x14500:	je	0x14bb4
0x14506:	cmp	eax, 3
0x14509:	je	0x14aea
0x1450f:	cmp	eax, 1
0x14512:	je	0x148db
0x14518:	mov	rax, qword ptr [rbp + 0x40]
0x1451c:	mov	qword ptr [r13 + 0x10], rax
0x14520:	jmp	0x13f50
0x14525:	mov	rdi, qword ptr [rcx + 8]
0x14529:	mov	qword ptr [rsp + 8], rdi
0x1452e:	call	0x49b0
0x14533:	mov	rdi, qword ptr [rsp + 8]
0x14538:	mov	qword ptr [rsp + 0x10], rax
0x1453d:	mov	r14, rax
0x14540:	mov	eax, dword ptr [r13]
0x14544:	cmp	eax, 2
0x14547:	je	0x14a96
0x1454d:	cmp	eax, 3
0x14550:	je	0x149de
0x14556:	cmp	eax, 1
0x14559:	je	0x148db
0x1455f:	mov	rax, qword ptr [rbp + 0x40]
0x14563:	mov	qword ptr [rsp + 0x10], rax
0x14568:	mov	rax, qword ptr [rsp + 0x10]
0x1456d:	mov	qword ptr [r13 + 0x10], rax
0x14571:	jmp	0x13f50
0x14576:	mov	edi, 0x10
0x1457b:	call	0x19100
0x14580:	lea	rsi, [rsp + 0x20]
0x14585:	mov	qword ptr [rsp + 0x28], 0
0x1458e:	mov	qword ptr [rbp + 0x48], rax
0x14592:	mov	rdi, rax
0x14595:	mov	eax, dword ptr [rbp + 0x28]
0x14598:	mov	dword ptr [rsp + 0x20], eax
0x1459c:	call	0x19150
0x145a1:	mov	qword ptr [rbp + 0x40], 0
0x145a9:	mov	byte ptr [rbp + 0x6e], 0
0x145ad:	jmp	0x13f50
0x145b2:	xor	esi, esi
0x145b4:	mov	edx, 0xa
0x145b9:	mov	rdi, rcx
0x145bc:	call	0x4ba0
0x145c1:	test	eax, eax
0x145c3:	jle	0x13f50
0x145c9:	mov	ecx, dword ptr [rbp + 0x60]
0x145cc:	lea	edx, [rcx - 1]
0x145cf:	cmp	edx, eax
0x145d1:	jle	0x13f50
0x145d7:	mov	dword ptr [r12 + 0x88], eax
0x145df:	mov	dword ptr [rbp + 0x88], eax
0x145e5:	jmp	0x13f50
0x145ea:	mov	eax, dword ptr [rdi + 0x68]
0x145ed:	sub	eax, 1
0x145f0:	cmp	dword ptr [rdi + 0x28], eax
0x145f3:	je	0x13f50
0x145f9:	mov	dword ptr [rdi + 0x28], eax
0x145fc:	mov	rdi, rbp
0x145ff:	xor	eax, eax
0x14601:	call	0xf110
0x14606:	mov	dword ptr [rbp + 0x2c], eax
0x14609:	jmp	0x14132
0x1460e:	mov	ecx, dword ptr [rdi + 0x28]
0x14611:	test	ecx, ecx
0x14613:	je	0x13f50
0x14619:	mov	dword ptr [rdi + 0x28], 0
0x14620:	jmp	0x145fc
0x14622:	mov	r9d, dword ptr [rdi + 0x68]
0x14626:	mov	r10d, dword ptr [rdi + 0x28]
0x1462a:	lea	eax, [r9 - 1]
0x1462e:	cmp	r10d, eax
0x14631:	je	0x13f50
0x14637:	mov	r8d, dword ptr [rdi + 0x60]
0x1463b:	mov	ecx, eax
0x1463d:	sub	ecx, dword ptr [rdi + 0x2c]
0x14640:	lea	edx, [r8 - 2]
0x14644:	cmp	ecx, edx
0x14646:	jl	0x14656
0x14648:	mov	ecx, eax
0x1464a:	sub	ecx, r10d
0x1464d:	cmp	edx, ecx
0x1464f:	jg	0x14656
0x14651:	lea	eax, [r10 + r8 - 2]
0x14656:	mov	dword ptr [rbp + 0x28], eax
0x14659:	mov	rdi, rbp
0x1465c:	xor	eax, eax
0x1465e:	sub	r8d, 1
0x14662:	call	0xf110
0x14667:	mov	dword ptr [rbp + 0x2c], eax
0x1466a:	movzx	eax, byte ptr [rbp + 0x6d]
0x1466e:	cmp	r9d, r8d
0x14671:	jge	0x148ce
0x14677:	test	al, al
0x14679:	je	0x13f50
0x1467f:	mov	esi, r10d
0x14682:	mov	rdi, rbp
0x14685:	call	0x10760
0x1468a:	cmp	byte ptr [rbp + 0x6d], 0
0x1468e:	mov	esi, dword ptr [rbp + 0x28]
0x14691:	je	0x13f50
0x14697:	mov	rdi, rbp
0x1469a:	call	0x10760
0x1469f:	jmp	0x14146
0x146a4:	mov	r8d, dword ptr [rdi + 0x28]
0x146a8:	test	r8d, r8d
0x146ab:	je	0x13f50
0x146b1:	mov	r9d, dword ptr [rdi + 0x60]
0x146b5:	lea	eax, [r9 - 2]
0x146b9:	cmp	r8d, eax
0x146bc:	jge	0x149ca
0x146c2:	mov	dword ptr [rdi + 0x28], 0
0x146c9:	xor	eax, eax
0x146cb:	call	0xf110
0x146d0:	mov	dword ptr [rbp + 0x2c], eax
0x146d3:	sub	r9d, 1
0x146d7:	movzx	eax, byte ptr [rbp + 0x6d]
0x146db:	cmp	r9d, dword ptr [rbp + 0x68]
0x146df:	jle	0x148ce
0x146e5:	mov	esi, r8d
0x146e8:	test	al, al
0x146ea:	je	0x13f50
0x146f0:	jmp	0x14682
0x146f2:	movzx	edi, byte ptr [rdi + 0x6d]
0x146f6:	mov	ebx, r8d
0x146f9:	xor	r13d, r13d
0x146fc:	xor	r12d, r12d
0x146ff:	test	r8d, r8d
0x14702:	jne	0x14739
0x14704:	jmp	0x148c0
0x14709:	nop	dword ptr [rax]
0x14710:	test	r12d, r12d
0x14713:	jne	0x14730
0x14715:	mov	r12d, 1
0x1471b:	test	dil, dil
0x1471e:	je	0x14730
0x14720:	mov	rdi, rbp
0x14723:	mov	esi, r9d
0x14726:	call	0x10760
0x1472b:	movzx	edi, byte ptr [rbp + 0x6d]
0x1472f:	nop	
0x14730:	sub	ebx, 1
0x14733:	je	0x148a0
0x14739:	mov	eax, dword ptr [rbp + 0x68]
0x1473c:	mov	r9d, dword ptr [rbp + 0x28]
0x14740:	sub	eax, 1
0x14743:	cmp	r9d, eax
0x14746:	jge	0x148a0
0x1474c:	mov	esi, dword ptr [rbp + 0x2c]
0x1474f:	mov	ecx, dword ptr [rbp + 0x60]
0x14752:	lea	edx, [r9 + 1]
0x14756:	mov	dword ptr [rbp + 0x28], edx
0x14759:	sub	ecx, 2
0x1475c:	sub	edx, esi
0x1475e:	cmp	edx, ecx
0x14760:	jl	0x14710
0x14762:	sub	eax, ecx
0x14764:	add	esi, dword ptr [rbp + 0x88]
0x1476a:	mov	r13d, 1
0x14770:	add	eax, 1
0x14773:	cmp	esi, eax
0x14775:	cmovg	esi, eax
0x14778:	mov	dword ptr [rbp + 0x2c], esi
0x1477b:	jmp	0x14730
0x1477d:	mov	rax, qword ptr [rdi + 0x18]
0x14781:	mov	esi, dword ptr [rdi + 0x28]
0x14784:	cmp	byte ptr [rax], 0x2f
0x14787:	je	0x1497c
0x1478d:	test	esi, esi
0x1478f:	je	0x147d0
0x14791:	movsxd	rax, esi
0x14794:	lea	rax, [rax + rax*4]
0x14798:	shl	rax, 4
0x1479c:	add	rax, qword ptr [rbp + 0x38]
0x147a0:	movzx	edx, byte ptr [rax + 0x49]
0x147a4:	test	dl, dl
0x147a6:	sete	byte ptr [rax + 0x49]
0x147aa:	cmp	dl, 1
0x147ad:	sbb	eax, eax
0x147af:	and	eax, 2
0x147b2:	sub	eax, 1
0x147b5:	add	dword ptr [rbp + 0x70], eax
0x147b8:	cmp	byte ptr [rbp + 0x6d], 0
0x147bc:	je	0x147d0
0x147be:	mov	rdi, rbp
0x147c1:	mov	dword ptr [rsp + 8], r8d
0x147c6:	call	0x10760
0x147cb:	mov	r8d, dword ptr [rsp + 8]
0x147d0:	xor	ecx, ecx
0x147d2:	mov	rdx, r12
0x147d5:	mov	esi, 0x1c
0x147da:	mov	rdi, rbp
0x147dd:	call	0x13e30
0x147e2:	jmp	0x13f50
0x147e7:	mov	rsi, r12
0x147ea:	xor	eax, eax
0x147ec:	call	0x15400
0x147f1:	jmp	0x13f50
0x147f6:	mov	edx, dword ptr [rdi + 0x68]
0x147f9:	test	edx, edx
0x147fb:	jle	0x14132
0x14801:	sub	edx, 1
0x14804:	mov	rcx, qword ptr [rdi + 0x38]
0x14808:	lea	rdx, [rdx + rdx*4]
0x1480c:	shl	rdx, 4
0x14810:	lea	rax, [rcx + 0x49]
0x14814:	lea	rdx, [rcx + rdx + 0x99]
0x1481c:	nop	dword ptr [rax]
0x14820:	cmp	byte ptr [rax], 0
0x14823:	jne	0x14832
0x14825:	cmp	byte ptr [rax - 1], 0
0x14829:	je	0x14832
0x1482b:	mov	byte ptr [rax], 1
0x1482e:	add	dword ptr [rbp + 0x70], 1
0x14832:	add	rax, 0x50
0x14836:	cmp	rax, rdx
0x14839:	jne	0x14820
0x1483b:	jmp	0x14132
0x14840:	test	al, al
0x14842:	jne	0x140f0
0x14848:	mov	byte ptr [r12 + 0x49], 1
0x1484e:	add	dword ptr [rbp + 0x70], 1
0x14852:	jmp	0x140f0
0x14857:	lea	rdi, [rip + 0xcb3a]
0x1485e:	call	0x8b00
0x14863:	jmp	0x13f50
0x14868:	nop	dword ptr [rax + rax]
0x14870:	test	r13d, r13d
0x14873:	je	0x14931
0x14879:	test	dl, dl
0x1487b:	je	0x13f50
0x14881:	mov	rdi, rbp
0x14884:	xor	eax, eax
0x14886:	call	0x10d70
0x1488b:	movzx	edx, byte ptr [rbp + 0x6d]
0x1488f:	test	dl, dl
0x14891:	jne	0x14150
0x14897:	jmp	0x13f50
0x1489c:	nop	dword ptr [rax]
0x148a0:	test	r13d, r13d
0x148a3:	je	0x14956
0x148a9:	test	dil, dil
0x148ac:	je	0x13f50
0x148b2:	mov	rdi, rbp
0x148b5:	xor	eax, eax
0x148b7:	call	0x10d70
0x148bc:	movzx	edi, byte ptr [rbp + 0x6d]
0x148c0:	test	dil, dil
0x148c3:	jne	0x14150
0x148c9:	jmp	0x13f50
0x148ce:	test	al, al
0x148d0:	je	0x13f50
0x148d6:	jmp	0x1413c
0x148db:	mov	rdi, qword ptr [rbp + 0x48]
0x148df:	lea	r14, [rsp + 0x20]
0x148e4:	mov	rsi, r14
0x148e7:	call	0x191a0
0x148ec:	mov	edx, dword ptr [rsp + 0x20]
0x148f0:	mov	rax, qword ptr [rbp + 0x40]
0x148f4:	cmp	rax, qword ptr [rsp + 0x10]
0x148f9:	jne	0x1451c
0x148ff:	mov	r8d, dword ptr [rbp + 0x28]
0x14903:	cmp	r8d, edx
0x14906:	jl	0x14cb2
0x1490c:	jg	0x14ccf
0x14912:	mov	rdi, qword ptr [rbp + 0x48]
0x14916:	mov	edx, 1
0x1491b:	mov	rsi, r14
0x1491e:	call	0x19200
0x14923:	mov	rax, qword ptr [rsp + 0x28]
0x14928:	mov	qword ptr [rbp + 0x40], rax
0x1492c:	jmp	0x1451c
0x14931:	test	r12d, r12d
0x14934:	je	0x1488f
0x1493a:	mov	esi, dword ptr [rbp + 0x28]
0x1493d:	test	dl, dl
0x1493f:	je	0x13f50
0x14945:	mov	rdi, rbp
0x14948:	call	0x10760
0x1494d:	movzx	edx, byte ptr [rbp + 0x6d]
0x14951:	jmp	0x1488f
0x14956:	test	r12d, r12d
0x14959:	je	0x148c0
0x1495f:	mov	esi, dword ptr [rbp + 0x28]
0x14962:	test	dil, dil
0x14965:	je	0x13f50
0x1496b:	mov	rdi, rbp
0x1496e:	call	0x10760
0x14973:	movzx	edi, byte ptr [rbp + 0x6d]
0x14977:	jmp	0x148c0
0x1497c:	cmp	byte ptr [rax + 1], 0
0x14980:	je	0x14791
0x14986:	jmp	0x1478d
0x1498b:	movsxd	rsi, eax
0x1498e:	lea	rcx, [rip - 0x6315]
0x14995:	mov	edx, 0x50
0x1499a:	call	0x48e0
0x1499f:	jmp	0x13ed7
0x149a4:	cmp	byte ptr [rax + 1], 0
0x149a8:	je	0x13f50
0x149ae:	jmp	0x1416c
0x149b3:	test	al, al
0x149b5:	jne	0x14048
0x149bb:	mov	byte ptr [r12 + 0x49], 1
0x149c1:	add	dword ptr [rbp + 0x70], 1
0x149c5:	jmp	0x14048
0x149ca:	mov	edx, r8d
0x149cd:	sub	edx, eax
0x149cf:	xor	eax, eax
0x149d1:	mov	dword ptr [rdi + 0x28], edx
0x149d4:	call	0xf110
0x149d9:	jmp	0x146d0
0x149de:	mov	eax, dword ptr [rbp + 0x28]
0x149e1:	mov	rdi, qword ptr [rbp + 0x48]
0x149e5:	lea	rsi, [rsp + 0x20]
0x149ea:	mov	qword ptr [rsp + 0x28], r14
0x149ef:	mov	dword ptr [rsp + 0x20], eax
0x149f3:	call	0x19150
0x149f8:	mov	rax, qword ptr [r13 + 8]
0x149fc:	mov	ebx, dword ptr [rbp + 0x28]
0x149ff:	mov	qword ptr [rsp + 8], rax
0x14a04:	test	ebx, ebx
0x14a06:	js	0x14a80
0x14a08:	movsxd	rax, ebx
0x14a0b:	lea	r8, [rax + rax*4]
0x14a0f:	shl	r8, 4
0x14a13:	add	r8, qword ptr [rbp + 0x38]
0x14a17:	mov	r15, r8
0x14a1a:	jmp	0x14a2c
0x14a1c:	nop	dword ptr [rax]
0x14a20:	sub	ebx, 1
0x14a23:	sub	r15, 0x50
0x14a27:	cmp	ebx, -1
0x14a2a:	je	0x14a80
0x14a2c:	mov	rsi, qword ptr [r15]
0x14a2f:	mov	rdi, qword ptr [rsp + 8]
0x14a34:	mov	rdx, r14
0x14a37:	call	0x4c30
0x14a3c:	test	eax, eax
0x14a3e:	jne	0x14a20
0x14a40:	cmp	byte ptr [rbp + 0x6e], 0
0x14a44:	mov	qword ptr [rbp + 0x40], r14
0x14a48:	je	0x14c8d
0x14a4e:	mov	dword ptr [rbp + 0x28], ebx
0x14a51:	xor	eax, eax
0x14a53:	mov	rdi, rbp
0x14a56:	call	0xf110
0x14a5b:	cmp	byte ptr [rbp + 0x6d], 0
0x14a5f:	mov	dword ptr [rbp + 0x2c], eax
0x14a62:	je	0x14a77
0x14a64:	xor	eax, eax
0x14a66:	mov	rdi, rbp
0x14a69:	call	0x10d70
0x14a6e:	mov	rax, qword ptr [rbp + 0x40]
0x14a72:	mov	qword ptr [rsp + 0x10], rax
0x14a77:	mov	byte ptr [rbp + 0x6e], 0
0x14a7b:	jmp	0x14568
0x14a80:	mov	rax, qword ptr [rbp + 0x40]
0x14a84:	mov	dword ptr [r13], 0xffffffff
0x14a8c:	mov	qword ptr [rsp + 0x10], rax
0x14a91:	jmp	0x14568
0x14a96:	cmp	byte ptr [rbp + 0x6e], 0
0x14a9a:	je	0x14c0e
0x14aa0:	mov	eax, dword ptr [rbp + 0x68]
0x14aa3:	lea	ebx, [rax - 1]
0x14aa6:	test	ebx, ebx
0x14aa8:	js	0x14a80
0x14aaa:	movsxd	rax, ebx
0x14aad:	lea	r15, [rax + rax*4]
0x14ab1:	shl	r15, 4
0x14ab5:	add	r15, qword ptr [rbp + 0x38]
0x14ab9:	jmp	0x14ad1
0x14abb:	nop	dword ptr [rax + rax]
0x14ac0:	sub	ebx, 1
0x14ac3:	sub	r15, 0x50
0x14ac7:	mov	rdi, qword ptr [rsp + 8]
0x14acc:	cmp	ebx, -1
0x14acf:	je	0x14a80
0x14ad1:	mov	rsi, qword ptr [r15]
0x14ad4:	mov	rdx, r14
0x14ad7:	mov	qword ptr [rsp + 8], rdi
0x14adc:	call	0x4c30
0x14ae1:	test	eax, eax
0x14ae3:	jne	0x14ac0
0x14ae5:	jmp	0x14a40
0x14aea:	mov	eax, dword ptr [rbp + 0x28]
0x14aed:	mov	rdi, qword ptr [rbp + 0x48]
0x14af1:	lea	rsi, [rsp + 0x20]
0x14af6:	mov	qword ptr [rsp + 0x28], r14
0x14afb:	mov	dword ptr [rsp + 0x20], eax
0x14aff:	call	0x19150
0x14b04:	mov	rax, qword ptr [r13 + 8]
0x14b08:	mov	ebx, dword ptr [rbp + 0x28]
0x14b0b:	mov	qword ptr [rsp + 8], rax
0x14b10:	mov	eax, dword ptr [rbp + 0x68]
0x14b13:	mov	dword ptr [rsp + 0x1c], eax
0x14b17:	cmp	ebx, eax
0x14b19:	jge	0x14ba3
0x14b1f:	movsxd	rax, ebx
0x14b22:	lea	rcx, [rax + rax*4]
0x14b26:	shl	rcx, 4
0x14b2a:	add	rcx, qword ptr [rbp + 0x38]
0x14b2e:	mov	r15, rcx
0x14b31:	jmp	0x14b45
0x14b33:	nop	dword ptr [rax + rax]
0x14b38:	add	ebx, 1
0x14b3b:	add	r15, 0x50
0x14b3f:	cmp	ebx, dword ptr [rsp + 0x1c]
0x14b43:	je	0x14ba3
0x14b45:	mov	rsi, qword ptr [r15]
0x14b48:	mov	rdi, qword ptr [rsp + 8]
0x14b4d:	mov	rdx, r14
0x14b50:	call	0x4c30
0x14b55:	test	eax, eax
0x14b57:	jne	0x14b38
0x14b59:	cmp	ebx, -1
0x14b5c:	je	0x14ba3
0x14b5e:	cmp	byte ptr [rbp + 0x6e], 0
0x14b62:	mov	qword ptr [rbp + 0x40], r14
0x14b66:	je	0x14c70
0x14b6c:	mov	dword ptr [rbp + 0x28], ebx
0x14b6f:	xor	eax, eax
0x14b71:	mov	rdi, rbp
0x14b74:	call	0xf110
0x14b79:	cmp	byte ptr [rbp + 0x6d], 0
0x14b7d:	mov	dword ptr [rbp + 0x2c], eax
0x14b80:	je	0x14b95
0x14b82:	xor	eax, eax
0x14b84:	mov	rdi, rbp
0x14b87:	call	0x10d70
0x14b8c:	mov	rax, qword ptr [rbp + 0x40]
0x14b90:	mov	qword ptr [rsp + 0x10], rax
0x14b95:	mov	byte ptr [rbp + 0x6e], 0
0x14b99:	mov	rax, qword ptr [rsp + 0x10]
0x14b9e:	jmp	0x1451c
0x14ba3:	mov	dword ptr [r13], 0xffffffff
0x14bab:	mov	rax, qword ptr [rbp + 0x40]
0x14baf:	jmp	0x1451c
0x14bb4:	xor	ebx, ebx
0x14bb6:	cmp	byte ptr [rbp + 0x6e], 0
0x14bba:	je	0x14c41
0x14bc0:	mov	eax, dword ptr [rbp + 0x68]
0x14bc3:	mov	dword ptr [rsp + 0x1c], eax
0x14bc7:	cmp	ebx, eax
0x14bc9:	jge	0x14ba3
0x14bcb:	movsxd	rax, ebx
0x14bce:	lea	r15, [rax + rax*4]
0x14bd2:	shl	r15, 4
0x14bd6:	add	r15, qword ptr [rbp + 0x38]
0x14bda:	jmp	0x14bf2
0x14bdc:	nop	dword ptr [rax]
0x14be0:	add	ebx, 1
0x14be3:	add	r15, 0x50
0x14be7:	cmp	ebx, dword ptr [rsp + 0x1c]
0x14beb:	mov	rcx, qword ptr [rsp + 8]
0x14bf0:	je	0x14ba3
0x14bf2:	mov	rsi, qword ptr [r15]
0x14bf5:	mov	rdx, r14
0x14bf8:	mov	rdi, rcx
0x14bfb:	mov	qword ptr [rsp + 8], rcx
0x14c00:	call	0x4c30
0x14c05:	test	eax, eax
0x14c07:	jne	0x14be0
0x14c09:	jmp	0x14b59
0x14c0e:	mov	eax, dword ptr [rbp + 0x28]
0x14c11:	mov	rdi, qword ptr [rbp + 0x48]
0x14c15:	lea	rsi, [rsp + 0x20]
0x14c1a:	mov	qword ptr [rsp + 0x28], r14
0x14c1f:	mov	dword ptr [rsp + 0x20], eax
0x14c23:	call	0x19150
0x14c28:	cmp	byte ptr [rbp + 0x6e], 0
0x14c2c:	jne	0x14cee
0x14c32:	mov	eax, dword ptr [rbp + 0x28]
0x14c35:	mov	rdi, qword ptr [r13 + 8]
0x14c39:	lea	ebx, [rax - 1]
0x14c3c:	jmp	0x14aa6
0x14c41:	mov	eax, dword ptr [rbp + 0x28]
0x14c44:	mov	rdi, qword ptr [rbp + 0x48]
0x14c48:	lea	rsi, [rsp + 0x20]
0x14c4d:	mov	qword ptr [rsp + 0x28], r14
0x14c52:	mov	dword ptr [rsp + 0x20], eax
0x14c56:	call	0x19150
0x14c5b:	cmp	byte ptr [rbp + 0x6e], 0
0x14c5f:	jne	0x14c67
0x14c61:	mov	eax, dword ptr [rbp + 0x28]
0x14c64:	lea	ebx, [rax + 1]
0x14c67:	mov	rcx, qword ptr [r13 + 8]
0x14c6b:	jmp	0x14bc0
0x14c70:	sub	ebx, dword ptr [rbp + 0x28]
0x14c73:	xor	ecx, ecx
0x14c75:	mov	rdx, r12
0x14c78:	mov	esi, 0x1c
0x14c7d:	mov	r8d, ebx
0x14c80:	mov	rdi, rbp
0x14c83:	call	0x13e30
0x14c88:	jmp	0x14518
0x14c8d:	mov	r8d, dword ptr [rbp + 0x28]
0x14c91:	xor	ecx, ecx
0x14c93:	mov	rdx, r12
0x14c96:	mov	esi, 0x1b
0x14c9b:	mov	rdi, rbp
0x14c9e:	sub	r8d, ebx
0x14ca1:	call	0x13e30
0x14ca6:	jmp	0x1455f
0x14cab:	xor	eax, eax
0x14cad:	jmp	0x13f00
0x14cb2:	sub	edx, r8d
0x14cb5:	xor	ecx, ecx
0x14cb7:	mov	esi, 0x1c
0x14cbc:	mov	rdi, rbp
0x14cbf:	mov	r8d, edx
0x14cc2:	mov	rdx, r12
0x14cc5:	call	0x13e30
0x14cca:	jmp	0x14912
0x14ccf:	sub	r8d, edx
0x14cd2:	xor	ecx, ecx
0x14cd4:	mov	rdx, r12
0x14cd7:	mov	esi, 0x1b
0x14cdc:	mov	rdi, rbp
0x14cdf:	call	0x13e30
0x14ce4:	jmp	0x14912
0x14ce9:	call	0x49d0
0x14cee:	mov	rdi, qword ptr [r13 + 8]
0x14cf2:	jmp	0x14aa0
0x14cf7:	nop	word ptr [rax + rax]
0x14d00:	endbr64	
0x14d04:	push	rbp
0x14d05:	xor	eax, eax
0x14d07:	mov	rbp, rdi
0x14d0a:	mov	dword ptr [rdi + 0x28], 0
0x14d11:	call	0xf110
0x14d16:	mov	rsi, qword ptr [rbp + 0x18]
0x14d1a:	xor	edx, edx
0x14d1c:	mov	ecx, 0x1e
0x14d21:	mov	dword ptr [rbp + 0x2c], eax
0x14d24:	lea	rdi, [rip + 0xc677]
0x14d2b:	xor	eax, eax
0x14d2d:	call	0xf760
0x14d32:	mov	rax, qword ptr [rbp + 0x18]
0x14d36:	cmp	byte ptr [rax], 0x2f
0x14d39:	jne	0x14d51
0x14d3b:	cmp	byte ptr [rax + 1], 0
0x14d3f:	jne	0x14d51
0x14d41:	lea	rdi, [rip + 0xc672]
0x14d48:	call	0x8b00
0x14d4d:	mov	rax, qword ptr [rbp + 0x18]
0x14d51:	mov	edx, 0x2f
0x14d56:	mov	word ptr [rax], dx
0x14d59:	mov	rdi, qword ptr [rbp + 0x18]
0x14d5d:	mov	qword ptr [rbp + 0x78], 1
0x14d65:	call	0x49c0
0x14d6a:	mov	rdi, rbp
0x14d6d:	mov	r8d, 1
0x14d73:	xor	ecx, ecx
0x14d75:	xor	edx, edx
0x14d77:	mov	esi, 0x22
0x14d7c:	pop	rbp
0x14d7d:	jmp	0x13e30
0x14d82:	nop	word ptr cs:[rax + rax]
0x14d8d:	nop	dword ptr [rax]
0x14d90:	endbr64	
0x14d94:	push	rbp
0x14d95:	cmp	byte ptr [rdi + 0x6d], 0
0x14d99:	mov	rbp, rdi
0x14d9c:	mov	eax, esi
0x14d9e:	mov	byte ptr [rdi + 0x6c], sil
0x14da2:	je	0x14db0
0x14da4:	mov	esi, dword ptr [rdi + 0x28]
0x14da7:	call	0x10760
0x14dac:	movzx	eax, byte ptr [rbp + 0x6c]
0x14db0:	test	al, al
0x14db2:	jne	0x14dc0
0x14db4:	pop	rbp
0x14db5:	ret	
0x14db6:	nop	word ptr cs:[rax + rax]
0x14dc0:	mov	rdi, qword ptr [rbp + 0x18]
0x14dc4:	call	0x49c0
0x14dc9:	cmp	eax, -1
0x14dcc:	jne	0x14db4
0x14dce:	xor	eax, eax
0x14dd0:	mov	rdi, rbp
0x14dd3:	call	0x14d00
0x14dd8:	xor	eax, eax
0x14dda:	mov	rdi, rbp
0x14ddd:	call	0x10ec0
0x14de2:	xor	eax, eax
0x14de4:	mov	rdi, rbp
0x14de7:	call	0x10160
0x14dec:	cmp	byte ptr [rbp + 0x6d], 0
0x14df0:	jne	0x14e10
0x14df2:	xor	eax, eax
0x14df4:	mov	rdi, rbp
0x14df7:	call	0x10240
0x14dfc:	cmp	byte ptr [rbp + 0x6d], 0
0x14e00:	je	0x14db4
0x14e02:	mov	rdi, rbp
0x14e05:	xor	eax, eax
0x14e07:	pop	rbp
0x14e08:	jmp	0x10d70
0x14e0d:	nop	dword ptr [rax]
0x14e10:	mov	rdi, rbp
0x14e13:	xor	eax, eax
0x14e15:	call	0xec50
0x14e1a:	jmp	0x14df2
0x14e1c:	nop	dword ptr [rax]
0x14e20:	endbr64	
0x14e24:	push	r15
0x14e26:	mov	r15, rsi
0x14e29:	push	r14
0x14e2b:	push	r13
0x14e2d:	push	r12
0x14e2f:	push	rbp
0x14e30:	mov	rbp, rdi
0x14e33:	push	rbx
0x14e34:	sub	rsp, 0x58
0x14e38:	mov	edx, dword ptr [rdi + 0x70]
0x14e3b:	mov	rax, qword ptr fs:[0x28]
0x14e44:	mov	qword ptr [rsp + 0x48], rax
0x14e49:	xor	eax, eax
0x14e4b:	mov	qword ptr [rsp + 0x38], 0
0x14e54:	mov	qword ptr [rsp + 0x40], 0
0x14e5d:	mov	dword ptr [rdi + 0x90], 1
0x14e67:	test	edx, edx
0x14e69:	jne	0x15138
0x14e6f:	movsxd	rax, dword ptr [rdi + 0x28]
0x14e73:	mov	rdx, rax
0x14e76:	lea	rax, [rax + rax*4]
0x14e7a:	shl	rax, 4
0x14e7e:	add	rax, qword ptr [rdi + 0x38]
0x14e82:	mov	r12, qword ptr [rax]
0x14e85:	test	edx, edx
0x14e87:	jne	0x14ea0
0x14e89:	mov	rax, qword ptr [rdi + 0x18]
0x14e8d:	cmp	byte ptr [rax], 0x2f
0x14e90:	jne	0x15110
0x14e96:	cmp	byte ptr [rax + 1], 0
0x14e9a:	jne	0x15110
0x14ea0:	mov	rdi, r12
0x14ea3:	call	0x49b0
0x14ea8:	lea	rdi, [rax + 0x11]
0x14eac:	call	0x1d670
0x14eb1:	mov	edx, 0xe
0x14eb6:	mov	rsi, r12
0x14eb9:	lea	rdi, [rip + 0x16720]
0x14ec0:	mov	r13, rax
0x14ec3:	call	0x4880
0x14ec8:	lea	rcx, [rip + 0xc500]
0x14ecf:	mov	esi, 1
0x14ed4:	mov	rdi, r13
0x14ed7:	mov	r8, rax
0x14eda:	mov	rdx, -1
0x14ee1:	xor	eax, eax
0x14ee3:	call	0x4f10
0x14ee8:	mov	rdi, r12
0x14eeb:	call	0x49b0
0x14ef0:	mov	rdi, qword ptr [r15 + 0x18]
0x14ef4:	mov	rbx, rax
0x14ef7:	call	0x49b0
0x14efc:	lea	rdi, [rbx + rax + 2]
0x14f01:	call	0x1d670
0x14f06:	mov	r8, qword ptr [r15 + 0x18]
0x14f0a:	mov	r9, r12
0x14f0d:	lea	rcx, [rip + 0xb7ed]
0x14f14:	mov	rdi, rax
0x14f17:	mov	r14, rax
0x14f1a:	mov	esi, 1
0x14f1f:	xor	eax, eax
0x14f21:	mov	rdx, -1
0x14f28:	call	0x4f10
0x14f2d:	mov	rdi, r13
0x14f30:	lea	rsi, [rsp + 0x40]
0x14f35:	mov	rdx, r14
0x14f38:	mov	rcx, qword ptr [rip + 0x166d9]
0x14f3f:	call	0x83e0
0x14f44:	mov	rdi, r13
0x14f47:	test	rax, rax
0x14f4a:	je	0x153c3
0x14f50:	call	0x18d10
0x14f55:	movsxd	rax, dword ptr [rbp + 0x28]
0x14f59:	lea	rax, [rax + rax*4]
0x14f5d:	shl	rax, 4
0x14f61:	add	rax, qword ptr [rbp + 0x38]
0x14f65:	mov	eax, dword ptr [rax + 0x10]
0x14f68:	and	eax, 0xf000
0x14f6d:	cmp	eax, 0x4000
0x14f72:	je	0x152f0
0x14f78:	mov	rdi, qword ptr [rip + 0x15509]
0x14f7f:	call	0xdb60
0x14f84:	xor	eax, eax
0x14f86:	call	0xa820
0x14f8b:	mov	rdi, qword ptr [rsp + 0x40]
0x14f90:	xor	eax, eax
0x14f92:	call	0x19940
0x14f97:	mov	rdi, qword ptr [rsp + 0x40]
0x14f9c:	mov	r13, rax
0x14f9f:	call	0x18d10
0x14fa4:	mov	rdi, r12
0x14fa7:	xor	eax, eax
0x14fa9:	mov	rsi, r13
0x14fac:	mov	qword ptr [rsp + 0x40], r13
0x14fb1:	call	0x11190
0x14fb6:	mov	rdi, r14
0x14fb9:	mov	ebx, eax
0x14fbb:	call	0x18d10
0x14fc0:	test	ebx, ebx
0x14fc2:	jne	0x153a0
0x14fc8:	call	0x4bf0
0x14fcd:	mov	ebx, eax
0x14fcf:	call	0x49e0
0x14fd4:	movsxd	rdx, dword ptr [rbp + 0x28]
0x14fd8:	mov	r9d, ebx
0x14fdb:	mov	rsi, r12
0x14fde:	mov	r8d, eax
0x14fe1:	mov	rdi, rbp
0x14fe4:	xor	eax, eax
0x14fe6:	lea	rdx, [rdx + rdx*4]
0x14fea:	shl	rdx, 4
0x14fee:	add	rdx, qword ptr [rbp + 0x38]
0x14ff2:	mov	ecx, dword ptr [rdx + 0x10]
0x14ff5:	mov	rdx, qword ptr [rsp + 0x40]
0x14ffa:	call	0x11330
0x14fff:	mov	rdi, qword ptr [rsp + 0x40]
0x15004:	mov	ebx, eax
0x15006:	call	0x18d10
0x1500b:	lea	eax, [rbx - 1]
0x1500e:	cmp	eax, 1
0x15011:	jbe	0x15039
0x15013:	cdqe	
0x15015:	lea	rdx, [rip + 0x15404]
0x1501c:	xor	ecx, ecx
0x1501e:	mov	rsi, r12
0x15021:	mov	rdx, qword ptr [rdx + rax*8]
0x15025:	mov	r8d, 0x1e
0x1502b:	lea	rdi, [rip + 0xc277]
0x15032:	xor	eax, eax
0x15034:	call	0xf7e0
0x15039:	xor	eax, eax
0x1503b:	call	0xe4e0
0x15040:	mov	rdi, rbp
0x15043:	xor	eax, eax
0x15045:	call	0x10240
0x1504a:	xor	eax, eax
0x1504c:	mov	rdi, r15
0x1504f:	call	0x10240
0x15054:	xor	eax, eax
0x15056:	call	0xa820
0x1505b:	mov	rsi, qword ptr [r15 + 0x18]
0x1505f:	xor	eax, eax
0x15061:	mov	edx, 1
0x15066:	mov	rdi, r15
0x15069:	call	0xf880
0x1506e:	test	eax, eax
0x15070:	je	0x153e0
0x15076:	xor	eax, eax
0x15078:	mov	rdi, r15
0x1507b:	call	0x10ec0
0x15080:	xor	eax, eax
0x15082:	mov	rdi, r15
0x15085:	call	0x10160
0x1508a:	cmp	byte ptr [r15 + 0x6d], 0
0x1508f:	je	0x1509b
0x15091:	mov	rdi, r15
0x15094:	xor	eax, eax
0x15096:	call	0xec50
0x1509b:	xor	eax, eax
0x1509d:	mov	rdi, r15
0x150a0:	call	0x10240
0x150a5:	cmp	byte ptr [r15 + 0x6d], 0
0x150aa:	je	0x150b6
0x150ac:	mov	rdi, r15
0x150af:	xor	eax, eax
0x150b1:	call	0x10d70
0x150b6:	mov	rsi, qword ptr [rbp + 0x18]
0x150ba:	xor	eax, eax
0x150bc:	mov	edx, 1
0x150c1:	mov	rdi, rbp
0x150c4:	call	0xf880
0x150c9:	test	eax, eax
0x150cb:	je	0x153d0
0x150d1:	xor	eax, eax
0x150d3:	mov	rdi, rbp
0x150d6:	call	0x10ec0
0x150db:	xor	eax, eax
0x150dd:	mov	rdi, rbp
0x150e0:	call	0x10160
0x150e5:	cmp	byte ptr [rbp + 0x6d], 0
0x150e9:	je	0x150f5
0x150eb:	mov	rdi, rbp
0x150ee:	xor	eax, eax
0x150f0:	call	0xec50
0x150f5:	xor	eax, eax
0x150f7:	mov	rdi, rbp
0x150fa:	call	0x10240
0x150ff:	cmp	byte ptr [rbp + 0x6d], 0
0x15103:	je	0x15110
0x15105:	mov	rdi, rbp
0x15108:	xor	eax, eax
0x1510a:	call	0x10d70
0x1510f:	nop	
0x15110:	mov	rax, qword ptr [rsp + 0x48]
0x15115:	sub	rax, qword ptr fs:[0x28]
0x1511e:	jne	0x153ed
0x15124:	add	rsp, 0x58
0x15128:	pop	rbx
0x15129:	pop	rbp
0x1512a:	pop	r12
0x1512c:	pop	r13
0x1512e:	pop	r14
0x15130:	pop	r15
0x15132:	ret	
0x15133:	nop	dword ptr [rax + rax]
0x15138:	mov	rdx, qword ptr [rsi + 0x18]
0x1513c:	mov	rcx, qword ptr [rip + 0x164d5]
0x15143:	lea	rsi, [rsp + 0x38]
0x15148:	lea	rdi, [rip + 0xc28d]
0x1514f:	call	0x83e0
0x15154:	test	rax, rax
0x15157:	je	0x15110
0x15159:	mov	rdi, qword ptr [rbp + 0x18]
0x1515d:	mov	rsi, qword ptr [rsp + 0x38]
0x15162:	xor	eax, eax
0x15164:	call	0x11190
0x15169:	test	eax, eax
0x1516b:	jne	0x15308
0x15171:	mov	r12, qword ptr [rsp + 0x38]
0x15176:	mov	rdi, r12
0x15179:	call	0x49b0
0x1517e:	mov	rdi, r12
0x15181:	mov	rbx, rax
0x15184:	lea	rax, [rax + 1]
0x15188:	mov	qword ptr [rsp + 0x18], rax
0x1518d:	lea	rax, [rbx + 2]
0x15191:	mov	rsi, rax
0x15194:	mov	qword ptr [rsp + 0x10], rax
0x15199:	call	0x1d690
0x1519e:	mov	qword ptr [rsp + 0x38], rax
0x151a3:	mov	byte ptr [rax + rbx], 0x2f
0x151a7:	mov	rax, qword ptr [rsp + 0x38]
0x151ac:	mov	byte ptr [rax + rbx + 1], 0
0x151b1:	mov	eax, dword ptr [rbp + 0x70]
0x151b4:	mov	dword ptr [rbp + 0x50], 0xffffffff
0x151bb:	mov	dword ptr [rbp + 0x54], eax
0x151be:	mov	rdi, rbp
0x151c1:	call	0x100e0
0x151c6:	cmp	eax, -1
0x151c9:	je	0x152ce
0x151cf:	cdqe	
0x151d1:	lea	rax, [rax + rax*4]
0x151d5:	shl	rax, 4
0x151d9:	mov	qword ptr [rsp + 8], rax
0x151de:	add	rax, qword ptr [rbp + 0x38]
0x151e2:	mov	r12, qword ptr [rax]
0x151e5:	mov	r14d, dword ptr [rax + 0x10]
0x151e9:	call	0x49e0
0x151ee:	mov	ebx, eax
0x151f0:	call	0x4bf0
0x151f5:	mov	rdi, r12
0x151f8:	mov	r13d, eax
0x151fb:	call	0x49b0
0x15200:	mov	rcx, qword ptr [rsp + 0x10]
0x15205:	mov	rdi, qword ptr [rsp + 0x38]
0x1520a:	lea	rsi, [rcx + rax]
0x1520e:	call	0x1d690
0x15213:	mov	rcx, qword ptr [rsp + 0x18]
0x15218:	mov	rsi, r12
0x1521b:	mov	qword ptr [rsp + 0x38], rax
0x15220:	lea	rdi, [rax + rcx]
0x15224:	call	0x48b0
0x15229:	mov	eax, dword ptr [rip + 0x16881]
0x1522f:	test	eax, eax
0x15231:	jne	0x15338
0x15237:	mov	rdi, qword ptr [rip + 0x15252]
0x1523e:	call	0xdb60
0x15243:	xor	eax, eax
0x15245:	call	0xa820
0x1524a:	mov	rdx, qword ptr [rsp + 0x38]
0x1524f:	xor	eax, eax
0x15251:	mov	r9d, r13d
0x15254:	mov	r8d, ebx
0x15257:	mov	ecx, r14d
0x1525a:	mov	rsi, r12
0x1525d:	mov	rdi, rbp
0x15260:	call	0x11330
0x15265:	cmp	eax, 1
0x15268:	je	0x15320
0x1526e:	cmp	eax, 2
0x15271:	je	0x152ce
0x15273:	cmp	eax, 3
0x15276:	je	0x151be
0x1527c:	sub	eax, 1
0x1527f:	lea	rbx, [rip + 0x1519a]
0x15286:	xor	ecx, ecx
0x15288:	mov	rsi, r12
0x1528b:	cdqe	
0x1528d:	mov	r8d, 0xe
0x15293:	lea	rdi, [rip + 0xc00f]
0x1529a:	mov	rdx, qword ptr [rbx + rax*8]
0x1529e:	xor	eax, eax
0x152a0:	call	0xf7e0
0x152a5:	test	al, al
0x152a7:	je	0x152ce
0x152a9:	xor	eax, eax
0x152ab:	mov	rdi, rbp
0x152ae:	call	0x10240
0x152b3:	mov	rdi, r15
0x152b6:	xor	eax, eax
0x152b8:	call	0x10240
0x152bd:	mov	rdi, rbp
0x152c0:	call	0x100e0
0x152c5:	cmp	eax, -1
0x152c8:	jne	0x151cf
0x152ce:	mov	rdi, qword ptr [rsp + 0x38]
0x152d3:	test	rdi, rdi
0x152d6:	je	0x152dd
0x152d8:	call	0x18d10
0x152dd:	xor	eax, eax
0x152df:	call	0xe4e0
0x152e4:	xor	eax, eax
0x152e6:	call	0xa820
0x152eb:	jmp	0x1505b
0x152f0:	mov	rdi, qword ptr [rip + 0x151a1]
0x152f7:	call	0xdb60
0x152fc:	jmp	0x14f84
0x15301:	nop	dword ptr [rax]
0x15308:	mov	edx, 0xc
0x1530d:	xor	esi, esi
0x1530f:	lea	rdi, [rip + 0x14fea]
0x15316:	call	0x8070
0x1531b:	jmp	0x15110
0x15320:	mov	rax, qword ptr [rbp + 0x38]
0x15324:	mov	rbx, qword ptr [rsp + 8]
0x15329:	mov	byte ptr [rax + rbx + 0x49], 0
0x1532e:	jmp	0x152a9
0x15333:	nop	dword ptr [rax + rax]
0x15338:	mov	dword ptr [rip + 0x1676e], 0
0x15342:	xor	eax, eax
0x15344:	call	0xc8c0
0x15349:	mov	edx, 4
0x1534e:	lea	rsi, [rip + 0xb1dd]
0x15355:	lea	rdi, [rip + 0xbe9d]
0x1535c:	mov	qword ptr [rsp + 0x28], rax
0x15361:	call	0x8070
0x15366:	mov	rdi, qword ptr [rsp + 0x28]
0x1536b:	mov	byte ptr [rsp + 0x27], al
0x1536f:	call	0xc970
0x15374:	xor	eax, eax
0x15376:	call	0xd870
0x1537b:	xor	eax, eax
0x1537d:	call	0xd740
0x15382:	xor	eax, eax
0x15384:	call	0xa820
0x15389:	movzx	eax, byte ptr [rsp + 0x27]
0x1538e:	and	eax, 0xffffffdf
0x15391:	cmp	al, 0x4e
0x15393:	je	0x15237
0x15399:	jmp	0x152ce
0x1539e:	nop	
0x153a0:	mov	rdx, qword ptr [rsp + 0x40]
0x153a5:	lea	rdi, [rip + 0xc8a4]
0x153ac:	xor	ecx, ecx
0x153ae:	xor	eax, eax
0x153b0:	mov	r8d, 0x1e
0x153b6:	mov	rsi, r12
0x153b9:	call	0xf7e0
0x153be:	mov	rdi, qword ptr [rsp + 0x40]
0x153c3:	call	0x18d10
0x153c8:	jmp	0x15110
0x153cd:	nop	dword ptr [rax]
0x153d0:	mov	rdi, rbp
0x153d3:	call	0x14d00
0x153d8:	jmp	0x150d1
0x153dd:	nop	dword ptr [rax]
0x153e0:	mov	rdi, r15
0x153e3:	call	0x14d00
0x153e8:	jmp	0x15076
0x153ed:	call	0x49d0
0x153f2:	nop	word ptr cs:[rax + rax]
0x153fd:	nop	dword ptr [rax]
0x15400:	endbr64	
0x15404:	push	r15
0x15406:	push	r14
0x15408:	push	r13
0x1540a:	push	r12
0x1540c:	push	rbp
0x1540d:	mov	rbp, rdi
0x15410:	push	rbx
0x15411:	sub	rsp, 0x28
0x15415:	mov	qword ptr [rsp + 0x10], rsi
0x1541a:	mov	esi, dword ptr [rdi + 0x70]
0x1541d:	test	esi, esi
0x1541f:	jne	0x15450
0x15421:	mov	ecx, dword ptr [rdi + 0x28]
0x15424:	test	ecx, ecx
0x15426:	jne	0x15450
0x15428:	mov	rax, qword ptr [rdi + 0x18]
0x1542c:	cmp	byte ptr [rax], 0x2f
0x1542f:	je	0x15440
0x15431:	add	rsp, 0x28
0x15435:	pop	rbx
0x15436:	pop	rbp
0x15437:	pop	r12
0x15439:	pop	r13
0x1543b:	pop	r14
0x1543d:	pop	r15
0x1543f:	ret	
0x15440:	cmp	byte ptr [rax + 1], 0
0x15444:	jne	0x15431
0x15446:	nop	word ptr cs:[rax + rax]
0x15450:	xor	edx, edx
0x15452:	lea	rsi, [rip + 0xb0d9]
0x15459:	lea	rdi, [rip + 0xbf97]
0x15460:	call	0x8070
0x15465:	cmp	al, 0x79
0x15467:	jne	0x15431
0x15469:	mov	edx, dword ptr [rbp + 0x68]
0x1546c:	test	edx, edx
0x1546e:	jle	0x158fc
0x15474:	mov	rax, qword ptr [rbp + 0x38]
0x15478:	xor	ecx, ecx
0x1547a:	add	rax, 0x49
0x1547e:	jmp	0x1548b
0x15480:	add	ecx, 1
0x15483:	add	rax, 0x50
0x15487:	cmp	ecx, edx
0x15489:	je	0x15490
0x1548b:	cmp	byte ptr [rax], 0
0x1548e:	je	0x15480
0x15490:	mov	dword ptr [rsp + 0x1c], ecx
0x15494:	mov	eax, dword ptr [rbp + 0x70]
0x15497:	mov	dword ptr [rbp + 0x50], 0xffffffff
0x1549e:	xor	r13d, r13d
0x154a1:	lea	r15, [rip + 0xbf69]
0x154a8:	mov	dword ptr [rsp + 0x18], 1
0x154b0:	mov	dword ptr [rbp + 0x54], eax
0x154b3:	nop	dword ptr [rax + rax]
0x154b8:	mov	rdi, rbp
0x154bb:	call	0x100e0
0x154c0:	cmp	eax, -1
0x154c3:	je	0x155c6
0x154c9:	cdqe	
0x154cb:	lea	rbx, [rax + rax*4]
0x154cf:	mov	rax, qword ptr [rbp + 0x38]
0x154d3:	shl	rbx, 4
0x154d7:	mov	r12, qword ptr [rax + rbx]
0x154db:	xor	eax, eax
0x154dd:	call	0x18ab0
0x154e2:	mov	rdi, r12
0x154e5:	call	0x49b0
0x154ea:	lea	rdi, [rax + 0x20]
0x154ee:	call	0x1d670
0x154f3:	mov	r8, r12
0x154f6:	mov	rcx, r15
0x154f9:	mov	esi, 1
0x154fe:	mov	r14, rax
0x15501:	mov	rdi, rax
0x15504:	mov	rdx, -1
0x1550b:	xor	eax, eax
0x1550d:	call	0x4f10
0x15512:	mov	edx, 1
0x15517:	mov	esi, 2
0x1551c:	mov	rdi, r14
0x1551f:	call	0xe480
0x15524:	xor	eax, eax
0x15526:	call	0xa820
0x1552b:	mov	rdi, r14
0x1552e:	call	0x18d10
0x15533:	mov	edx, dword ptr [rip + 0x16577]
0x15539:	test	edx, edx
0x1553b:	jne	0x15760
0x15541:	mov	eax, dword ptr [rsp + 0x18]
0x15545:	test	eax, eax
0x15547:	jne	0x15738
0x1554d:	mov	rdi, qword ptr [rip + 0x14f54]
0x15554:	call	0xdb60
0x15559:	xor	eax, eax
0x1555b:	call	0xa820
0x15560:	cmp	r13d, 0x61
0x15564:	je	0x15728
0x1556a:	cmp	r13d, 0x73
0x1556e:	je	0x154b8
0x15574:	cmp	r13d, 0x79
0x15578:	jne	0x155c6
0x1557a:	mov	rax, qword ptr [rbp + 0x38]
0x1557e:	cmp	byte ptr [rax + rbx + 0x48], 0
0x15583:	jne	0x156e8
0x15589:	mov	rdi, qword ptr [rip + 0x14f10]
0x15590:	call	0xdb60
0x15595:	xor	eax, eax
0x15597:	call	0xa820
0x1559c:	mov	rdi, r12
0x1559f:	call	0x4990
0x155a4:	test	eax, eax
0x155a6:	jne	0x157c8
0x155ac:	mov	rax, qword ptr [rbp + 0x38]
0x155b0:	mov	rdi, rbp
0x155b3:	mov	byte ptr [rax + rbx + 0x49], 0
0x155b8:	call	0x100e0
0x155bd:	cmp	eax, -1
0x155c0:	jne	0x154c9
0x155c6:	mov	eax, dword ptr [rsp + 0x1c]
0x155ca:	cmp	dword ptr [rbp + 0x68], eax
0x155cd:	je	0x155e3
0x155cf:	mov	eax, dword ptr [rsp + 0x1c]
0x155d3:	mov	rdi, rbp
0x155d6:	mov	dword ptr [rbp + 0x28], eax
0x155d9:	xor	eax, eax
0x155db:	call	0xf110
0x155e0:	mov	dword ptr [rbp + 0x2c], eax
0x155e3:	xor	eax, eax
0x155e5:	mov	rdi, rbp
0x155e8:	call	0x10240
0x155ed:	mov	rdi, qword ptr [rsp + 0x10]
0x155f2:	xor	eax, eax
0x155f4:	call	0x10240
0x155f9:	xor	eax, eax
0x155fb:	call	0xe4e0
0x15600:	xor	eax, eax
0x15602:	call	0xa820
0x15607:	mov	rsi, qword ptr [rbp + 0x18]
0x1560b:	xor	eax, eax
0x1560d:	mov	edx, 1
0x15612:	mov	rdi, rbp
0x15615:	call	0xf880
0x1561a:	test	eax, eax
0x1561c:	je	0x158e0
0x15622:	xor	eax, eax
0x15624:	mov	rdi, rbp
0x15627:	call	0x10ec0
0x1562c:	xor	eax, eax
0x1562e:	mov	rdi, rbp
0x15631:	call	0x10160
0x15636:	cmp	byte ptr [rbp + 0x6d], 0
0x1563a:	jne	0x15890
0x15640:	xor	eax, eax
0x15642:	mov	rdi, rbp
0x15645:	call	0x10240
0x1564a:	cmp	byte ptr [rbp + 0x6d], 0
0x1564e:	jne	0x15880
0x15654:	mov	rax, qword ptr [rsp + 0x10]
0x15659:	mov	rdi, qword ptr [rbp + 0x18]
0x1565d:	mov	r12, qword ptr [rax + 0x18]
0x15661:	mov	rsi, r12
0x15664:	call	0x4b30
0x15669:	test	eax, eax
0x1566b:	jne	0x15431
0x15671:	mov	rdi, qword ptr [rsp + 0x10]
0x15676:	mov	edx, 1
0x1567b:	mov	rsi, r12
0x1567e:	call	0xf880
0x15683:	test	eax, eax
0x15685:	je	0x158ed
0x1568b:	mov	rbx, qword ptr [rsp + 0x10]
0x15690:	xor	eax, eax
0x15692:	mov	rdi, rbx
0x15695:	call	0x10ec0
0x1569a:	xor	eax, eax
0x1569c:	mov	rdi, rbx
0x1569f:	call	0x10160
0x156a4:	cmp	byte ptr [rbx + 0x6d], 0
0x156a8:	je	0x156b4
0x156aa:	mov	rdi, rbx
0x156ad:	xor	eax, eax
0x156af:	call	0xec50
0x156b4:	mov	rbx, qword ptr [rsp + 0x10]
0x156b9:	xor	eax, eax
0x156bb:	mov	rdi, rbx
0x156be:	call	0x10240
0x156c3:	cmp	byte ptr [rbx + 0x6d], 0
0x156c7:	je	0x15431
0x156cd:	add	rsp, 0x28
0x156d1:	mov	rdi, rbx
0x156d4:	xor	eax, eax
0x156d6:	pop	rbx
0x156d7:	pop	rbp
0x156d8:	pop	r12
0x156da:	pop	r13
0x156dc:	pop	r14
0x156de:	pop	r15
0x156e0:	jmp	0x10d70
0x156e5:	nop	dword ptr [rax]
0x156e8:	mov	rdi, r12
0x156eb:	call	0x4870
0x156f0:	test	eax, eax
0x156f2:	je	0x155ac
0x156f8:	xor	eax, eax
0x156fa:	mov	ecx, 0xe
0x156ff:	mov	rsi, r12
0x15702:	lea	rdx, [rip + 0xae29]
0x15709:	lea	rdi, [rip + 0xc5e8]
0x15710:	call	0xf760
0x15715:	cmp	al, 0x79
0x15717:	je	0x154b8
0x1571d:	jmp	0x155c6
0x15722:	nop	word ptr [rax + rax]
0x15728:	mov	dword ptr [rsp + 0x18], 0
0x15730:	jmp	0x1557a
0x15735:	nop	dword ptr [rax]
0x15738:	mov	ecx, 2
0x1573d:	lea	rdx, [rip + 0xbcd9]
0x15744:	mov	rsi, r12
0x15747:	xor	eax, eax
0x15749:	lea	rdi, [rip + 0xc528]
0x15750:	call	0xf760
0x15755:	movsx	r13d, al
0x15759:	jmp	0x1554d
0x1575e:	nop	
0x15760:	mov	dword ptr [rip + 0x16346], 0
0x1576a:	xor	eax, eax
0x1576c:	call	0xc8c0
0x15771:	mov	edx, 4
0x15776:	lea	rsi, [rip + 0xadb5]
0x1577d:	lea	rdi, [rip + 0xba75]
0x15784:	mov	qword ptr [rsp + 8], rax
0x15789:	call	0x8070
0x1578e:	mov	rdi, qword ptr [rsp + 8]
0x15793:	mov	r14d, eax
0x15796:	call	0xc970
0x1579b:	xor	eax, eax
0x1579d:	and	r14d, 0xffffffdf
0x157a1:	call	0xd870
0x157a6:	xor	eax, eax
0x157a8:	call	0xd740
0x157ad:	xor	eax, eax
0x157af:	call	0xa820
0x157b4:	cmp	r14b, 0x4e
0x157b8:	je	0x15541
0x157be:	jmp	0x155c6
0x157c3:	nop	dword ptr [rax + rax]
0x157c8:	xor	eax, eax
0x157ca:	mov	ecx, 0x12
0x157cf:	mov	rsi, r12
0x157d2:	lea	rdx, [rip + 0xad59]
0x157d9:	lea	rdi, [rip + 0xc4c0]
0x157e0:	call	0xf760
0x157e5:	cmp	al, 0x79
0x157e7:	jne	0x156f8
0x157ed:	mov	rdi, r12
0x157f0:	call	0x49b0
0x157f5:	lea	rdi, [rax + 0x21]
0x157f9:	call	0x1d670
0x157fe:	mov	rdx, -1
0x15805:	mov	r8, r12
0x15808:	lea	rcx, [rip + 0xbb38]
0x1580f:	mov	r14, rax
0x15812:	mov	rdi, rax
0x15815:	mov	esi, 1
0x1581a:	xor	eax, eax
0x1581c:	call	0x4f10
0x15821:	mov	esi, 1
0x15826:	mov	rdi, r14
0x15829:	call	0x193f0
0x1582e:	mov	rdi, r14
0x15831:	mov	dword ptr [rsp + 8], eax
0x15835:	call	0x18d10
0x1583a:	mov	rdi, qword ptr [rbp + 0x18]
0x1583e:	call	0xc4b0
0x15843:	mov	eax, dword ptr [rsp + 8]
0x15847:	mov	edx, eax
0x15849:	and	edx, 0x7f
0x1584c:	add	edx, 1
0x1584f:	cmp	dl, 1
0x15852:	jg	0x158b0
0x15854:	test	al, 0x7f
0x15856:	jne	0x156f8
0x1585c:	test	ah, 0xff
0x1585f:	je	0x155ac
0x15865:	lea	rdi, [rip + 0xb37e]
0x1586c:	call	0x195e0
0x15871:	jmp	0x156f8
0x15876:	nop	word ptr cs:[rax + rax]
0x15880:	mov	rdi, rbp
0x15883:	xor	eax, eax
0x15885:	call	0x10d70
0x1588a:	jmp	0x15654
0x1588f:	nop	
0x15890:	xor	eax, eax
0x15892:	mov	rdi, rbp
0x15895:	call	0xec50
0x1589a:	xor	eax, eax
0x1589c:	mov	rdi, rbp
0x1589f:	call	0x10240
0x158a4:	cmp	byte ptr [rbp + 0x6d], 0
0x158a8:	je	0x15654
0x158ae:	jmp	0x15880
0x158b0:	xor	eax, eax
0x158b2:	mov	ecx, 0xe
0x158b7:	mov	rsi, r12
0x158ba:	lea	rdx, [rip + 0xac71]
0x158c1:	lea	rdi, [rip + 0xc408]
0x158c8:	call	0xf760
0x158cd:	cmp	al, 0x79
0x158cf:	je	0x154b8
0x158d5:	jmp	0x155c6
0x158da:	nop	word ptr [rax + rax]
0x158e0:	mov	rdi, rbp
0x158e3:	call	0x14d00
0x158e8:	jmp	0x15622
0x158ed:	mov	rdi, qword ptr [rsp + 0x10]
0x158f2:	call	0x14d00
0x158f7:	jmp	0x1568b
0x158fc:	mov	dword ptr [rsp + 0x1c], 0
0x15904:	jmp	0x15494
0x15909:	nop	dword ptr [rax]
0x15910:	endbr64	
0x15914:	push	r13
0x15916:	xor	edx, edx
0x15918:	push	r12
0x1591a:	push	rbp
0x1591b:	mov	rbp, rsi
0x1591e:	push	rbx
0x1591f:	mov	rbx, rdi
0x15922:	lea	rdi, [rip + 0xbaf9]
0x15929:	sub	rsp, 0x18
0x1592d:	mov	rcx, qword ptr [rip + 0x15cd4]
0x15934:	mov	rax, qword ptr fs:[0x28]
0x1593d:	mov	qword ptr [rsp + 8], rax
0x15942:	xor	eax, eax
0x15944:	mov	rsi, rsp
0x15947:	mov	qword ptr [rsp], 0
0x1594f:	call	0x83e0
0x15954:	test	rax, rax
0x15957:	je	0x15a0b
0x1595d:	mov	rdi, qword ptr [rsp]
0x15961:	cmp	byte ptr [rdi], 0
0x15964:	je	0x15a06
0x1596a:	xor	eax, eax
0x1596c:	call	0x19940
0x15971:	mov	rdi, qword ptr [rsp]
0x15975:	mov	r13, rax
0x15978:	call	0x18d10
0x1597d:	mov	rdi, r13
0x15980:	mov	qword ptr [rsp], r13
0x15984:	call	0x49b0
0x15989:	mov	rdi, r13
0x1598c:	lea	rsi, [rax + 2]
0x15990:	mov	r12, rax
0x15993:	call	0x4ce0
0x15998:	mov	esi, 0x41ff
0x1599d:	mov	qword ptr [rsp], rax
0x159a1:	mov	byte ptr [rax + r12], 0x2f
0x159a6:	mov	rax, qword ptr [rsp]
0x159aa:	mov	byte ptr [rax + r12 + 1], 0
0x159b0:	mov	rdi, qword ptr [rsp]
0x159b4:	xor	eax, eax
0x159b6:	call	0x124d0
0x159bb:	cmp	eax, -1
0x159be:	je	0x15a90
0x159c4:	mov	rsi, qword ptr [rbx + 0x18]
0x159c8:	xor	eax, eax
0x159ca:	mov	edx, 1
0x159cf:	mov	rdi, rbx
0x159d2:	call	0xf880
0x159d7:	test	eax, eax
0x159d9:	jne	0x15a30
0x159db:	mov	rdi, rbx
0x159de:	call	0x14d00
0x159e3:	mov	rsi, qword ptr [rbp + 0x18]
0x159e7:	mov	rdi, qword ptr [rbx + 0x18]
0x159eb:	call	0x4b30
0x159f0:	test	eax, eax
0x159f2:	je	0x15af0
0x159f8:	mov	rdi, rbp
0x159fb:	xor	eax, eax
0x159fd:	call	0x10240
0x15a02:	mov	rdi, qword ptr [rsp]
0x15a06:	call	0x18d10
0x15a0b:	mov	rax, qword ptr [rsp + 8]
0x15a10:	sub	rax, qword ptr fs:[0x28]
0x15a19:	jne	0x15ba4
0x15a1f:	add	rsp, 0x18
0x15a23:	pop	rbx
0x15a24:	pop	rbp
0x15a25:	pop	r12
0x15a27:	pop	r13
0x15a29:	ret	
0x15a2a:	nop	word ptr [rax + rax]
0x15a30:	mov	rsi, qword ptr [rsp]
0x15a34:	mov	rdi, rbx
0x15a37:	xor	eax, eax
0x15a39:	call	0x122d0
0x15a3e:	mov	edx, dword ptr [rbx + 0x60]
0x15a41:	mov	esi, dword ptr [rbx + 0x68]
0x15a44:	mov	edi, 0
0x15a49:	mov	dword ptr [rbx + 0x28], eax
0x15a4c:	sub	edx, 2
0x15a4f:	mov	ecx, edx
0x15a51:	shr	ecx, 0x1f
0x15a54:	add	ecx, edx
0x15a56:	sar	ecx, 1
0x15a58:	sub	eax, ecx
0x15a5a:	lea	ecx, [rdx + rax]
0x15a5d:	cmovs	eax, edi
0x15a60:	cmp	esi, ecx
0x15a62:	jg	0x15a70
0x15a64:	mov	eax, esi
0x15a66:	sub	eax, edx
0x15a68:	mov	edx, 0
0x15a6d:	cmovs	eax, edx
0x15a70:	cmp	byte ptr [rbx + 0x6d], 0
0x15a74:	mov	dword ptr [rbx + 0x2c], eax
0x15a77:	jne	0x15ac0
0x15a79:	mov	rdi, rbx
0x15a7c:	xor	eax, eax
0x15a7e:	call	0x10240
0x15a83:	jmp	0x159e3
0x15a88:	nop	dword ptr [rax + rax]
0x15a90:	mov	rsi, qword ptr [rsp]
0x15a94:	mov	ecx, 0x1c
0x15a99:	xor	edx, edx
0x15a9b:	xor	eax, eax
0x15a9d:	lea	rdi, [rip + 0xb993]
0x15aa4:	call	0xf760
0x15aa9:	mov	rdi, qword ptr [rsp]
0x15aad:	call	0x18d10
0x15ab2:	jmp	0x15a0b
0x15ab7:	nop	word ptr [rax + rax]
0x15ac0:	xor	eax, eax
0x15ac2:	mov	rdi, rbx
0x15ac5:	call	0x10d70
0x15aca:	cmp	byte ptr [rbx + 0x6d], 0
0x15ace:	je	0x15a79
0x15ad0:	mov	rdi, rbx
0x15ad3:	xor	eax, eax
0x15ad5:	call	0xec50
0x15ada:	mov	rdi, rbx
0x15add:	xor	eax, eax
0x15adf:	call	0x10240
0x15ae4:	jmp	0x159e3
0x15ae9:	nop	dword ptr [rax]
0x15af0:	movsxd	rax, dword ptr [rbp + 0x28]
0x15af4:	lea	rax, [rax + rax*4]
0x15af8:	shl	rax, 4
0x15afc:	add	rax, qword ptr [rbp + 0x38]
0x15b00:	mov	rdi, qword ptr [rax]
0x15b03:	call	0x1d7a0
0x15b08:	mov	rsi, qword ptr [rbp + 0x18]
0x15b0c:	mov	edx, 1
0x15b11:	mov	rdi, rbp
0x15b14:	mov	r12, rax
0x15b17:	xor	eax, eax
0x15b19:	call	0xf880
0x15b1e:	test	eax, eax
0x15b20:	jne	0x15b40
0x15b22:	mov	rdi, rbp
0x15b25:	call	0x14d00
0x15b2a:	mov	rdi, r12
0x15b2d:	call	0x18d10
0x15b32:	jmp	0x159f8
0x15b37:	nop	word ptr [rax + rax]
0x15b40:	mov	rsi, r12
0x15b43:	mov	rdi, rbp
0x15b46:	xor	eax, eax
0x15b48:	call	0x122d0
0x15b4d:	mov	edx, dword ptr [rbp + 0x60]
0x15b50:	mov	esi, dword ptr [rbp + 0x68]
0x15b53:	mov	edi, 0
0x15b58:	mov	dword ptr [rbp + 0x28], eax
0x15b5b:	sub	edx, 2
0x15b5e:	mov	ecx, edx
0x15b60:	shr	ecx, 0x1f
0x15b63:	add	ecx, edx
0x15b65:	sar	ecx, 1
0x15b67:	sub	eax, ecx
0x15b69:	lea	ecx, [rdx + rax]
0x15b6c:	cmovs	eax, edi
0x15b6f:	cmp	esi, ecx
0x15b71:	jg	0x15b7f
0x15b73:	mov	eax, esi
0x15b75:	sub	eax, edx
0x15b77:	mov	edx, 0
0x15b7c:	cmovs	eax, edx
0x15b7f:	cmp	byte ptr [rbp + 0x6d], 0
0x15b83:	mov	dword ptr [rbp + 0x2c], eax
0x15b86:	je	0x15b2a
0x15b88:	xor	eax, eax
0x15b8a:	mov	rdi, rbp
0x15b8d:	call	0x10d70
0x15b92:	cmp	byte ptr [rbp + 0x6d], 0
0x15b96:	je	0x15b2a
0x15b98:	mov	rdi, rbp
0x15b9b:	xor	eax, eax
0x15b9d:	call	0xec50
0x15ba2:	jmp	0x15b2a
0x15ba4:	call	0x49d0
0x15ba9:	nop	dword ptr [rax]
0x15bb0:	endbr64	
0x15bb4:	push	r15
0x15bb6:	mov	r15, rdi
0x15bb9:	push	r14
0x15bbb:	push	r13
0x15bbd:	push	r12
0x15bbf:	mov	r12, rsi
0x15bc2:	push	rbp
0x15bc3:	push	rbx
0x15bc4:	sub	rsp, 0x48
0x15bc8:	mov	edx, dword ptr [rdi + 0x70]
0x15bcb:	mov	rax, qword ptr fs:[0x28]
0x15bd4:	mov	qword ptr [rsp + 0x38], rax
0x15bd9:	xor	eax, eax
0x15bdb:	mov	qword ptr [rsp + 0x28], 0
0x15be4:	mov	qword ptr [rsp + 0x30], 0
0x15bed:	mov	dword ptr [rdi + 0x90], 1
0x15bf7:	test	edx, edx
0x15bf9:	jne	0x15ec8
0x15bff:	movsxd	rax, dword ptr [rdi + 0x28]
0x15c03:	mov	rdx, rax
0x15c06:	lea	rax, [rax + rax*4]
0x15c0a:	shl	rax, 4
0x15c0e:	add	rax, qword ptr [rdi + 0x38]
0x15c12:	mov	rbp, qword ptr [rax]
0x15c15:	test	edx, edx
0x15c17:	jne	0x15c30
0x15c19:	mov	rax, qword ptr [rdi + 0x18]
0x15c1d:	cmp	byte ptr [rax], 0x2f
0x15c20:	jne	0x15ea0
0x15c26:	cmp	byte ptr [rax + 1], 0
0x15c2a:	jne	0x15ea0
0x15c30:	mov	rdi, rbp
0x15c33:	call	0x49b0
0x15c38:	lea	rdi, [rax + 0x11]
0x15c3c:	call	0x1d670
0x15c41:	mov	edx, 0xe
0x15c46:	mov	rsi, rbp
0x15c49:	lea	rdi, [rip + 0x15990]
0x15c50:	mov	r13, rax
0x15c53:	call	0x4880
0x15c58:	lea	rcx, [rip + 0xb7ef]
0x15c5f:	mov	esi, 1
0x15c64:	mov	rdi, r13
0x15c67:	mov	r8, rax
0x15c6a:	mov	rdx, -1
0x15c71:	xor	eax, eax
0x15c73:	call	0x4f10
0x15c78:	mov	rdi, rbp
0x15c7b:	call	0x49b0
0x15c80:	mov	rdi, qword ptr [r12 + 0x18]
0x15c85:	mov	rbx, rax
0x15c88:	call	0x49b0
0x15c8d:	lea	rdi, [rbx + rax + 2]
0x15c92:	call	0x1d670
0x15c97:	mov	r8, qword ptr [r12 + 0x18]
0x15c9c:	mov	r9, rbp
0x15c9f:	lea	rcx, [rip + 0xaa5b]
0x15ca6:	mov	rdi, rax
0x15ca9:	mov	r14, rax
0x15cac:	mov	esi, 1
0x15cb1:	xor	eax, eax
0x15cb3:	mov	rdx, -1
0x15cba:	call	0x4f10
0x15cbf:	mov	rdi, r13
0x15cc2:	lea	rsi, [rsp + 0x30]
0x15cc7:	mov	rdx, r14
0x15cca:	mov	rcx, qword ptr [rip + 0x1593f]
0x15cd1:	call	0x83e0
0x15cd6:	mov	rdi, r13
0x15cd9:	test	rax, rax
0x15cdc:	je	0x16173
0x15ce2:	call	0x18d10
0x15ce7:	movsxd	rax, dword ptr [r15 + 0x28]
0x15ceb:	lea	rax, [rax + rax*4]
0x15cef:	shl	rax, 4
0x15cf3:	add	rax, qword ptr [r15 + 0x38]
0x15cf7:	mov	eax, dword ptr [rax + 0x10]
0x15cfa:	and	eax, 0xf000
0x15cff:	cmp	eax, 0x4000
0x15d04:	je	0x160a0
0x15d0a:	mov	rdi, qword ptr [rip + 0x1479f]
0x15d11:	call	0xdb60
0x15d16:	xor	eax, eax
0x15d18:	call	0xa820
0x15d1d:	mov	rdi, qword ptr [rsp + 0x30]
0x15d22:	xor	eax, eax
0x15d24:	call	0x19940
0x15d29:	mov	rdi, qword ptr [rsp + 0x30]
0x15d2e:	mov	r13, rax
0x15d31:	call	0x18d10
0x15d36:	mov	rdi, rbp
0x15d39:	xor	eax, eax
0x15d3b:	mov	rsi, r13
0x15d3e:	mov	qword ptr [rsp + 0x30], r13
0x15d43:	call	0x11190
0x15d48:	mov	rdi, r14
0x15d4b:	mov	ebx, eax
0x15d4d:	call	0x18d10
0x15d52:	test	ebx, ebx
0x15d54:	jne	0x16150
0x15d5a:	movsxd	rax, dword ptr [r15 + 0x28]
0x15d5e:	mov	rdx, qword ptr [rsp + 0x30]
0x15d63:	mov	rsi, rbp
0x15d66:	mov	rdi, r15
0x15d69:	lea	rax, [rax + rax*4]
0x15d6d:	shl	rax, 4
0x15d71:	add	rax, qword ptr [r15 + 0x38]
0x15d75:	mov	ecx, dword ptr [rax + 0x10]
0x15d78:	xor	eax, eax
0x15d7a:	call	0x11d10
0x15d7f:	cmp	eax, 1
0x15d82:	je	0x15db6
0x15d84:	cmp	eax, 2
0x15d87:	je	0x161a0
0x15d8d:	sub	eax, 1
0x15d90:	lea	rdx, [rip + 0x14629]
0x15d97:	xor	ecx, ecx
0x15d99:	mov	rsi, rbp
0x15d9c:	cdqe	
0x15d9e:	mov	r8d, 0xe
0x15da4:	lea	rdi, [rip + 0xb6b0]
0x15dab:	mov	rdx, qword ptr [rdx + rax*8]
0x15daf:	xor	eax, eax
0x15db1:	call	0xf7e0
0x15db6:	mov	rdi, qword ptr [rsp + 0x30]
0x15dbb:	call	0x18d10
0x15dc0:	xor	eax, eax
0x15dc2:	call	0xe4e0
0x15dc7:	mov	rdi, r15
0x15dca:	xor	eax, eax
0x15dcc:	call	0x10240
0x15dd1:	xor	eax, eax
0x15dd3:	mov	rdi, r12
0x15dd6:	call	0x10240
0x15ddb:	xor	eax, eax
0x15ddd:	call	0xa820
0x15de2:	mov	rsi, qword ptr [r12 + 0x18]
0x15de7:	xor	eax, eax
0x15de9:	mov	edx, 1
0x15dee:	mov	rdi, r12
0x15df1:	call	0xf880
0x15df6:	test	eax, eax
0x15df8:	je	0x16190
0x15dfe:	xor	eax, eax
0x15e00:	mov	rdi, r12
0x15e03:	call	0x10ec0
0x15e08:	xor	eax, eax
0x15e0a:	mov	rdi, r12
0x15e0d:	call	0x10160
0x15e12:	cmp	byte ptr [r12 + 0x6d], 0
0x15e18:	je	0x15e24
0x15e1a:	mov	rdi, r12
0x15e1d:	xor	eax, eax
0x15e1f:	call	0xec50
0x15e24:	xor	eax, eax
0x15e26:	mov	rdi, r12
0x15e29:	call	0x10240
0x15e2e:	cmp	byte ptr [r12 + 0x6d], 0
0x15e34:	je	0x15e40
0x15e36:	mov	rdi, r12
0x15e39:	xor	eax, eax
0x15e3b:	call	0x10d70
0x15e40:	mov	rsi, qword ptr [r15 + 0x18]
0x15e44:	xor	eax, eax
0x15e46:	mov	edx, 1
0x15e4b:	mov	rdi, r15
0x15e4e:	call	0xf880
0x15e53:	test	eax, eax
0x15e55:	je	0x16180
0x15e5b:	xor	eax, eax
0x15e5d:	mov	rdi, r15
0x15e60:	call	0x10ec0
0x15e65:	xor	eax, eax
0x15e67:	mov	rdi, r15
0x15e6a:	call	0x10160
0x15e6f:	cmp	byte ptr [r15 + 0x6d], 0
0x15e74:	je	0x15e80
0x15e76:	mov	rdi, r15
0x15e79:	xor	eax, eax
0x15e7b:	call	0xec50
0x15e80:	xor	eax, eax
0x15e82:	mov	rdi, r15
0x15e85:	call	0x10240
0x15e8a:	cmp	byte ptr [r15 + 0x6d], 0
0x15e8f:	je	0x15ea0
0x15e91:	mov	rdi, r15
0x15e94:	xor	eax, eax
0x15e96:	call	0x10d70
0x15e9b:	nop	dword ptr [rax + rax]
0x15ea0:	mov	rax, qword ptr [rsp + 0x38]
0x15ea5:	sub	rax, qword ptr fs:[0x28]
0x15eae:	jne	0x161bd
0x15eb4:	add	rsp, 0x48
0x15eb8:	pop	rbx
0x15eb9:	pop	rbp
0x15eba:	pop	r12
0x15ebc:	pop	r13
0x15ebe:	pop	r14
0x15ec0:	pop	r15
0x15ec2:	ret	
0x15ec3:	nop	dword ptr [rax + rax]
0x15ec8:	mov	rdx, qword ptr [rsi + 0x18]
0x15ecc:	mov	rcx, qword ptr [rip + 0x1573d]
0x15ed3:	lea	rsi, [rsp + 0x28]
0x15ed8:	lea	rdi, [rip + 0xb591]
0x15edf:	call	0x83e0
0x15ee4:	test	rax, rax
0x15ee7:	je	0x15ea0
0x15ee9:	mov	rdi, qword ptr [r15 + 0x18]
0x15eed:	mov	rsi, qword ptr [rsp + 0x28]
0x15ef2:	xor	eax, eax
0x15ef4:	call	0x11190
0x15ef9:	mov	r13d, eax
0x15efc:	test	eax, eax
0x15efe:	jne	0x160b8
0x15f04:	mov	rbp, qword ptr [rsp + 0x28]
0x15f09:	mov	rdi, rbp
0x15f0c:	call	0x49b0
0x15f11:	mov	rdi, rbp
0x15f14:	mov	rbx, rax
0x15f17:	lea	rax, [rax + 1]
0x15f1b:	lea	r14, [rbx + 2]
0x15f1f:	mov	qword ptr [rsp + 8], rax
0x15f24:	mov	rsi, r14
0x15f27:	call	0x1d690
0x15f2c:	mov	qword ptr [rsp + 0x28], rax
0x15f31:	mov	byte ptr [rax + rbx], 0x2f
0x15f35:	mov	rax, qword ptr [rsp + 0x28]
0x15f3a:	mov	byte ptr [rax + rbx + 1], 0
0x15f3f:	mov	edx, dword ptr [r15 + 0x68]
0x15f43:	test	edx, edx
0x15f45:	jle	0x15f6a
0x15f47:	mov	rax, qword ptr [r15 + 0x38]
0x15f4b:	add	rax, 0x49
0x15f4f:	jmp	0x15f65
0x15f51:	nop	dword ptr [rax]
0x15f58:	add	r13d, 1
0x15f5c:	add	rax, 0x50
0x15f60:	cmp	r13d, edx
0x15f63:	je	0x15f6a
0x15f65:	cmp	byte ptr [rax], 0
0x15f68:	je	0x15f58
0x15f6a:	mov	eax, dword ptr [r15 + 0x70]
0x15f6e:	mov	dword ptr [r15 + 0x50], 0xffffffff
0x15f76:	mov	dword ptr [r15 + 0x54], eax
0x15f7a:	nop	word ptr [rax + rax]
0x15f80:	mov	rdi, r15
0x15f83:	call	0x100e0
0x15f88:	cmp	eax, -1
0x15f8b:	je	0x16060
0x15f91:	cdqe	
0x15f93:	lea	rbx, [rax + rax*4]
0x15f97:	mov	rax, qword ptr [r15 + 0x38]
0x15f9b:	shl	rbx, 4
0x15f9f:	mov	rbp, qword ptr [rax + rbx]
0x15fa3:	xor	eax, eax
0x15fa5:	call	0x18ab0
0x15faa:	mov	rdi, rbp
0x15fad:	call	0x49b0
0x15fb2:	mov	rdi, qword ptr [rsp + 0x28]
0x15fb7:	lea	rsi, [r14 + rax]
0x15fbb:	call	0x1d690
0x15fc0:	mov	rcx, qword ptr [rsp + 8]
0x15fc5:	mov	rsi, rbp
0x15fc8:	mov	qword ptr [rsp + 0x28], rax
0x15fcd:	lea	rdi, [rax + rcx]
0x15fd1:	call	0x48b0
0x15fd6:	mov	eax, dword ptr [rip + 0x15ad4]
0x15fdc:	test	eax, eax
0x15fde:	jne	0x160e0
0x15fe4:	mov	rdi, qword ptr [rip + 0x144cd]
0x15feb:	call	0xdb60
0x15ff0:	xor	eax, eax
0x15ff2:	call	0xa820
0x15ff7:	mov	rax, qword ptr [r15 + 0x38]
0x15ffb:	mov	rsi, rbp
0x15ffe:	mov	rdi, r15
0x16001:	mov	rdx, qword ptr [rsp + 0x28]
0x16006:	mov	ecx, dword ptr [rax + rbx + 0x10]
0x1600a:	xor	eax, eax
0x1600c:	call	0x11d10
0x16011:	cmp	eax, 1
0x16014:	je	0x160d0
0x1601a:	cmp	eax, 2
0x1601d:	je	0x16060
0x1601f:	cmp	eax, 3
0x16022:	je	0x15f80
0x16028:	sub	eax, 1
0x1602b:	lea	rdx, [rip + 0x1438e]
0x16032:	xor	ecx, ecx
0x16034:	mov	rsi, rbp
0x16037:	cdqe	
0x16039:	mov	r8d, 0xe
0x1603f:	lea	rdi, [rip + 0xb415]
0x16046:	mov	rdx, qword ptr [rdx + rax*8]
0x1604a:	xor	eax, eax
0x1604c:	call	0xf7e0
0x16051:	test	al, al
0x16053:	jne	0x15f80
0x16059:	nop	dword ptr [rax]
0x16060:	mov	rdi, qword ptr [rsp + 0x28]
0x16065:	test	rdi, rdi
0x16068:	je	0x1606f
0x1606a:	call	0x18d10
0x1606f:	cmp	dword ptr [r15 + 0x68], r13d
0x16073:	je	0x16087
0x16075:	mov	dword ptr [r15 + 0x28], r13d
0x16079:	mov	rdi, r15
0x1607c:	xor	eax, eax
0x1607e:	call	0xf110
0x16083:	mov	dword ptr [r15 + 0x2c], eax
0x16087:	xor	eax, eax
0x16089:	call	0xe4e0
0x1608e:	xor	eax, eax
0x16090:	call	0xa820
0x16095:	jmp	0x15de2
0x1609a:	nop	word ptr [rax + rax]
0x160a0:	mov	rdi, qword ptr [rip + 0x14419]
0x160a7:	call	0xdb60
0x160ac:	jmp	0x15d16
0x160b1:	nop	dword ptr [rax]
0x160b8:	mov	edx, 0xc
0x160bd:	xor	esi, esi
0x160bf:	lea	rdi, [rip + 0x1423a]
0x160c6:	call	0x8070
0x160cb:	jmp	0x15ea0
0x160d0:	mov	rax, qword ptr [r15 + 0x38]
0x160d4:	mov	byte ptr [rax + rbx + 0x49], 0
0x160d9:	jmp	0x15f80
0x160de:	nop	
0x160e0:	mov	dword ptr [rip + 0x159c6], 0
0x160ea:	xor	eax, eax
0x160ec:	call	0xc8c0
0x160f1:	mov	edx, 4
0x160f6:	lea	rsi, [rip + 0xa435]
0x160fd:	lea	rdi, [rip + 0xb0f5]
0x16104:	mov	qword ptr [rsp + 0x18], rax
0x16109:	call	0x8070
0x1610e:	mov	rdi, qword ptr [rsp + 0x18]
0x16113:	mov	byte ptr [rsp + 0x17], al
0x16117:	call	0xc970
0x1611c:	xor	eax, eax
0x1611e:	call	0xd870
0x16123:	xor	eax, eax
0x16125:	call	0xd740
0x1612a:	xor	eax, eax
0x1612c:	call	0xa820
0x16131:	movzx	eax, byte ptr [rsp + 0x17]
0x16136:	and	eax, 0xffffffdf
0x16139:	cmp	al, 0x4e
0x1613b:	je	0x15fe4
0x16141:	jmp	0x16060
0x16146:	nop	word ptr cs:[rax + rax]
0x16150:	mov	rdx, qword ptr [rsp + 0x30]
0x16155:	lea	rdi, [rip + 0xbaf4]
0x1615c:	xor	ecx, ecx
0x1615e:	xor	eax, eax
0x16160:	mov	r8d, 0x1e
0x16166:	mov	rsi, rbp
0x16169:	call	0xf7e0
0x1616e:	mov	rdi, qword ptr [rsp + 0x30]
0x16173:	call	0x18d10
0x16178:	jmp	0x15ea0
0x1617d:	nop	dword ptr [rax]
0x16180:	mov	rdi, r15
0x16183:	call	0x14d00
0x16188:	jmp	0x15e5b
0x1618d:	nop	dword ptr [rax]
0x16190:	mov	rdi, r12
0x16193:	call	0x14d00
0x16198:	jmp	0x15dfe
0x1619d:	nop	dword ptr [rax]
0x161a0:	mov	rdi, qword ptr [rsp + 0x30]
0x161a5:	call	0x18d10
0x161aa:	xor	eax, eax
0x161ac:	call	0xe4e0
0x161b1:	xor	eax, eax
0x161b3:	call	0xa820
0x161b8:	jmp	0x15ea0
0x161bd:	call	0x49d0
0x161c2:	nop	word ptr cs:[rax + rax]
0x161cd:	nop	dword ptr [rax]
0x161d0:	endbr64	
0x161d4:	push	r13
0x161d6:	xor	r13d, r13d
0x161d9:	push	r12
0x161db:	lea	r12, [rip + 0xc203]
0x161e2:	push	rbp
0x161e3:	mov	rbp, rdi
0x161e6:	push	rbx
0x161e7:	mov	rbx, rsi
0x161ea:	sub	rsp, 8
0x161ee:	mov	rdx, qword ptr [rdi + 0x38]
0x161f2:	test	rdx, rdx
0x161f5:	je	0x1621a
0x161f7:	movsxd	rax, dword ptr [rdi + 0x28]
0x161fb:	lea	rax, [rax + rax*4]
0x161ff:	shl	rax, 4
0x16203:	mov	rdi, qword ptr [rdx + rax]
0x16207:	test	rdi, rdi
0x1620a:	je	0x1621a
0x1620c:	call	0x1d7a0
0x16211:	mov	r13d, 1
0x16217:	mov	r12, rax
0x1621a:	xor	edx, edx
0x1621c:	mov	rsi, qword ptr [rbp + 0x18]
0x16220:	cmp	rbx, -1
0x16224:	mov	rdi, rbp
0x16227:	sete	dl
0x1622a:	xor	eax, eax
0x1622c:	call	0xf880
0x16231:	test	eax, eax
0x16233:	je	0x16278
0x16235:	cmp	rbx, -1
0x16239:	je	0x16288
0x1623b:	mov	dword ptr [rbp + 0x28], 0
0x16242:	mov	rdi, rbp
0x16245:	xor	eax, eax
0x16247:	call	0xf110
0x1624c:	mov	dword ptr [rbp + 0x2c], eax
0x1624f:	test	r13d, r13d
0x16252:	jne	0x16260
0x16254:	add	rsp, 8
0x16258:	pop	rbx
0x16259:	pop	rbp
0x1625a:	pop	r12
0x1625c:	pop	r13
0x1625e:	ret	
0x1625f:	nop	
0x16260:	add	rsp, 8
0x16264:	mov	rdi, r12
0x16267:	pop	rbx
0x16268:	pop	rbp
0x16269:	pop	r12
0x1626b:	pop	r13
0x1626d:	jmp	0x18d10
0x16272:	nop	word ptr [rax + rax]
0x16278:	mov	rdi, rbp
0x1627b:	xor	eax, eax
0x1627d:	call	0x14d00
0x16282:	jmp	0x1624f
0x16284:	nop	dword ptr [rax]
0x16288:	mov	rsi, r12
0x1628b:	mov	rdi, rbp
0x1628e:	xor	eax, eax
0x16290:	call	0x122d0
0x16295:	mov	rdi, rbp
0x16298:	mov	dword ptr [rbp + 0x28], eax
0x1629b:	xor	eax, eax
0x1629d:	call	0xf110
0x162a2:	mov	dword ptr [rbp + 0x2c], eax
0x162a5:	jmp	0x1624f
0x162a7:	nop	word ptr [rax + rax]
0x162b0:	endbr64	
0x162b4:	push	r15
0x162b6:	push	r14
0x162b8:	push	r13
0x162ba:	push	r12
0x162bc:	mov	r12, rdi
0x162bf:	push	rbp
0x162c0:	movsxd	rax, dword ptr [rdi + 0x28]
0x162c4:	mov	rbp, rsi
0x162c7:	lea	rax, [rax + rax*4]
0x162cb:	shl	rax, 4
0x162cf:	add	rax, qword ptr [rdi + 0x38]
0x162d3:	movzx	edx, byte ptr [rax + 0x48]
0x162d7:	mov	r14, qword ptr [rax]
0x162da:	test	dl, dl
0x162dc:	je	0x16300
0x162de:	cmp	dl, 1
0x162e1:	jne	0x162ed
0x162e3:	cmp	byte ptr [rax + 0x4a], 0
0x162e7:	jne	0x16420
0x162ed:	xor	r13d, r13d
0x162f0:	pop	rbp
0x162f1:	mov	eax, r13d
0x162f4:	pop	r12
0x162f6:	pop	r13
0x162f8:	pop	r14
0x162fa:	pop	r15
0x162fc:	ret	
0x162fd:	nop	dword ptr [rax]
0x16300:	cmp	byte ptr [r14], 0x2e
0x16304:	jne	0x163c0
0x1630a:	cmp	byte ptr [r14 + 1], 0x2e
0x1630f:	jne	0x163c0
0x16315:	cmp	byte ptr [r14 + 2], 0
0x1631a:	jne	0x163c0
0x16320:	mov	rax, qword ptr [rdi + 0x18]
0x16324:	cmp	byte ptr [rax], 0x2f
0x16327:	jne	0x16330
0x16329:	cmp	byte ptr [rax + 1], 0
0x1632d:	je	0x162ed
0x1632f:	nop	
0x16330:	mov	rax, qword ptr [r12 + 0x78]
0x16335:	lea	rdi, [rax + 1]
0x16339:	call	0x1d670
0x1633e:	mov	rsi, qword ptr [r12 + 0x18]
0x16343:	mov	rdi, rax
0x16346:	mov	r15, rax
0x16349:	call	0x48b0
0x1634e:	mov	edx, 1
0x16353:	mov	rsi, r14
0x16356:	mov	rdi, r12
0x16359:	xor	eax, eax
0x1635b:	call	0xf880
0x16360:	mov	r13d, eax
0x16363:	test	eax, eax
0x16365:	jne	0x165c0
0x1636b:	xor	eax, eax
0x1636d:	mov	rdi, r12
0x16370:	call	0x14d00
0x16375:	xor	eax, eax
0x16377:	mov	rdi, r12
0x1637a:	call	0x10ec0
0x1637f:	xor	eax, eax
0x16381:	mov	rdi, r12
0x16384:	call	0x10160
0x16389:	cmp	byte ptr [r12 + 0x6d], 0
0x1638f:	jne	0x165b0
0x16395:	xor	eax, eax
0x16397:	mov	rdi, r12
0x1639a:	call	0x10240
0x1639f:	cmp	byte ptr [r12 + 0x6d], 0
0x163a5:	je	0x162ed
0x163ab:	mov	rdi, r12
0x163ae:	xor	eax, eax
0x163b0:	call	0x10d70
0x163b5:	jmp	0x162f0
0x163ba:	nop	word ptr [rax + rax]
0x163c0:	mov	rax, qword ptr [r12 + 0x78]
0x163c5:	lea	rdi, [rax + 1]
0x163c9:	call	0x1d670
0x163ce:	mov	rsi, qword ptr [r12 + 0x18]
0x163d3:	mov	rdi, rax
0x163d6:	mov	r15, rax
0x163d9:	call	0x48b0
0x163de:	mov	edx, 1
0x163e3:	mov	rsi, r14
0x163e6:	mov	rdi, r12
0x163e9:	xor	eax, eax
0x163eb:	call	0xf880
0x163f0:	mov	r13d, eax
0x163f3:	test	eax, eax
0x163f5:	jne	0x164b0
0x163fb:	mov	ecx, 0x1c
0x16400:	xor	edx, edx
0x16402:	mov	rsi, r14
0x16405:	xor	eax, eax
0x16407:	lea	rdi, [rip + 0xaf94]
0x1640e:	call	0xf760
0x16413:	jmp	0x162f0
0x16418:	nop	dword ptr [rax + rax]
0x16420:	mov	rdi, r14
0x16423:	call	0x49b0
0x16428:	lea	rdi, [rax + 0x21]
0x1642c:	call	0x1d670
0x16431:	mov	r8, r14
0x16434:	mov	esi, 1
0x16439:	lea	rcx, [rip + 0xb04b]
0x16440:	mov	rdx, -1
0x16447:	mov	r13, rax
0x1644a:	mov	rdi, rax
0x1644d:	xor	eax, eax
0x1644f:	call	0x4f10
0x16454:	xor	esi, esi
0x16456:	mov	rdi, r13
0x16459:	call	0x193f0
0x1645e:	mov	rdi, r13
0x16461:	mov	r13d, 1
0x16467:	mov	dword ptr [rip + 0x1446b], 1
0x16471:	call	0x18d10
0x16476:	xor	eax, eax
0x16478:	call	0xa480
0x1647d:	mov	rdi, qword ptr [rip + 0x14444]
0x16484:	call	0xbb10
0x16489:	mov	rdi, r14
0x1648c:	mov	dword ptr [r12 + 0x14], 0x3fffffff
0x16495:	mov	dword ptr [rbp + 0x14], 0x3fffffff
0x1649c:	call	0xd610
0x164a1:	mov	rdi, qword ptr [r12 + 0x18]
0x164a6:	call	0xc4b0
0x164ab:	jmp	0x162f0
0x164b0:	mov	dword ptr [r12 + 0x28], 0
0x164b9:	mov	rdi, r12
0x164bc:	xor	eax, eax
0x164be:	call	0xf110
0x164c3:	mov	dword ptr [r12 + 0x2c], eax
0x164c8:	mov	rdi, r15
0x164cb:	call	0x18d10
0x164d0:	xor	eax, eax
0x164d2:	mov	rdi, r12
0x164d5:	call	0x10ec0
0x164da:	xor	eax, eax
0x164dc:	mov	rdi, r12
0x164df:	call	0x10160
0x164e4:	cmp	byte ptr [r12 + 0x6d], 0
0x164ea:	je	0x164f6
0x164ec:	mov	rdi, r12
0x164ef:	xor	eax, eax
0x164f1:	call	0xec50
0x164f6:	xor	eax, eax
0x164f8:	mov	rdi, r12
0x164fb:	call	0x10240
0x16500:	cmp	byte ptr [r12 + 0x6d], 0
0x16506:	je	0x16512
0x16508:	mov	rdi, r12
0x1650b:	xor	eax, eax
0x1650d:	call	0x10d70
0x16512:	mov	rsi, qword ptr [rbp + 0x18]
0x16516:	mov	rdi, qword ptr [r12 + 0x18]
0x1651b:	call	0x4b30
0x16520:	mov	r13d, eax
0x16523:	test	eax, eax
0x16525:	jne	0x16588
0x16527:	mov	r8d, 1
0x1652d:	mov	rdx, r12
0x16530:	mov	esi, 0x22
0x16535:	mov	rdi, rbp
0x16538:	mov	rcx, -1
0x1653f:	call	0x13e30
0x16544:	xor	eax, eax
0x16546:	mov	rdi, rbp
0x16549:	call	0x10ec0
0x1654e:	xor	eax, eax
0x16550:	mov	rdi, rbp
0x16553:	call	0x10160
0x16558:	cmp	byte ptr [rbp + 0x6d], 0
0x1655c:	jne	0x165a0
0x1655e:	xor	eax, eax
0x16560:	mov	rdi, rbp
0x16563:	call	0x10240
0x16568:	cmp	byte ptr [rbp + 0x6d], 0
0x1656c:	je	0x162ed
0x16572:	mov	rdi, rbp
0x16575:	xor	eax, eax
0x16577:	call	0x10d70
0x1657c:	jmp	0x162f0
0x16581:	nop	dword ptr [rax]
0x16588:	mov	rdi, rbp
0x1658b:	xor	eax, eax
0x1658d:	call	0x10240
0x16592:	jmp	0x162ed
0x16597:	nop	word ptr [rax + rax]
0x165a0:	mov	rdi, rbp
0x165a3:	xor	eax, eax
0x165a5:	call	0xec50
0x165aa:	jmp	0x1655e
0x165ac:	nop	dword ptr [rax]
0x165b0:	mov	rdi, r12
0x165b3:	xor	eax, eax
0x165b5:	call	0xec50
0x165ba:	jmp	0x16395
0x165bf:	nop	
0x165c0:	mov	rdi, r15
0x165c3:	mov	esi, 0x2f
0x165c8:	call	0x4a20
0x165cd:	mov	rdi, r12
0x165d0:	lea	rsi, [rax + 1]
0x165d4:	xor	eax, eax
0x165d6:	call	0x122d0
0x165db:	mov	rdi, r12
0x165de:	mov	dword ptr [r12 + 0x28], eax
0x165e3:	xor	eax, eax
0x165e5:	call	0xf110
0x165ea:	jmp	0x164c3
0x165ef:	nop	
0x165f0:	endbr64	
0x165f4:	push	r13
0x165f6:	push	r12
0x165f8:	mov	r12, rdx
0x165fb:	push	rbp
0x165fc:	mov	rbp, rsi
0x165ff:	push	rbx
0x16600:	mov	rbx, rdi
0x16603:	mov	rdi, rdx
0x16606:	sub	rsp, 8
0x1660a:	call	0x49b0
0x1660f:	cmp	byte ptr [r12], 0x2f
0x16614:	je	0x166f0
0x1661a:	add	rax, qword ptr [rbx + 0x78]
0x1661e:	mov	rdi, qword ptr [rbx + 0x18]
0x16622:	lea	rdx, [rax + 1]
0x16626:	lea	rsi, [rax + 2]
0x1662a:	mov	qword ptr [rbx + 0x78], rdx
0x1662e:	call	0x1d690
0x16633:	mov	qword ptr [rbx + 0x18], rax
0x16637:	mov	rdi, rax
0x1663a:	mov	r13, rax
0x1663d:	call	0x49b0
0x16642:	mov	edx, 0x2f
0x16647:	mov	rsi, r12
0x1664a:	mov	word ptr [r13 + rax], dx
0x16650:	mov	rdi, qword ptr [rbx + 0x18]
0x16654:	call	0x4df0
0x16659:	mov	rdi, qword ptr [rbx + 0x18]
0x1665d:	call	0x18040
0x16662:	mov	dword ptr [rbx + 0x28], 0
0x16669:	mov	rdi, rbx
0x1666c:	xor	eax, eax
0x1666e:	mov	r8d, 1
0x16674:	call	0xf110
0x16679:	xor	ecx, ecx
0x1667b:	xor	edx, edx
0x1667d:	mov	esi, 0x22
0x16682:	mov	dword ptr [rbx + 0x2c], eax
0x16685:	mov	rdi, rbx
0x16688:	call	0x13e30
0x1668d:	xor	eax, eax
0x1668f:	mov	rdi, rbx
0x16692:	call	0x10ec0
0x16697:	xor	eax, eax
0x16699:	mov	rdi, rbx
0x1669c:	call	0x10160
0x166a1:	cmp	byte ptr [rbx + 0x6d], 0
0x166a5:	je	0x166b1
0x166a7:	mov	rdi, rbx
0x166aa:	xor	eax, eax
0x166ac:	call	0xec50
0x166b1:	xor	eax, eax
0x166b3:	mov	rdi, rbx
0x166b6:	call	0x10240
0x166bb:	cmp	byte ptr [rbx + 0x6d], 0
0x166bf:	je	0x166cb
0x166c1:	mov	rdi, rbx
0x166c4:	xor	eax, eax
0x166c6:	call	0x10d70
0x166cb:	mov	rsi, qword ptr [rbp + 0x18]
0x166cf:	mov	rdi, qword ptr [rbx + 0x18]
0x166d3:	call	0x4b30
0x166d8:	test	eax, eax
0x166da:	je	0x16718
0x166dc:	add	rsp, 8
0x166e0:	pop	rbx
0x166e1:	pop	rbp
0x166e2:	pop	r12
0x166e4:	pop	r13
0x166e6:	ret	
0x166e7:	nop	word ptr [rax + rax]
0x166f0:	mov	qword ptr [rbx + 0x78], rax
0x166f4:	mov	rdi, qword ptr [rbx + 0x18]
0x166f8:	lea	rsi, [rax + 1]
0x166fc:	call	0x1d690
0x16701:	mov	rsi, r12
0x16704:	mov	qword ptr [rbx + 0x18], rax
0x16708:	mov	rdi, rax
0x1670b:	call	0x48b0
0x16710:	jmp	0x16662
0x16715:	nop	dword ptr [rax]
0x16718:	xor	edx, edx
0x1671a:	mov	r8d, 1
0x16720:	mov	esi, 0x22
0x16725:	mov	rdi, rbp
0x16728:	mov	rcx, -1
0x1672f:	call	0x13e30
0x16734:	xor	eax, eax
0x16736:	mov	rdi, rbp
0x16739:	call	0x10ec0
0x1673e:	xor	eax, eax
0x16740:	mov	rdi, rbp
0x16743:	call	0x10160
0x16748:	cmp	byte ptr [rbp + 0x6d], 0
0x1674c:	jne	0x16780
0x1674e:	xor	eax, eax
0x16750:	mov	rdi, rbp
0x16753:	call	0x10240
0x16758:	cmp	byte ptr [rbp + 0x6d], 0
0x1675c:	je	0x166dc
0x16762:	add	rsp, 8
0x16766:	mov	rdi, rbp
0x16769:	xor	eax, eax
0x1676b:	pop	rbx
0x1676c:	pop	rbp
0x1676d:	pop	r12
0x1676f:	pop	r13
0x16771:	jmp	0x10d70
0x16776:	nop	word ptr cs:[rax + rax]
0x16780:	xor	eax, eax
0x16782:	mov	rdi, rbp
0x16785:	call	0xec50
0x1678a:	xor	eax, eax
0x1678c:	mov	rdi, rbp
0x1678f:	call	0x10240
0x16794:	cmp	byte ptr [rbp + 0x6d], 0
0x16798:	je	0x166dc
0x1679e:	jmp	0x16762
0x167a0:	endbr64	
0x167a4:	push	r15
0x167a6:	lea	r15, [rip + 0x13bd3]
0x167ad:	push	r14
0x167af:	lea	r14, [rip + 0xacdc]
0x167b6:	push	r13
0x167b8:	mov	r13, rsi
0x167bb:	push	r12
0x167bd:	mov	r12d, edx
0x167c0:	push	rbp
0x167c1:	mov	rbp, rdi
0x167c4:	push	rbx
0x167c5:	sub	rsp, 8
0x167c9:	mov	rdi, qword ptr [rip + 0x13d08]
0x167d0:	call	0xdb60
0x167d5:	xor	eax, eax
0x167d7:	call	0xa820
0x167dc:	mov	eax, dword ptr [rbp + 0x70]
0x167df:	mov	dword ptr [rbp + 0x50], 0xffffffff
0x167e6:	mov	dword ptr [rbp + 0x90], 1
0x167f0:	mov	dword ptr [rbp + 0x54], eax
0x167f3:	nop	dword ptr [rax + rax]
0x167f8:	mov	rdi, rbp
0x167fb:	call	0x100e0
0x16800:	movsxd	rbx, eax
0x16803:	cmp	ebx, -1
0x16806:	je	0x1686b
0x16808:	xor	eax, eax
0x1680a:	call	0x18ab0
0x1680f:	xor	eax, eax
0x16811:	mov	edx, r12d
0x16814:	mov	esi, ebx
0x16816:	mov	rdi, rbp
0x16819:	call	0x134d0
0x1681e:	cmp	eax, 1
0x16821:	je	0x168f0
0x16827:	cmp	eax, 2
0x1682a:	je	0x1686b
0x1682c:	cmp	eax, 3
0x1682f:	je	0x167f8
0x16831:	sub	eax, 1
0x16834:	xor	ecx, ecx
0x16836:	mov	rdi, r14
0x16839:	mov	r8d, 0x1e
0x1683f:	cdqe	
0x16841:	mov	rdx, qword ptr [r15 + rax*8]
0x16845:	lea	rax, [rbx + rbx*4]
0x16849:	shl	rax, 4
0x1684d:	add	rax, qword ptr [rbp + 0x38]
0x16851:	mov	rsi, qword ptr [rax]
0x16854:	xor	eax, eax
0x16856:	call	0xf7e0
0x1685b:	mov	rdi, rbp
0x1685e:	call	0x100e0
0x16863:	movsxd	rbx, eax
0x16866:	cmp	ebx, -1
0x16869:	jne	0x16808
0x1686b:	xor	eax, eax
0x1686d:	call	0xe4e0
0x16872:	xor	eax, eax
0x16874:	call	0xa820
0x16879:	xor	ecx, ecx
0x1687b:	xor	edx, edx
0x1687d:	mov	r8d, 1
0x16883:	mov	esi, 0x22
0x16888:	mov	rdi, rbp
0x1688b:	call	0x13e30
0x16890:	xor	eax, eax
0x16892:	mov	rdi, rbp
0x16895:	call	0x10ec0
0x1689a:	xor	eax, eax
0x1689c:	mov	rdi, rbp
0x1689f:	call	0x10160
0x168a4:	cmp	byte ptr [rbp + 0x6d], 0
0x168a8:	je	0x168b4
0x168aa:	mov	rdi, rbp
0x168ad:	xor	eax, eax
0x168af:	call	0xec50
0x168b4:	xor	eax, eax
0x168b6:	mov	rdi, rbp
0x168b9:	call	0x10240
0x168be:	cmp	byte ptr [rbp + 0x6d], 0
0x168c2:	je	0x168ce
0x168c4:	mov	rdi, rbp
0x168c7:	xor	eax, eax
0x168c9:	call	0x10d70
0x168ce:	mov	rsi, qword ptr [r13 + 0x18]
0x168d2:	mov	rdi, qword ptr [rbp + 0x18]
0x168d6:	call	0x4b30
0x168db:	test	eax, eax
0x168dd:	je	0x16908
0x168df:	add	rsp, 8
0x168e3:	pop	rbx
0x168e4:	pop	rbp
0x168e5:	pop	r12
0x168e7:	pop	r13
0x168e9:	pop	r14
0x168eb:	pop	r15
0x168ed:	ret	
0x168ee:	nop	
0x168f0:	lea	rax, [rbx + rbx*4]
0x168f4:	shl	rax, 4
0x168f8:	add	rax, qword ptr [rbp + 0x38]
0x168fc:	mov	byte ptr [rax + 0x49], 0
0x16900:	jmp	0x167f8
0x16905:	nop	dword ptr [rax]
0x16908:	xor	ecx, ecx
0x1690a:	xor	edx, edx
0x1690c:	mov	r8d, 1
0x16912:	mov	esi, 0x22
0x16917:	mov	rdi, r13
0x1691a:	call	0x13e30
0x1691f:	xor	eax, eax
0x16921:	mov	rdi, r13
0x16924:	call	0x10ec0
0x16929:	xor	eax, eax
0x1692b:	mov	rdi, r13
0x1692e:	call	0x10160
0x16933:	cmp	byte ptr [r13 + 0x6d], 0
0x16938:	jne	0x16968
0x1693a:	xor	eax, eax
0x1693c:	mov	rdi, r13
0x1693f:	call	0x10240
0x16944:	cmp	byte ptr [r13 + 0x6d], 0
0x16949:	je	0x168df
0x1694b:	add	rsp, 8
0x1694f:	mov	rdi, r13
0x16952:	xor	eax, eax
0x16954:	pop	rbx
0x16955:	pop	rbp
0x16956:	pop	r12
0x16958:	pop	r13
0x1695a:	pop	r14
0x1695c:	pop	r15
0x1695e:	jmp	0x10d70
0x16963:	nop	dword ptr [rax + rax]
0x16968:	mov	rdi, r13
0x1696b:	xor	eax, eax
0x1696d:	call	0xec50
0x16972:	jmp	0x1693a
0x16974:	nop	word ptr cs:[rax + rax]
0x1697e:	nop	
0x16980:	push	r15
0x16982:	push	r14
0x16984:	push	r13
0x16986:	push	r12
0x16988:	push	rbp
0x16989:	push	rbx
0x1698a:	sub	rsp, 0x8c8
0x16991:	mov	rdi, qword ptr [rip + 0x14ca8]
0x16998:	mov	r13, qword ptr [rip + 0x13cc1]
0x1699f:	mov	rax, qword ptr fs:[0x28]
0x169a8:	mov	qword ptr [rsp + 0x8b8], rax
0x169b0:	xor	eax, eax
0x169b2:	lea	rax, [rip + 0x14c8f]
0x169b9:	mov	qword ptr [rip + 0x13ca0], rax
0x169c0:	test	rdi, rdi
0x169c3:	je	0x16a78
0x169c9:	lea	rsi, [rsp + 0x20]
0x169ce:	call	0x18f40
0x169d3:	cmp	eax, -1
0x169d6:	je	0x16a78
0x169dc:	mov	rax, qword ptr [rsp + 0x68]
0x169e1:	mov	rdi, qword ptr [rip + 0x14c58]
0x169e8:	lea	rsi, [rip + 0xb5da]
0x169ef:	mov	qword ptr [rsp + 0x10], rax
0x169f4:	mov	rax, qword ptr [rsp + 0x78]
0x169f9:	mov	qword ptr [rsp + 0x18], rax
0x169fe:	call	0x4da0
0x16a03:	mov	r14, rax
0x16a06:	test	rax, rax
0x16a09:	je	0x16a78
0x16a0b:	mov	dword ptr [rsp + 4], 0
0x16a13:	xor	ebp, ebp
0x16a15:	xor	ebx, ebx
0x16a17:	xor	r12d, r12d
0x16a1a:	lea	r15, [rsp + 0xb0]
0x16a22:	nop	word ptr [rax + rax]
0x16a28:	mov	rdx, r14
0x16a2b:	mov	esi, 0x800
0x16a30:	mov	rdi, r15
0x16a33:	call	0x4b00
0x16a38:	test	rax, rax
0x16a3b:	je	0x16ad0
0x16a41:	cmp	byte ptr [rsp + 0xb0], 0
0x16a49:	je	0x16aa8
0x16a4b:	cmp	dword ptr [r15], 0x6d6f7246
0x16a52:	je	0x16ab0
0x16a54:	test	ebp, ebp
0x16a56:	jne	0x16a28
0x16a58:	test	ebx, ebx
0x16a5a:	je	0x16a28
0x16a5c:	cmp	dword ptr [r15], 0x74617453
0x16a63:	je	0x16b60
0x16a69:	xor	ebp, ebp
0x16a6b:	mov	ebx, 1
0x16a70:	jmp	0x16a28
0x16a72:	nop	word ptr [rax + rax]
0x16a78:	xor	eax, eax
0x16a7a:	mov	rdx, qword ptr [rsp + 0x8b8]
0x16a82:	sub	rdx, qword ptr fs:[0x28]
0x16a8b:	jne	0x16c02
0x16a91:	add	rsp, 0x8c8
0x16a98:	pop	rbx
0x16a99:	pop	rbp
0x16a9a:	pop	r12
0x16a9c:	pop	r13
0x16a9e:	pop	r14
0x16aa0:	pop	r15
0x16aa2:	ret	
0x16aa3:	nop	dword ptr [rax + rax]
0x16aa8:	xor	ebx, ebx
0x16aaa:	jmp	0x16a28
0x16aaf:	nop	
0x16ab0:	cmp	byte ptr [r15 + 4], 0x20
0x16ab5:	jne	0x16a54
0x16ab7:	add	r12d, 1
0x16abb:	xor	ebp, ebp
0x16abd:	mov	ebx, 1
0x16ac2:	jmp	0x16a28
0x16ac7:	nop	word ptr [rax + rax]
0x16ad0:	mov	rdi, r14
0x16ad3:	call	0x4940
0x16ad8:	mov	rdi, qword ptr [rip + 0x14b61]
0x16adf:	lea	rsi, [rsp + 0x10]
0x16ae4:	call	0x47f0
0x16ae9:	mov	rbp, qword ptr [rip + 0x13b70]
0x16af0:	test	r12d, r12d
0x16af3:	je	0x16b0a
0x16af5:	cmp	r12d, dword ptr [rsp + 4]
0x16afa:	je	0x16b48
0x16afc:	lea	rbp, [rip + 0x13b1d]
0x16b03:	mov	qword ptr [rip + 0x13b56], rbp
0x16b0a:	mov	rdi, rbp
0x16b0d:	call	0x49b0
0x16b12:	mov	rsi, r13
0x16b15:	mov	rdi, rbp
0x16b18:	mov	r8, rax
0x16b1b:	mov	eax, dword ptr [rip + 0x14b2f]
0x16b21:	add	eax, dword ptr [rip + 0x14b2d]
0x16b27:	lea	eax, [rax + r8 + 0x15]
0x16b2c:	mov	dword ptr [rip + 0x14b1a], eax
0x16b32:	call	0x4b30
0x16b37:	test	eax, eax
0x16b39:	setne	al
0x16b3c:	movzx	eax, al
0x16b3f:	jmp	0x16a7a
0x16b44:	nop	dword ptr [rax]
0x16b48:	lea	rbp, [rip + 0x13adc]
0x16b4f:	mov	qword ptr [rip + 0x13b0a], rbp
0x16b56:	jmp	0x16b0a
0x16b58:	nop	dword ptr [rax + rax]
0x16b60:	cmp	word ptr [r15 + 4], 0x7375
0x16b67:	jne	0x16a69
0x16b6d:	cmp	byte ptr [r15 + 6], 0x3a
0x16b72:	jne	0x16a69
0x16b78:	mov	rdi, r15
0x16b7b:	mov	esi, 0x3a
0x16b80:	call	0x4a00
0x16b85:	movsx	rbx, byte ptr [rax + 1]
0x16b8a:	lea	rdi, [rax + 1]
0x16b8e:	test	bl, bl
0x16b90:	je	0x16bf8
0x16b92:	mov	qword ptr [rsp + 8], rdi
0x16b97:	call	0x4f00
0x16b9c:	mov	rdi, qword ptr [rsp + 8]
0x16ba1:	mov	rax, qword ptr [rax]
0x16ba4:	jmp	0x16bbd
0x16ba6:	nop	word ptr cs:[rax + rax]
0x16bb0:	movsx	rbx, byte ptr [rdi + 1]
0x16bb5:	add	rdi, 1
0x16bb9:	test	bl, bl
0x16bbb:	je	0x16bf8
0x16bbd:	test	byte ptr [rax + rbx*2 + 1], 0x20
0x16bc2:	jne	0x16bb0
0x16bc4:	mov	esi, 0x52
0x16bc9:	mov	ebp, 1
0x16bce:	mov	ebx, 1
0x16bd3:	call	0x4a00
0x16bd8:	test	rax, rax
0x16bdb:	je	0x16a28
0x16be1:	add	dword ptr [rsp + 4], 1
0x16be6:	mov	ebp, 1
0x16beb:	mov	ebx, 1
0x16bf0:	jmp	0x16a28
0x16bf5:	nop	dword ptr [rax]
0x16bf8:	mov	ebx, 1
0x16bfd:	jmp	0x16a28
0x16c02:	call	0x49d0
0x16c07:	nop	word ptr [rax + rax]
0x16c10:	endbr64	
0x16c14:	sub	rsp, 0xa8
0x16c1b:	mov	edi, 0x1d
0x16c20:	mov	rax, qword ptr fs:[0x28]
0x16c29:	mov	qword ptr [rsp + 0x98], rax
0x16c31:	xor	eax, eax
0x16c33:	call	0x1d670
0x16c38:	lea	r9, [rip + 0x9950]
0x16c3f:	lea	r8, [rip + 0x991f]
0x16c46:	mov	rdx, -1
0x16c4d:	lea	rcx, [rip + 0xb219]
0x16c54:	mov	esi, 1
0x16c59:	mov	rdi, rax
0x16c5c:	mov	qword ptr [rip + 0x149fd], rax
0x16c63:	xor	eax, eax
0x16c65:	call	0x4f10
0x16c6a:	mov	rdi, qword ptr [rip + 0x149ef]
0x16c71:	call	0x49b0
0x16c76:	mov	rdi, qword ptr [rip + 0x14e1b]
0x16c7d:	mov	dword ptr [rip + 0x149d5], eax
0x16c83:	call	0x49b0
0x16c88:	mov	rdi, qword ptr [rip + 0x13d01]
0x16c8f:	mov	dword ptr [rip + 0x149bf], eax
0x16c95:	call	0x49b0
0x16c9a:	lea	rdi, [rip + 0x9999]
0x16ca1:	mov	dword ptr [rip + 0x149a9], eax
0x16ca7:	call	0x47e0
0x16cac:	mov	qword ptr [rip + 0x1498d], rax
0x16cb3:	test	rax, rax
0x16cb6:	je	0x16cc3
0x16cb8:	mov	rdi, rax
0x16cbb:	mov	rsi, rsp
0x16cbe:	call	0x18f40
0x16cc3:	xor	eax, eax
0x16cc5:	call	0x16980
0x16cca:	mov	rdi, qword ptr [rip + 0x1398f]
0x16cd1:	call	0x49b0
0x16cd6:	mov	r8, rax
0x16cd9:	mov	eax, dword ptr [rip + 0x14971]
0x16cdf:	add	eax, dword ptr [rip + 0x1496f]
0x16ce5:	lea	eax, [rax + r8 + 0x15]
0x16cea:	mov	dword ptr [rip + 0x1495c], eax
0x16cf0:	xor	eax, eax
0x16cf2:	call	0xc590
0x16cf7:	mov	qword ptr [rip + 0x1493a], rax
0x16cfe:	mov	rax, qword ptr [rsp + 0x98]
0x16d06:	sub	rax, qword ptr fs:[0x28]
0x16d0f:	jne	0x16d19
0x16d11:	add	rsp, 0xa8
0x16d18:	ret	
0x16d19:	call	0x49d0
0x16d1e:	nop	
0x16d20:	endbr64	
0x16d24:	mov	rdi, qword ptr [rip + 0x1490d]
0x16d2b:	jmp	0xc5c0
0x16d30:	endbr64	
0x16d34:	mov	r8d, edi
0x16d37:	mov	rdi, qword ptr [rip + 0x148fa]
0x16d3e:	mov	edx, esi
0x16d40:	mov	ecx, 1
0x16d45:	xor	esi, esi
0x16d47:	jmp	0xc5e0
0x16d4c:	nop	dword ptr [rax]
0x16d50:	endbr64	
0x16d54:	push	r14
0x16d56:	push	r13
0x16d58:	push	r12
0x16d5a:	push	rbp
0x16d5b:	push	rbx
0x16d5c:	sub	rsp, 0x10
0x16d60:	mov	rax, qword ptr fs:[0x28]
0x16d69:	mov	qword ptr [rsp + 8], rax
0x16d6e:	xor	eax, eax
0x16d70:	lea	rbp, [rsp + 7]
0x16d75:	mov	rdi, rbp
0x16d78:	call	0xa6a0
0x16d7d:	mov	edx, dword ptr [rip + 0x138c1]
0x16d83:	mov	esi, dword ptr [rip + 0x138b7]
0x16d89:	mov	edi, dword ptr [rip + 0x138b9]
0x16d8f:	call	0xa570
0x16d94:	mov	rdi, qword ptr [rip + 0x1489d]
0x16d9b:	xor	edx, edx
0x16d9d:	xor	esi, esi
0x16d9f:	call	0xc680
0x16da4:	mov	edx, dword ptr [rip + 0x148ae]
0x16daa:	mov	rsi, qword ptr [rip + 0x148af]
0x16db1:	mov	rdi, qword ptr [rip + 0x14880]
0x16db8:	call	0xc600
0x16dbd:	mov	rax, qword ptr [rip + 0x14874]
0x16dc4:	mov	edi, dword ptr [rax + 0xc]
0x16dc7:	add	edi, 1
0x16dca:	movsxd	rdi, edi
0x16dcd:	call	0x1d670
0x16dd2:	mov	r13, rax
0x16dd5:	xor	eax, eax
0x16dd7:	call	0x16980
0x16ddc:	mov	r14, qword ptr [rip + 0x14855]
0x16de3:	mov	eax, dword ptr [rip + 0x1486f]
0x16de9:	mov	ecx, dword ptr [rip + 0x1485d]
0x16def:	mov	edx, dword ptr [r14 + 0xc]
0x16df3:	lea	esi, [rax + rcx + 2]
0x16df7:	cmp	esi, edx
0x16df9:	jl	0x16e58
0x16dfb:	cmp	eax, edx
0x16dfd:	jl	0x16e30
0x16dff:	mov	rdi, r13
0x16e02:	call	0x18d10
0x16e07:	mov	rdi, rbp
0x16e0a:	call	0xa6b0
0x16e0f:	mov	rax, qword ptr [rsp + 8]
0x16e14:	sub	rax, qword ptr fs:[0x28]
0x16e1d:	jne	0x16fc7
0x16e23:	add	rsp, 0x10
0x16e27:	pop	rbx
0x16e28:	pop	rbp
0x16e29:	pop	r12
0x16e2b:	pop	r13
0x16e2d:	pop	r14
0x16e2f:	ret	
0x16e30:	sub	edx, eax
0x16e32:	mov	rdi, r13
0x16e35:	mov	esi, 0x20
0x16e3a:	mov	r12d, edx
0x16e3d:	movsxd	rdx, edx
0x16e40:	call	0x4a50
0x16e45:	mov	edx, r12d
0x16e48:	mov	rsi, r13
0x16e4b:	mov	rdi, r14
0x16e4e:	call	0xc600
0x16e53:	jmp	0x16dff
0x16e55:	nop	dword ptr [rax]
0x16e58:	sub	edx, eax
0x16e5a:	mov	rdi, r13
0x16e5d:	mov	esi, 0x20
0x16e62:	mov	ebx, edx
0x16e64:	sub	ebx, ecx
0x16e66:	movsxd	rdx, ebx
0x16e69:	call	0x4a50
0x16e6e:	mov	edx, ebx
0x16e70:	mov	rsi, r13
0x16e73:	mov	rdi, r14
0x16e76:	call	0xc600
0x16e7b:	add	ebx, dword ptr [rip + 0x147d7]
0x16e81:	mov	rdi, qword ptr [rip + 0x147b0]
0x16e88:	xor	esi, esi
0x16e8a:	mov	edx, ebx
0x16e8c:	call	0xc680
0x16e91:	mov	rdi, qword ptr [rip + 0x147a0]
0x16e98:	mov	edx, 5
0x16e9d:	lea	rsi, [rip + 0x13793]
0x16ea4:	call	0xc600
0x16ea9:	mov	rdi, qword ptr [rip + 0x14788]
0x16eb0:	mov	esi, 0x20
0x16eb5:	call	0xc650
0x16eba:	mov	edi, dword ptr [rip + 0x1378c]
0x16ec0:	call	0xa4f0
0x16ec5:	mov	edx, dword ptr [rip + 0x14789]
0x16ecb:	mov	rsi, qword ptr [rip + 0x14bc6]
0x16ed2:	mov	rdi, qword ptr [rip + 0x1475f]
0x16ed9:	call	0xc600
0x16ede:	mov	rdi, qword ptr [rip + 0x14753]
0x16ee5:	mov	esi, 0x20
0x16eea:	call	0xc650
0x16eef:	mov	r12, qword ptr [rip + 0x1376a]
0x16ef6:	mov	rdi, r12
0x16ef9:	call	0x49b0
0x16efe:	mov	rdi, qword ptr [rip + 0x14733]
0x16f05:	mov	rsi, r12
0x16f08:	mov	edx, eax
0x16f0a:	call	0xc600
0x16f0f:	mov	rdi, qword ptr [rip + 0x14722]
0x16f16:	mov	esi, 0x20
0x16f1b:	call	0xc650
0x16f20:	mov	edi, dword ptr [rip + 0x1371a]
0x16f26:	call	0xa4f0
0x16f2b:	mov	rdi, qword ptr [rip + 0x14706]
0x16f32:	mov	edx, 4
0x16f37:	lea	rsi, [rip + 0x136f4]
0x16f3e:	call	0xc600
0x16f43:	mov	rdi, qword ptr [rip + 0x146ee]
0x16f4a:	mov	esi, 0x20
0x16f4f:	call	0xc650
0x16f54:	mov	edi, dword ptr [rip + 0x136f6]
0x16f5a:	call	0xa4f0
0x16f5f:	mov	edx, dword ptr [rip + 0x146eb]
0x16f65:	mov	rsi, qword ptr [rip + 0x13a24]
0x16f6c:	mov	rdi, qword ptr [rip + 0x146c5]
0x16f73:	call	0xc600
0x16f78:	mov	edi, dword ptr [rip + 0x136c2]
0x16f7e:	call	0xa4f0
0x16f83:	mov	rdi, qword ptr [rip + 0x146ae]
0x16f8a:	mov	esi, 0x20
0x16f8f:	call	0xc650
0x16f94:	xor	edi, edi
0x16f96:	xor	eax, eax
0x16f98:	call	0x16fd0
0x16f9d:	mov	rdi, qword ptr [rip + 0x14694]
0x16fa4:	xor	esi, esi
0x16fa6:	mov	eax, dword ptr [rdi + 0xc]
0x16fa9:	lea	edx, [rax - 1]
0x16fac:	call	0xc680
0x16fb1:	mov	rdi, qword ptr [rip + 0x14680]
0x16fb8:	mov	esi, 0x20
0x16fbd:	call	0xc650
0x16fc2:	jmp	0x16dff
0x16fc7:	call	0x49d0
0x16fcc:	nop	dword ptr [rax]
0x16fd0:	endbr64	
0x16fd4:	push	r12
0x16fd6:	push	rbp
0x16fd7:	push	rbx
0x16fd8:	mov	ebx, edi
0x16fda:	sub	rsp, 0x30
0x16fde:	mov	rax, qword ptr fs:[0x28]
0x16fe7:	mov	qword ptr [rsp + 0x28], rax
0x16fec:	xor	eax, eax
0x16fee:	call	0x7870
0x16ff3:	test	eax, eax
0x16ff5:	jne	0x17114
0x16ffb:	mov	eax, dword ptr [rip + 0x1464b]
0x17001:	mov	edx, dword ptr [rip + 0x14651]
0x17007:	lea	edx, [rdx + rax + 2]
0x1700b:	mov	rax, qword ptr [rip + 0x14626]
0x17012:	cmp	edx, dword ptr [rax + 0xc]
0x17015:	jge	0x17114
0x1701b:	test	ebx, ebx
0x1701d:	jne	0x17140
0x17023:	lea	r12, [rsp + 7]
0x17028:	xor	eax, eax
0x1702a:	call	0x18330
0x1702f:	mov	rdi, r12
0x17032:	mov	rbp, rax
0x17035:	call	0xa6a0
0x1703a:	lea	rsi, [rsp + 0xc]
0x1703f:	lea	rdi, [rsp + 8]
0x17044:	call	0xa4d0
0x17049:	xor	edi, edi
0x1704b:	call	0xa660
0x17050:	movsxd	r8, dword ptr [rbp + 8]
0x17054:	mov	r9d, dword ptr [rbp + 4]
0x17058:	lea	rbp, [rsp + 0x10]
0x1705d:	lea	rcx, [rip + 0xa0d4]
0x17064:	mov	esi, 1
0x17069:	mov	rdi, rbp
0x1706c:	mov	rax, r8
0x1706f:	imul	r8, r8, 0x2aaaaaab
0x17076:	cdq	
0x17077:	sar	r8, 0x21
0x1707b:	sub	r8d, edx
0x1707e:	lea	edx, [r8 + r8*2]
0x17082:	mov	r8d, eax
0x17085:	shl	edx, 2
0x17088:	sub	r8d, edx
0x1708b:	mov	edx, 0xc
0x17090:	cmove	r8d, edx
0x17094:	cmp	eax, 0xc
0x17097:	mov	edx, 0x70
0x1709c:	mov	eax, 0x61
0x170a1:	cmovge	eax, edx
0x170a4:	sub	rsp, 8
0x170a8:	mov	edx, 0x10
0x170ad:	push	rax
0x170ae:	xor	eax, eax
0x170b0:	call	0x4f10
0x170b5:	mov	rdi, qword ptr [rip + 0x1457c]
0x170bc:	xor	esi, esi
0x170be:	mov	eax, dword ptr [rdi + 0xc]
0x170c1:	lea	edx, [rax - 7]
0x170c4:	call	0xc680
0x170c9:	mov	edx, dword ptr [rip + 0x13589]
0x170cf:	mov	esi, dword ptr [rip + 0x1357f]
0x170d5:	mov	edi, dword ptr [rip + 0x13581]
0x170db:	call	0xa570
0x170e0:	mov	rdi, rbp
0x170e3:	call	0x49b0
0x170e8:	mov	rdi, qword ptr [rip + 0x14549]
0x170ef:	mov	rsi, rbp
0x170f2:	mov	edx, eax
0x170f4:	call	0xc600
0x170f9:	mov	esi, dword ptr [rsp + 0x1c]
0x170fd:	mov	edi, dword ptr [rsp + 0x18]
0x17101:	call	0xa4b0
0x17106:	mov	rdi, r12
0x17109:	call	0xa6b0
0x1710e:	pop	rax
0x1710f:	pop	rdx
0x17110:	test	ebx, ebx
0x17112:	jne	0x17130
0x17114:	mov	rax, qword ptr [rsp + 0x28]
0x17119:	sub	rax, qword ptr fs:[0x28]
0x17122:	jne	0x1715b
0x17124:	add	rsp, 0x30
0x17128:	pop	rbx
0x17129:	pop	rbp
0x1712a:	pop	r12
0x1712c:	ret	
0x1712d:	nop	dword ptr [rax]
0x17130:	xor	eax, eax
0x17132:	call	0xa820
0x17137:	jmp	0x17114
0x17139:	nop	dword ptr [rax]
0x17140:	xor	eax, eax
0x17142:	call	0x16980
0x17147:	test	eax, eax
0x17149:	je	0x17023
0x1714f:	xor	eax, eax
0x17151:	call	0x16d50
0x17156:	jmp	0x17023
0x1715b:	call	0x49d0
0x17160:	push	rbp
0x17161:	mov	esi, 0x400
0x17166:	push	rbx
0x17167:	lea	rbx, [rip + 0x14512]
0x1716e:	mov	rdi, rbx
0x17171:	sub	rsp, 8
0x17175:	mov	rdx, qword ptr [rip + 0x1490c]
0x1717c:	call	0x4b00
0x17181:	test	rax, rax
0x17184:	je	0x171d8
0x17186:	mov	rdi, rbx
0x17189:	call	0x49b0
0x1718e:	mov	rbp, rax
0x17191:	cmp	rax, 0x3ff
0x17197:	je	0x171e8
0x17199:	mov	esi, 0x23
0x1719e:	mov	rdi, rbx
0x171a1:	call	0x4a00
0x171a6:	test	rax, rax
0x171a9:	je	0x171c0
0x171ab:	mov	byte ptr [rax], 0
0x171ae:	mov	eax, 1
0x171b3:	add	rsp, 8
0x171b7:	pop	rbx
0x171b8:	pop	rbp
0x171b9:	ret	
0x171ba:	nop	word ptr [rax + rax]
0x171c0:	cmp	byte ptr [rbx + rbp - 1], 0xa
0x171c5:	mov	eax, 1
0x171ca:	jne	0x171b3
0x171cc:	mov	byte ptr [rbx + rbp - 1], 0
0x171d1:	jmp	0x171b3
0x171d3:	nop	dword ptr [rax + rax]
0x171d8:	add	rsp, 8
0x171dc:	xor	eax, eax
0x171de:	pop	rbx
0x171df:	pop	rbp
0x171e0:	ret	
0x171e1:	nop	dword ptr [rax]
0x171e8:	mov	rcx, qword ptr [rip + 0x136f9]
0x171ef:	mov	rdi, qword ptr [rip + 0x1368a]
0x171f6:	lea	rdx, [rip + 0xaceb]
0x171fd:	xor	eax, eax
0x171ff:	mov	esi, 1
0x17204:	call	0x4e60
0x17209:	nop	dword ptr [rax]
0x17210:	mov	rdi, qword ptr [rip + 0x14871]
0x17217:	call	0x4a90
0x1721c:	cmp	eax, 0xa
0x1721f:	je	0x17199
0x17225:	cmp	eax, -1
0x17228:	jne	0x17210
0x1722a:	jmp	0x17199
0x1722f:	nop	
0x17230:	endbr64	
0x17234:	test	rdi, rdi
0x17237:	je	0x17270
0x17239:	sub	rsp, 8
0x1723d:	lea	rsi, [rip + 0xad85]
0x17244:	call	0x4da0
0x17249:	mov	qword ptr [rip + 0x14838], rax
0x17250:	test	rax, rax
0x17253:	je	0x17269
0x17255:	mov	dword ptr [rip + 0x14821], 0xffffffff
0x1725f:	mov	eax, 1
0x17264:	add	rsp, 8
0x17268:	ret	
0x17269:	xor	eax, eax
0x1726b:	add	rsp, 8
0x1726f:	ret	
0x17270:	xor	eax, eax
0x17272:	ret	
0x17273:	nop	word ptr cs:[rax + rax]
0x1727e:	nop	
0x17280:	endbr64	
0x17284:	mov	rdi, qword ptr [rip + 0x147fd]
0x1728b:	test	rdi, rdi
0x1728e:	je	0x17298
0x17290:	jmp	0x4940
0x17295:	nop	dword ptr [rax]
0x17298:	ret	
0x17299:	nop	dword ptr [rax]
0x172a0:	endbr64	
0x172a4:	push	rbp
0x172a5:	xor	edx, edx
0x172a7:	xor	esi, esi
0x172a9:	lea	rbp, [rip + 0x143d0]
0x172b0:	push	rbx
0x172b1:	mov	rbx, rdi
0x172b4:	sub	rsp, 8
0x172b8:	mov	rdi, qword ptr [rip + 0x147c9]
0x172bf:	call	0x4c80
0x172c4:	jmp	0x172df
0x172c6:	nop	word ptr cs:[rax + rax]
0x172d0:	mov	rsi, rbp
0x172d3:	mov	rdi, rbx
0x172d6:	call	0x4b30
0x172db:	test	eax, eax
0x172dd:	je	0x17300
0x172df:	xor	eax, eax
0x172e1:	call	0x17160
0x172e6:	test	eax, eax
0x172e8:	jne	0x172d0
0x172ea:	mov	eax, 0xffffffff
0x172ef:	mov	dword ptr [rip + 0x1478b], eax
0x172f5:	add	rsp, 8
0x172f9:	pop	rbx
0x172fa:	pop	rbp
0x172fb:	ret	
0x172fc:	nop	dword ptr [rax]
0x17300:	mov	rdi, qword ptr [rip + 0x14781]
0x17307:	call	0x4b80
0x1730c:	mov	dword ptr [rip + 0x1476e], eax
0x17312:	add	rsp, 8
0x17316:	pop	rbx
0x17317:	pop	rbp
0x17318:	ret	
0x17319:	nop	dword ptr [rax]
0x17320:	endbr64	
0x17324:	push	r15
0x17326:	push	r14
0x17328:	push	r13
0x1732a:	mov	r13, rdi
0x1732d:	push	r12
0x1732f:	push	rbp
0x17330:	push	rbx
0x17331:	mov	ebx, ecx
0x17333:	sub	rsp, 0x438
0x1733a:	mov	qword ptr [rsp + 0x10], rsi
0x1733f:	mov	dword ptr [rsp + 0xc], edx
0x17343:	mov	rax, qword ptr fs:[0x28]
0x1734c:	mov	qword ptr [rsp + 0x428], rax
0x17354:	xor	eax, eax
0x17356:	test	ecx, ecx
0x17358:	jne	0x17618
0x1735e:	cmp	dword ptr [rsp + 0xc], 1
0x17363:	jne	0x175e0
0x17369:	mov	rax, qword ptr [rsp + 0x10]
0x1736e:	mov	qword ptr [rax], 0
0x17375:	lea	rbp, [rip + 0x14304]
0x1737c:	lea	r12, [rsp + 0x20]
0x17381:	lea	r14, [rip + 0xa092]
0x17388:	nop	dword ptr [rax + rax]
0x17390:	xor	eax, eax
0x17392:	call	0x17160
0x17397:	test	eax, eax
0x17399:	je	0x17600
0x1739f:	cmp	byte ptr [rbp], 0
0x173a3:	je	0x17600
0x173a9:	mov	rdx, r12
0x173ac:	mov	rsi, r14
0x173af:	mov	rdi, rbp
0x173b2:	xor	eax, eax
0x173b4:	mov	byte ptr [rsp + 0x20], 0
0x173b9:	call	0x4c60
0x173be:	call	0x4f00
0x173c3:	mov	r15, rax
0x173c6:	test	ebx, ebx
0x173c8:	jne	0x17410
0x173ca:	movsx	rcx, byte ptr [rsp + 0x20]
0x173d0:	mov	rax, qword ptr [rax]
0x173d3:	mov	byte ptr [rsp + 0x40], 0
0x173d8:	test	byte ptr [rax + rcx*2 + 1], 0x40
0x173dd:	jne	0x17433
0x173df:	mov	rax, qword ptr [rsp + 0x428]
0x173e7:	sub	rax, qword ptr fs:[0x28]
0x173f0:	jne	0x17657
0x173f6:	add	rsp, 0x438
0x173fd:	pop	rbx
0x173fe:	pop	rbp
0x173ff:	pop	r12
0x17401:	pop	r13
0x17403:	pop	r14
0x17405:	pop	r15
0x17407:	ret	
0x17408:	nop	dword ptr [rax + rax]
0x17410:	movsx	rcx, byte ptr [rsp + 0x20]
0x17416:	mov	rax, qword ptr [rax]
0x17419:	test	byte ptr [rax + rcx*2 + 1], 0x40
0x1741e:	je	0x173df
0x17420:	mov	rsi, r12
0x17423:	mov	rdi, r13
0x17426:	call	0x4b30
0x1742b:	test	eax, eax
0x1742d:	jne	0x17390
0x17433:	mov	esi, 0x3d
0x17438:	mov	rdi, rbp
0x1743b:	call	0x4a00
0x17440:	test	rax, rax
0x17443:	je	0x174e3
0x17449:	cmp	byte ptr [rax + 1], 0
0x1744d:	je	0x174e3
0x17453:	mov	rdx, qword ptr [rsp + 0x10]
0x17458:	lea	rdi, [rax + 1]
0x1745c:	mov	qword ptr [rdx], rdi
0x1745f:	movzx	ecx, byte ptr [rax + 1]
0x17463:	test	cl, cl
0x17465:	je	0x1763f
0x1746b:	cmp	dword ptr [rsp + 0xc], 1
0x17470:	jle	0x1763f
0x17476:	mov	r8d, 1
0x1747c:	jmp	0x1748e
0x1747e:	nop	
0x17480:	mov	ecx, eax
0x17482:	cmp	r8d, dword ptr [rsp + 0xc]
0x17487:	jge	0x174d1
0x17489:	test	sil, sil
0x1748c:	je	0x174d1
0x1748e:	movzx	eax, byte ptr [rdi + 1]
0x17492:	test	al, al
0x17494:	setne	sil
0x17498:	add	rdi, 1
0x1749c:	cmp	cl, 0x3b
0x1749f:	jne	0x17480
0x174a1:	mov	byte ptr [rdi - 1], 0
0x174a5:	cmp	al, 0x3b
0x174a7:	je	0x17638
0x174ad:	test	sil, sil
0x174b0:	je	0x17638
0x174b6:	mov	rdx, qword ptr [rsp + 0x10]
0x174bb:	movsxd	rax, r8d
0x174be:	mov	qword ptr [rdx + rax*8], rdi
0x174c2:	movzx	ecx, byte ptr [rdi]
0x174c5:	test	cl, cl
0x174c7:	setne	sil
0x174cb:	add	r8d, 1
0x174cf:	jmp	0x17482
0x174d1:	mov	esi, 0x3b
0x174d6:	call	0x4a00
0x174db:	test	rax, rax
0x174de:	je	0x174ef
0x174e0:	mov	byte ptr [rax], 0
0x174e3:	mov	eax, dword ptr [rsp + 0xc]
0x174e7:	test	eax, eax
0x174e9:	jle	0x175c0
0x174ef:	mov	rsi, qword ptr [rsp + 0x10]
0x174f4:	xor	r8d, r8d
0x174f7:	jmp	0x17513
0x174f9:	nop	dword ptr [rax]
0x17500:	add	r8d, 1
0x17504:	add	rsi, 8
0x17508:	cmp	dword ptr [rsp + 0xc], r8d
0x1750d:	jle	0x175c0
0x17513:	mov	rbp, qword ptr [rsi]
0x17516:	test	rbp, rbp
0x17519:	je	0x17500
0x1751b:	mov	r14, qword ptr [r15]
0x1751e:	movsx	rax, byte ptr [rbp]
0x17523:	test	byte ptr [r14 + rax*2 + 1], 0x20
0x17529:	je	0x17547
0x1752b:	lea	rax, [rbp + 1]
0x1752f:	nop	
0x17530:	mov	rbp, rax
0x17533:	mov	qword ptr [rsi], rax
0x17536:	add	rax, 1
0x1753a:	movsx	rcx, byte ptr [rbp]
0x1753f:	test	byte ptr [r14 + rcx*2 + 1], 0x20
0x17545:	jne	0x17530
0x17547:	mov	rdi, rbp
0x1754a:	mov	qword ptr [rsp + 0x18], rsi
0x1754f:	mov	dword ptr [rsp + 0x10], r8d
0x17554:	call	0x49b0
0x17559:	mov	r8d, dword ptr [rsp + 0x10]
0x1755e:	mov	rsi, qword ptr [rsp + 0x18]
0x17563:	lea	rax, [rbp + rax - 1]
0x17568:	movsx	rcx, byte ptr [rax]
0x1756c:	test	byte ptr [r14 + rcx*2 + 1], 0x20
0x17572:	jne	0x17591
0x17574:	jmp	0x17596
0x17576:	nop	word ptr cs:[rax + rax]
0x17580:	movsx	rcx, byte ptr [rax - 1]
0x17585:	sub	rax, 1
0x17589:	test	byte ptr [r14 + rcx*2 + 1], 0x20
0x1758f:	je	0x17596
0x17591:	cmp	rax, rbp
0x17594:	jae	0x17580
0x17596:	mov	byte ptr [rax + 1], 0
0x1759a:	mov	rax, qword ptr [rsi]
0x1759d:	cmp	byte ptr [rax], 0
0x175a0:	jne	0x17500
0x175a6:	mov	qword ptr [rsi], 0
0x175ad:	add	r8d, 1
0x175b1:	add	rsi, 8
0x175b5:	cmp	dword ptr [rsp + 0xc], r8d
0x175ba:	jg	0x17513
0x175c0:	test	ebx, ebx
0x175c2:	jne	0x173df
0x175c8:	mov	rsi, r12
0x175cb:	mov	rdi, r13
0x175ce:	call	0x48b0
0x175d3:	jmp	0x173df
0x175d8:	nop	dword ptr [rax + rax]
0x175e0:	movsxd	rdx, dword ptr [rsp + 0xc]
0x175e5:	mov	rdi, qword ptr [rsp + 0x10]
0x175ea:	xor	esi, esi
0x175ec:	shl	rdx, 3
0x175f0:	call	0x4a50
0x175f5:	jmp	0x17375
0x175fa:	nop	word ptr [rax + rax]
0x17600:	test	ebx, ebx
0x17602:	jne	0x173df
0x17608:	mov	byte ptr [r13], 0
0x1760d:	jmp	0x173df
0x17612:	nop	word ptr [rax + rax]
0x17618:	movsxd	rsi, dword ptr [rip + 0x14461]
0x1761f:	mov	rdi, qword ptr [rip + 0x14462]
0x17626:	xor	edx, edx
0x17628:	call	0x4c80
0x1762d:	jmp	0x1735e
0x17632:	nop	word ptr [rax + rax]
0x17638:	mov	ecx, eax
0x1763a:	jmp	0x174cb
0x1763f:	mov	esi, 0x3b
0x17644:	call	0x4a00
0x17649:	test	rax, rax
0x1764c:	jne	0x174e0
0x17652:	jmp	0x174e3
0x17657:	call	0x49d0
0x1765c:	nop	dword ptr [rax]
0x17660:	endbr64	
0x17664:	push	r12
0x17666:	mov	edi, 0xf
0x1766b:	lea	r12, [rip + 0xa8b4]
0x17672:	call	0x1d670
0x17677:	mov	rcx, r12
0x1767a:	lea	r9, [rip + 0xa895]
0x17681:	lea	r8, [rip + 0xa893]
0x17688:	mov	rdi, rax
0x1768b:	mov	rdx, -1
0x17692:	mov	esi, 1
0x17697:	mov	qword ptr [rip + 0x14402], rax
0x1769e:	xor	eax, eax
0x176a0:	call	0x4f10
0x176a5:	mov	edi, 0x17
0x176aa:	call	0x1d670
0x176af:	mov	rcx, r12
0x176b2:	pop	r12
0x176b4:	lea	r9, [rip + 0xa870]
0x176bb:	mov	qword ptr [rip + 0x143e6], rax
0x176c2:	mov	rdi, rax
0x176c5:	xor	eax, eax
0x176c7:	lea	r8, [rip + 0xa84d]
0x176ce:	mov	rdx, -1
0x176d5:	mov	esi, 1
0x176da:	jmp	0x4f10
0x176df:	nop	
0x176e0:	endbr64	
0x176e4:	push	rbp
0x176e5:	mov	rbp, rdi
0x176e8:	xor	edi, edi
0x176ea:	push	rbx
0x176eb:	sub	rsp, 0x18
0x176ef:	mov	rax, qword ptr fs:[0x28]
0x176f8:	mov	qword ptr [rsp + 8], rax
0x176fd:	xor	eax, eax
0x176ff:	call	0x4be0
0x17704:	mov	rdi, rsp
0x17707:	mov	qword ptr [rsp], rax
0x1770b:	call	0x4840
0x17710:	mov	rbx, rax
0x17713:	call	0x4920
0x17718:	movsxd	rcx, dword ptr [rbx + 0x10]
0x1771c:	sub	rsp, 8
0x17720:	lea	rdx, [rip + 0x12fd9]
0x17727:	mov	r9d, dword ptr [rbx + 8]
0x1772b:	mov	r8d, dword ptr [rbx + 0xc]
0x1772f:	mov	esi, 1
0x17734:	mov	rcx, qword ptr [rdx + rcx*8]
0x17738:	push	rbp
0x17739:	lea	rdx, [rip + 0xa8d0]
0x17740:	push	rax
0x17741:	mov	rdi, qword ptr [rip + 0x13138]
0x17748:	push	qword ptr [rip + 0x1319a]
0x1774e:	mov	eax, dword ptr [rbx]
0x17750:	push	rax
0x17751:	mov	eax, dword ptr [rbx + 4]
0x17754:	push	rax
0x17755:	xor	eax, eax
0x17757:	call	0x4e60
0x1775c:	add	rsp, 0x30
0x17760:	mov	rax, qword ptr [rsp + 8]
0x17765:	sub	rax, qword ptr fs:[0x28]
0x1776e:	jne	0x17777
0x17770:	add	rsp, 0x18
0x17774:	pop	rbx
0x17775:	pop	rbp
0x17776:	ret	
0x17777:	call	0x49d0
0x1777c:	nop	dword ptr [rax]
0x17780:	endbr64	
0x17784:	push	rbp
0x17785:	xor	eax, eax
0x17787:	mov	ebp, edi
0x17789:	call	0x8ad0
0x1778e:	cmp	ebp, 0xb
0x17791:	je	0x177d3
0x17793:	jg	0x177c0
0x17795:	lea	eax, [rbp - 1]
0x17798:	cmp	eax, 1
0x1779b:	ja	0x17802
0x1779d:	cmp	ebp, 1
0x177a0:	lea	rdi, [rip + 0xa791]
0x177a7:	lea	rax, [rip + 0xa78e]
0x177ae:	cmovne	rdi, rax
0x177b2:	call	0x176e0
0x177b7:	mov	edi, ebp
0x177b9:	call	0x4e20
0x177be:	nop	
0x177c0:	cmp	ebp, 0xf
0x177c3:	jne	0x17802
0x177c5:	lea	rdi, [rip + 0x8dbe]
0x177cc:	call	0x176e0
0x177d1:	jmp	0x177b7
0x177d3:	lea	rdi, [rip + 0xa766]
0x177da:	call	0x176e0
0x177df:	mov	rcx, qword ptr [rip + 0x13102]
0x177e6:	mov	rdi, qword ptr [rip + 0x13093]
0x177ed:	lea	rdx, [rip + 0xa88c]
0x177f4:	xor	eax, eax
0x177f6:	mov	esi, 1
0x177fb:	call	0x4e60
0x17800:	jmp	0x177b7
0x17802:	mov	rcx, qword ptr [rip + 0x130df]
0x17809:	mov	rdi, qword ptr [rip + 0x13070]
0x17810:	mov	r8d, ebp
0x17813:	xor	eax, eax
0x17815:	lea	rdx, [rip + 0xa82c]
0x1781c:	mov	esi, 1
0x17821:	call	0x4e60
0x17826:	jmp	0x177df
0x17828:	nop	dword ptr [rax + rax]
0x17830:	endbr64	
0x17834:	push	rbx
0x17835:	mov	rcx, qword ptr [rip + 0x130ac]
0x1783c:	mov	rbx, rdi
0x1783f:	mov	esi, 1
0x17844:	mov	rdi, qword ptr [rip + 0x13035]
0x1784b:	lea	rdx, [rip + 0xa6f3]
0x17852:	xor	eax, eax
0x17854:	call	0x4e60
0x17859:	mov	r8, rbx
0x1785c:	mov	rcx, qword ptr [rip + 0x13085]
0x17863:	pop	rbx
0x17864:	mov	rdi, qword ptr [rip + 0x13015]
0x1786b:	lea	rdx, [rip + 0xa836]
0x17872:	mov	esi, 1
0x17877:	xor	eax, eax
0x17879:	jmp	0x4e60
0x1787e:	nop	
0x17880:	endbr64	
0x17884:	sub	rsp, 8
0x17888:	mov	r8, rdi
0x1788b:	mov	rcx, qword ptr [rip + 0x13056]
0x17892:	xor	eax, eax
0x17894:	mov	rdi, qword ptr [rip + 0x12fe5]
0x1789b:	lea	rdx, [rip + 0xa836]
0x178a2:	mov	esi, 1
0x178a7:	call	0x4e60
0x178ac:	mov	rcx, qword ptr [rip + 0x13035]
0x178b3:	mov	esi, 1
0x178b8:	xor	eax, eax
0x178ba:	mov	rdi, qword ptr [rip + 0x12fbf]
0x178c1:	lea	rdx, [rip + 0xa840]
0x178c8:	call	0x4e60
0x178cd:	mov	rcx, qword ptr [rip + 0x13014]
0x178d4:	mov	esi, 1
0x178d9:	xor	eax, eax
0x178db:	mov	rdi, qword ptr [rip + 0x12f9e]
0x178e2:	lea	rdx, [rip + 0xa84f]
0x178e9:	call	0x4e60
0x178ee:	mov	rcx, qword ptr [rip + 0x12ff3]
0x178f5:	mov	esi, 1
0x178fa:	xor	eax, eax
0x178fc:	mov	rdi, qword ptr [rip + 0x12f7d]
0x17903:	lea	rdx, [rip + 0xa86e]
0x1790a:	call	0x4e60
0x1790f:	mov	rcx, qword ptr [rip + 0x12fd2]
0x17916:	mov	esi, 1
0x1791b:	xor	eax, eax
0x1791d:	mov	rdi, qword ptr [rip + 0x12f5c]
0x17924:	lea	rdx, [rip + 0xa885]
0x1792b:	call	0x4e60
0x17930:	mov	rcx, qword ptr [rip + 0x12fb1]
0x17937:	mov	esi, 1
0x1793c:	xor	eax, eax
0x1793e:	mov	rdi, qword ptr [rip + 0x12f3b]
0x17945:	lea	rdx, [rip + 0xa8a4]
0x1794c:	call	0x4e60
0x17951:	mov	rcx, qword ptr [rip + 0x12f90]
0x17958:	mov	esi, 1
0x1795d:	xor	eax, eax
0x1795f:	mov	rdi, qword ptr [rip + 0x12f1a]
0x17966:	lea	rdx, [rip + 0xa8c3]
0x1796d:	call	0x4e60
0x17972:	mov	rcx, qword ptr [rip + 0x12f6f]
0x17979:	mov	esi, 1
0x1797e:	xor	eax, eax
0x17980:	mov	rdi, qword ptr [rip + 0x12ef9]
0x17987:	lea	rdx, [rip + 0xa8ea]
0x1798e:	add	rsp, 8
0x17992:	jmp	0x4e60
0x17997:	nop	word ptr [rax + rax]
0x179a0:	endbr64	
0x179a4:	push	r12
0x179a6:	lea	r12, [rip + 0x12d33]
0x179ad:	push	rbp
0x179ae:	sub	rsp, 8
0x179b2:	mov	rdi, qword ptr [rip + 0x140ef]
0x179b9:	call	0x49b0
0x179be:	mov	rdi, r12
0x179c1:	mov	rbp, rax
0x179c4:	call	0x49b0
0x179c9:	lea	rdi, [rbp + rax + 9]
0x179ce:	call	0x1d670
0x179d3:	mov	rsi, qword ptr [rip + 0x140ce]
0x179da:	mov	rdi, rax
0x179dd:	mov	rbp, rax
0x179e0:	call	0x4980
0x179e5:	mov	rsi, r12
0x179e8:	mov	rdi, rax
0x179eb:	call	0x4980
0x179f0:	mov	edx, 0x6e6f
0x179f5:	mov	rdi, rbp
0x179f8:	mov	dword ptr [rax], 0x6d6d6f63
0x179fe:	mov	word ptr [rax + 4], dx
0x17a02:	mov	byte ptr [rax + 6], 0
0x17a06:	call	0x17230
0x17a0b:	test	eax, eax
0x17a0d:	je	0x17a17
0x17a0f:	add	rsp, 8
0x17a13:	pop	rbp
0x17a14:	pop	r12
0x17a16:	ret	
0x17a17:	mov	rdi, rbp
0x17a1a:	call	0x17830
0x17a1f:	mov	edi, 1
0x17a24:	call	0x4e20
0x17a29:	nop	dword ptr [rax]
0x17a30:	endbr64	
0x17a34:	push	r13
0x17a36:	push	r12
0x17a38:	lea	r12, [rip + 0x12c91]
0x17a3f:	push	rbp
0x17a40:	push	rbx
0x17a41:	sub	rsp, 8
0x17a45:	mov	rdi, qword ptr [rip + 0x12ea4]
0x17a4c:	call	0x49b0
0x17a51:	mov	rdi, r12
0x17a54:	mov	rbx, rax
0x17a57:	call	0x49b0
0x17a5c:	mov	rdi, qword ptr [rip + 0x12eed]
0x17a63:	mov	rbp, rax
0x17a66:	call	0x49b0
0x17a6b:	lea	rdi, [rbx + rbp + 2]
0x17a70:	add	rdi, rax
0x17a73:	call	0x1d670
0x17a78:	mov	rsi, qword ptr [rip + 0x12e71]
0x17a7f:	mov	rdi, rax
0x17a82:	mov	rbp, rax
0x17a85:	call	0x4980
0x17a8a:	mov	rsi, r12
0x17a8d:	mov	rdi, rax
0x17a90:	call	0x4980
0x17a95:	mov	rsi, qword ptr [rip + 0x12eb4]
0x17a9c:	mov	rdi, rax
0x17a9f:	call	0x48b0
0x17aa4:	mov	rdi, rbp
0x17aa7:	call	0x17230
0x17aac:	test	eax, eax
0x17aae:	jne	0x17b2a
0x17ab0:	mov	rdi, rbp
0x17ab3:	lea	r12, [rip + 0x12c06]
0x17aba:	call	0x18d10
0x17abf:	mov	rdi, qword ptr [rip + 0x12e2a]
0x17ac6:	call	0x49b0
0x17acb:	mov	rdi, r12
0x17ace:	mov	rbp, rax
0x17ad1:	call	0x49b0
0x17ad6:	mov	rdi, qword ptr [rip + 0x12e73]
0x17add:	mov	rbx, rax
0x17ae0:	call	0x49b0
0x17ae5:	lea	rdi, [rbp + rbx + 2]
0x17aea:	add	rdi, rax
0x17aed:	call	0x1d670
0x17af2:	mov	rsi, qword ptr [rip + 0x12df7]
0x17af9:	mov	rdi, rax
0x17afc:	mov	rbp, rax
0x17aff:	call	0x4980
0x17b04:	mov	rsi, r12
0x17b07:	mov	rdi, rax
0x17b0a:	call	0x4980
0x17b0f:	mov	rsi, qword ptr [rip + 0x12e3a]
0x17b16:	mov	rdi, rax
0x17b19:	call	0x48b0
0x17b1e:	mov	rdi, rbp
0x17b21:	call	0x17230
0x17b26:	test	eax, eax
0x17b28:	je	0x17b50
0x17b2a:	mov	rdi, rbp
0x17b2d:	mov	r12d, 1
0x17b33:	call	0x18d10
0x17b38:	add	rsp, 8
0x17b3c:	mov	eax, r12d
0x17b3f:	pop	rbx
0x17b40:	pop	rbp
0x17b41:	pop	r12
0x17b43:	pop	r13
0x17b45:	ret	
0x17b46:	nop	word ptr cs:[rax + rax]
0x17b50:	mov	rdi, rbp
0x17b53:	lea	r13, [rip + 0x12b86]
0x17b5a:	call	0x18d10
0x17b5f:	mov	rdi, qword ptr [rip + 0x13f42]
0x17b66:	call	0x49b0
0x17b6b:	mov	rdi, r13
0x17b6e:	mov	rbp, rax
0x17b71:	call	0x49b0
0x17b76:	mov	rdi, qword ptr [rip + 0x12dd3]
0x17b7d:	mov	rbx, rax
0x17b80:	call	0x49b0
0x17b85:	lea	rdi, [rbp + rbx + 2]
0x17b8a:	add	rdi, rax
0x17b8d:	call	0x1d670
0x17b92:	mov	rsi, qword ptr [rip + 0x13f0f]
0x17b99:	mov	rdi, rax
0x17b9c:	mov	rbp, rax
0x17b9f:	call	0x4980
0x17ba4:	mov	rsi, r13
0x17ba7:	mov	rdi, rax
0x17baa:	call	0x4980
0x17baf:	mov	rsi, qword ptr [rip + 0x12d9a]
0x17bb6:	mov	rdi, rax
0x17bb9:	call	0x48b0
0x17bbe:	mov	rdi, rbp
0x17bc1:	call	0x17230
0x17bc6:	mov	r12d, eax
0x17bc9:	test	eax, eax
0x17bcb:	jne	0x17b2a
0x17bd1:	xor	eax, eax
0x17bd3:	mov	rdi, rbp
0x17bd6:	call	0x17880
0x17bdb:	mov	rdi, rbp
0x17bde:	call	0x18d10
0x17be3:	mov	rdi, qword ptr [rip + 0x13ebe]
0x17bea:	call	0x49b0
0x17bef:	mov	rdi, r13
0x17bf2:	mov	rbx, rax
0x17bf5:	call	0x49b0
0x17bfa:	lea	rdi, [rbx + rax + 0xa]
0x17bff:	call	0x1d670
0x17c04:	mov	rsi, qword ptr [rip + 0x13e9d]
0x17c0b:	mov	rdi, rax
0x17c0e:	mov	rbp, rax
0x17c11:	call	0x4980
0x17c16:	mov	rsi, r13
0x17c19:	mov	rdi, rax
0x17c1c:	call	0x4980
0x17c21:	mov	rdi, rbp
0x17c24:	movabs	rdx, 0x636972656e6567
0x17c2e:	mov	qword ptr [rax], rdx
0x17c31:	call	0x17230
0x17c36:	test	eax, eax
0x17c38:	jne	0x17b38
0x17c3e:	mov	rdi, rbp
0x17c41:	call	0x17830
0x17c46:	mov	edi, 1
0x17c4b:	call	0x4e20
0x17c50:	endbr64	
0x17c54:	push	rbp
0x17c55:	push	rbx
0x17c56:	mov	rbx, rdi
0x17c59:	sub	rsp, 8
0x17c5d:	call	0x172a0
0x17c62:	cmp	eax, -1
0x17c65:	je	0x17c70
0x17c67:	add	rsp, 8
0x17c6b:	pop	rbx
0x17c6c:	pop	rbp
0x17c6d:	ret	
0x17c6e:	nop	
0x17c70:	mov	edx, 7
0x17c75:	lea	rsi, [rip + 0xa2e5]
0x17c7c:	mov	rdi, rbx
0x17c7f:	call	0x4890
0x17c84:	test	eax, eax
0x17c86:	jne	0x17cd4
0x17c88:	lea	rdi, [rbx + 5]
0x17c8c:	call	0x49b0
0x17c91:	lea	rdi, [rax + 6]
0x17c95:	call	0x1d670
0x17c9a:	lea	rsi, [rbx + 7]
0x17c9e:	mov	dword ptr [rax], 0x5449475b
0x17ca4:	mov	rbp, rax
0x17ca7:	lea	rdi, [rax + 5]
0x17cab:	mov	byte ptr [rax + 4], 0x2d
0x17caf:	call	0x48b0
0x17cb4:	mov	rdi, rbp
0x17cb7:	call	0x172a0
0x17cbc:	mov	rdi, rbp
0x17cbf:	cmp	eax, -1
0x17cc2:	je	0x17ccf
0x17cc4:	add	rsp, 8
0x17cc8:	pop	rbx
0x17cc9:	pop	rbp
0x17cca:	jmp	0x18d10
0x17ccf:	call	0x18d10
0x17cd4:	mov	rdi, qword ptr [rip + 0x12ba5]
0x17cdb:	mov	rcx, qword ptr [rip + 0x12c06]
0x17ce2:	mov	r8, rbx
0x17ce5:	xor	eax, eax
0x17ce7:	lea	rdx, [rip + 0xa5ba]
0x17cee:	mov	esi, 1
0x17cf3:	call	0x4e60
0x17cf8:	mov	edi, 1
0x17cfd:	call	0x4e20
0x17d02:	nop	word ptr cs:[rax + rax]
0x17d0d:	nop	dword ptr [rax]
0x17d10:	endbr64	
0x17d14:	push	rbx
0x17d15:	mov	ecx, 1
0x17d1a:	mov	ebx, esi
0x17d1c:	mov	edx, 1
0x17d21:	sub	rsp, 0x10
0x17d25:	mov	rax, qword ptr fs:[0x28]
0x17d2e:	mov	qword ptr [rsp + 8], rax
0x17d33:	xor	eax, eax
0x17d35:	mov	rsi, rsp
0x17d38:	call	0x17320
0x17d3d:	mov	rdi, qword ptr [rsp]
0x17d41:	mov	eax, ebx
0x17d43:	test	rdi, rdi
0x17d46:	je	0x17d54
0x17d48:	mov	edx, 0xa
0x17d4d:	xor	esi, esi
0x17d4f:	call	0x4ba0
0x17d54:	mov	rdx, qword ptr [rsp + 8]
0x17d59:	sub	rdx, qword ptr fs:[0x28]
0x17d62:	jne	0x17d6a
0x17d64:	add	rsp, 0x10
0x17d68:	pop	rbx
0x17d69:	ret	
0x17d6a:	call	0x49d0
0x17d6f:	nop	
0x17d70:	endbr64	
0x17d74:	push	r15
0x17d76:	push	r14
0x17d78:	mov	r14, rdi
0x17d7b:	push	r13
0x17d7d:	mov	r13d, ecx
0x17d80:	mov	ecx, 1
0x17d85:	push	r12
0x17d87:	mov	r12d, r13d
0x17d8a:	push	rbp
0x17d8b:	mov	ebp, edx
0x17d8d:	mov	edx, 1
0x17d92:	push	rbx
0x17d93:	mov	rbx, rsi
0x17d96:	sub	rsp, 0x18
0x17d9a:	mov	rax, qword ptr fs:[0x28]
0x17da3:	mov	qword ptr [rsp + 8], rax
0x17da8:	xor	eax, eax
0x17daa:	mov	rsi, rsp
0x17dad:	call	0x17320
0x17db2:	mov	r15, qword ptr [rsp]
0x17db6:	test	r15, r15
0x17db9:	je	0x17de4
0x17dbb:	test	ebp, ebp
0x17dbd:	jle	0x17e3c
0x17dbf:	xor	r12d, r12d
0x17dc2:	jmp	0x17dd5
0x17dc4:	nop	dword ptr [rax]
0x17dc8:	add	r12d, 1
0x17dcc:	add	rbx, 8
0x17dd0:	cmp	ebp, r12d
0x17dd3:	je	0x17e10
0x17dd5:	mov	rsi, qword ptr [rbx]
0x17dd8:	mov	rdi, r15
0x17ddb:	call	0x4b30
0x17de0:	test	eax, eax
0x17de2:	jne	0x17dc8
0x17de4:	mov	rax, qword ptr [rsp + 8]
0x17de9:	sub	rax, qword ptr fs:[0x28]
0x17df2:	jne	0x17e43
0x17df4:	add	rsp, 0x18
0x17df8:	mov	eax, r12d
0x17dfb:	pop	rbx
0x17dfc:	pop	rbp
0x17dfd:	pop	r12
0x17dff:	pop	r13
0x17e01:	pop	r14
0x17e03:	pop	r15
0x17e05:	ret	
0x17e06:	nop	word ptr cs:[rax + rax]
0x17e10:	mov	rcx, qword ptr [rip + 0x12ad1]
0x17e17:	mov	r9, r15
0x17e1a:	mov	r8, r14
0x17e1d:	xor	eax, eax
0x17e1f:	mov	rdi, qword ptr [rip + 0x12a5a]
0x17e26:	lea	rdx, [rip + 0xa13c]
0x17e2d:	mov	esi, 1
0x17e32:	mov	r12d, r13d
0x17e35:	call	0x4e60
0x17e3a:	jmp	0x17de4
0x17e3c:	je	0x17e10
0x17e3e:	xor	r12d, r12d
0x17e41:	jmp	0x17de4
0x17e43:	call	0x49d0
0x17e48:	nop	dword ptr [rax + rax]
0x17e50:	endbr64	
0x17e54:	push	r12
0x17e56:	mov	ecx, 1
0x17e5b:	mov	edx, 1
0x17e60:	mov	r12, rdi
0x17e63:	push	rbp
0x17e64:	push	rbx
0x17e65:	mov	ebx, esi
0x17e67:	sub	rsp, 0x10
0x17e6b:	mov	rax, qword ptr fs:[0x28]
0x17e74:	mov	qword ptr [rsp + 8], rax
0x17e79:	xor	eax, eax
0x17e7b:	mov	rsi, rsp
0x17e7e:	call	0x17320
0x17e83:	mov	rbp, qword ptr [rsp]
0x17e87:	mov	eax, ebx
0x17e89:	test	rbp, rbp
0x17e8c:	je	0x17ea7
0x17e8e:	cmp	byte ptr [rbp], 0x4f
0x17e92:	je	0x17ec0
0x17e94:	lea	rsi, [rip + 0x8e4b]
0x17e9b:	mov	rdi, rbp
0x17e9e:	call	0x4b30
0x17ea3:	test	eax, eax
0x17ea5:	jne	0x17ed8
0x17ea7:	mov	rdx, qword ptr [rsp + 8]
0x17eac:	sub	rdx, qword ptr fs:[0x28]
0x17eb5:	jne	0x17f03
0x17eb7:	add	rsp, 0x10
0x17ebb:	pop	rbx
0x17ebc:	pop	rbp
0x17ebd:	pop	r12
0x17ebf:	ret	
0x17ec0:	cmp	byte ptr [rbp + 1], 0x4e
0x17ec4:	jne	0x17e94
0x17ec6:	cmp	byte ptr [rbp + 2], 0
0x17eca:	mov	eax, 1
0x17ecf:	je	0x17ea7
0x17ed1:	jmp	0x17e94
0x17ed3:	nop	dword ptr [rax + rax]
0x17ed8:	mov	rcx, qword ptr [rip + 0x12a09]
0x17edf:	mov	r9, rbp
0x17ee2:	mov	r8, r12
0x17ee5:	xor	eax, eax
0x17ee7:	mov	rdi, qword ptr [rip + 0x12992]
0x17eee:	lea	rdx, [rip + 0xa074]
0x17ef5:	mov	esi, 1
0x17efa:	call	0x4e60
0x17eff:	mov	eax, ebx
0x17f01:	jmp	0x17ea7
0x17f03:	call	0x49d0
0x17f08:	nop	dword ptr [rax + rax]
0x17f10:	endbr64	
0x17f14:	push	r12
0x17f16:	mov	ecx, 1
0x17f1b:	mov	r12, rsi
0x17f1e:	mov	edx, 1
0x17f23:	sub	rsp, 0x10
0x17f27:	mov	rax, qword ptr fs:[0x28]
0x17f30:	mov	qword ptr [rsp + 8], rax
0x17f35:	xor	eax, eax
0x17f37:	mov	rsi, rsp
0x17f3a:	call	0x17320
0x17f3f:	mov	rdi, qword ptr [rsp]
0x17f43:	test	rdi, rdi
0x17f46:	je	0x17f50
0x17f48:	call	0x1d7a0
0x17f4d:	mov	r12, rax
0x17f50:	mov	rax, qword ptr [rsp + 8]
0x17f55:	sub	rax, qword ptr fs:[0x28]
0x17f5e:	jne	0x17f6a
0x17f60:	add	rsp, 0x10
0x17f64:	mov	rax, r12
0x17f67:	pop	r12
0x17f69:	ret	
0x17f6a:	call	0x49d0
0x17f6f:	nop	
0x17f70:	endbr64	
0x17f74:	push	r14
0x17f76:	push	r13
0x17f78:	push	r12
0x17f7a:	push	rbp
0x17f7b:	push	rbx
0x17f7c:	sub	rsp, 0x10
0x17f80:	mov	rax, qword ptr fs:[0x28]
0x17f89:	mov	qword ptr [rsp + 8], rax
0x17f8e:	xor	eax, eax
0x17f90:	test	edx, edx
0x17f92:	jle	0x17fe8
0x17f94:	lea	eax, [rdx - 1]
0x17f97:	mov	rbx, rsi
0x17f9a:	mov	rbp, rdi
0x17f9d:	mov	r12, rsp
0x17fa0:	lea	r13, [rsi + rax*8 + 8]
0x17fa5:	lea	r14, [rip + 0x9fbd]
0x17fac:	nop	dword ptr [rax]
0x17fb0:	mov	rdi, qword ptr [rbx]
0x17fb3:	mov	ecx, 1
0x17fb8:	mov	edx, 1
0x17fbd:	mov	rsi, r12
0x17fc0:	call	0x17320
0x17fc5:	mov	rdi, qword ptr [rsp]
0x17fc9:	test	rdi, rdi
0x17fcc:	je	0x17fdb
0x17fce:	call	0xbd00
0x17fd3:	cmp	eax, -1
0x17fd6:	je	0x18008
0x17fd8:	mov	dword ptr [rbp], eax
0x17fdb:	add	rbx, 8
0x17fdf:	add	rbp, 4
0x17fe3:	cmp	rbx, r13
0x17fe6:	jne	0x17fb0
0x17fe8:	mov	rax, qword ptr [rsp + 8]
0x17fed:	sub	rax, qword ptr fs:[0x28]
0x17ff6:	jne	0x1802e
0x17ff8:	add	rsp, 0x10
0x17ffc:	pop	rbx
0x17ffd:	pop	rbp
0x17ffe:	pop	r12
0x18000:	pop	r13
0x18002:	pop	r14
0x18004:	ret	
0x18005:	nop	dword ptr [rax]
0x18008:	mov	r9, qword ptr [rsp]
0x1800c:	mov	r8, qword ptr [rbx]
0x1800f:	mov	rdx, r14
0x18012:	mov	esi, 1
0x18017:	mov	rcx, qword ptr [rip + 0x128ca]
0x1801e:	mov	rdi, qword ptr [rip + 0x1285b]
0x18025:	xor	eax, eax
0x18027:	call	0x4e60
0x1802c:	jmp	0x17fdb
0x1802e:	call	0x49d0
0x18033:	nop	word ptr cs:[rax + rax]
0x1803e:	nop	
0x18040:	endbr64	
0x18044:	push	r12
0x18046:	cmp	byte ptr [rdi], 0x2f
0x18049:	mov	r12, rdi
0x1804c:	lea	rax, [rdi + 1]
0x18050:	je	0x18061
0x18052:	lea	rdi, [rip + 0x9f26]
0x18059:	call	0x8b00
0x1805e:	mov	rax, r12
0x18061:	movzx	edx, byte ptr [rax]
0x18064:	mov	rsi, rax
0x18067:	test	dl, dl
0x18069:	jne	0x1808c
0x1806b:	jmp	0x180f0
0x18070:	cmp	dl, 0x2e
0x18073:	jne	0x18118
0x18079:	movzx	ecx, byte ptr [rax + 1]
0x1807d:	cmp	cl, 0x2f
0x18080:	je	0x18086
0x18082:	test	cl, cl
0x18084:	jne	0x180a0
0x18086:	add	rax, 1
0x1808a:	mov	edx, ecx
0x1808c:	cmp	dl, 0x2f
0x1808f:	jne	0x18070
0x18091:	movzx	ecx, byte ptr [rax + 1]
0x18095:	jmp	0x18086
0x18097:	nop	word ptr [rax + rax]
0x180a0:	cmp	cl, 0x2e
0x180a3:	jne	0x180c0
0x180a5:	movzx	edx, byte ptr [rax + 2]
0x180a9:	cmp	dl, 0x2f
0x180ac:	je	0x18120
0x180ae:	test	dl, dl
0x180b0:	je	0x18120
0x180b2:	mov	edx, 0x2e
0x180b7:	nop	word ptr [rax + rax]
0x180c0:	mov	rdi, rax
0x180c3:	mov	rcx, rsi
0x180c6:	add	rax, 1
0x180ca:	add	rsi, 1
0x180ce:	mov	byte ptr [rsi - 1], dl
0x180d1:	movzx	edx, byte ptr [rax]
0x180d4:	test	dl, dl
0x180d6:	je	0x180f0
0x180d8:	cmp	dl, 0x2f
0x180db:	jne	0x180c0
0x180dd:	test	dl, dl
0x180df:	je	0x180f0
0x180e1:	mov	byte ptr [rsi], 0x2f
0x180e4:	movzx	edx, byte ptr [rdi + 1]
0x180e8:	lea	rsi, [rcx + 2]
0x180ec:	test	dl, dl
0x180ee:	jne	0x1808c
0x180f0:	cmp	byte ptr [rsi - 1], 0x2f
0x180f4:	jne	0x18109
0x180f6:	mov	rax, rsi
0x180f9:	sub	rax, r12
0x180fc:	cmp	rax, 1
0x18100:	setg	al
0x18103:	movzx	eax, al
0x18106:	sub	rsi, rax
0x18109:	mov	rax, r12
0x1810c:	mov	byte ptr [rsi], 0
0x1810f:	pop	r12
0x18111:	ret	
0x18112:	nop	word ptr [rax + rax]
0x18118:	test	dl, dl
0x1811a:	jne	0x180c0
0x1811c:	jmp	0x180f0
0x1811e:	nop	
0x18120:	lea	rdi, [rsi - 1]
0x18124:	cmp	rdi, r12
0x18127:	jne	0x1812f
0x18129:	add	rax, 2
0x1812d:	jmp	0x180ec
0x1812f:	cmp	byte ptr [rsi - 2], 0x2f
0x18133:	lea	rcx, [rsi - 2]
0x18137:	je	0x1814e
0x18139:	nop	dword ptr [rax]
0x18140:	mov	rsi, rcx
0x18143:	sub	rcx, 1
0x18147:	cmp	byte ptr [rcx], 0x2f
0x1814a:	jne	0x18140
0x1814c:	jmp	0x18129
0x1814e:	mov	rsi, rdi
0x18151:	jmp	0x18129
0x18153:	nop	word ptr cs:[rax + rax]
0x1815e:	nop	
0x18160:	endbr64	
0x18164:	push	rbx
0x18165:	call	0x4a60
0x1816a:	mov	edi, eax
0x1816c:	mov	ebx, eax
0x1816e:	call	0x4970
0x18173:	test	rax, rax
0x18176:	je	0x18189
0x18178:	mov	rdi, qword ptr [rax]
0x1817b:	call	0x1d7a0
0x18180:	pop	rbx
0x18181:	mov	qword ptr [rip + 0x13910], rax
0x18188:	ret	
0x18189:	mov	rcx, qword ptr [rip + 0x12758]
0x18190:	mov	r8d, ebx
0x18193:	mov	rdi, qword ptr [rip + 0x126e6]
0x1819a:	lea	rdx, [rip + 0xa13f]
0x181a1:	mov	esi, 1
0x181a6:	call	0x4e60
0x181ab:	mov	rcx, qword ptr [rip + 0x12736]
0x181b2:	xor	eax, eax
0x181b4:	mov	rdi, qword ptr [rip + 0x126c5]
0x181bb:	lea	r8, [rip + 0x9dd7]
0x181c2:	lea	rdx, [rip + 0xa14f]
0x181c9:	mov	esi, 1
0x181ce:	call	0x4e60
0x181d3:	mov	rdi, qword ptr [rip + 0x126a6]
0x181da:	mov	esi, 1
0x181df:	xor	eax, eax
0x181e1:	mov	rcx, qword ptr [rip + 0x12700]
0x181e8:	lea	rdx, [rip + 0xa161]
0x181ef:	call	0x4e60
0x181f4:	mov	edi, 1
0x181f9:	call	0x4e20
0x181fe:	nop	
0x18200:	endbr64	
0x18204:	push	r12
0x18206:	push	rbp
0x18207:	mov	rbp, rsi
0x1820a:	push	rbx
0x1820b:	movsxd	rbx, edx
0x1820e:	cmp	ebx, 2
0x18211:	je	0x18250
0x18213:	mov	r12, rdi
0x18216:	jg	0x18230
0x18218:	test	ebx, ebx
0x1821a:	je	0x18224
0x1821c:	cmp	ebx, 1
0x1821f:	jne	0x18260
0x18221:	mov	byte ptr [rsi], 0x20
0x18224:	pop	rbx
0x18225:	pop	rbp
0x18226:	pop	r12
0x18228:	ret	
0x18229:	nop	dword ptr [rax]
0x18230:	cmp	ebx, 3
0x18233:	jne	0x18260
0x18235:	mov	edx, 0x2020
0x1823a:	mov	byte ptr [rsi + 2], 0x20
0x1823e:	mov	word ptr [rsi], dx
0x18241:	pop	rbx
0x18242:	pop	rbp
0x18243:	pop	r12
0x18245:	ret	
0x18246:	nop	word ptr cs:[rax + rax]
0x18250:	mov	ecx, 0x2020
0x18255:	mov	word ptr [rsi], cx
0x18258:	pop	rbx
0x18259:	pop	rbp
0x1825a:	pop	r12
0x1825c:	ret	
0x1825d:	nop	dword ptr [rax]
0x18260:	mov	rdi, r12
0x18263:	call	0x49b0
0x18268:	movsxd	rdx, eax
0x1826b:	cmp	ebx, eax
0x1826d:	jge	0x182a0
0x1826f:	mov	eax, 0x2e2e
0x18274:	lea	r8d, [rbx - 3]
0x18278:	mov	byte ptr [rbp + 2], 0x2e
0x1827c:	sub	rdx, rbx
0x1827f:	mov	word ptr [rbp], ax
0x18283:	movsxd	r8, r8d
0x18286:	lea	rsi, [r12 + rdx + 3]
0x1828b:	pop	rbx
0x1828c:	lea	rdi, [rbp + 3]
0x18290:	mov	rdx, r8
0x18293:	pop	rbp
0x18294:	pop	r12
0x18296:	jmp	0x4bb0
0x1829b:	nop	dword ptr [rax + rax]
0x182a0:	pop	rbx
0x182a1:	mov	rsi, r12
0x182a4:	mov	rdi, rbp
0x182a7:	pop	rbp
0x182a8:	pop	r12
0x182aa:	jmp	0x4bb0
0x182af:	nop	
0x182b0:	endbr64	
0x182b4:	push	r12
0x182b6:	mov	r12, rsi
0x182b9:	push	rbp
0x182ba:	mov	rbp, rdi
0x182bd:	push	rbx
0x182be:	lea	ebx, [rdx - 1]
0x182c1:	mov	edx, ebx
0x182c3:	call	0x18200
0x182c8:	mov	rdi, rbp
0x182cb:	call	0x49b0
0x182d0:	movsxd	rcx, ebx
0x182d3:	cmp	ebx, eax
0x182d5:	movsxd	rdx, eax
0x182d8:	mov	rax, rcx
0x182db:	pop	rbx
0x182dc:	cmovg	rax, rdx
0x182e0:	pop	rbp
0x182e1:	mov	byte ptr [r12 + rax], 0
0x182e6:	mov	rax, r12
0x182e9:	pop	r12
0x182eb:	ret	
0x182ec:	nop	dword ptr [rax]
0x182f0:	endbr64	
0x182f4:	push	r13
0x182f6:	mov	edx, 1
0x182fb:	xor	esi, esi
0x182fd:	push	r12
0x182ff:	push	rbp
0x18300:	mov	ebp, edi
0x18302:	call	0x4e50
0x18307:	mov	edi, ebp
0x18309:	mov	edx, 2
0x1830e:	xor	esi, esi
0x18310:	mov	r13, rax
0x18313:	call	0x4e50
0x18318:	mov	rsi, r13
0x1831b:	mov	edi, ebp
0x1831d:	xor	edx, edx
0x1831f:	mov	r12, rax
0x18322:	call	0x4e50
0x18327:	mov	rax, r12
0x1832a:	pop	rbp
0x1832b:	pop	r12
0x1832d:	pop	r13
0x1832f:	ret	
0x18330:	endbr64	
0x18334:	sub	rsp, 0x18
0x18338:	xor	edi, edi
0x1833a:	mov	rax, qword ptr fs:[0x28]
0x18343:	mov	qword ptr [rsp + 8], rax
0x18348:	xor	eax, eax
0x1834a:	call	0x4be0
0x1834f:	mov	rdi, rsp
0x18352:	mov	qword ptr [rsp], rax
0x18356:	call	0x4840
0x1835b:	mov	rdx, qword ptr [rsp + 8]
0x18360:	sub	rdx, qword ptr fs:[0x28]
0x18369:	jne	0x18370
0x1836b:	add	rsp, 0x18
0x1836f:	ret	
0x18370:	call	0x49d0
0x18375:	nop	word ptr cs:[rax + rax]
0x18380:	endbr64	
0x18384:	push	r12
0x18386:	push	rbp
0x18387:	mov	rbp, rsi
0x1838a:	push	rbx
0x1838b:	mov	rbx, rdi
0x1838e:	call	0x49b0
0x18393:	mov	rdi, rbp
0x18396:	mov	r12, rax
0x18399:	call	0x49b0
0x1839e:	lea	rdi, [r12 + rax + 2]
0x183a3:	call	0x1d670
0x183a8:	mov	r9, rbp
0x183ab:	mov	r8, rbx
0x183ae:	mov	esi, 1
0x183b3:	mov	r12, rax
0x183b6:	mov	rdi, rax
0x183b9:	xor	eax, eax
0x183bb:	mov	rdx, -1
0x183c2:	lea	rcx, [rip + 0x9be5]
0x183c9:	call	0x4f10
0x183ce:	mov	rdi, r12
0x183d1:	call	0x4b20
0x183d6:	mov	r12d, eax
0x183d9:	cmp	eax, -1
0x183dc:	je	0x183f0
0x183de:	mov	eax, r12d
0x183e1:	pop	rbx
0x183e2:	pop	rbp
0x183e3:	pop	r12
0x183e5:	ret	
0x183e6:	nop	word ptr cs:[rax + rax]
0x183f0:	mov	rcx, qword ptr [rip + 0x124f1]
0x183f7:	mov	rdi, qword ptr [rip + 0x12482]
0x183fe:	mov	r8, rbx
0x18401:	xor	eax, eax
0x18403:	lea	rdx, [rip + 0x9f6e]
0x1840a:	mov	esi, 1
0x1840f:	call	0x4e60
0x18414:	mov	eax, r12d
0x18417:	pop	rbx
0x18418:	pop	rbp
0x18419:	pop	r12
0x1841b:	ret	
0x1841c:	nop	dword ptr [rax]
0x18420:	endbr64	
0x18424:	push	r13
0x18426:	push	r12
0x18428:	lea	r12, [rip + 0x9b85]
0x1842f:	push	rbp
0x18430:	mov	rdi, r12
0x18433:	push	rbx
0x18434:	sub	rsp, 8
0x18438:	call	0x47e0
0x1843d:	mov	r13, qword ptr [rip + 0x1365c]
0x18444:	test	rax, rax
0x18447:	je	0x184b0
0x18449:	mov	rdi, rax
0x1844c:	mov	rbx, rax
0x1844f:	call	0x49b0
0x18454:	mov	rdi, r13
0x18457:	mov	rbp, rax
0x1845a:	call	0x49b0
0x1845f:	lea	rdi, [rbp + rax + 2]
0x18464:	call	0x1d670
0x18469:	mov	r9, qword ptr [rip + 0x13630]
0x18470:	mov	r8, rbx
0x18473:	lea	rcx, [rip + 0x9b3f]
0x1847a:	mov	rbp, rax
0x1847d:	mov	rdi, rax
0x18480:	mov	esi, 1
0x18485:	xor	eax, eax
0x18487:	mov	rdx, -1
0x1848e:	call	0x4f10
0x18493:	mov	rdi, r12
0x18496:	mov	rsi, rbp
0x18499:	call	0x18380
0x1849e:	add	rsp, 8
0x184a2:	mov	rdi, rbp
0x184a5:	pop	rbx
0x184a6:	pop	rbp
0x184a7:	pop	r12
0x184a9:	pop	r13
0x184ab:	jmp	0x18d10
0x184b0:	add	rsp, 8
0x184b4:	mov	rsi, r13
0x184b7:	mov	rdi, r12
0x184ba:	pop	rbx
0x184bb:	pop	rbp
0x184bc:	pop	r12
0x184be:	pop	r13
0x184c0:	jmp	0x18380
0x184c5:	nop	word ptr cs:[rax + rax]
0x184d0:	endbr64	
0x184d4:	test	rsi, rsi
0x184d7:	je	0x18520
0x184d9:	push	rbp
0x184da:	mov	rbp, rsi
0x184dd:	push	rbx
0x184de:	mov	rbx, rdi
0x184e1:	sub	rsp, 8
0x184e5:	call	0x4f00
0x184ea:	mov	rdi, rbx
0x184ed:	lea	rsi, [rbx + rbp]
0x184f1:	nop	dword ptr [rax]
0x184f8:	movsx	rcx, byte ptr [rdi]
0x184fc:	mov	rdx, qword ptr [rax]
0x184ff:	test	byte ptr [rdx + rcx*2 + 1], 0x40
0x18504:	jne	0x18509
0x18506:	mov	byte ptr [rdi], 0x3f
0x18509:	add	rdi, 1
0x1850d:	cmp	rsi, rdi
0x18510:	jne	0x184f8
0x18512:	add	rsp, 8
0x18516:	pop	rbx
0x18517:	pop	rbp
0x18518:	ret	
0x18519:	nop	dword ptr [rax]
0x18520:	ret	
0x18521:	nop	word ptr cs:[rax + rax]
0x1852c:	nop	dword ptr [rax]
0x18530:	endbr64	
0x18534:	test	rsi, rsi
0x18537:	je	0x185c2
0x1853d:	push	rbp
0x1853e:	mov	rbp, rsi
0x18541:	push	rbx
0x18542:	mov	rbx, rdi
0x18545:	sub	rsp, 8
0x18549:	call	0x4f00
0x1854e:	mov	rdi, rbx
0x18551:	lea	rsi, [rbx + rbp]
0x18555:	movabs	r9, 0x68000000c0000001
0x1855f:	movabs	r8, 0x2400f82000000000
0x18569:	mov	rcx, qword ptr [rax]
0x1856c:	nop	dword ptr [rax]
0x18570:	movsx	rdx, byte ptr [rdi]
0x18574:	mov	rax, rdx
0x18577:	test	byte ptr [rcx + rdx*2], 8
0x1857b:	jne	0x185b0
0x1857d:	cmp	dl, 0x3d
0x18580:	jg	0x185a0
0x18582:	cmp	dl, 0x24
0x18585:	jle	0x1858d
0x18587:	bt	r8, rdx
0x1858b:	jb	0x185b0
0x1858d:	add	rsp, 8
0x18591:	mov	eax, 1
0x18596:	pop	rbx
0x18597:	pop	rbp
0x18598:	ret	
0x18599:	nop	dword ptr [rax]
0x185a0:	sub	eax, 0x40
0x185a3:	cmp	al, 0x3e
0x185a5:	ja	0x1858d
0x185a7:	bt	r9, rax
0x185ab:	jae	0x1858d
0x185ad:	nop	dword ptr [rax]
0x185b0:	add	rdi, 1
0x185b4:	cmp	rsi, rdi
0x185b7:	jne	0x18570
0x185b9:	add	rsp, 8
0x185bd:	xor	eax, eax
0x185bf:	pop	rbx
0x185c0:	pop	rbp
0x185c1:	ret	
0x185c2:	xor	eax, eax
0x185c4:	ret	
0x185c5:	nop	word ptr cs:[rax + rax]
0x185d0:	endbr64	
0x185d4:	push	rbx
0x185d5:	mov	rbx, rdi
0x185d8:	call	0x49b0
0x185dd:	sub	eax, 1
0x185e0:	js	0x18618
0x185e2:	cdqe	
0x185e4:	jmp	0x18602
0x185e6:	nop	word ptr cs:[rax + rax]
0x185f0:	cmp	dl, 0x20
0x185f3:	je	0x185fa
0x185f5:	cmp	dl, 9
0x185f8:	jne	0x18618
0x185fa:	sub	rax, 1
0x185fe:	test	eax, eax
0x18600:	js	0x18618
0x18602:	movzx	edx, byte ptr [rbx + rax]
0x18606:	cmp	dl, 0x26
0x18609:	jne	0x185f0
0x1860b:	mov	eax, 1
0x18610:	pop	rbx
0x18611:	ret	
0x18612:	nop	word ptr [rax + rax]
0x18618:	xor	eax, eax
0x1861a:	pop	rbx
0x1861b:	ret	
0x1861c:	nop	dword ptr [rax]
0x18620:	endbr64	
0x18624:	jmp	0x1863c
0x18626:	nop	word ptr cs:[rax + rax]
0x18630:	cmp	al, 0x20
0x18632:	je	0x18638
0x18634:	cmp	al, 0x3b
0x18636:	jne	0x18650
0x18638:	add	rdi, 1
0x1863c:	movzx	eax, byte ptr [rdi]
0x1863f:	test	al, al
0x18641:	jne	0x18630
0x18643:	mov	eax, 1
0x18648:	ret	
0x18649:	nop	dword ptr [rax]
0x18650:	xor	eax, eax
0x18652:	ret	
0x18653:	nop	word ptr cs:[rax + rax]
0x1865e:	nop	
0x18660:	endbr64	
0x18664:	push	r15
0x18666:	push	r14
0x18668:	push	r13
0x1866a:	push	r12
0x1866c:	push	rbp
0x1866d:	push	rbx
0x1866e:	sub	rsp, 0x98
0x18675:	mov	rax, qword ptr fs:[0x28]
0x1867e:	mov	qword ptr [rsp + 0x88], rax
0x18686:	xor	eax, eax
0x18688:	lea	r15, [rsp + 0x10]
0x1868d:	lea	r13, [rsp + 0x30]
0x18692:	mov	qword ptr [rsp + 8], 0
0x1869b:	mov	qword ptr [rsp], 0
0x186a3:	jmp	0x186d3
0x186a5:	nop	dword ptr [rax]
0x186a8:	mov	rax, qword ptr [rsp]
0x186ac:	mov	qword ptr [rax + 0x18], r14
0x186b0:	mov	rdi, r13
0x186b3:	call	0x1d7a0
0x186b8:	mov	dword ptr [r14 + 8], r12d
0x186bc:	mov	qword ptr [r14], rax
0x186bf:	mov	dword ptr [r14 + 0xc], ebp
0x186c3:	mov	dword ptr [r14 + 0x10], ebx
0x186c7:	mov	qword ptr [r14 + 0x18], 0
0x186cf:	mov	qword ptr [rsp], r14
0x186d3:	xor	ecx, ecx
0x186d5:	mov	edx, 3
0x186da:	mov	rsi, r15
0x186dd:	mov	rdi, r13
0x186e0:	call	0x17320
0x186e5:	cmp	byte ptr [rsp + 0x30], 0
0x186ea:	je	0x18758
0x186ec:	mov	rdi, qword ptr [rsp + 0x10]
0x186f1:	mov	r12d, 0xffffffff
0x186f7:	test	rdi, rdi
0x186fa:	je	0x18704
0x186fc:	call	0xbd00
0x18701:	mov	r12d, eax
0x18704:	mov	rdi, qword ptr [rsp + 0x18]
0x18709:	mov	ebp, 0xffffffff
0x1870e:	test	rdi, rdi
0x18711:	je	0x1871a
0x18713:	call	0xbd00
0x18718:	mov	ebp, eax
0x1871a:	mov	rdi, qword ptr [rsp + 0x20]
0x1871f:	mov	ebx, 0xffffffff
0x18724:	test	rdi, rdi
0x18727:	je	0x18730
0x18729:	call	0xbd00
0x1872e:	mov	ebx, eax
0x18730:	mov	edi, 0x20
0x18735:	call	0x1d670
0x1873a:	cmp	qword ptr [rsp + 8], 0
0x18740:	mov	r14, rax
0x18743:	jne	0x186a8
0x18749:	mov	qword ptr [rsp + 8], rax
0x1874e:	jmp	0x186b0
0x18753:	nop	dword ptr [rax + rax]
0x18758:	mov	rdx, qword ptr [rsp + 8]
0x1875d:	test	rdx, rdx
0x18760:	je	0x1877d
0x18762:	mov	rax, qword ptr [rip + 0x13327]
0x18769:	test	rax, rax
0x1876c:	je	0x187a8
0x1876e:	mov	rcx, qword ptr [rsp]
0x18772:	mov	qword ptr [rip + 0x13317], rdx
0x18779:	mov	qword ptr [rcx + 0x18], rax
0x1877d:	mov	rax, qword ptr [rsp + 0x88]
0x18785:	sub	rax, qword ptr fs:[0x28]
0x1878e:	jne	0x187b6
0x18790:	add	rsp, 0x98
0x18797:	pop	rbx
0x18798:	pop	rbp
0x18799:	pop	r12
0x1879b:	pop	r13
0x1879d:	pop	r14
0x1879f:	pop	r15
0x187a1:	ret	
0x187a2:	nop	word ptr [rax + rax]
0x187a8:	mov	rax, qword ptr [rsp + 8]
0x187ad:	mov	qword ptr [rip + 0x132dc], rax
0x187b4:	jmp	0x1877d
0x187b6:	call	0x49d0
0x187bb:	nop	dword ptr [rax + rax]
0x187c0:	endbr64	
0x187c4:	sub	rsp, 8
0x187c8:	lea	rsi, [rip - 0xf]
0x187cf:	call	0x4b50
0x187d4:	mov	dword ptr [rip + 0x132d2], 1
0x187de:	add	rsp, 8
0x187e2:	ret	
0x187e3:	nop	word ptr cs:[rax + rax]
0x187ee:	nop	
0x187f0:	cmp	edi, 0x14
0x187f3:	je	0x18850
0x187f5:	jg	0x18818
0x187f7:	cmp	edi, 0xe
0x187fa:	je	0x18838
0x187fc:	cmp	edi, 0x12
0x187ff:	jne	0x18861
0x18801:	lea	rsi, [rip + 0x148]
0x18808:	mov	edi, 0x12
0x1880d:	jmp	0x4b50
0x18812:	nop	word ptr [rax + rax]
0x18818:	cmp	edi, 0x1c
0x1881b:	jne	0x18830
0x1881d:	lea	rsi, [rip + 0x1cc]
0x18824:	mov	edi, 0x1c
0x18829:	jmp	0x4b50
0x1882e:	nop	
0x18830:	ret	
0x18831:	nop	dword ptr [rax]
0x18838:	lea	rsi, [rip + 0x31]
0x1883f:	mov	edi, 0xe
0x18844:	jmp	0x4b50
0x18849:	nop	dword ptr [rax]
0x18850:	lea	rsi, [rip + 0x89]
0x18857:	mov	edi, 0x14
0x1885c:	jmp	0x4b50
0x18861:	ret	
0x18862:	nop	word ptr cs:[rax + rax]
0x1886d:	nop	dword ptr [rax]
0x18870:	endbr64	
0x18874:	mov	edx, dword ptr [rip + 0x1323a]
0x1887a:	push	rbp
0x1887b:	mov	eax, 1
0x18880:	mov	ebp, edi
0x18882:	test	edx, edx
0x18884:	jne	0x188b0
0x18886:	mov	edi, ebp
0x18888:	mov	dword ptr [rip + 0x1322e], eax
0x1888e:	call	0x187f0
0x18893:	xor	eax, eax
0x18895:	call	0x18330
0x1889a:	mov	edi, 0x3c
0x1889f:	pop	rbp
0x188a0:	sub	edi, dword ptr [rax]
0x188a2:	jmp	0x4aa0
0x188a7:	nop	word ptr [rax + rax]
0x188b0:	xor	eax, eax
0x188b2:	call	0x18330
0x188b7:	mov	eax, dword ptr [rax]
0x188b9:	test	eax, eax
0x188bb:	je	0x188d0
0x188bd:	xor	eax, eax
0x188bf:	call	0xb4e0
0x188c4:	xor	eax, eax
0x188c6:	jmp	0x18886
0x188c8:	nop	dword ptr [rax + rax]
0x188d0:	mov	edi, ebp
0x188d2:	call	0x16fd0
0x188d7:	jmp	0x188bd
0x188d9:	nop	dword ptr [rax]
0x188e0:	endbr64	
0x188e4:	mov	eax, dword ptr [rip + 0x131ca]
0x188ea:	push	rbp
0x188eb:	mov	ebp, edi
0x188ed:	test	eax, eax
0x188ef:	jne	0x18908
0x188f1:	mov	eax, 1
0x188f6:	mov	edi, ebp
0x188f8:	pop	rbp
0x188f9:	mov	dword ptr [rip + 0x131c5], eax
0x188ff:	jmp	0x187f0
0x18904:	nop	dword ptr [rax]
0x18908:	xor	eax, eax
0x1890a:	call	0x9c90
0x1890f:	cmp	eax, 1
0x18912:	sete	al
0x18915:	movzx	eax, al
0x18918:	mov	dword ptr [rip + 0x1319a], eax
0x1891e:	xor	eax, eax
0x18920:	call	0x9610
0x18925:	call	0x4920
0x1892a:	mov	esi, 0x13
0x1892f:	mov	edi, eax
0x18931:	call	0x4bd0
0x18936:	xor	eax, eax
0x18938:	mov	edi, ebp
0x1893a:	pop	rbp
0x1893b:	mov	dword ptr [rip + 0x13183], eax
0x18941:	jmp	0x187f0
0x18946:	nop	word ptr cs:[rax + rax]
0x18950:	endbr64	
0x18954:	mov	eax, dword ptr [rip + 0x1315e]
0x1895a:	push	rbx
0x1895b:	mov	ebx, edi
0x1895d:	test	eax, eax
0x1895f:	jne	0x189a0
0x18961:	cmp	ebx, 0x14
0x18964:	je	0x189b4
0x18966:	jg	0x18988
0x18968:	cmp	ebx, 0xe
0x1896b:	je	0x189d8
0x1896d:	cmp	ebx, 0x12
0x18970:	jne	0x189d0
0x18972:	lea	rsi, [rip - 0x29]
0x18979:	mov	edi, 0x12
0x1897e:	pop	rbx
0x1897f:	jmp	0x4b50
0x18984:	nop	dword ptr [rax]
0x18988:	cmp	ebx, 0x1c
0x1898b:	jne	0x189d0
0x1898d:	lea	rsi, [rip + 0x5c]
0x18994:	mov	edi, 0x1c
0x18999:	pop	rbx
0x1899a:	jmp	0x4b50
0x1899f:	nop	
0x189a0:	call	0x7bd0
0x189a5:	mov	dword ptr [rip + 0x13111], 0
0x189af:	cmp	ebx, 0x14
0x189b2:	jne	0x18966
0x189b4:	lea	rsi, [rip - 0xdb]
0x189bb:	mov	edi, 0x14
0x189c0:	pop	rbx
0x189c1:	jmp	0x4b50
0x189c6:	nop	word ptr cs:[rax + rax]
0x189d0:	pop	rbx
0x189d1:	ret	
0x189d2:	nop	word ptr [rax + rax]
0x189d8:	lea	rsi, [rip - 0x16f]
0x189df:	mov	edi, 0xe
0x189e4:	pop	rbx
0x189e5:	jmp	0x4b50
0x189ea:	nop	word ptr [rax + rax]
0x189f0:	endbr64	
0x189f4:	mov	eax, dword ptr [rip + 0x130ba]
0x189fa:	push	rbx
0x189fb:	mov	ebx, edi
0x189fd:	test	eax, eax
0x189ff:	jne	0x18a50
0x18a01:	mov	eax, 1
0x18a06:	mov	dword ptr [rip + 0x130b4], eax
0x18a0c:	cmp	ebx, 0x14
0x18a0f:	je	0x18a72
0x18a11:	jg	0x18a30
0x18a13:	cmp	ebx, 0xe
0x18a16:	je	0x18a90
0x18a18:	cmp	ebx, 0x12
0x18a1b:	jne	0x18a88
0x18a1d:	lea	rsi, [rip - 0xd4]
0x18a24:	mov	edi, 0x12
0x18a29:	pop	rbx
0x18a2a:	jmp	0x4b50
0x18a2f:	nop	
0x18a30:	cmp	ebx, 0x1c
0x18a33:	jne	0x18a88
0x18a35:	lea	rsi, [rip - 0x4c]
0x18a3c:	mov	edi, 0x1c
0x18a41:	pop	rbx
0x18a42:	jmp	0x4b50
0x18a47:	nop	word ptr [rax + rax]
0x18a50:	xor	eax, eax
0x18a52:	call	0xa6c0
0x18a57:	xor	eax, eax
0x18a59:	call	0x9d80
0x18a5e:	mov	edi, ebx
0x18a60:	call	0x7bd0
0x18a65:	xor	eax, eax
0x18a67:	mov	dword ptr [rip + 0x13053], eax
0x18a6d:	cmp	ebx, 0x14
0x18a70:	jne	0x18a11
0x18a72:	lea	rsi, [rip - 0x199]
0x18a79:	mov	edi, 0x14
0x18a7e:	pop	rbx
0x18a7f:	jmp	0x4b50
0x18a84:	nop	dword ptr [rax]
0x18a88:	pop	rbx
0x18a89:	ret	
0x18a8a:	nop	word ptr [rax + rax]
0x18a90:	lea	rsi, [rip - 0x227]
0x18a97:	mov	edi, 0xe
0x18a9c:	pop	rbx
0x18a9d:	jmp	0x4b50
0x18aa2:	nop	word ptr cs:[rax + rax]
0x18aad:	nop	dword ptr [rax]
0x18ab0:	endbr64	
0x18ab4:	sub	rsp, 8
0x18ab8:	mov	ecx, dword ptr [rip + 0x13006]
0x18abe:	test	ecx, ecx
0x18ac0:	jne	0x18af0
0x18ac2:	mov	edx, dword ptr [rip + 0x12ff8]
0x18ac8:	test	edx, edx
0x18aca:	jne	0x18b30
0x18acc:	mov	eax, dword ptr [rip + 0x12fea]
0x18ad2:	test	eax, eax
0x18ad4:	jne	0x18ae0
0x18ad6:	add	rsp, 8
0x18ada:	ret	
0x18adb:	nop	dword ptr [rax + rax]
0x18ae0:	mov	dword ptr [rip + 0x12fd2], 0
0x18aea:	add	rsp, 8
0x18aee:	ret	
0x18aef:	nop	
0x18af0:	xor	eax, eax
0x18af2:	call	0x9610
0x18af7:	call	0x4920
0x18afc:	mov	esi, 0x13
0x18b01:	mov	edi, eax
0x18b03:	call	0x4bd0
0x18b08:	mov	dword ptr [rip + 0x12fb2], 0
0x18b12:	mov	dword ptr [rip + 0x12fa4], 0
0x18b1c:	mov	dword ptr [rip + 0x12f96], 0
0x18b26:	add	rsp, 8
0x18b2a:	ret	
0x18b2b:	nop	dword ptr [rax + rax]
0x18b30:	xor	eax, eax
0x18b32:	call	0xa6c0
0x18b37:	xor	eax, eax
0x18b39:	call	0x9d80
0x18b3e:	mov	edi, 0x1c
0x18b43:	call	0x7bd0
0x18b48:	mov	dword ptr [rip + 0x12f6e], 0
0x18b52:	mov	dword ptr [rip + 0x12f60], 0
0x18b5c:	add	rsp, 8
0x18b60:	ret	
0x18b61:	nop	word ptr cs:[rax + rax]
0x18b6c:	nop	dword ptr [rax]
0x18b70:	endbr64	
0x18b74:	mov	dword ptr [rip + 0x12f3a], edi
0x18b7a:	test	edi, edi
0x18b7c:	jne	0x18b80
0x18b7e:	ret	
0x18b7f:	nop	
0x18b80:	xor	eax, eax
0x18b82:	jmp	0x18ab0
0x18b87:	nop	word ptr [rax + rax]
0x18b90:	endbr64	
0x18b94:	sub	rsp, 8
0x18b98:	mov	eax, dword ptr [rip + 0x11bfa]
0x18b9e:	cmp	edi, 1
0x18ba1:	je	0x18bf0
0x18ba3:	test	eax, eax
0x18ba5:	jne	0x18bd0
0x18ba7:	mov	esi, 1
0x18bac:	mov	edi, 0x1c
0x18bb1:	call	0x4b50
0x18bb6:	mov	esi, 1
0x18bbb:	mov	edi, 0xe
0x18bc0:	add	rsp, 8
0x18bc4:	jmp	0x4b50
0x18bc9:	nop	dword ptr [rax]
0x18bd0:	mov	esi, 1
0x18bd5:	mov	edi, 0x14
0x18bda:	call	0x4b50
0x18bdf:	mov	esi, 1
0x18be4:	mov	edi, 0x12
0x18be9:	call	0x4b50
0x18bee:	jmp	0x18ba7
0x18bf0:	test	eax, eax
0x18bf2:	jne	0x18c20
0x18bf4:	lea	rsi, [rip - 0x20b]
0x18bfb:	mov	edi, 0x1c
0x18c00:	call	0x4b50
0x18c05:	lea	rsi, [rip - 0x39c]
0x18c0c:	mov	edi, 0xe
0x18c11:	add	rsp, 8
0x18c15:	jmp	0x4b50
0x18c1a:	nop	word ptr [rax + rax]
0x18c20:	lea	rsi, [rip - 0x347]
0x18c27:	mov	edi, 0x14
0x18c2c:	call	0x4b50
0x18c31:	lea	rsi, [rip - 0x2e8]
0x18c38:	mov	edi, 0x12
0x18c3d:	call	0x4b50
0x18c42:	jmp	0x18bf4
0x18c44:	nop	word ptr cs:[rax + rax]
0x18c4f:	nop	
0x18c50:	endbr64	
0x18c54:	push	rbp
0x18c55:	mov	esi, 1
0x18c5a:	mov	edi, 0x14
0x18c5f:	call	0x4b50
0x18c64:	mov	esi, 1
0x18c69:	mov	edi, 0x12
0x18c6e:	cmp	rax, 1
0x18c72:	setne	al
0x18c75:	movzx	eax, al
0x18c78:	mov	dword ptr [rip + 0x11b1a], eax
0x18c7e:	call	0x4b50
0x18c83:	mov	esi, 1
0x18c88:	mov	edi, 0x1c
0x18c8d:	call	0x4b50
0x18c92:	lea	rbp, [rip - 0x1519]
0x18c99:	mov	edi, 0xb
0x18c9e:	mov	rsi, rbp
0x18ca1:	call	0x4b50
0x18ca6:	mov	rsi, rbp
0x18ca9:	mov	edi, 1
0x18cae:	call	0x4b50
0x18cb3:	mov	rsi, rbp
0x18cb6:	mov	edi, 0xf
0x18cbb:	call	0x4b50
0x18cc0:	mov	esi, 1
0x18cc5:	mov	edi, 3
0x18cca:	call	0x4b50
0x18ccf:	lea	rsi, [rip - 0x516]
0x18cd6:	mov	edi, 2
0x18cdb:	pop	rbp
0x18cdc:	jmp	0x4b50
0x18ce1:	nop	word ptr cs:[rax + rax]
0x18ceb:	nop	dword ptr [rax + rax]
0x18cf0:	endbr64	
0x18cf4:	push	rax
0x18cf5:	pop	rax
0x18cf6:	lea	rdi, [rip + 0x96a8]
0x18cfd:	sub	rsp, 8
0x18d01:	call	0x8b00
0x18d06:	call	0x4850
0x18d0b:	nop	dword ptr [rax + rax]
0x18d10:	endbr64	
0x18d14:	test	rdi, rdi
0x18d17:	je	0x18d20
0x18d19:	jmp	0x4800
0x18d1e:	nop	
0x18d20:	lea	rdi, [rip + 0x9697]
0x18d27:	jmp	0x8b00
0x18d2c:	nop	dword ptr [rax]
0x18d30:	endbr64	
0x18d34:	xor	r8d, r8d
0x18d37:	test	rdx, rdx
0x18d3a:	je	0x18d90
0x18d3c:	push	r14
0x18d3e:	push	r13
0x18d40:	push	r12
0x18d42:	mov	r12, rsi
0x18d45:	push	rbp
0x18d46:	mov	ebp, edi
0x18d48:	push	rbx
0x18d49:	mov	rbx, rdx
0x18d4c:	call	0x4860
0x18d51:	mov	r13d, dword ptr [rax]
0x18d54:	mov	r14, rax
0x18d57:	jmp	0x18d66
0x18d59:	nop	dword ptr [rax]
0x18d60:	cmp	dword ptr [r14], 4
0x18d64:	jne	0x18d7d
0x18d66:	mov	dword ptr [r14], r13d
0x18d69:	mov	rdx, rbx
0x18d6c:	mov	rsi, r12
0x18d6f:	mov	edi, ebp
0x18d71:	call	0x47a0
0x18d76:	mov	r8d, eax
0x18d79:	test	eax, eax
0x18d7b:	js	0x18d60
0x18d7d:	pop	rbx
0x18d7e:	mov	eax, r8d
0x18d81:	pop	rbp
0x18d82:	pop	r12
0x18d84:	pop	r13
0x18d86:	pop	r14
0x18d88:	ret	
0x18d89:	nop	dword ptr [rax]
0x18d90:	mov	eax, r8d
0x18d93:	ret	
0x18d94:	nop	word ptr cs:[rax + rax]
0x18d9f:	nop	
0x18da0:	endbr64	
0x18da4:	xor	r8d, r8d
0x18da7:	test	rdx, rdx
0x18daa:	je	0x18e00
0x18dac:	push	r14
0x18dae:	push	r13
0x18db0:	push	r12
0x18db2:	mov	r12, rsi
0x18db5:	push	rbp
0x18db6:	mov	ebp, edi
0x18db8:	push	rbx
0x18db9:	mov	rbx, rdx
0x18dbc:	call	0x4860
0x18dc1:	mov	r13d, dword ptr [rax]
0x18dc4:	mov	r14, rax
0x18dc7:	jmp	0x18dd6
0x18dc9:	nop	dword ptr [rax]
0x18dd0:	cmp	dword ptr [r14], 4
0x18dd4:	jne	0x18ded
0x18dd6:	mov	dword ptr [r14], r13d
0x18dd9:	mov	rdx, rbx
0x18ddc:	mov	rsi, r12
0x18ddf:	mov	edi, ebp
0x18de1:	call	0x4790
0x18de6:	mov	r8d, eax
0x18de9:	test	eax, eax
0x18deb:	js	0x18dd0
0x18ded:	pop	rbx
0x18dee:	mov	eax, r8d
0x18df1:	pop	rbp
0x18df2:	pop	r12
0x18df4:	pop	r13
0x18df6:	pop	r14
0x18df8:	ret	
0x18df9:	nop	dword ptr [rax]
0x18e00:	mov	eax, r8d
0x18e03:	ret	
0x18e04:	nop	word ptr cs:[rax + rax]
0x18e0f:	nop	
0x18e10:	endbr64	
0x18e14:	xor	r8d, r8d
0x18e17:	test	rdx, rdx
0x18e1a:	je	0x18e70
0x18e1c:	push	r14
0x18e1e:	push	r13
0x18e20:	push	r12
0x18e22:	mov	r12, rsi
0x18e25:	push	rbp
0x18e26:	mov	rbp, rdi
0x18e29:	push	rbx
0x18e2a:	mov	rbx, rdx
0x18e2d:	call	0x4860
0x18e32:	mov	r13d, dword ptr [rax]
0x18e35:	mov	r14, rax
0x18e38:	jmp	0x18e46
0x18e3a:	nop	word ptr [rax + rax]
0x18e40:	cmp	dword ptr [r14], 4
0x18e44:	jne	0x18e5e
0x18e46:	mov	dword ptr [r14], r13d
0x18e49:	mov	rdx, rbx
0x18e4c:	mov	rsi, r12
0x18e4f:	mov	rdi, rbp
0x18e52:	call	0x4910
0x18e57:	mov	r8d, eax
0x18e5a:	test	eax, eax
0x18e5c:	js	0x18e40
0x18e5e:	pop	rbx
0x18e5f:	mov	eax, r8d
0x18e62:	pop	rbp
0x18e63:	pop	r12
0x18e65:	pop	r13
0x18e67:	pop	r14
0x18e69:	ret	
0x18e6a:	nop	word ptr [rax + rax]
0x18e70:	mov	eax, r8d
0x18e73:	ret	
0x18e74:	nop	word ptr cs:[rax + rax]
0x18e7f:	nop	
0x18e80:	endbr64	
0x18e84:	push	r13
0x18e86:	mov	r13, rdi
0x18e89:	push	r12
0x18e8b:	push	rbp
0x18e8c:	push	rbx
0x18e8d:	mov	ebx, 0x64
0x18e92:	sub	rsp, 0x18
0x18e96:	jmp	0x18eaa
0x18e98:	nop	dword ptr [rax + rax]
0x18ea0:	mov	rdi, rbp
0x18ea3:	add	ebx, ebx
0x18ea5:	call	0x18d10
0x18eaa:	movsxd	r12, ebx
0x18ead:	mov	rdi, r12
0x18eb0:	call	0x1d670
0x18eb5:	mov	rdx, r12
0x18eb8:	mov	rdi, r13
0x18ebb:	mov	rbp, rax
0x18ebe:	mov	rsi, rax
0x18ec1:	xor	eax, eax
0x18ec3:	call	0x18e10
0x18ec8:	cmp	ebx, eax
0x18eca:	jle	0x18ea0
0x18ecc:	mov	rdi, rbp
0x18ecf:	mov	dword ptr [rsp + 0xc], eax
0x18ed3:	call	0x18d10
0x18ed8:	mov	eax, dword ptr [rsp + 0xc]
0x18edc:	add	rsp, 0x18
0x18ee0:	pop	rbx
0x18ee1:	pop	rbp
0x18ee2:	pop	r12
0x18ee4:	pop	r13
0x18ee6:	ret	
0x18ee7:	nop	word ptr [rax + rax]
0x18ef0:	endbr64	
0x18ef4:	push	r13
0x18ef6:	push	r12
0x18ef8:	mov	r12d, edi
0x18efb:	push	rbp
0x18efc:	mov	rbp, rsi
0x18eff:	push	rbx
0x18f00:	sub	rsp, 8
0x18f04:	call	0x4860
0x18f09:	mov	r13d, dword ptr [rax]
0x18f0c:	mov	rbx, rax
0x18f0f:	jmp	0x18f1d
0x18f11:	nop	dword ptr [rax]
0x18f18:	cmp	dword ptr [rbx], 4
0x18f1b:	jne	0x18f2f
0x18f1d:	mov	dword ptr [rbx], r13d
0x18f20:	mov	rsi, rbp
0x18f23:	mov	edi, r12d
0x18f26:	call	0x4eb0
0x18f2b:	test	eax, eax
0x18f2d:	js	0x18f18
0x18f2f:	add	rsp, 8
0x18f33:	pop	rbx
0x18f34:	pop	rbp
0x18f35:	pop	r12
0x18f37:	pop	r13
0x18f39:	ret	
0x18f3a:	nop	word ptr [rax + rax]
0x18f40:	endbr64	
0x18f44:	push	r13
0x18f46:	push	r12
0x18f48:	mov	r12, rdi
0x18f4b:	push	rbp
0x18f4c:	mov	rbp, rsi
0x18f4f:	push	rbx
0x18f50:	sub	rsp, 8
0x18f54:	call	0x4860
0x18f59:	mov	r13d, dword ptr [rax]
0x18f5c:	mov	rbx, rax
0x18f5f:	jmp	0x18f6d
0x18f61:	nop	dword ptr [rax]
0x18f68:	cmp	dword ptr [rbx], 4
0x18f6b:	jne	0x18f7f
0x18f6d:	mov	dword ptr [rbx], r13d
0x18f70:	mov	rsi, rbp
0x18f73:	mov	rdi, r12
0x18f76:	call	0x4b90
0x18f7b:	test	eax, eax
0x18f7d:	js	0x18f68
0x18f7f:	add	rsp, 8
0x18f83:	pop	rbx
0x18f84:	pop	rbp
0x18f85:	pop	r12
0x18f87:	pop	r13
0x18f89:	ret	
0x18f8a:	nop	word ptr [rax + rax]
0x18f90:	endbr64	
0x18f94:	push	r13
0x18f96:	push	r12
0x18f98:	mov	r12, rdi
0x18f9b:	push	rbp
0x18f9c:	mov	rbp, rsi
0x18f9f:	push	rbx
0x18fa0:	sub	rsp, 8
0x18fa4:	call	0x4860
0x18fa9:	mov	r13d, dword ptr [rax]
0x18fac:	mov	rbx, rax
0x18faf:	jmp	0x18fbd
0x18fb1:	nop	dword ptr [rax]
0x18fb8:	cmp	dword ptr [rbx], 4
0x18fbb:	jne	0x18fcf
0x18fbd:	mov	dword ptr [rbx], r13d
0x18fc0:	mov	rsi, rbp
0x18fc3:	mov	rdi, r12
0x18fc6:	call	0x4ad0
0x18fcb:	test	eax, eax
0x18fcd:	js	0x18fb8
0x18fcf:	add	rsp, 8
0x18fd3:	pop	rbx
0x18fd4:	pop	rbp
0x18fd5:	pop	r12
0x18fd7:	pop	r13
0x18fd9:	ret	
0x18fda:	nop	word ptr [rax + rax]
0x18fe0:	endbr64	
0x18fe4:	push	r12
0x18fe6:	push	rbp
0x18fe7:	push	rbx
0x18fe8:	mov	ebx, 0x40
0x18fed:	call	0x4860
0x18ff2:	mov	edi, 0x40
0x18ff7:	mov	dword ptr [rax], 0
0x18ffd:	mov	r12, rax
0x19000:	call	0x1d670
0x19005:	mov	rbp, rax
0x19008:	jmp	0x19031
0x1900a:	nop	word ptr [rax + rax]
0x19010:	cmp	dword ptr [r12], 0x22
0x19015:	jne	0x19050
0x19017:	add	rbx, 0x40
0x1901b:	mov	rdi, rbp
0x1901e:	mov	rsi, rbx
0x19021:	call	0x1d690
0x19026:	mov	dword ptr [r12], 0
0x1902e:	mov	rbp, rax
0x19031:	mov	rsi, rbx
0x19034:	mov	rdi, rbp
0x19037:	call	0x4a80
0x1903c:	test	rax, rax
0x1903f:	je	0x19010
0x19041:	mov	rax, rbp
0x19044:	pop	rbx
0x19045:	pop	rbp
0x19046:	pop	r12
0x19048:	ret	
0x19049:	nop	dword ptr [rax]
0x19050:	mov	rdi, rbp
0x19053:	xor	ebp, ebp
0x19055:	call	0x18d10
0x1905a:	mov	rax, rbp
0x1905d:	pop	rbx
0x1905e:	pop	rbp
0x1905f:	pop	r12
0x19061:	ret	
0x19062:	nop	word ptr cs:[rax + rax]
0x1906d:	nop	dword ptr [rax]
0x19070:	endbr64	
0x19074:	push	rbp
0x19075:	mov	esi, 0x2f
0x1907a:	mov	rbp, rdi
0x1907d:	push	rbx
0x1907e:	sub	rsp, 8
0x19082:	call	0x4a20
0x19087:	test	rax, rax
0x1908a:	je	0x190a8
0x1908c:	mov	rbx, rax
0x1908f:	mov	rdi, rbp
0x19092:	call	0x1d7a0
0x19097:	sub	rbx, rbp
0x1909a:	mov	byte ptr [rax + rbx], 0x30
0x1909e:	add	rsp, 8
0x190a2:	pop	rbx
0x190a3:	pop	rbp
0x190a4:	ret	
0x190a5:	nop	dword ptr [rax]
0x190a8:	add	rsp, 8
0x190ac:	lea	rdi, [rip + 0x862b]
0x190b3:	pop	rbx
0x190b4:	pop	rbp
0x190b5:	jmp	0x1d7a0
0x190ba:	nop	word ptr [rax + rax]
0x190c0:	endbr64	
0x190c4:	push	rbx
0x190c5:	mov	rbx, rdi
0x190c8:	call	0x49b0
0x190cd:	lea	rax, [rbx + rax - 1]
0x190d2:	cmp	byte ptr [rax], 0x2f
0x190d5:	jne	0x190da
0x190d7:	mov	byte ptr [rax], 0
0x190da:	mov	rdi, rbx
0x190dd:	mov	esi, 0x2f
0x190e2:	call	0x4a20
0x190e7:	lea	rdx, [rax + 1]
0x190eb:	test	rax, rax
0x190ee:	mov	rax, rbx
0x190f1:	pop	rbx
0x190f2:	cmovne	rax, rdx
0x190f6:	ret	
0x190f7:	nop	word ptr [rax + rax]
0x19100:	endbr64	
0x19104:	push	rbx
0x19105:	mov	esi, 0x10
0x1910a:	mov	ebx, edi
0x1910c:	mov	edi, 1
0x19111:	call	0x1d740
0x19116:	mov	dword ptr [rax + 8], ebx
0x19119:	pop	rbx
0x1911a:	ret	
0x1911b:	nop	dword ptr [rax + rax]
0x19120:	endbr64	
0x19124:	test	rdi, rdi
0x19127:	je	0x19148
0x19129:	push	rbp
0x1912a:	mov	rbp, rdi
0x1912d:	mov	rdi, qword ptr [rdi]
0x19130:	test	rdi, rdi
0x19133:	je	0x1913a
0x19135:	call	0x18d10
0x1913a:	mov	rdi, rbp
0x1913d:	pop	rbp
0x1913e:	jmp	0x18d10
0x19143:	nop	dword ptr [rax + rax]
0x19148:	ret	
0x19149:	nop	dword ptr [rax]
0x19150:	endbr64	
0x19154:	push	rbp
0x19155:	mov	rbp, rsi
0x19158:	push	rbx
0x19159:	mov	rbx, rdi
0x1915c:	sub	rsp, 8
0x19160:	mov	eax, dword ptr [rdi + 0xc]
0x19163:	lea	esi, [rax + 1]
0x19166:	mov	dword ptr [rdi + 0xc], esi
0x19169:	imul	esi, dword ptr [rdi + 8]
0x1916d:	mov	rdi, qword ptr [rdi]
0x19170:	movsxd	rsi, esi
0x19173:	call	0x1d690
0x19178:	mov	ecx, dword ptr [rbx + 0xc]
0x1917b:	movsxd	rdx, dword ptr [rbx + 8]
0x1917f:	mov	rsi, rbp
0x19182:	mov	qword ptr [rbx], rax
0x19185:	add	rsp, 8
0x19189:	sub	ecx, 1
0x1918c:	pop	rbx
0x1918d:	pop	rbp
0x1918e:	imul	ecx, edx
0x19191:	movsxd	rcx, ecx
0x19194:	lea	rdi, [rax + rcx]
0x19198:	jmp	0x4bb0
0x1919d:	nop	dword ptr [rax]
0x191a0:	endbr64	
0x191a4:	mov	eax, dword ptr [rdi + 0xc]
0x191a7:	test	eax, eax
0x191a9:	je	0x191f8
0x191ab:	push	rbp
0x191ac:	sub	eax, 1
0x191af:	mov	rbp, rsi
0x191b2:	push	rbx
0x191b3:	mov	rbx, rdi
0x191b6:	sub	rsp, 8
0x191ba:	movsxd	rdx, dword ptr [rdi + 8]
0x191be:	mov	dword ptr [rdi + 0xc], eax
0x191c1:	mov	rsi, rdx
0x191c4:	imul	esi, eax
0x191c7:	movsxd	rsi, esi
0x191ca:	add	rsi, qword ptr [rdi]
0x191cd:	mov	rdi, rbp
0x191d0:	call	0x4bb0
0x191d5:	mov	esi, dword ptr [rbx + 0xc]
0x191d8:	imul	esi, dword ptr [rbx + 8]
0x191dc:	mov	rdi, qword ptr [rbx]
0x191df:	movsxd	rsi, esi
0x191e2:	call	0x1d690
0x191e7:	mov	qword ptr [rbx], rax
0x191ea:	add	rsp, 8
0x191ee:	mov	rax, rbp
0x191f1:	pop	rbx
0x191f2:	pop	rbp
0x191f3:	ret	
0x191f4:	nop	dword ptr [rax]
0x191f8:	xor	eax, eax
0x191fa:	ret	
0x191fb:	nop	dword ptr [rax + rax]
0x19200:	endbr64	
0x19204:	mov	ecx, dword ptr [rdi + 0xc]
0x19207:	cmp	ecx, edx
0x19209:	jl	0x19240
0x1920b:	test	ecx, ecx
0x1920d:	je	0x19240
0x1920f:	sub	rsp, 8
0x19213:	movsxd	r9, dword ptr [rdi + 8]
0x19217:	sub	ecx, edx
0x19219:	mov	r8, rsi
0x1921c:	imul	ecx, r9d
0x19220:	mov	rdx, r9
0x19223:	movsxd	rsi, ecx
0x19226:	add	rsi, qword ptr [rdi]
0x19229:	mov	rdi, r8
0x1922c:	call	0x4bb0
0x19231:	add	rsp, 8
0x19235:	ret	
0x19236:	nop	word ptr cs:[rax + rax]
0x19240:	xor	eax, eax
0x19242:	ret	
0x19243:	nop	word ptr cs:[rax + rax]
0x1924e:	nop	
0x19250:	endbr64	
0x19254:	push	rbx
0x19255:	mov	rbx, rdi
0x19258:	mov	dword ptr [rdi + 0xc], esi
0x1925b:	imul	esi, dword ptr [rdi + 8]
0x1925f:	mov	rdi, qword ptr [rdi]
0x19262:	movsxd	rsi, esi
0x19265:	call	0x1d690
0x1926a:	mov	qword ptr [rbx], rax
0x1926d:	pop	rbx
0x1926e:	ret	
0x1926f:	nop	
0x19270:	endbr64	
0x19274:	mov	eax, dword ptr [rdi + 0xc]
0x19277:	ret	
0x19278:	nop	dword ptr [rax + rax]
0x19280:	push	r12
0x19282:	mov	r12, rdi
0x19285:	mov	edi, 2
0x1928a:	push	rbp
0x1928b:	push	rbx
0x1928c:	mov	ebx, esi
0x1928e:	xor	esi, esi
0x19290:	call	0x4b50
0x19295:	xor	esi, esi
0x19297:	mov	edi, 3
0x1929c:	call	0x4b50
0x192a1:	test	ebx, ebx
0x192a3:	jne	0x192e0
0x192a5:	mov	r9, qword ptr [rip + 0x115b4]
0x192ac:	xor	r8d, r8d
0x192af:	mov	rcx, r12
0x192b2:	xor	eax, eax
0x192b4:	lea	rdi, [rip + 0x7363]
0x192bb:	lea	rdx, [rip + 0x911e]
0x192c2:	lea	rsi, [rip + 0x735a]
0x192c9:	call	0x4e30
0x192ce:	mov	edi, 0x7f
0x192d3:	call	0x48a0
0x192d8:	nop	dword ptr [rax + rax]
0x192e0:	mov	edi, 1
0x192e5:	lea	rbp, [rip + 0x90ed]
0x192ec:	call	0x4ab0
0x192f1:	mov	edi, 2
0x192f6:	call	0x4ab0
0x192fb:	mov	rdi, qword ptr [rip + 0x127ce]
0x19302:	mov	rsi, rbp
0x19305:	call	0x4da0
0x1930a:	mov	rdi, qword ptr [rip + 0x127b7]
0x19311:	mov	rsi, rbp
0x19314:	call	0x4da0
0x19319:	mov	edx, 4
0x1931e:	lea	rsi, [rip + 0x90b6]
0x19325:	mov	rdi, r12
0x19328:	call	0x4890
0x1932d:	test	eax, eax
0x1932f:	je	0x192a5
0x19335:	xor	edi, edi
0x19337:	call	0x4ab0
0x1933c:	jmp	0x192a5
0x19341:	nop	word ptr cs:[rax + rax]
0x1934c:	nop	dword ptr [rax]
0x19350:	endbr64	
0x19354:	push	r12
0x19356:	push	rbp
0x19357:	push	rbx
0x19358:	sub	rsp, 0x10
0x1935c:	mov	rax, qword ptr fs:[0x28]
0x19365:	mov	qword ptr [rsp + 8], rax
0x1936a:	xor	eax, eax
0x1936c:	test	rdi, rdi
0x1936f:	je	0x193d0
0x19371:	mov	rbp, rdi
0x19374:	mov	r12d, esi
0x19377:	call	0x4ed0
0x1937c:	mov	ebx, eax
0x1937e:	test	eax, eax
0x19380:	js	0x193c0
0x19382:	je	0x193dc
0x19384:	lea	rbp, [rsp + 4]
0x19389:	nop	dword ptr [rax]
0x19390:	mov	rdi, rbp
0x19393:	call	0x4ec0
0x19398:	cmp	eax, ebx
0x1939a:	jne	0x19390
0x1939c:	mov	eax, dword ptr [rsp + 4]
0x193a0:	mov	rdx, qword ptr [rsp + 8]
0x193a5:	sub	rdx, qword ptr fs:[0x28]
0x193ae:	jne	0x193d7
0x193b0:	add	rsp, 0x10
0x193b4:	pop	rbx
0x193b5:	pop	rbp
0x193b6:	pop	r12
0x193b8:	ret	
0x193b9:	nop	dword ptr [rax]
0x193c0:	mov	eax, 0xffffffff
0x193c5:	jmp	0x193a0
0x193c7:	nop	word ptr [rax + rax]
0x193d0:	mov	eax, 1
0x193d5:	jmp	0x193a0
0x193d7:	call	0x49d0
0x193dc:	mov	esi, r12d
0x193df:	mov	rdi, rbp
0x193e2:	xor	eax, eax
0x193e4:	call	0x19280
0x193e9:	nop	dword ptr [rax]
0x193f0:	endbr64	
0x193f4:	push	r13
0x193f6:	mov	r13, rdi
0x193f9:	push	r12
0x193fb:	push	rbp
0x193fc:	push	rbx
0x193fd:	sub	rsp, 0x18
0x19401:	mov	rax, qword ptr fs:[0x28]
0x1940a:	mov	qword ptr [rsp + 8], rax
0x1940f:	xor	eax, eax
0x19411:	test	esi, esi
0x19413:	je	0x19488
0x19415:	mov	edi, 1
0x1941a:	mov	ebp, esi
0x1941c:	call	0x18b70
0x19421:	test	r13, r13
0x19424:	je	0x19520
0x1942a:	call	0x4ed0
0x1942f:	mov	r12d, eax
0x19432:	test	eax, eax
0x19434:	js	0x19550
0x1943a:	je	0x19560
0x19440:	lea	rbx, [rsp + 4]
0x19445:	nop	dword ptr [rax]
0x19448:	mov	rdi, rbx
0x1944b:	call	0x4ec0
0x19450:	cmp	r12d, eax
0x19453:	jne	0x19448
0x19455:	mov	r12d, dword ptr [rsp + 4]
0x1945a:	xor	edi, edi
0x1945c:	call	0x18b70
0x19461:	mov	rax, qword ptr [rsp + 8]
0x19466:	sub	rax, qword ptr fs:[0x28]
0x1946f:	jne	0x1955b
0x19475:	add	rsp, 0x18
0x19479:	mov	eax, r12d
0x1947c:	pop	rbx
0x1947d:	pop	rbp
0x1947e:	pop	r12
0x19480:	pop	r13
0x19482:	ret	
0x19483:	nop	dword ptr [rax + rax]
0x19488:	xor	edi, edi
0x1948a:	call	0x9b00
0x1948f:	xor	eax, eax
0x19491:	call	0xa6c0
0x19496:	mov	rdi, qword ptr [rip + 0x1142b]
0x1949d:	call	0xbb40
0x194a2:	xor	edi, edi
0x194a4:	call	0x18b90
0x194a9:	test	r13, r13
0x194ac:	je	0x19530
0x194b2:	call	0x4ed0
0x194b7:	mov	ebp, eax
0x194b9:	test	eax, eax
0x194bb:	js	0x19540
0x194c1:	je	0x1956c
0x194c7:	lea	rbx, [rsp + 4]
0x194cc:	nop	dword ptr [rax]
0x194d0:	mov	rdi, rbx
0x194d3:	call	0x4ec0
0x194d8:	cmp	ebp, eax
0x194da:	jne	0x194d0
0x194dc:	mov	r12d, dword ptr [rsp + 4]
0x194e1:	mov	edi, 1
0x194e6:	call	0x18b90
0x194eb:	mov	edx, 2
0x194f0:	mov	edi, 1
0x194f5:	lea	rsi, [rip + 0x8ee7]
0x194fc:	call	0x18da0
0x19501:	mov	edi, 1
0x19506:	call	0x9b00
0x1950b:	xor	eax, eax
0x1950d:	call	0xa6c0
0x19512:	xor	edi, edi
0x19514:	call	0x7890
0x19519:	jmp	0x19461
0x1951e:	nop	
0x19520:	mov	r12d, 1
0x19526:	jmp	0x1945a
0x1952b:	nop	dword ptr [rax + rax]
0x19530:	mov	r12d, 1
0x19536:	jmp	0x194e1
0x19538:	nop	dword ptr [rax + rax]
0x19540:	mov	r12d, 0xffffffff
0x19546:	jmp	0x194e1
0x19548:	nop	dword ptr [rax + rax]
0x19550:	mov	r12d, 0xffffffff
0x19556:	jmp	0x1945a
0x1955b:	call	0x49d0
0x19560:	mov	esi, ebp
0x19562:	mov	rdi, r13
0x19565:	xor	eax, eax
0x19567:	call	0x19280
0x1956c:	xor	esi, esi
0x1956e:	mov	rdi, r13
0x19571:	xor	eax, eax
0x19573:	call	0x19280
0x19578:	nop	dword ptr [rax + rax]
0x19580:	endbr64	
0x19584:	mov	rdi, qword ptr [rip + 0x12545]
0x1958b:	test	rdi, rdi
0x1958e:	je	0x195b8
0x19590:	sub	rsp, 8
0x19594:	call	0x4870
0x19599:	mov	rdi, qword ptr [rip + 0x12528]
0x195a0:	test	rdi, rdi
0x195a3:	je	0x195b0
0x195a5:	add	rsp, 8
0x195a9:	jmp	0x4870
0x195ae:	nop	
0x195b0:	add	rsp, 8
0x195b4:	ret	
0x195b5:	nop	dword ptr [rax]
0x195b8:	mov	rdi, qword ptr [rip + 0x12509]
0x195bf:	test	rdi, rdi
0x195c2:	je	0x195d0
0x195c4:	jmp	0x4870
0x195c9:	nop	dword ptr [rax]
0x195d0:	ret	
0x195d1:	nop	word ptr cs:[rax + rax]
0x195dc:	nop	dword ptr [rax]
0x195e0:	endbr64	
0x195e4:	push	r12
0x195e6:	lea	rsi, [rip + 0x89dc]
0x195ed:	push	rbp
0x195ee:	mov	rbp, rdi
0x195f1:	sub	rsp, 8
0x195f5:	mov	rdi, qword ptr [rip + 0x124cc]
0x195fc:	call	0x4da0
0x19601:	test	rax, rax
0x19604:	je	0x19676
0x19606:	mov	edi, 0x801
0x1960b:	mov	r12, rax
0x1960e:	call	0x1d670
0x19613:	mov	rbp, rax
0x19616:	jmp	0x1964a
0x19618:	nop	dword ptr [rax + rax]
0x19620:	mov	rdi, rbp
0x19623:	call	0x49b0
0x19628:	cdqe	
0x1962a:	lea	rax, [rbp + rax - 1]
0x1962f:	cmp	byte ptr [rax], 0xa
0x19632:	jne	0x19637
0x19634:	mov	byte ptr [rax], 0
0x19637:	xor	esi, esi
0x19639:	mov	edx, 0xa
0x1963e:	mov	rdi, rbp
0x19641:	call	0x8070
0x19646:	test	al, al
0x19648:	je	0x1965f
0x1964a:	mov	rdx, r12
0x1964d:	mov	esi, 0x801
0x19652:	mov	rdi, rbp
0x19655:	call	0x4b00
0x1965a:	test	rax, rax
0x1965d:	jne	0x19620
0x1965f:	mov	rdi, rbp
0x19662:	call	0x18d10
0x19667:	add	rsp, 8
0x1966b:	mov	rdi, r12
0x1966e:	pop	rbp
0x1966f:	pop	r12
0x19671:	jmp	0x4940
0x19676:	mov	rdi, rbp
0x19679:	call	0x49b0
0x1967e:	mov	rdi, qword ptr [rip + 0x12443]
0x19685:	mov	r12, rax
0x19688:	call	0x49b0
0x1968d:	lea	rdi, [r12 + rax + 0x20]
0x19692:	call	0x1d670
0x19697:	mov	r9, qword ptr [rip + 0x1242a]
0x1969e:	mov	r8, rbp
0x196a1:	or	rdx, 0xffffffffffffffff
0x196a5:	mov	r12, rax
0x196a8:	mov	rdi, rax
0x196ab:	mov	esi, 1
0x196b0:	xor	eax, eax
0x196b2:	lea	rcx, [rip + 0x8d2d]
0x196b9:	call	0x4f10
0x196be:	mov	rdi, r12
0x196c1:	mov	edx, 0x1e
0x196c6:	xor	esi, esi
0x196c8:	call	0x8070
0x196cd:	pop	rax
0x196ce:	mov	rdi, r12
0x196d1:	pop	rbp
0x196d2:	pop	r12
0x196d4:	jmp	0x18d10
0x196d9:	nop	dword ptr [rax]
0x196e0:	endbr64	
0x196e4:	push	r15
0x196e6:	push	r14
0x196e8:	push	r13
0x196ea:	push	r12
0x196ec:	push	rbp
0x196ed:	push	rbx
0x196ee:	sub	rsp, 8
0x196f2:	test	rdi, rdi
0x196f5:	je	0x19878
0x196fb:	mov	rbp, rdi
0x196fe:	call	0x49b0
0x19703:	lea	rdi, [rax + 1]
0x19707:	call	0x1d670
0x1970c:	mov	rsi, rbp
0x1970f:	mov	rdi, rax
0x19712:	call	0x48b0
0x19717:	cmp	byte ptr [rax], 0x7e
0x1971a:	mov	rbp, rax
0x1971d:	mov	r12, rax
0x19720:	jne	0x19800
0x19726:	movzx	eax, byte ptr [rax + 1]
0x1972a:	lea	r13, [rbp + 1]
0x1972e:	test	al, al
0x19730:	je	0x19818
0x19736:	cmp	al, 0x2f
0x19738:	je	0x19818
0x1973e:	mov	rdi, rbp
0x19741:	call	0x49b0
0x19746:	mov	rdi, rax
0x19749:	call	0x1d670
0x1974e:	movzx	ecx, byte ptr [rbp + 1]
0x19752:	mov	r14, rax
0x19755:	cmp	cl, 0x2f
0x19758:	je	0x19938
0x1975e:	test	cl, cl
0x19760:	je	0x19938
0x19766:	mov	edx, 2
0x1976b:	nop	dword ptr [rax + rax]
0x19770:	mov	byte ptr [r14 + rdx - 2], cl
0x19775:	movzx	ecx, byte ptr [rbp + rdx]
0x1977a:	lea	r13, [rbp + rdx]
0x1977f:	mov	rax, rdx
0x19782:	add	rdx, 1
0x19786:	test	cl, cl
0x19788:	je	0x1978f
0x1978a:	cmp	cl, 0x2f
0x1978d:	jne	0x19770
0x1978f:	lea	rax, [r14 + rax - 1]
0x19794:	mov	byte ptr [rax], 0
0x19797:	mov	rdi, r14
0x1979a:	call	0x4b60
0x1979f:	mov	rbx, rax
0x197a2:	test	rax, rax
0x197a5:	je	0x19880
0x197ab:	mov	rdi, qword ptr [rax + 0x20]
0x197af:	call	0x49b0
0x197b4:	mov	rdi, r13
0x197b7:	mov	r15, rax
0x197ba:	call	0x49b0
0x197bf:	lea	edi, [r15 + 1]
0x197c3:	movsxd	rdi, edi
0x197c6:	add	rdi, rax
0x197c9:	call	0x1d670
0x197ce:	mov	rsi, qword ptr [rbx + 0x20]
0x197d2:	mov	rdi, rax
0x197d5:	mov	r12, rax
0x197d8:	call	0x48b0
0x197dd:	movsxd	rdi, r15d
0x197e0:	mov	rsi, r13
0x197e3:	add	rdi, r12
0x197e6:	call	0x48b0
0x197eb:	mov	rdi, rbp
0x197ee:	call	0x18d10
0x197f3:	call	0x4c70
0x197f8:	mov	rdi, r14
0x197fb:	call	0x18d10
0x19800:	add	rsp, 8
0x19804:	mov	rax, r12
0x19807:	pop	rbx
0x19808:	pop	rbp
0x19809:	pop	r12
0x1980b:	pop	r13
0x1980d:	pop	r14
0x1980f:	pop	r15
0x19811:	ret	
0x19812:	nop	word ptr [rax + rax]
0x19818:	lea	rdi, [rip + 0x6d41]
0x1981f:	call	0x47e0
0x19824:	mov	r14, rax
0x19827:	test	rax, rax
0x1982a:	je	0x198f8
0x19830:	mov	rdi, r14
0x19833:	call	0x49b0
0x19838:	mov	rdi, r13
0x1983b:	mov	rbx, rax
0x1983e:	call	0x49b0
0x19843:	movsxd	rbx, ebx
0x19846:	lea	rdi, [rbx + rax + 1]
0x1984b:	call	0x1d670
0x19850:	mov	rsi, r14
0x19853:	mov	r12, rax
0x19856:	mov	rdi, rax
0x19859:	call	0x48b0
0x1985e:	lea	rdi, [r12 + rbx]
0x19862:	mov	rsi, r13
0x19865:	call	0x48b0
0x1986a:	mov	rdi, rbp
0x1986d:	call	0x18d10
0x19872:	jmp	0x19800
0x19874:	nop	dword ptr [rax]
0x19878:	xor	r12d, r12d
0x1987b:	jmp	0x19800
0x1987d:	nop	dword ptr [rax]
0x19880:	mov	rdx, qword ptr [rip + 0x12251]
0x19887:	test	rdx, rdx
0x1988a:	je	0x197f3
0x19890:	mov	rdi, r14
0x19893:	xor	eax, eax
0x19895:	call	rdx
0x19897:	mov	r15, rax
0x1989a:	test	rax, rax
0x1989d:	je	0x197f3
0x198a3:	mov	rdi, rax
0x198a6:	call	0x49b0
0x198ab:	mov	rdi, r13
0x198ae:	mov	rbx, rax
0x198b1:	call	0x49b0
0x198b6:	lea	edi, [rbx + 1]
0x198b9:	movsxd	rdi, edi
0x198bc:	add	rdi, rax
0x198bf:	call	0x1d670
0x198c4:	mov	rsi, r15
0x198c7:	mov	rdi, rax
0x198ca:	mov	r12, rax
0x198cd:	call	0x48b0
0x198d2:	movsxd	rdi, ebx
0x198d5:	mov	rsi, r13
0x198d8:	add	rdi, r12
0x198db:	call	0x48b0
0x198e0:	mov	rdi, r15
0x198e3:	call	0x18d10
0x198e8:	mov	rdi, rbp
0x198eb:	call	0x18d10
0x198f0:	jmp	0x197f3
0x198f5:	nop	dword ptr [rax]
0x198f8:	call	0x49e0
0x198fd:	mov	edi, eax
0x198ff:	call	0x4970
0x19904:	test	rax, rax
0x19907:	je	0x19916
0x19909:	mov	r14, qword ptr [rax + 0x20]
0x1990d:	test	r14, r14
0x19910:	jne	0x19830
0x19916:	mov	rdi, r13
0x19919:	call	0x49b0
0x1991e:	lea	rdi, [rax + 1]
0x19922:	call	0x1d670
0x19927:	mov	r12, rax
0x1992a:	mov	rdi, rax
0x1992d:	jmp	0x19862
0x19932:	nop	word ptr [rax + rax]
0x19938:	mov	rax, r14
0x1993b:	jmp	0x19794
0x19940:	endbr64	
0x19944:	push	r15
0x19946:	push	r14
0x19948:	mov	r14, rdi
0x1994b:	push	r13
0x1994d:	push	r12
0x1994f:	push	rbp
0x19950:	push	rbx
0x19951:	xor	ebx, ebx
0x19953:	sub	rsp, 0x48
0x19957:	mov	dword ptr [rsp + 0x1c], 0
0x1995f:	mov	qword ptr [rsp + 0x10], 0
0x19968:	nop	dword ptr [rax + rax]
0x19970:	mov	r15, qword ptr [rip + 0x10e31]
0x19977:	mov	rdi, r14
0x1997a:	mov	qword ptr [rsp + 8], r15
0x1997f:	call	0x49b0
0x19984:	mov	qword ptr [rsp + 0x20], rax
0x19989:	mov	rcx, rax
0x1998c:	movzx	eax, byte ptr [r14]
0x19990:	test	al, al
0x19992:	je	0x19bd0
0x19998:	cmp	al, 0x7e
0x1999a:	je	0x19bd0
0x199a0:	mov	dword ptr [rsp + 0x18], ecx
0x199a4:	mov	rax, rcx
0x199a7:	test	r15, r15
0x199aa:	je	0x19c50
0x199b0:	mov	edx, dword ptr [rsp + 0x20]
0x199b4:	test	edx, edx
0x199b6:	jle	0x19c4a
0x199bc:	mov	rax, qword ptr [rsp + 8]
0x199c1:	mov	dword ptr [rsp + 0x3c], ebx
0x199c5:	xor	r12d, r12d
0x199c8:	mov	rax, qword ptr [rax]
0x199cb:	mov	qword ptr [rsp + 0x28], rax
0x199d0:	mov	rax, qword ptr [rsp + 0x20]
0x199d5:	sub	eax, 1
0x199d8:	mov	qword ptr [rsp + 0x30], rax
0x199dd:	mov	rax, qword ptr [rsp + 8]
0x199e2:	mov	dword ptr [rsp + 0x38], r12d
0x199e7:	lea	rbp, [r14 + r12]
0x199eb:	lea	rbx, [rax + 8]
0x199ef:	mov	rax, qword ptr [rsp + 0x28]
0x199f4:	mov	r13, rax
0x199f7:	test	rax, rax
0x199fa:	jne	0x19a18
0x199fc:	jmp	0x19bb0
0x19a01:	nop	dword ptr [rax]
0x19a08:	mov	r13, qword ptr [rbx]
0x19a0b:	add	rbx, 8
0x19a0f:	test	r13, r13
0x19a12:	je	0x19bb0
0x19a18:	mov	rdi, r13
0x19a1b:	call	0x49b0
0x19a20:	mov	rsi, r13
0x19a23:	mov	rdi, rbp
0x19a26:	mov	rdx, rax
0x19a29:	mov	r15, rax
0x19a2c:	call	0x4890
0x19a31:	test	eax, eax
0x19a33:	jne	0x19a08
0x19a35:	mov	eax, dword ptr [rsp + 0x38]
0x19a39:	mov	ebx, dword ptr [rsp + 0x3c]
0x19a3d:	lea	eax, [rax + r15 - 1]
0x19a42:	lea	ecx, [rbx + rax]
0x19a45:	mov	dword ptr [rsp + 0x18], eax
0x19a49:	movsxd	r13, eax
0x19a4c:	mov	dword ptr [rsp + 8], ecx
0x19a50:	lea	r15, [r14 + r13]
0x19a54:	mov	ecx, dword ptr [rsp + 8]
0x19a58:	cmp	dword ptr [rsp + 0x1c], ecx
0x19a5c:	jle	0x19bf0
0x19a62:	movsxd	rbx, ebx
0x19a65:	add	rbx, qword ptr [rsp + 0x10]
0x19a6a:	mov	rdx, r13
0x19a6d:	mov	rsi, r14
0x19a70:	mov	rdi, rbx
0x19a73:	mov	qword ptr [rsp + 0x28], rbx
0x19a78:	call	0x4880
0x19a7d:	mov	rdi, r15
0x19a80:	mov	r13, qword ptr [rip + 0x10d19]
0x19a87:	call	0x49b0
0x19a8c:	mov	dword ptr [rsp + 0x20], eax
0x19a90:	test	eax, eax
0x19a92:	jle	0x19c64
0x19a98:	mov	rbx, r15
0x19a9b:	xor	ebp, ebp
0x19a9d:	movzx	eax, byte ptr [rbx]
0x19aa0:	cmp	al, 0x2f
0x19aa2:	je	0x19b80
0x19aa8:	test	al, al
0x19aaa:	je	0x19b80
0x19ab0:	test	r13, r13
0x19ab3:	je	0x19aea
0x19ab5:	mov	r14, r13
0x19ab8:	jmp	0x19ae2
0x19aba:	nop	word ptr [rax + rax]
0x19ac0:	mov	rdi, r12
0x19ac3:	add	r14, 8
0x19ac7:	call	0x49b0
0x19acc:	mov	rsi, r12
0x19acf:	mov	rdi, rbx
0x19ad2:	mov	rdx, rax
0x19ad5:	call	0x4890
0x19ada:	test	eax, eax
0x19adc:	je	0x19b80
0x19ae2:	mov	r12, qword ptr [r14]
0x19ae5:	test	r12, r12
0x19ae8:	jne	0x19ac0
0x19aea:	add	ebp, 1
0x19aed:	add	rbx, 1
0x19af1:	cmp	dword ptr [rsp + 0x20], ebp
0x19af5:	jne	0x19a9d
0x19af7:	nop	word ptr [rax + rax]
0x19b00:	lea	edi, [rbp + 1]
0x19b03:	movsxd	rbp, ebp
0x19b06:	movsxd	rdi, edi
0x19b09:	lea	r14, [r15 + rbp]
0x19b0d:	call	0x1d670
0x19b12:	mov	rdx, rbp
0x19b15:	mov	rsi, r15
0x19b18:	mov	r13, rax
0x19b1b:	mov	rdi, rax
0x19b1e:	call	0x4880
0x19b23:	mov	byte ptr [r13 + rbp], 0
0x19b29:	mov	rdi, r13
0x19b2c:	xor	eax, eax
0x19b2e:	call	0x196e0
0x19b33:	mov	rdi, r13
0x19b36:	mov	rbp, rax
0x19b39:	call	0x18d10
0x19b3e:	mov	rdi, rbp
0x19b41:	call	0x49b0
0x19b46:	mov	ecx, dword ptr [rsp + 8]
0x19b4a:	lea	ebx, [rcx + rax]
0x19b4d:	cmp	ebx, dword ptr [rsp + 0x1c]
0x19b51:	jge	0x19c20
0x19b57:	movsxd	rdi, dword ptr [rsp + 8]
0x19b5c:	mov	rsi, rbp
0x19b5f:	add	rdi, qword ptr [rsp + 0x10]
0x19b64:	call	0x48b0
0x19b69:	mov	rdi, rbp
0x19b6c:	call	0x18d10
0x19b71:	jmp	0x19970
0x19b76:	nop	word ptr cs:[rax + rax]
0x19b80:	or	dword ptr [rsp + 0x18], ebp
0x19b84:	mov	eax, dword ptr [rsp + 0x18]
0x19b88:	test	eax, eax
0x19b8a:	jne	0x19b00
0x19b90:	mov	rax, qword ptr [rsp + 0x28]
0x19b95:	mov	byte ptr [rax], 0
0x19b98:	mov	rax, qword ptr [rsp + 0x10]
0x19b9d:	add	rsp, 0x48
0x19ba1:	pop	rbx
0x19ba2:	pop	rbp
0x19ba3:	pop	r12
0x19ba5:	pop	r13
0x19ba7:	pop	r14
0x19ba9:	pop	r15
0x19bab:	ret	
0x19bac:	nop	dword ptr [rax]
0x19bb0:	lea	rax, [r12 + 1]
0x19bb5:	cmp	qword ptr [rsp + 0x30], r12
0x19bba:	je	0x19c46
0x19bc0:	mov	r12, rax
0x19bc3:	jmp	0x199dd
0x19bc8:	nop	dword ptr [rax + rax]
0x19bd0:	mov	dword ptr [rsp + 8], ebx
0x19bd4:	mov	r15, r14
0x19bd7:	mov	ecx, dword ptr [rsp + 8]
0x19bdb:	xor	r13d, r13d
0x19bde:	mov	dword ptr [rsp + 0x18], 0
0x19be6:	cmp	dword ptr [rsp + 0x1c], ecx
0x19bea:	jg	0x19a62
0x19bf0:	mov	eax, dword ptr [rsp + 0x1c]
0x19bf4:	mov	ecx, dword ptr [rsp + 0x18]
0x19bf8:	mov	rdi, qword ptr [rsp + 0x10]
0x19bfd:	lea	eax, [rax + rcx + 0x14]
0x19c01:	lea	esi, [rax + 1]
0x19c04:	mov	dword ptr [rsp + 0x1c], eax
0x19c08:	movsxd	rsi, esi
0x19c0b:	call	0x1d690
0x19c10:	mov	qword ptr [rsp + 0x10], rax
0x19c15:	jmp	0x19a62
0x19c1a:	nop	word ptr [rax + rax]
0x19c20:	mov	ecx, dword ptr [rsp + 0x1c]
0x19c24:	mov	rdi, qword ptr [rsp + 0x10]
0x19c29:	lea	eax, [rcx + rax + 0x14]
0x19c2d:	lea	esi, [rax + 1]
0x19c30:	mov	dword ptr [rsp + 0x1c], eax
0x19c34:	movsxd	rsi, esi
0x19c37:	call	0x1d690
0x19c3c:	mov	qword ptr [rsp + 0x10], rax
0x19c41:	jmp	0x19b57
0x19c46:	mov	ebx, dword ptr [rsp + 0x3c]
0x19c4a:	mov	rax, qword ptr [rsp + 0x20]
0x19c4f:	nop	
0x19c50:	mov	ecx, eax
0x19c52:	movsxd	r13, eax
0x19c55:	add	ecx, ebx
0x19c57:	lea	r15, [r14 + r13]
0x19c5b:	mov	dword ptr [rsp + 8], ecx
0x19c5f:	jmp	0x19a54
0x19c64:	xor	ebp, ebp
0x19c66:	jmp	0x19b84
0x19c6b:	nop	dword ptr [rax + rax]
0x19c70:	push	r15
0x19c72:	mov	r15, rsi
0x19c75:	push	r14
0x19c77:	mov	r14d, edx
0x19c7a:	push	r13
0x19c7c:	push	r12
0x19c7e:	mov	r12, rdi
0x19c81:	push	rbp
0x19c82:	push	rbx
0x19c83:	sub	rsp, 0x18
0x19c87:	movsxd	rsi, dword ptr [rsi]
0x19c8a:	lea	r13, [rdi + rsi]
0x19c8e:	mov	edi, ecx
0x19c90:	mov	ebx, esi
0x19c92:	mov	rbp, rsi
0x19c95:	movzx	eax, byte ptr [r13]
0x19c9a:	and	edi, 1
0x19c9d:	mov	rdx, rsi
0x19ca0:	test	al, al
0x19ca2:	jne	0x19cdc
0x19ca4:	jmp	0x19db9
0x19ca9:	nop	dword ptr [rax]
0x19cb0:	cmp	al, 0x5c
0x19cb2:	jne	0x19cc5
0x19cb4:	movsx	eax, byte ptr [r12 + rdx + 1]
0x19cba:	cmp	eax, r14d
0x19cbd:	sete	al
0x19cc0:	movzx	eax, al
0x19cc3:	add	ebx, eax
0x19cc5:	add	ebx, 1
0x19cc8:	movsxd	rdx, ebx
0x19ccb:	lea	r13, [r12 + rdx]
0x19ccf:	movzx	eax, byte ptr [r13]
0x19cd4:	test	al, al
0x19cd6:	je	0x19da0
0x19cdc:	movsx	ecx, al
0x19cdf:	cmp	ecx, r14d
0x19ce2:	jne	0x19cb0
0x19ce4:	cmp	ebp, ebx
0x19ce6:	jl	0x19d10
0x19ce8:	test	dil, dil
0x19ceb:	jne	0x19d10
0x19ced:	movzx	eax, byte ptr [r13]
0x19cf2:	xor	r9d, r9d
0x19cf5:	cmp	al, 1
0x19cf7:	sbb	ebx, -1
0x19cfa:	mov	dword ptr [r15], ebx
0x19cfd:	add	rsp, 0x18
0x19d01:	mov	rax, r9
0x19d04:	pop	rbx
0x19d05:	pop	rbp
0x19d06:	pop	r12
0x19d08:	pop	r13
0x19d0a:	pop	r14
0x19d0c:	pop	r15
0x19d0e:	ret	
0x19d0f:	nop	
0x19d10:	mov	edi, ebx
0x19d12:	mov	qword ptr [rsp], r8
0x19d16:	sub	edi, ebp
0x19d18:	mov	qword ptr [rsp + 8], rsi
0x19d1d:	add	edi, 1
0x19d20:	movsxd	rdi, edi
0x19d23:	call	0x1d670
0x19d28:	cmp	ebp, ebx
0x19d2a:	mov	r8, qword ptr [rsp]
0x19d2e:	mov	r9, rax
0x19d31:	jge	0x19dd6
0x19d37:	mov	rsi, qword ptr [rsp + 8]
0x19d3c:	mov	eax, 1
0x19d41:	jmp	0x19d5d
0x19d43:	nop	dword ptr [rax + rax]
0x19d48:	add	ebp, 1
0x19d4b:	mov	byte ptr [r9 + rax - 1], dl
0x19d50:	mov	edx, eax
0x19d52:	add	rax, 1
0x19d56:	cmp	ebp, ebx
0x19d58:	jge	0x19d80
0x19d5a:	movsxd	rsi, ebp
0x19d5d:	movzx	edx, byte ptr [r12 + rsi]
0x19d62:	cmp	dl, 0x5c
0x19d65:	jne	0x19d48
0x19d67:	movsx	esi, byte ptr [r12 + rsi + 1]
0x19d6d:	cmp	esi, r14d
0x19d70:	jne	0x19d48
0x19d72:	add	ebp, 1
0x19d75:	mov	edx, esi
0x19d77:	jmp	0x19d48
0x19d79:	nop	dword ptr [rax]
0x19d80:	movsxd	rax, edx
0x19d83:	add	rax, r9
0x19d86:	mov	byte ptr [rax], 0
0x19d89:	mov	dword ptr [r8], edx
0x19d8c:	movzx	eax, byte ptr [r13]
0x19d91:	jmp	0x19cf5
0x19d96:	nop	word ptr cs:[rax + rax]
0x19da0:	cmp	ebp, ebx
0x19da2:	jl	0x19d10
0x19da8:	test	dil, dil
0x19dab:	jne	0x19d10
0x19db1:	xor	r9d, r9d
0x19db4:	jmp	0x19cfa
0x19db9:	test	ecx, ecx
0x19dbb:	je	0x19db1
0x19dbd:	mov	edi, 1
0x19dc2:	mov	qword ptr [rsp], r8
0x19dc6:	call	0x1d670
0x19dcb:	mov	r8, qword ptr [rsp]
0x19dcf:	xor	edx, edx
0x19dd1:	mov	r9, rax
0x19dd4:	jmp	0x19d86
0x19dd6:	xor	edx, edx
0x19dd8:	jmp	0x19d86
0x19dda:	nop	word ptr [rax + rax]
0x19de0:	push	r15
0x19de2:	push	r14
0x19de4:	push	r13
0x19de6:	push	r12
0x19de8:	push	rbp
0x19de9:	push	rbx
0x19dea:	sub	rsp, 0x28
0x19dee:	mov	eax, dword ptr [rip + 0x11cf0]
0x19df4:	mov	ebx, dword ptr [rip + 0x11d02]
0x19dfa:	mov	dword ptr [rsp + 8], esi
0x19dfe:	mov	dword ptr [rsp + 0x18], edx
0x19e02:	mov	dword ptr [rsp + 0x1c], eax
0x19e06:	test	eax, eax
0x19e08:	je	0x19f9d
0x19e0e:	mov	rbp, rdi
0x19e11:	cmp	eax, ebx
0x19e13:	je	0x19fb0
0x19e19:	call	0x49b0
0x19e1e:	mov	ecx, dword ptr [rsp + 8]
0x19e22:	mov	dword ptr [rsp + 0xc], eax
0x19e26:	test	ecx, ecx
0x19e28:	js	0x19fbb
0x19e2e:	mov	rax, qword ptr [rip + 0x11ccb]
0x19e35:	movsxd	r14, dword ptr [rsp + 0xc]
0x19e3a:	mov	qword ptr [rsp + 0x10], rax
0x19e3f:	mov	edx, dword ptr [rsp + 8]
0x19e43:	test	edx, edx
0x19e45:	js	0x19f16
0x19e4b:	cmp	dword ptr [rsp + 0x1c], ebx
0x19e4f:	je	0x19f9d
0x19e55:	mov	rcx, qword ptr [rsp + 0x10]
0x19e5a:	movsxd	rax, ebx
0x19e5d:	mov	rax, qword ptr [rcx + rax*8]
0x19e61:	mov	r13, qword ptr [rax]
0x19e64:	mov	rdi, r13
0x19e67:	call	0x49b0
0x19e6c:	mov	r10, rax
0x19e6f:	cmp	dword ptr [rsp + 0xc], eax
0x19e73:	jg	0x19f07
0x19e79:	cmp	dword ptr [rsp + 0x18], 1
0x19e7e:	movzx	r12d, byte ptr [rbp]
0x19e83:	je	0x19ee0
0x19e85:	mov	r15d, dword ptr [rsp + 0x18]
0x19e8a:	sub	r10d, dword ptr [rsp + 0xc]
0x19e8f:	jmp	0x19ea5
0x19e91:	nop	dword ptr [rax]
0x19e98:	add	r15d, 1
0x19e9c:	add	r13, 1
0x19ea0:	cmp	r15d, r10d
0x19ea3:	jg	0x19f07
0x19ea5:	cmp	byte ptr [r13], r12b
0x19ea9:	jne	0x19e98
0x19eab:	mov	rdx, r14
0x19eae:	mov	rsi, r13
0x19eb1:	mov	rdi, rbp
0x19eb4:	mov	dword ptr [rsp + 4], r10d
0x19eb9:	call	0x4890
0x19ebe:	mov	r10d, dword ptr [rsp + 4]
0x19ec3:	test	eax, eax
0x19ec5:	jne	0x19e98
0x19ec7:	mov	dword ptr [rip + 0x11c2f], ebx
0x19ecd:	add	rsp, 0x28
0x19ed1:	mov	eax, r15d
0x19ed4:	pop	rbx
0x19ed5:	pop	rbp
0x19ed6:	pop	r12
0x19ed8:	pop	r13
0x19eda:	pop	r14
0x19edc:	pop	r15
0x19ede:	ret	
0x19edf:	nop	
0x19ee0:	cmp	byte ptr [r13], r12b
0x19ee4:	jne	0x19efb
0x19ee6:	mov	rdx, r14
0x19ee9:	mov	rsi, r13
0x19eec:	mov	rdi, rbp
0x19eef:	call	0x4890
0x19ef4:	mov	r15d, eax
0x19ef7:	test	eax, eax
0x19ef9:	je	0x19ec7
0x19efb:	mov	eax, dword ptr [rsp + 8]
0x19eff:	test	eax, eax
0x19f01:	js	0x19f90
0x19f07:	mov	edx, dword ptr [rsp + 8]
0x19f0b:	add	ebx, 1
0x19f0e:	test	edx, edx
0x19f10:	jns	0x19e4b
0x19f16:	mov	rcx, qword ptr [rsp + 0x10]
0x19f1b:	movsxd	rax, ebx
0x19f1e:	mov	rax, qword ptr [rcx + rax*8]
0x19f22:	mov	r13, qword ptr [rax]
0x19f25:	mov	rdi, r13
0x19f28:	call	0x49b0
0x19f2d:	mov	r8, rax
0x19f30:	cmp	dword ptr [rsp + 0xc], eax
0x19f34:	jg	0x19f90
0x19f36:	cmp	dword ptr [rsp + 0x18], 1
0x19f3b:	movzx	r12d, byte ptr [rbp]
0x19f40:	je	0x19ee0
0x19f42:	mov	r15d, r8d
0x19f45:	sub	r15d, dword ptr [rsp + 0xc]
0x19f4a:	movsxd	rcx, r15d
0x19f4d:	add	r13, rcx
0x19f50:	jmp	0x19f66
0x19f52:	nop	word ptr [rax + rax]
0x19f58:	sub	r15d, 1
0x19f5c:	sub	r13, 1
0x19f60:	cmp	r15d, -1
0x19f64:	je	0x19f90
0x19f66:	cmp	byte ptr [r13], r12b
0x19f6a:	jne	0x19f58
0x19f6c:	mov	rdx, r14
0x19f6f:	mov	rsi, r13
0x19f72:	mov	rdi, rbp
0x19f75:	call	0x4890
0x19f7a:	test	eax, eax
0x19f7c:	je	0x19ec7
0x19f82:	sub	r15d, 1
0x19f86:	sub	r13, 1
0x19f8a:	cmp	r15d, -1
0x19f8e:	jne	0x19f66
0x19f90:	sub	ebx, 1
0x19f93:	test	dword ptr [rsp + 8], ebx
0x19f97:	jns	0x19e3f
0x19f9d:	mov	r15d, 0xffffffff
0x19fa3:	jmp	0x19ecd
0x19fa8:	nop	dword ptr [rax + rax]
0x19fb0:	test	esi, esi
0x19fb2:	jns	0x19f9d
0x19fb4:	mov	eax, dword ptr [rsp + 0x1c]
0x19fb8:	lea	ebx, [rax - 1]
0x19fbb:	mov	rdi, rbp
0x19fbe:	call	0x49b0
0x19fc3:	mov	dword ptr [rsp + 0xc], eax
0x19fc7:	test	dword ptr [rsp + 8], ebx
0x19fcb:	jns	0x19e2e
0x19fd1:	jmp	0x19f9d
0x19fd3:	nop	word ptr cs:[rax + rax]
0x19fde:	nop	
0x19fe0:	push	r14
0x19fe2:	push	r13
0x19fe4:	movsxd	r13, esi
0x19fe7:	sub	edx, r13d
0x19fea:	push	r12
0x19fec:	push	rbp
0x19fed:	mov	rbp, rdi
0x19ff0:	push	rbx
0x19ff1:	movsxd	rbx, edx
0x19ff4:	cmp	ecx, 2
0x19ff7:	je	0x1a070
0x19ff9:	mov	eax, 0x1d
0x19ffe:	lea	r14, [rip + 0x843a]
0x1a005:	cmp	ecx, 3
0x1a008:	je	0x1a028
0x1a00a:	xor	eax, eax
0x1a00c:	lea	r14, [rip + 0x83f5]
0x1a013:	lea	rdx, [rip + 0x83fe]
0x1a01a:	cmp	ecx, 1
0x1a01d:	sete	al
0x1a020:	cmove	r14, rdx
0x1a024:	lea	eax, [rax + rax*2 + 0xf]
0x1a028:	lea	edi, [rax + rbx + 3]
0x1a02c:	movsxd	rdi, edi
0x1a02f:	call	0x1d670
0x1a034:	lea	rsi, [rbp + r13]
0x1a039:	mov	rdx, rbx
0x1a03c:	mov	r12, rax
0x1a03f:	mov	rdi, rax
0x1a042:	call	0x4880
0x1a047:	mov	byte ptr [r12 + rbx], 0x3a
0x1a04c:	lea	rdi, [r12 + rbx + 2]
0x1a051:	mov	rsi, r14
0x1a054:	mov	byte ptr [r12 + rbx + 1], 0x20
0x1a05a:	call	0x48b0
0x1a05f:	pop	rbx
0x1a060:	mov	rax, r12
0x1a063:	pop	rbp
0x1a064:	pop	r12
0x1a066:	pop	r13
0x1a068:	pop	r14
0x1a06a:	ret	
0x1a06b:	nop	dword ptr [rax + rax]
0x1a070:	mov	eax, 0x13
0x1a075:	lea	r14, [rip + 0x83af]
0x1a07c:	jmp	0x1a028
0x1a07e:	nop	
0x1a080:	push	r12
0x1a082:	push	rbp
0x1a083:	push	rbx
0x1a084:	test	rdi, rdi
0x1a087:	je	0x1a0b0
0x1a089:	mov	rbp, rdi
0x1a08c:	call	0x49b0
0x1a091:	lea	rdi, [rax + 1]
0x1a095:	call	0x1d670
0x1a09a:	pop	rbx
0x1a09b:	mov	rsi, rbp
0x1a09e:	pop	rbp
0x1a09f:	mov	rdi, rax
0x1a0a2:	pop	r12
0x1a0a4:	jmp	0x48b0
0x1a0a9:	nop	dword ptr [rax]
0x1a0b0:	lea	rdi, [rip + 0x64a9]
0x1a0b7:	call	0x47e0
0x1a0bc:	mov	r12, rax
0x1a0bf:	test	rax, rax
0x1a0c2:	je	0x1a110
0x1a0c4:	mov	rdi, rax
0x1a0c7:	call	0x49b0
0x1a0cc:	lea	edi, [rax + 0xa]
0x1a0cf:	movsxd	rbp, eax
0x1a0d2:	movsxd	rdi, edi
0x1a0d5:	lea	rbx, [rbp + 1]
0x1a0d9:	call	0x1d670
0x1a0de:	mov	rsi, r12
0x1a0e1:	mov	rdi, rax
0x1a0e4:	call	0x48b0
0x1a0e9:	movabs	rdx, 0x79726f747369682e
0x1a0f3:	mov	byte ptr [rax + rbp], 0x2f
0x1a0f7:	mov	r8, rax
0x1a0fa:	lea	rax, [rax + rbx]
0x1a0fe:	mov	qword ptr [rax], rdx
0x1a101:	mov	byte ptr [rax + 8], 0
0x1a105:	mov	rax, r8
0x1a108:	pop	rbx
0x1a109:	pop	rbp
0x1a10a:	pop	r12
0x1a10c:	ret	
0x1a10d:	nop	dword ptr [rax]
0x1a110:	mov	ebx, 2
0x1a115:	mov	ebp, 1
0x1a11a:	mov	edi, 0xb
0x1a11f:	lea	r12, [rip + 0x75b8]
0x1a126:	jmp	0x1a0d9
0x1a128:	nop	dword ptr [rax + rax]
0x1a130:	push	r15
0x1a132:	xor	eax, eax
0x1a134:	push	r14
0x1a136:	mov	r14d, esi
0x1a139:	push	r13
0x1a13b:	push	r12
0x1a13d:	push	rbp
0x1a13e:	push	rbx
0x1a13f:	mov	ebx, edx
0x1a141:	sub	rsp, 0x18
0x1a145:	call	0x1a080
0x1a14a:	cmp	ebx, 1
0x1a14d:	mov	edx, 0x1b6
0x1a152:	sbb	esi, esi
0x1a154:	mov	r13, rax
0x1a157:	mov	rdi, rax
0x1a15a:	xor	eax, eax
0x1a15c:	and	esi, 0x1c0
0x1a162:	add	esi, 0x241
0x1a168:	call	0x4d80
0x1a16d:	cmp	eax, -1
0x1a170:	je	0x1a270
0x1a176:	mov	ebp, eax
0x1a178:	mov	eax, dword ptr [rip + 0x11966]
0x1a17e:	cmp	eax, r14d
0x1a181:	mov	edx, eax
0x1a183:	cmovle	r14d, eax
0x1a187:	sub	edx, r14d
0x1a18a:	cmp	eax, edx
0x1a18c:	jle	0x1a290
0x1a192:	sub	eax, 1
0x1a195:	mov	rcx, qword ptr [rip + 0x11964]
0x1a19c:	movsxd	rsi, edx
0x1a19f:	xor	r12d, r12d
0x1a1a2:	sub	eax, edx
0x1a1a4:	add	rax, rsi
0x1a1a7:	lea	rbx, [rcx + rsi*8]
0x1a1ab:	lea	r15, [rcx + rax*8 + 8]
0x1a1b0:	mov	rax, qword ptr [rbx]
0x1a1b3:	add	rbx, 8
0x1a1b7:	mov	rdi, qword ptr [rax]
0x1a1ba:	call	0x49b0
0x1a1bf:	lea	r12d, [r12 + rax + 1]
0x1a1c4:	cmp	r15, rbx
0x1a1c7:	jne	0x1a1b0
0x1a1c9:	movsxd	rax, r12d
0x1a1cc:	mov	qword ptr [rsp + 8], rax
0x1a1d1:	mov	rdi, qword ptr [rsp + 8]
0x1a1d6:	call	0x1d670
0x1a1db:	mov	r15, rax
0x1a1de:	mov	eax, dword ptr [rip + 0x11900]
0x1a1e4:	mov	ebx, eax
0x1a1e6:	sub	ebx, r14d
0x1a1e9:	cmp	eax, ebx
0x1a1eb:	jle	0x1a238
0x1a1ed:	mov	r12, qword ptr [rip + 0x1190c]
0x1a1f4:	movsxd	rbx, ebx
0x1a1f7:	xor	r14d, r14d
0x1a1fa:	nop	word ptr [rax + rax]
0x1a200:	mov	rax, qword ptr [r12 + rbx*8]
0x1a204:	movsxd	rdi, r14d
0x1a207:	add	rdi, r15
0x1a20a:	mov	rsi, qword ptr [rax]
0x1a20d:	call	0x48b0
0x1a212:	mov	rax, qword ptr [r12 + rbx*8]
0x1a216:	add	rbx, 1
0x1a21a:	mov	rdi, qword ptr [rax]
0x1a21d:	call	0x49b0
0x1a222:	add	eax, r14d
0x1a225:	lea	r14d, [rax + 1]
0x1a229:	cdqe	
0x1a22b:	mov	byte ptr [r15 + rax], 0xa
0x1a230:	cmp	dword ptr [rip + 0x118ae], ebx
0x1a236:	jg	0x1a200
0x1a238:	mov	rdx, qword ptr [rsp + 8]
0x1a23d:	mov	rsi, r15
0x1a240:	mov	edi, ebp
0x1a242:	call	0x4790
0x1a247:	mov	rdi, r15
0x1a24a:	call	0x18d10
0x1a24f:	mov	edi, ebp
0x1a251:	call	0x4ab0
0x1a256:	mov	rdi, r13
0x1a259:	call	0x18d10
0x1a25e:	add	rsp, 0x18
0x1a262:	xor	eax, eax
0x1a264:	pop	rbx
0x1a265:	pop	rbp
0x1a266:	pop	r12
0x1a268:	pop	r13
0x1a26a:	pop	r14
0x1a26c:	pop	r15
0x1a26e:	ret	
0x1a26f:	nop	
0x1a270:	mov	rdi, r13
0x1a273:	call	0x18d10
0x1a278:	call	0x4860
0x1a27d:	mov	eax, dword ptr [rax]
0x1a27f:	add	rsp, 0x18
0x1a283:	pop	rbx
0x1a284:	pop	rbp
0x1a285:	pop	r12
0x1a287:	pop	r13
0x1a289:	pop	r14
0x1a28b:	pop	r15
0x1a28d:	ret	
0x1a28e:	nop	
0x1a290:	mov	qword ptr [rsp + 8], 0
0x1a299:	jmp	0x1a1d1
0x1a29e:	nop	
0x1a2a0:	endbr64	
0x1a2a4:	sub	rsp, 8
0x1a2a8:	mov	edi, 0x18
0x1a2ad:	call	0x1d670
0x1a2b2:	mov	rdx, qword ptr [rip + 0x11847]
0x1a2b9:	mov	qword ptr [rax], rdx
0x1a2bc:	mov	edx, dword ptr [rip + 0x1183a]
0x1a2c2:	mov	dword ptr [rax + 8], edx
0x1a2c5:	mov	edx, dword ptr [rip + 0x11819]
0x1a2cb:	mov	dword ptr [rax + 0xc], edx
0x1a2ce:	mov	edx, dword ptr [rip + 0x11824]
0x1a2d4:	mov	dword ptr [rax + 0x10], edx
0x1a2d7:	add	rsp, 8
0x1a2db:	ret	
0x1a2dc:	nop	dword ptr [rax]
0x1a2e0:	endbr64	
0x1a2e4:	mov	rax, qword ptr [rdi]
0x1a2e7:	mov	qword ptr [rip + 0x11812], rax
0x1a2ee:	mov	eax, dword ptr [rdi + 8]
0x1a2f1:	mov	dword ptr [rip + 0x11805], eax
0x1a2f7:	mov	eax, dword ptr [rdi + 0xc]
0x1a2fa:	mov	dword ptr [rip + 0x117e4], eax
0x1a300:	mov	eax, dword ptr [rdi + 0x10]
0x1a303:	mov	dword ptr [rip + 0x117ef], eax
0x1a309:	ret	
0x1a30a:	nop	word ptr [rax + rax]
0x1a310:	endbr64	
0x1a314:	mov	eax, dword ptr [rip + 0x117ca]
0x1a31a:	mov	dword ptr [rip + 0x117dc], eax
0x1a320:	ret	
0x1a321:	nop	word ptr cs:[rax + rax]
0x1a32c:	nop	dword ptr [rax]
0x1a330:	endbr64	
0x1a334:	push	r12
0x1a336:	xor	r12d, r12d
0x1a339:	push	rbx
0x1a33a:	sub	rsp, 8
0x1a33e:	mov	rbx, qword ptr [rip + 0x117bb]
0x1a345:	test	rbx, rbx
0x1a348:	jne	0x1a35b
0x1a34a:	jmp	0x1a367
0x1a34c:	nop	dword ptr [rax]
0x1a350:	mov	rdi, qword ptr [rax]
0x1a353:	call	0x49b0
0x1a358:	add	r12d, eax
0x1a35b:	mov	rax, qword ptr [rbx]
0x1a35e:	add	rbx, 8
0x1a362:	test	rax, rax
0x1a365:	jne	0x1a350
0x1a367:	add	rsp, 8
0x1a36b:	mov	eax, r12d
0x1a36e:	pop	rbx
0x1a36f:	pop	r12
0x1a371:	ret	
0x1a372:	nop	word ptr cs:[rax + rax]
0x1a37d:	nop	dword ptr [rax]
0x1a380:	endbr64	
0x1a384:	push	rbp
0x1a385:	mov	rbp, rdi
0x1a388:	push	rbx
0x1a389:	sub	rsp, 8
0x1a38d:	mov	eax, dword ptr [rip + 0x11759]
0x1a393:	test	eax, eax
0x1a395:	je	0x1a3aa
0x1a397:	movsxd	rdx, dword ptr [rip + 0x11746]
0x1a39e:	cmp	edx, dword ptr [rip + 0x11744]
0x1a3a4:	je	0x1a458
0x1a3aa:	mov	eax, dword ptr [rip + 0x11748]
0x1a3b0:	test	eax, eax
0x1a3b2:	je	0x1a428
0x1a3b4:	mov	edx, dword ptr [rip + 0x1172a]
0x1a3ba:	lea	ecx, [rax - 1]
0x1a3bd:	cmp	ecx, edx
0x1a3bf:	je	0x1a4b0
0x1a3c5:	add	edx, 1
0x1a3c8:	mov	dword ptr [rip + 0x11716], edx
0x1a3ce:	mov	edi, 0x10
0x1a3d3:	call	0x1d670
0x1a3d8:	mov	rdi, rbp
0x1a3db:	mov	rbx, rax
0x1a3de:	call	0x49b0
0x1a3e3:	lea	rdi, [rax + 1]
0x1a3e7:	call	0x1d670
0x1a3ec:	mov	rsi, rbp
0x1a3ef:	mov	rdi, rax
0x1a3f2:	call	0x48b0
0x1a3f7:	movsxd	rdx, dword ptr [rip + 0x116e6]
0x1a3fe:	mov	qword ptr [rbx + 8], 0
0x1a406:	mov	qword ptr [rbx], rax
0x1a409:	mov	rax, qword ptr [rip + 0x116f0]
0x1a410:	mov	qword ptr [rax + rdx*8], 0
0x1a418:	mov	qword ptr [rax + rdx*8 - 8], rbx
0x1a41d:	add	rsp, 8
0x1a421:	pop	rbx
0x1a422:	pop	rbp
0x1a423:	ret	
0x1a424:	nop	dword ptr [rax]
0x1a428:	mov	dword ptr [rip + 0x116c6], 0x32
0x1a432:	mov	edi, 0x190
0x1a437:	call	0x1d670
0x1a43c:	mov	dword ptr [rip + 0x1169e], 1
0x1a446:	mov	qword ptr [rip + 0x116b3], rax
0x1a44d:	jmp	0x1a3ce
0x1a452:	nop	word ptr [rax + rax]
0x1a458:	test	edx, edx
0x1a45a:	je	0x1a41d
0x1a45c:	mov	rax, qword ptr [rip + 0x1169d]
0x1a463:	mov	rax, qword ptr [rax]
0x1a466:	test	rax, rax
0x1a469:	je	0x1a489
0x1a46b:	mov	rdi, qword ptr [rax]
0x1a46e:	call	0x18d10
0x1a473:	mov	rax, qword ptr [rip + 0x11686]
0x1a47a:	mov	rdi, qword ptr [rax]
0x1a47d:	call	0x18d10
0x1a482:	movsxd	rdx, dword ptr [rip + 0x1165b]
0x1a489:	test	edx, edx
0x1a48b:	jle	0x1a4a1
0x1a48d:	mov	rdi, qword ptr [rip + 0x1166c]
0x1a494:	shl	rdx, 3
0x1a498:	lea	rsi, [rdi + 8]
0x1a49c:	call	0x4d40
0x1a4a1:	add	dword ptr [rip + 0x10340], 1
0x1a4a8:	jmp	0x1a3ce
0x1a4ad:	nop	dword ptr [rax]
0x1a4b0:	add	eax, 0x32
0x1a4b3:	mov	rdi, qword ptr [rip + 0x11646]
0x1a4ba:	mov	dword ptr [rip + 0x11638], eax
0x1a4c0:	cdqe	
0x1a4c2:	lea	rsi, [rax*8]
0x1a4ca:	call	0x1d690
0x1a4cf:	mov	edx, dword ptr [rip + 0x1160f]
0x1a4d5:	mov	qword ptr [rip + 0x11624], rax
0x1a4dc:	jmp	0x1a3c5
0x1a4e1:	nop	word ptr cs:[rax + rax]
0x1a4ec:	nop	dword ptr [rax]
0x1a4f0:	endbr64	
0x1a4f4:	push	r14
0x1a4f6:	xor	r14d, r14d
0x1a4f9:	push	r13
0x1a4fb:	mov	r13, rdx
0x1a4fe:	push	r12
0x1a500:	mov	r12, rsi
0x1a503:	push	rbp
0x1a504:	push	rbx
0x1a505:	movsxd	rbx, edi
0x1a508:	mov	edi, 0x10
0x1a50d:	call	0x1d670
0x1a512:	cmp	dword ptr [rip + 0x115cc], ebx
0x1a518:	jle	0x1a557
0x1a51a:	mov	rbp, rax
0x1a51d:	mov	rax, qword ptr [rip + 0x115dc]
0x1a524:	mov	rdi, r12
0x1a527:	mov	r14, qword ptr [rax + rbx*8]
0x1a52b:	call	0x49b0
0x1a530:	lea	rdi, [rax + 1]
0x1a534:	call	0x1d670
0x1a539:	mov	rsi, r12
0x1a53c:	mov	rdi, rax
0x1a53f:	call	0x48b0
0x1a544:	mov	qword ptr [rbp + 8], r13
0x1a548:	mov	qword ptr [rbp], rax
0x1a54c:	mov	rax, qword ptr [rip + 0x115ad]
0x1a553:	mov	qword ptr [rax + rbx*8], rbp
0x1a557:	pop	rbx
0x1a558:	mov	rax, r14
0x1a55b:	pop	rbp
0x1a55c:	pop	r12
0x1a55e:	pop	r13
0x1a560:	pop	r14
0x1a562:	ret	
0x1a563:	nop	word ptr cs:[rax + rax]
0x1a56e:	nop	
0x1a570:	endbr64	
0x1a574:	mov	eax, dword ptr [rip + 0x11582]
0x1a57a:	ret	
0x1a57b:	nop	dword ptr [rax + rax]
0x1a580:	endbr64	
0x1a584:	xor	edx, edx
0x1a586:	xor	eax, eax
0x1a588:	jmp	0x19de0
0x1a58d:	nop	dword ptr [rax]
0x1a590:	endbr64	
0x1a594:	mov	edx, 1
0x1a599:	xor	eax, eax
0x1a59b:	jmp	0x19de0
0x1a5a0:	endbr64	
0x1a5a4:	push	r12
0x1a5a6:	push	rbx
0x1a5a7:	sub	rsp, 8
0x1a5ab:	mov	eax, dword ptr [rip + 0x11533]
0x1a5b1:	cmp	eax, edi
0x1a5b3:	jle	0x1a610
0x1a5b5:	test	eax, eax
0x1a5b7:	je	0x1a610
0x1a5b9:	lea	ebx, [rax - 1]
0x1a5bc:	movsxd	rdx, edi
0x1a5bf:	mov	rcx, qword ptr [rip + 0x1153a]
0x1a5c6:	mov	esi, ebx
0x1a5c8:	shl	rdx, 3
0x1a5cc:	sub	esi, edi
0x1a5ce:	cmp	eax, edi
0x1a5d0:	lea	r9, [rcx + rdx]
0x1a5d4:	mov	eax, 8
0x1a5d9:	lea	r8, [rsi*8 + 8]
0x1a5e1:	mov	r12, qword ptr [r9]
0x1a5e4:	mov	rdi, r9
0x1a5e7:	lea	rsi, [rcx + rdx + 8]
0x1a5ec:	cmovle	r8, rax
0x1a5f0:	mov	rdx, r8
0x1a5f3:	call	0x4d40
0x1a5f8:	mov	dword ptr [rip + 0x114e6], ebx
0x1a5fe:	add	rsp, 8
0x1a602:	mov	rax, r12
0x1a605:	pop	rbx
0x1a606:	pop	r12
0x1a608:	ret	
0x1a609:	nop	dword ptr [rax]
0x1a610:	xor	r12d, r12d
0x1a613:	add	rsp, 8
0x1a617:	mov	rax, r12
0x1a61a:	pop	rbx
0x1a61b:	pop	r12
0x1a61d:	ret	
0x1a61e:	nop	
0x1a620:	endbr64	
0x1a624:	push	r12
0x1a626:	mov	eax, dword ptr [rip + 0x114b8]
0x1a62c:	push	rbp
0x1a62d:	xor	ebp, ebp
0x1a62f:	test	edi, edi
0x1a631:	cmovns	ebp, edi
0x1a634:	push	rbx
0x1a635:	cmp	eax, ebp
0x1a637:	jle	0x1a6ce
0x1a63d:	sub	eax, ebp
0x1a63f:	mov	r12d, edi
0x1a642:	test	eax, eax
0x1a644:	jle	0x1a6e8
0x1a64a:	xor	ebx, ebx
0x1a64c:	nop	dword ptr [rax]
0x1a650:	mov	rax, qword ptr [rip + 0x114a9]
0x1a657:	mov	rax, qword ptr [rax + rbx*8]
0x1a65b:	mov	rdi, qword ptr [rax]
0x1a65e:	call	0x18d10
0x1a663:	mov	rax, qword ptr [rip + 0x11496]
0x1a66a:	mov	rdi, qword ptr [rax + rbx*8]
0x1a66e:	call	0x18d10
0x1a673:	mov	eax, dword ptr [rip + 0x1146b]
0x1a679:	lea	edx, [rbx + 1]
0x1a67c:	add	rbx, 1
0x1a680:	sub	eax, ebp
0x1a682:	cmp	eax, ebx
0x1a684:	jg	0x1a650
0x1a686:	mov	dword ptr [rip + 0x1015c], edx
0x1a68c:	mov	rcx, qword ptr [rip + 0x1146d]
0x1a693:	test	r12d, r12d
0x1a696:	jle	0x1a6f0
0x1a698:	cdqe	
0x1a69a:	lea	rsi, [rcx + rax*8]
0x1a69e:	xor	eax, eax
0x1a6a0:	mov	rdx, qword ptr [rsi + rax*8]
0x1a6a4:	mov	qword ptr [rcx + rax*8], rdx
0x1a6a8:	add	rax, 1
0x1a6ac:	cmp	ebp, eax
0x1a6ae:	jg	0x1a6a0
0x1a6b0:	test	ebp, ebp
0x1a6b2:	mov	eax, 1
0x1a6b7:	cmovg	eax, ebp
0x1a6ba:	movsxd	rdx, eax
0x1a6bd:	lea	rcx, [rcx + rdx*8]
0x1a6c1:	mov	qword ptr [rcx], 0
0x1a6c8:	mov	dword ptr [rip + 0x11416], eax
0x1a6ce:	pop	rbx
0x1a6cf:	mov	dword ptr [rip + 0x11413], ebp
0x1a6d5:	mov	dword ptr [rip + 0x1140d], 1
0x1a6df:	pop	rbp
0x1a6e0:	pop	r12
0x1a6e2:	ret	
0x1a6e3:	nop	dword ptr [rax + rax]
0x1a6e8:	xor	edx, edx
0x1a6ea:	jmp	0x1a686
0x1a6ec:	nop	dword ptr [rax]
0x1a6f0:	xor	eax, eax
0x1a6f2:	jmp	0x1a6c1
0x1a6f4:	nop	word ptr cs:[rax + rax]
0x1a6ff:	nop	
0x1a700:	endbr64	
0x1a704:	mov	edx, dword ptr [rip + 0x113e2]
0x1a70a:	mov	eax, dword ptr [rip + 0x113d8]
0x1a710:	test	edx, edx
0x1a712:	je	0x1a720
0x1a714:	mov	dword ptr [rip + 0x113ce], 0
0x1a71e:	neg	eax
0x1a720:	ret	
0x1a721:	nop	word ptr cs:[rax + rax]
0x1a72c:	nop	dword ptr [rax]
0x1a730:	endbr64	
0x1a734:	push	r15
0x1a736:	push	r14
0x1a738:	mov	r14d, esi
0x1a73b:	push	r13
0x1a73d:	push	r12
0x1a73f:	mov	r12d, edx
0x1a742:	push	rbp
0x1a743:	push	rbx
0x1a744:	sub	rsp, 0xa8
0x1a74b:	mov	rax, qword ptr fs:[0x28]
0x1a754:	mov	qword ptr [rsp + 0x98], rax
0x1a75c:	xor	eax, eax
0x1a75e:	call	0x1a080
0x1a763:	xor	esi, esi
0x1a765:	mov	edx, 0x1b6
0x1a76a:	mov	rbp, rax
0x1a76d:	mov	rdi, rax
0x1a770:	xor	eax, eax
0x1a772:	call	0x4d80
0x1a777:	test	eax, eax
0x1a779:	js	0x1a80f
0x1a77f:	mov	rsi, rsp
0x1a782:	mov	edi, eax
0x1a784:	mov	r15d, eax
0x1a787:	call	0x18ef0
0x1a78c:	cmp	eax, -1
0x1a78f:	je	0x1a807
0x1a791:	mov	eax, dword ptr [rsp + 0x30]
0x1a795:	lea	edi, [rax + 1]
0x1a798:	movsxd	rdi, edi
0x1a79b:	call	0x1d670
0x1a7a0:	mov	rdx, qword ptr [rsp + 0x30]
0x1a7a5:	mov	edi, r15d
0x1a7a8:	mov	rsi, rax
0x1a7ab:	mov	r13, rax
0x1a7ae:	call	0x47a0
0x1a7b3:	cmp	qword ptr [rsp + 0x30], rax
0x1a7b8:	je	0x1a819
0x1a7ba:	mov	edi, r15d
0x1a7bd:	call	0x4ab0
0x1a7c2:	mov	rdi, rbp
0x1a7c5:	call	0x18d10
0x1a7ca:	test	r13, r13
0x1a7cd:	je	0x1a7d7
0x1a7cf:	mov	rdi, r13
0x1a7d2:	call	0x18d10
0x1a7d7:	call	0x4860
0x1a7dc:	mov	eax, dword ptr [rax]
0x1a7de:	mov	rdx, qword ptr [rsp + 0x98]
0x1a7e6:	sub	rdx, qword ptr fs:[0x28]
0x1a7ef:	jne	0x1a8f0
0x1a7f5:	add	rsp, 0xa8
0x1a7fc:	pop	rbx
0x1a7fd:	pop	rbp
0x1a7fe:	pop	r12
0x1a800:	pop	r13
0x1a802:	pop	r14
0x1a804:	pop	r15
0x1a806:	ret	
0x1a807:	mov	edi, r15d
0x1a80a:	call	0x4ab0
0x1a80f:	mov	rdi, rbp
0x1a812:	call	0x18d10
0x1a817:	jmp	0x1a7d7
0x1a819:	mov	edi, r15d
0x1a81c:	call	0x4ab0
0x1a821:	mov	rcx, qword ptr [rsp + 0x30]
0x1a826:	test	r12d, r12d
0x1a829:	jns	0x1a82e
0x1a82b:	mov	r12d, ecx
0x1a82e:	xor	ebx, ebx
0x1a830:	xor	esi, esi
0x1a832:	movsxd	rdx, esi
0x1a835:	cmp	ebx, r14d
0x1a838:	jge	0x1a885
0x1a83a:	cmp	rdx, rcx
0x1a83d:	jge	0x1a885
0x1a83f:	lea	eax, [rsi + 1]
0x1a842:	cdqe	
0x1a844:	cmp	rdx, rcx
0x1a847:	jl	0x1a85c
0x1a849:	jmp	0x1a87b
0x1a84b:	nop	dword ptr [rax + rax]
0x1a850:	lea	rdx, [rax + 1]
0x1a854:	cmp	rax, rcx
0x1a857:	je	0x1a878
0x1a859:	mov	rax, rdx
0x1a85c:	cmp	byte ptr [r13 + rax - 1], 0xa
0x1a862:	jne	0x1a850
0x1a864:	add	ebx, 1
0x1a867:	movsxd	rsi, eax
0x1a86a:	cmp	r14d, ebx
0x1a86d:	je	0x1a832
0x1a86f:	lea	rdx, [rax + 1]
0x1a873:	cmp	rax, rcx
0x1a876:	jne	0x1a859
0x1a878:	movsxd	rdx, esi
0x1a87b:	cmp	rcx, rdx
0x1a87e:	jle	0x1a885
0x1a880:	cmp	r14d, ebx
0x1a883:	jg	0x1a83f
0x1a885:	lea	r14, [r13 + rdx]
0x1a88a:	lea	r15d, [rsi + 1]
0x1a88e:	cmp	rcx, rdx
0x1a891:	jg	0x1a8aa
0x1a893:	jmp	0x1a8d4
0x1a895:	nop	dword ptr [rax]
0x1a898:	movsxd	rax, r15d
0x1a89b:	add	r14, 1
0x1a89f:	add	r15d, 1
0x1a8a3:	cmp	rax, qword ptr [rsp + 0x30]
0x1a8a8:	jge	0x1a8d4
0x1a8aa:	cmp	byte ptr [r14], 0xa
0x1a8ae:	jne	0x1a898
0x1a8b0:	lea	rdi, [r13 + rsi]
0x1a8b5:	mov	byte ptr [r14], 0
0x1a8b9:	cmp	byte ptr [rdi], 0
0x1a8bc:	jne	0x1a8cb
0x1a8be:	add	ebx, 1
0x1a8c1:	cmp	r12d, ebx
0x1a8c4:	jle	0x1a8d4
0x1a8c6:	movsxd	rsi, r15d
0x1a8c9:	jmp	0x1a898
0x1a8cb:	xor	eax, eax
0x1a8cd:	call	0x1a380
0x1a8d2:	jmp	0x1a8be
0x1a8d4:	mov	rdi, rbp
0x1a8d7:	call	0x18d10
0x1a8dc:	test	r13, r13
0x1a8df:	je	0x1a8e9
0x1a8e1:	mov	rdi, r13
0x1a8e4:	call	0x18d10
0x1a8e9:	xor	eax, eax
0x1a8eb:	jmp	0x1a7de
0x1a8f0:	call	0x49d0
0x1a8f5:	nop	word ptr cs:[rax + rax]
0x1a900:	endbr64	
0x1a904:	mov	edx, 0xffffffff
0x1a909:	xor	esi, esi
0x1a90b:	xor	eax, eax
0x1a90d:	jmp	0x1a730
0x1a912:	nop	word ptr cs:[rax + rax]
0x1a91d:	nop	dword ptr [rax]
0x1a920:	endbr64	
0x1a924:	push	r14
0x1a926:	push	r13
0x1a928:	push	r12
0x1a92a:	mov	r12d, esi
0x1a92d:	push	rbp
0x1a92e:	push	rbx
0x1a92f:	sub	rsp, 0xa0
0x1a936:	mov	rax, qword ptr fs:[0x28]
0x1a93f:	mov	qword ptr [rsp + 0x98], rax
0x1a947:	xor	eax, eax
0x1a949:	call	0x1a080
0x1a94e:	xor	esi, esi
0x1a950:	mov	edx, 0x1b6
0x1a955:	mov	rbp, rax
0x1a958:	mov	rdi, rax
0x1a95b:	xor	eax, eax
0x1a95d:	call	0x4d80
0x1a962:	cmp	eax, -1
0x1a965:	je	0x1aa58
0x1a96b:	mov	rsi, rsp
0x1a96e:	mov	edi, eax
0x1a970:	mov	r14d, eax
0x1a973:	call	0x18ef0
0x1a978:	cmp	eax, -1
0x1a97b:	je	0x1aa58
0x1a981:	mov	eax, dword ptr [rsp + 0x30]
0x1a985:	lea	edi, [rax + 1]
0x1a988:	movsxd	rdi, edi
0x1a98b:	call	0x1d670
0x1a990:	mov	rdx, qword ptr [rsp + 0x30]
0x1a995:	mov	edi, r14d
0x1a998:	mov	rsi, rax
0x1a99b:	mov	r13, rax
0x1a99e:	call	0x47a0
0x1a9a3:	mov	edi, r14d
0x1a9a6:	mov	rbx, rax
0x1a9a9:	call	0x4ab0
0x1a9ae:	test	ebx, ebx
0x1a9b0:	jle	0x1aa88
0x1a9b6:	lea	eax, [rbx - 1]
0x1a9b9:	cmp	ebx, 1
0x1a9bc:	je	0x1a9f3
0x1a9be:	test	r12d, r12d
0x1a9c1:	je	0x1a9f3
0x1a9c3:	lea	edx, [rbx - 2]
0x1a9c6:	movsxd	rdx, edx
0x1a9c9:	nop	dword ptr [rax]
0x1a9d0:	cmp	byte ptr [r13 + rdx + 1], 0xa
0x1a9d6:	jne	0x1a9dc
0x1a9d8:	sub	r12d, 1
0x1a9dc:	test	r12d, r12d
0x1a9df:	mov	eax, edx
0x1a9e1:	setne	sil
0x1a9e5:	test	edx, edx
0x1a9e7:	setne	cl
0x1a9ea:	sub	rdx, 1
0x1a9ee:	test	sil, cl
0x1a9f1:	jne	0x1a9d0
0x1a9f3:	test	eax, eax
0x1a9f5:	je	0x1aa88
0x1a9fb:	cdqe	
0x1a9fd:	jmp	0x1aa08
0x1a9ff:	nop	
0x1aa00:	sub	rax, 1
0x1aa04:	test	eax, eax
0x1aa06:	je	0x1aa50
0x1aa08:	cmp	byte ptr [r13 + rax], 0xa
0x1aa0e:	mov	ebx, eax
0x1aa10:	jne	0x1aa00
0x1aa12:	mov	edx, 0x1b6
0x1aa17:	mov	esi, 0x201
0x1aa1c:	mov	rdi, rbp
0x1aa1f:	xor	eax, eax
0x1aa21:	call	0x4d80
0x1aa26:	mov	r12d, eax
0x1aa29:	cmp	eax, -1
0x1aa2c:	je	0x1aa50
0x1aa2e:	mov	rdx, qword ptr [rsp + 0x30]
0x1aa33:	lea	esi, [rbx + 1]
0x1aa36:	mov	edi, eax
0x1aa38:	movsxd	rsi, esi
0x1aa3b:	sub	rdx, rsi
0x1aa3e:	add	rsi, r13
0x1aa41:	call	0x4790
0x1aa46:	mov	edi, r12d
0x1aa49:	call	0x4ab0
0x1aa4e:	nop	
0x1aa50:	mov	rdi, r13
0x1aa53:	call	0x18d10
0x1aa58:	mov	rdi, rbp
0x1aa5b:	call	0x18d10
0x1aa60:	mov	rax, qword ptr [rsp + 0x98]
0x1aa68:	sub	rax, qword ptr fs:[0x28]
0x1aa71:	jne	0x1aa8f
0x1aa73:	add	rsp, 0xa0
0x1aa7a:	xor	eax, eax
0x1aa7c:	pop	rbx
0x1aa7d:	pop	rbp
0x1aa7e:	pop	r12
0x1aa80:	pop	r13
0x1aa82:	pop	r14
0x1aa84:	ret	
0x1aa85:	nop	dword ptr [rax]
0x1aa88:	test	r13, r13
0x1aa8b:	je	0x1aa58
0x1aa8d:	jmp	0x1aa50
0x1aa8f:	call	0x49d0
0x1aa94:	nop	word ptr cs:[rax + rax]
0x1aa9f:	nop	
0x1aaa0:	endbr64	
0x1aaa4:	mov	r8d, edi
0x1aaa7:	xor	edx, edx
0x1aaa9:	mov	rdi, rsi
0x1aaac:	xor	eax, eax
0x1aaae:	mov	esi, r8d
0x1aab1:	jmp	0x1a130
0x1aab6:	nop	word ptr cs:[rax + rax]
0x1aac0:	endbr64	
0x1aac4:	mov	esi, dword ptr [rip + 0x1101a]
0x1aaca:	mov	edx, 1
0x1aacf:	xor	eax, eax
0x1aad1:	jmp	0x1a130
0x1aad6:	nop	word ptr cs:[rax + rax]
0x1aae0:	endbr64	
0x1aae4:	movsxd	rdx, dword ptr [rip + 0x11011]
0x1aaeb:	cmp	edx, dword ptr [rip + 0x10ff3]
0x1aaf1:	je	0x1ab08
0x1aaf3:	mov	rax, qword ptr [rip + 0x11006]
0x1aafa:	test	rax, rax
0x1aafd:	je	0x1ab0a
0x1aaff:	mov	rax, qword ptr [rax + rdx*8]
0x1ab03:	ret	
0x1ab04:	nop	dword ptr [rax]
0x1ab08:	xor	eax, eax
0x1ab0a:	ret	
0x1ab0b:	nop	dword ptr [rax + rax]
0x1ab10:	endbr64	
0x1ab14:	mov	eax, dword ptr [rip + 0x10fe2]
0x1ab1a:	xor	r8d, r8d
0x1ab1d:	test	eax, eax
0x1ab1f:	je	0x1ab37
0x1ab21:	sub	eax, 1
0x1ab24:	mov	rdx, qword ptr [rip + 0x10fd5]
0x1ab2b:	mov	dword ptr [rip + 0x10fcb], eax
0x1ab31:	cdqe	
0x1ab33:	mov	r8, qword ptr [rdx + rax*8]
0x1ab37:	mov	rax, r8
0x1ab3a:	ret	
0x1ab3b:	nop	dword ptr [rax + rax]
0x1ab40:	endbr64	
0x1ab44:	mov	eax, dword ptr [rip + 0x10fb2]
0x1ab4a:	cmp	eax, dword ptr [rip + 0x10f94]
0x1ab50:	je	0x1ab70
0x1ab52:	add	eax, 1
0x1ab55:	mov	rdx, qword ptr [rip + 0x10fa4]
0x1ab5c:	mov	dword ptr [rip + 0x10f9a], eax
0x1ab62:	cdqe	
0x1ab64:	mov	rax, qword ptr [rdx + rax*8]
0x1ab68:	ret	
0x1ab69:	nop	dword ptr [rax]
0x1ab70:	xor	eax, eax
0x1ab72:	ret	
0x1ab73:	nop	word ptr cs:[rax + rax]
0x1ab7e:	nop	
0x1ab80:	endbr64	
0x1ab84:	mov	rax, qword ptr [rip + 0x10f75]
0x1ab8b:	ret	
0x1ab8c:	nop	dword ptr [rax]
0x1ab90:	endbr64	
0x1ab94:	sub	edi, dword ptr [rip + 0xfc4e]
0x1ab9a:	cmp	dword ptr [rip + 0x10f44], edi
0x1aba0:	jle	0x1abc0
0x1aba2:	test	edi, edi
0x1aba4:	js	0x1abc0
0x1aba6:	mov	rax, qword ptr [rip + 0x10f53]
0x1abad:	test	rax, rax
0x1abb0:	je	0x1abc2
0x1abb2:	movsxd	rdi, edi
0x1abb5:	mov	rax, qword ptr [rax + rdi*8]
0x1abb9:	ret	
0x1abba:	nop	word ptr [rax + rax]
0x1abc0:	xor	eax, eax
0x1abc2:	ret	
0x1abc3:	nop	word ptr cs:[rax + rax]
0x1abce:	nop	
0x1abd0:	endbr64	
0x1abd4:	cmp	edx, dword ptr [rip + 0x10f0a]
0x1abda:	push	rbx
0x1abdb:	mov	ebx, dword ptr [rip + 0x10f1b]
0x1abe1:	jg	0x1abf7
0x1abe3:	test	edx, edx
0x1abe5:	js	0x1abf7
0x1abe7:	cmp	qword ptr [rip + 0x10f11], 0
0x1abef:	je	0x1abf7
0x1abf1:	mov	dword ptr [rip + 0x10f05], edx
0x1abf7:	xor	edx, edx
0x1abf9:	xor	eax, eax
0x1abfb:	call	0x19de0
0x1ac00:	mov	edx, ebx
0x1ac02:	shr	edx, 0x1f
0x1ac05:	cmp	eax, -1
0x1ac08:	je	0x1ac10
0x1ac0a:	mov	eax, dword ptr [rip + 0x10eec]
0x1ac10:	cmp	ebx, dword ptr [rip + 0x10ece]
0x1ac16:	jg	0x1ac2c
0x1ac18:	test	dl, dl
0x1ac1a:	jne	0x1ac2c
0x1ac1c:	cmp	qword ptr [rip + 0x10edc], 0
0x1ac24:	je	0x1ac2c
0x1ac26:	mov	dword ptr [rip + 0x10ed0], ebx
0x1ac2c:	pop	rbx
0x1ac2d:	ret	
0x1ac2e:	nop	
0x1ac30:	endbr64	
0x1ac34:	cmp	dword ptr [rip + 0x10eaa], edi
0x1ac3a:	jl	0x1ac60
0x1ac3c:	test	edi, edi
0x1ac3e:	js	0x1ac60
0x1ac40:	cmp	qword ptr [rip + 0x10eb8], 0
0x1ac48:	je	0x1ac60
0x1ac4a:	mov	dword ptr [rip + 0x10eac], edi
0x1ac50:	mov	eax, 1
0x1ac55:	ret	
0x1ac56:	nop	word ptr cs:[rax + rax]
0x1ac60:	xor	eax, eax
0x1ac62:	ret	
0x1ac63:	nop	word ptr cs:[rax + rax]
0x1ac6e:	nop	
0x1ac70:	endbr64	
0x1ac74:	movsxd	rax, dword ptr [rsi]
0x1ac77:	movzx	r8d, byte ptr [rip + 0xfb6e]
0x1ac7f:	cmp	byte ptr [rdi + rax], r8b
0x1ac83:	jne	0x1afd0
0x1ac89:	push	r15
0x1ac8b:	lea	ecx, [rax + 1]
0x1ac8e:	mov	r9d, edx
0x1ac91:	mov	rdx, rax
0x1ac94:	push	r14
0x1ac96:	movsxd	r10, ecx
0x1ac99:	push	r13
0x1ac9b:	mov	r13, rsi
0x1ac9e:	lea	rsi, [rdi + r10]
0x1aca2:	push	r12
0x1aca4:	push	rbp
0x1aca5:	push	rbx
0x1aca6:	sub	rsp, 0x18
0x1acaa:	movzx	eax, byte ptr [rsi]
0x1acad:	cmp	r8b, al
0x1acb0:	je	0x1af20
0x1acb6:	mov	r8d, 1
0x1acbc:	cmp	al, 0x2d
0x1acbe:	je	0x1aef8
0x1acc4:	lea	edx, [rax - 0x30]
0x1acc7:	cmp	dl, 9
0x1acca:	jbe	0x1ae68
0x1acd0:	mov	ebp, 1
0x1acd5:	xor	ebx, ebx
0x1acd7:	cmp	al, 0x3f
0x1acd9:	jne	0x1acef
0x1acdb:	add	ecx, 1
0x1acde:	xor	ebp, ebp
0x1ace0:	mov	ebx, 1
0x1ace5:	movsxd	r10, ecx
0x1ace8:	lea	rsi, [rdi + r10]
0x1acec:	movzx	eax, byte ptr [rsi]
0x1acef:	test	al, al
0x1acf1:	je	0x1b042
0x1acf7:	lea	rdx, [rdi + r10 + 1]
0x1acfc:	mov	r12d, ecx
0x1acff:	mov	r8, rsi
0x1ad02:	movabs	r10, 0x400000100000200
0x1ad0c:	jmp	0x1ad48
0x1ad0e:	nop	
0x1ad10:	cmp	al, 0x3a
0x1ad12:	ja	0x1ad1e
0x1ad14:	bt	r10, rax
0x1ad18:	jb	0x1afd8
0x1ad1e:	movsx	edi, al
0x1ad21:	cmp	edi, r9d
0x1ad24:	je	0x1b010
0x1ad2a:	cmp	al, 0xa
0x1ad2c:	je	0x1ae10
0x1ad32:	mov	r8, rdx
0x1ad35:	movzx	eax, byte ptr [rdx]
0x1ad38:	lea	rdx, [rdx + 1]
0x1ad3c:	add	r12d, 1
0x1ad40:	test	al, al
0x1ad42:	je	0x1ae10
0x1ad48:	test	ebx, ebx
0x1ad4a:	je	0x1ad10
0x1ad4c:	cmp	al, 0xa
0x1ad4e:	je	0x1ae10
0x1ad54:	cmp	al, 0x3f
0x1ad56:	jne	0x1ad32
0x1ad58:	mov	r15d, r12d
0x1ad5b:	mov	qword ptr [rsp + 8], r8
0x1ad60:	sub	r15d, ecx
0x1ad63:	mov	qword ptr [rsp], rsi
0x1ad67:	lea	edi, [r15 + 1]
0x1ad6b:	movsxd	r15, r15d
0x1ad6e:	movsxd	rdi, edi
0x1ad71:	call	0x1d670
0x1ad76:	mov	rsi, qword ptr [rsp]
0x1ad7a:	mov	rdx, r15
0x1ad7d:	mov	rdi, rax
0x1ad80:	mov	r14, rax
0x1ad83:	call	0x4880
0x1ad88:	mov	r8, qword ptr [rsp + 8]
0x1ad8d:	xor	eax, eax
0x1ad8f:	mov	byte ptr [r14 + r15], 0
0x1ad94:	cmp	byte ptr [r8], 0x3f
0x1ad98:	sete	al
0x1ad9b:	add	r12d, eax
0x1ad9e:	nop	
0x1ada0:	mov	dword ptr [r13], r12d
0x1ada4:	mov	r12d, ebx
0x1ada7:	and	r12d, 1
0x1adab:	jmp	0x1add3
0x1adad:	nop	dword ptr [rax]
0x1adb0:	movsxd	rax, dword ptr [rip + 0x10d45]
0x1adb7:	je	0x1af78
0x1adbd:	test	r12b, r12b
0x1adc0:	jne	0x1af78
0x1adc6:	test	eax, eax
0x1adc8:	je	0x1ade8
0x1adca:	sub	eax, 1
0x1adcd:	mov	dword ptr [rip + 0x10d29], eax
0x1add3:	xor	eax, eax
0x1add5:	mov	edx, ebp
0x1add7:	mov	esi, 0xffffffff
0x1addc:	mov	rdi, r14
0x1addf:	call	0x19de0
0x1ade4:	test	eax, eax
0x1ade6:	jns	0x1adb0
0x1ade8:	mov	eax, dword ptr [rip + 0x10cf6]
0x1adee:	mov	rdi, r14
0x1adf1:	mov	dword ptr [rip + 0x10d05], eax
0x1adf7:	call	0x18d10
0x1adfc:	add	rsp, 0x18
0x1ae00:	xor	eax, eax
0x1ae02:	pop	rbx
0x1ae03:	pop	rbp
0x1ae04:	pop	r12
0x1ae06:	pop	r13
0x1ae08:	pop	r14
0x1ae0a:	pop	r15
0x1ae0c:	ret	
0x1ae0d:	nop	dword ptr [rax]
0x1ae10:	mov	r15d, r12d
0x1ae13:	sub	r15d, ecx
0x1ae16:	lea	edi, [r15 + 1]
0x1ae1a:	movsxd	r15, r15d
0x1ae1d:	movsxd	rdi, edi
0x1ae20:	mov	qword ptr [rsp + 8], r8
0x1ae25:	mov	qword ptr [rsp], rsi
0x1ae29:	call	0x1d670
0x1ae2e:	mov	rsi, qword ptr [rsp]
0x1ae32:	mov	rdx, r15
0x1ae35:	mov	rdi, rax
0x1ae38:	mov	r14, rax
0x1ae3b:	call	0x4880
0x1ae40:	test	ebx, ebx
0x1ae42:	mov	byte ptr [r14 + r15], 0
0x1ae47:	mov	r8, qword ptr [rsp + 8]
0x1ae4c:	je	0x1ada0
0x1ae52:	xor	eax, eax
0x1ae54:	cmp	byte ptr [r8], 0x3f
0x1ae58:	sete	al
0x1ae5b:	add	r12d, eax
0x1ae5e:	jmp	0x1ada0
0x1ae63:	nop	dword ptr [rax + rax]
0x1ae68:	lea	edx, [rcx + 1]
0x1ae6b:	xor	ecx, ecx
0x1ae6d:	movsxd	rdx, edx
0x1ae70:	sub	eax, 0x30
0x1ae73:	lea	ecx, [rcx + rcx*4]
0x1ae76:	mov	r9d, edx
0x1ae79:	movsx	eax, al
0x1ae7c:	lea	ecx, [rax + rcx*2]
0x1ae7f:	movzx	eax, byte ptr [rdi + rdx]
0x1ae83:	add	rdx, 1
0x1ae87:	lea	esi, [rax - 0x30]
0x1ae8a:	cmp	sil, 9
0x1ae8e:	jbe	0x1ae70
0x1ae90:	mov	dword ptr [r13], r9d
0x1ae94:	mov	eax, dword ptr [rip + 0x10c4a]
0x1ae9a:	mov	edx, dword ptr [rip + 0xf948]
0x1aea0:	cmp	r8d, -1
0x1aea4:	jne	0x1aead
0x1aea6:	lea	esi, [rax + rdx]
0x1aea9:	sub	esi, ecx
0x1aeab:	mov	ecx, esi
0x1aead:	sub	ecx, edx
0x1aeaf:	cmp	ecx, eax
0x1aeb1:	jge	0x1adfc
0x1aeb7:	test	ecx, ecx
0x1aeb9:	js	0x1adfc
0x1aebf:	mov	rax, qword ptr [rip + 0x10c3a]
0x1aec6:	test	rax, rax
0x1aec9:	je	0x1adfc
0x1aecf:	movsxd	rcx, ecx
0x1aed2:	mov	rax, qword ptr [rax + rcx*8]
0x1aed6:	test	rax, rax
0x1aed9:	je	0x1adfc
0x1aedf:	mov	rax, qword ptr [rax]
0x1aee2:	add	rsp, 0x18
0x1aee6:	pop	rbx
0x1aee7:	pop	rbp
0x1aee8:	pop	r12
0x1aeea:	pop	r13
0x1aeec:	pop	r14
0x1aeee:	pop	r15
0x1aef0:	ret	
0x1aef1:	nop	dword ptr [rax]
0x1aef8:	lea	ecx, [rdx + 2]
0x1aefb:	mov	r8d, 0xffffffff
0x1af01:	movsxd	r10, ecx
0x1af04:	lea	rsi, [rdi + r10]
0x1af08:	movzx	eax, byte ptr [rsi]
0x1af0b:	lea	edx, [rax - 0x30]
0x1af0e:	cmp	dl, 9
0x1af11:	ja	0x1acd0
0x1af17:	jmp	0x1ae68
0x1af1c:	nop	dword ptr [rax]
0x1af20:	mov	ecx, dword ptr [rip + 0x10bbe]
0x1af26:	mov	eax, dword ptr [rip + 0xf8bc]
0x1af2c:	add	edx, 2
0x1af2f:	mov	dword ptr [r13], edx
0x1af33:	lea	eax, [rcx + rax - 1]
0x1af37:	sub	eax, dword ptr [rip + 0xf8ab]
0x1af3d:	cmp	eax, dword ptr [rip + 0x10ba1]
0x1af43:	jge	0x1adfc
0x1af49:	test	eax, eax
0x1af4b:	js	0x1adfc
0x1af51:	mov	rdx, qword ptr [rip + 0x10ba8]
0x1af58:	test	rdx, rdx
0x1af5b:	je	0x1adfc
0x1af61:	cdqe	
0x1af63:	mov	rax, qword ptr [rdx + rax*8]
0x1af67:	test	rax, rax
0x1af6a:	jne	0x1aedf
0x1af70:	jmp	0x1adfc
0x1af75:	nop	dword ptr [rax]
0x1af78:	mov	edx, dword ptr [rip + 0x10b66]
0x1af7e:	cmp	edx, eax
0x1af80:	je	0x1b03b
0x1af86:	mov	rbp, qword ptr [rip + 0x10b73]
0x1af8d:	test	rbp, rbp
0x1af90:	je	0x1af97
0x1af92:	mov	rbp, qword ptr [rbp + rax*8]
0x1af97:	mov	dword ptr [rip + 0x10b5f], edx
0x1af9d:	test	ebx, ebx
0x1af9f:	je	0x1b02e
0x1afa5:	mov	rdi, qword ptr [rip + 0x10b44]
0x1afac:	test	rdi, rdi
0x1afaf:	je	0x1afb6
0x1afb1:	call	0x18d10
0x1afb6:	mov	qword ptr [rip + 0x10b33], r14
0x1afbd:	mov	rax, qword ptr [rbp]
0x1afc1:	add	rsp, 0x18
0x1afc5:	pop	rbx
0x1afc6:	pop	rbp
0x1afc7:	pop	r12
0x1afc9:	pop	r13
0x1afcb:	pop	r14
0x1afcd:	pop	r15
0x1afcf:	ret	
0x1afd0:	xor	eax, eax
0x1afd2:	ret	
0x1afd3:	nop	dword ptr [rax + rax]
0x1afd8:	mov	eax, r12d
0x1afdb:	mov	qword ptr [rsp], rsi
0x1afdf:	sub	eax, ecx
0x1afe1:	movsxd	r15, eax
0x1afe4:	add	eax, 1
0x1afe7:	movsxd	rdi, eax
0x1afea:	call	0x1d670
0x1afef:	mov	r14, rax
0x1aff2:	mov	rsi, qword ptr [rsp]
0x1aff6:	mov	rdx, r15
0x1aff9:	mov	rdi, r14
0x1affc:	call	0x4880
0x1b001:	mov	byte ptr [r14 + r15], 0
0x1b006:	jmp	0x1ada0
0x1b00b:	nop	dword ptr [rax + rax]
0x1b010:	mov	r15d, r12d
0x1b013:	mov	qword ptr [rsp], rsi
0x1b017:	sub	r15d, ecx
0x1b01a:	lea	edi, [r15 + 1]
0x1b01e:	movsxd	r15, r15d
0x1b021:	movsxd	rdi, edi
0x1b024:	call	0x1d670
0x1b029:	mov	r14, rax
0x1b02c:	jmp	0x1aff2
0x1b02e:	mov	rdi, r14
0x1b031:	call	0x18d10
0x1b036:	jmp	0x1afbd
0x1b03b:	xor	ebp, ebp
0x1b03d:	jmp	0x1af97
0x1b042:	mov	r12d, ecx
0x1b045:	mov	r8, rsi
0x1b048:	xor	r15d, r15d
0x1b04b:	mov	edi, 1
0x1b050:	jmp	0x1ae20
0x1b055:	nop	word ptr cs:[rax + rax]
0x1b060:	endbr64	
0x1b064:	push	r15
0x1b066:	push	r14
0x1b068:	push	r13
0x1b06a:	push	r12
0x1b06c:	push	rbp
0x1b06d:	push	rbx
0x1b06e:	sub	rsp, 0x28
0x1b072:	movzx	r14d, byte ptr [rdi]
0x1b076:	test	r14b, r14b
0x1b079:	je	0x1b30d
0x1b07f:	mov	qword ptr [rsp], 0
0x1b087:	mov	r12, rdi
0x1b08a:	mov	r13, rdi
0x1b08d:	xor	ebx, ebx
0x1b08f:	mov	dword ptr [rsp + 8], 0
0x1b097:	xor	ebp, ebp
0x1b099:	mov	dword ptr [rsp + 0xc], 0
0x1b0a1:	jmp	0x1b0c0
0x1b0a3:	nop	dword ptr [rax + rax]
0x1b0a8:	add	ebx, 1
0x1b0ab:	movsxd	rbp, ebx
0x1b0ae:	lea	r13, [r12 + rbp]
0x1b0b2:	movzx	r14d, byte ptr [r13]
0x1b0b7:	test	r14b, r14b
0x1b0ba:	je	0x1b315
0x1b0c0:	cmp	r14b, 0x20
0x1b0c4:	je	0x1b0a8
0x1b0c6:	cmp	r14b, 9
0x1b0ca:	je	0x1b0a8
0x1b0cc:	cmp	byte ptr [rip + 0x10a0d], r14b
0x1b0d3:	je	0x1b315
0x1b0d9:	movsx	r15d, r14b
0x1b0dd:	lea	rdi, [rip + 0x7379]
0x1b0e4:	mov	esi, r15d
0x1b0e7:	call	0x4a00
0x1b0ec:	test	rax, rax
0x1b0ef:	je	0x1b190
0x1b0f5:	add	ebx, 1
0x1b0f8:	mov	r14d, 1
0x1b0fe:	mov	r9d, 2
0x1b104:	movsxd	rbp, ebx
0x1b107:	lea	rcx, [r12 + rbp]
0x1b10b:	mov	eax, dword ptr [rsp + 8]
0x1b10f:	add	eax, 2
0x1b112:	cmp	eax, dword ptr [rsp + 0xc]
0x1b116:	jge	0x1b2a0
0x1b11c:	movsxd	r8, dword ptr [rsp + 8]
0x1b121:	mov	rdx, qword ptr [rsp]
0x1b125:	mov	rdi, r9
0x1b128:	mov	qword ptr [rsp + 0x18], rcx
0x1b12d:	shl	r8, 3
0x1b131:	lea	r15, [rdx + r8]
0x1b135:	mov	qword ptr [rsp + 0x10], r8
0x1b13a:	call	0x1d670
0x1b13f:	mov	rdx, r14
0x1b142:	mov	rsi, r13
0x1b145:	mov	qword ptr [r15], rax
0x1b148:	mov	rdi, rax
0x1b14b:	call	0x4880
0x1b150:	mov	rax, qword ptr [r15]
0x1b153:	mov	r8, qword ptr [rsp + 0x10]
0x1b158:	mov	rcx, qword ptr [rsp + 0x18]
0x1b15d:	add	dword ptr [rsp + 8], 1
0x1b162:	mov	byte ptr [rax + r14], 0
0x1b167:	mov	rax, qword ptr [rsp]
0x1b16b:	mov	qword ptr [rax + r8 + 8], 0
0x1b174:	movzx	r14d, byte ptr [rcx]
0x1b178:	test	r14b, r14b
0x1b17b:	je	0x1b315
0x1b181:	mov	r13, rcx
0x1b184:	jmp	0x1b0c0
0x1b189:	nop	dword ptr [rax]
0x1b190:	mov	esi, r15d
0x1b193:	lea	rdi, [rip + 0x72c7]
0x1b19a:	call	0x4a00
0x1b19f:	test	rax, rax
0x1b1a2:	je	0x1b369
0x1b1a8:	movsx	edx, byte ptr [r12 + rbp + 1]
0x1b1ae:	cmp	dl, r14b
0x1b1b1:	je	0x1b2d8
0x1b1b7:	cmp	edx, 0x26
0x1b1ba:	je	0x1b340
0x1b1c0:	cmp	edx, 0x3e
0x1b1c3:	jne	0x1b3ac
0x1b1c9:	cmp	r14b, 0x26
0x1b1cd:	je	0x1b34e
0x1b1d3:	cmp	r14b, 0x24
0x1b1d7:	jne	0x1b0f5
0x1b1dd:	mov	edx, ebx
0x1b1df:	xor	r15d, r15d
0x1b1e2:	movsxd	r8, edx
0x1b1e5:	lea	rcx, [r12 + r8]
0x1b1e9:	mov	rbp, r8
0x1b1ec:	movzx	eax, byte ptr [rcx]
0x1b1ef:	test	al, al
0x1b1f1:	je	0x1b404
0x1b1f7:	mov	qword ptr [rsp + 0x10], r13
0x1b1fc:	lea	r14, [rip + 0x7265]
0x1b203:	mov	r13, r8
0x1b206:	mov	dword ptr [rsp + 0x18], ebx
0x1b20a:	mov	rbx, r12
0x1b20d:	mov	r12d, edx
0x1b210:	jmp	0x1b265
0x1b212:	nop	word ptr [rax + rax]
0x1b218:	movsx	ebp, al
0x1b21b:	test	r15d, r15d
0x1b21e:	jne	0x1b290
0x1b220:	mov	esi, ebp
0x1b222:	lea	rdi, [rip + 0x7243]
0x1b229:	call	0x4a00
0x1b22e:	test	rax, rax
0x1b231:	jne	0x1b3c0
0x1b237:	mov	esi, ebp
0x1b239:	mov	rdi, r14
0x1b23c:	call	0x4a00
0x1b241:	lea	esi, [r12 + 1]
0x1b246:	test	rax, rax
0x1b249:	cmovne	r15d, ebp
0x1b24d:	movsxd	rbp, esi
0x1b250:	mov	r12d, esi
0x1b253:	lea	rcx, [rbx + rbp]
0x1b257:	mov	r13, rbp
0x1b25a:	movzx	eax, byte ptr [rcx]
0x1b25d:	test	al, al
0x1b25f:	je	0x1b389
0x1b265:	cmp	al, 0x5c
0x1b267:	jne	0x1b218
0x1b269:	cmp	byte ptr [rbx + r13 + 1], 0xa
0x1b26f:	lea	esi, [r12 + 1]
0x1b274:	je	0x1b330
0x1b27a:	xor	eax, eax
0x1b27c:	cmp	r15d, 0x27
0x1b280:	setne	al
0x1b283:	add	esi, eax
0x1b285:	jmp	0x1b24d
0x1b287:	nop	word ptr [rax + rax]
0x1b290:	xor	eax, eax
0x1b292:	cmp	r15d, ebp
0x1b295:	lea	esi, [r12 + 1]
0x1b29a:	cmove	r15d, eax
0x1b29e:	jmp	0x1b24d
0x1b2a0:	add	dword ptr [rsp + 0xc], 0xa
0x1b2a5:	movsxd	rsi, dword ptr [rsp + 0xc]
0x1b2aa:	mov	rdi, qword ptr [rsp]
0x1b2ae:	mov	qword ptr [rsp + 0x18], rcx
0x1b2b3:	shl	rsi, 3
0x1b2b7:	mov	qword ptr [rsp + 0x10], r9
0x1b2bc:	call	0x1d690
0x1b2c1:	mov	rcx, qword ptr [rsp + 0x18]
0x1b2c6:	mov	r9, qword ptr [rsp + 0x10]
0x1b2cb:	mov	qword ptr [rsp], rax
0x1b2cf:	jmp	0x1b11c
0x1b2d4:	nop	dword ptr [rax]
0x1b2d8:	cmp	edx, 0x24
0x1b2db:	je	0x1b1d3
0x1b2e1:	mov	eax, ebx
0x1b2e3:	cmp	edx, 0x3c
0x1b2e6:	je	0x1b3f0
0x1b2ec:	add	eax, 2
0x1b2ef:	mov	r14d, eax
0x1b2f2:	movsxd	rbp, eax
0x1b2f5:	sub	r14d, ebx
0x1b2f8:	lea	rcx, [r12 + rbp]
0x1b2fc:	mov	ebx, eax
0x1b2fe:	lea	r9d, [r14 + 1]
0x1b302:	movsxd	r14, r14d
0x1b305:	movsxd	r9, r9d
0x1b308:	jmp	0x1b10b
0x1b30d:	mov	qword ptr [rsp], 0
0x1b315:	mov	rax, qword ptr [rsp]
0x1b319:	add	rsp, 0x28
0x1b31d:	pop	rbx
0x1b31e:	pop	rbp
0x1b31f:	pop	r12
0x1b321:	pop	r13
0x1b323:	pop	r14
0x1b325:	pop	r15
0x1b327:	ret	
0x1b328:	nop	dword ptr [rax + rax]
0x1b330:	lea	esi, [r12 + 2]
0x1b335:	jmp	0x1b24d
0x1b33a:	nop	word ptr [rax + rax]
0x1b340:	mov	eax, r14d
0x1b343:	and	eax, 0xfffffffd
0x1b346:	cmp	al, 0x3c
0x1b348:	jne	0x1b1d3
0x1b34e:	add	ebx, 2
0x1b351:	mov	r14d, 2
0x1b357:	mov	r9d, 3
0x1b35d:	movsxd	rbp, ebx
0x1b360:	lea	rcx, [r12 + rbp]
0x1b364:	jmp	0x1b10b
0x1b369:	mov	esi, r15d
0x1b36c:	lea	rdi, [rip + 0x70f5]
0x1b373:	call	0x4a00
0x1b378:	test	rax, rax
0x1b37b:	je	0x1b1dd
0x1b381:	lea	edx, [rbx + 1]
0x1b384:	jmp	0x1b1e2
0x1b389:	mov	r12, rbx
0x1b38c:	mov	ebx, dword ptr [rsp + 0x18]
0x1b390:	mov	r14d, esi
0x1b393:	mov	r13, qword ptr [rsp + 0x10]
0x1b398:	sub	r14d, ebx
0x1b39b:	mov	ebx, esi
0x1b39d:	lea	r9d, [r14 + 1]
0x1b3a1:	movsxd	r14, r14d
0x1b3a4:	movsxd	r9, r9d
0x1b3a7:	jmp	0x1b10b
0x1b3ac:	cmp	r14b, 0x24
0x1b3b0:	jne	0x1b0f5
0x1b3b6:	cmp	edx, 0x28
0x1b3b9:	je	0x1b34e
0x1b3bb:	jmp	0x1b1d3
0x1b3c0:	mov	edx, r12d
0x1b3c3:	mov	r12, rbx
0x1b3c6:	mov	ebx, dword ptr [rsp + 0x18]
0x1b3ca:	mov	r8, r13
0x1b3cd:	mov	r14d, edx
0x1b3d0:	mov	r13, qword ptr [rsp + 0x10]
0x1b3d5:	mov	rbp, r8
0x1b3d8:	lea	rcx, [r12 + r8]
0x1b3dc:	sub	r14d, ebx
0x1b3df:	mov	ebx, edx
0x1b3e1:	lea	r9d, [r14 + 1]
0x1b3e5:	movsxd	r14, r14d
0x1b3e8:	movsxd	r9, r9d
0x1b3eb:	jmp	0x1b10b
0x1b3f0:	cmp	byte ptr [r12 + rbp + 2], 0x2d
0x1b3f6:	jne	0x1b2ec
0x1b3fc:	lea	eax, [rbx + 1]
0x1b3ff:	jmp	0x1b2ec
0x1b404:	mov	r14d, edx
0x1b407:	sub	r14d, ebx
0x1b40a:	mov	ebx, edx
0x1b40c:	lea	r9d, [r14 + 1]
0x1b410:	movsxd	r14, r14d
0x1b413:	movsxd	r9, r9d
0x1b416:	jmp	0x1b10b
0x1b41b:	nop	dword ptr [rax + rax]
0x1b420:	endbr64	
0x1b424:	push	r15
0x1b426:	xor	eax, eax
0x1b428:	push	r14
0x1b42a:	push	r13
0x1b42c:	push	r12
0x1b42e:	mov	r12d, esi
0x1b431:	push	rbp
0x1b432:	push	rbx
0x1b433:	mov	ebx, edi
0x1b435:	mov	rdi, rdx
0x1b438:	sub	rsp, 8
0x1b43c:	call	0x1b060
0x1b441:	test	rax, rax
0x1b444:	je	0x1b598
0x1b44a:	cmp	qword ptr [rax], 0
0x1b44e:	mov	rbp, rax
0x1b451:	je	0x1b590
0x1b457:	mov	eax, 1
0x1b45c:	nop	dword ptr [rax]
0x1b460:	mov	r14d, eax
0x1b463:	add	rax, 1
0x1b467:	cmp	qword ptr [rbp + rax*8 - 8], 0
0x1b46d:	jne	0x1b460
0x1b46f:	lea	eax, [r14 + r12 - 1]
0x1b474:	test	r12d, r12d
0x1b477:	cmovs	r12d, eax
0x1b47b:	lea	eax, [r14 + rbx - 1]
0x1b480:	test	ebx, ebx
0x1b482:	cmovs	ebx, eax
0x1b485:	lea	eax, [r12 + 1]
0x1b48a:	cmp	r12d, 0x24
0x1b48e:	jne	0x1b497
0x1b490:	lea	r12d, [r14 - 1]
0x1b494:	mov	eax, r14d
0x1b497:	lea	edx, [r14 - 1]
0x1b49b:	cmp	ebx, 0x24
0x1b49e:	cmove	ebx, edx
0x1b4a1:	mov	edx, eax
0x1b4a3:	cmp	ebx, eax
0x1b4a5:	cmovge	edx, ebx
0x1b4a8:	xor	r13d, r13d
0x1b4ab:	cmp	edx, r14d
0x1b4ae:	jg	0x1b547
0x1b4b4:	mov	ecx, ebx
0x1b4b6:	or	ecx, eax
0x1b4b8:	js	0x1b547
0x1b4be:	cmp	ebx, eax
0x1b4c0:	jge	0x1b59d
0x1b4c6:	movsxd	rbx, ebx
0x1b4c9:	xor	r15d, r15d
0x1b4cc:	mov	r13, rbx
0x1b4cf:	nop	
0x1b4d0:	mov	rdi, qword ptr [rbp + r13*8]
0x1b4d5:	add	r13, 1
0x1b4d9:	call	0x49b0
0x1b4de:	lea	r15d, [r15 + rax + 1]
0x1b4e3:	lea	eax, [r13 - 1]
0x1b4e7:	cmp	r12d, eax
0x1b4ea:	jg	0x1b4d0
0x1b4ec:	lea	edi, [r15 + 1]
0x1b4f0:	xor	r15d, r15d
0x1b4f3:	movsxd	rdi, edi
0x1b4f6:	call	0x1d670
0x1b4fb:	mov	r13, rax
0x1b4fe:	nop	
0x1b500:	mov	rsi, qword ptr [rbp + rbx*8]
0x1b505:	movsxd	rdi, r15d
0x1b508:	add	rdi, r13
0x1b50b:	call	0x48b0
0x1b510:	mov	rdi, qword ptr [rbp + rbx*8]
0x1b515:	call	0x49b0
0x1b51a:	add	r15d, eax
0x1b51d:	cmp	r12d, ebx
0x1b520:	jle	0x1b53b
0x1b522:	lea	eax, [r15 + 1]
0x1b526:	movsxd	r15, r15d
0x1b529:	movsxd	rdx, eax
0x1b52c:	mov	byte ptr [r13 + r15], 0x20
0x1b532:	mov	r15d, eax
0x1b535:	mov	byte ptr [r13 + rdx], 0
0x1b53b:	add	rbx, 1
0x1b53f:	lea	eax, [rbx - 1]
0x1b542:	cmp	r12d, eax
0x1b545:	jg	0x1b500
0x1b547:	test	r14d, r14d
0x1b54a:	je	0x1b571
0x1b54c:	lea	eax, [r14 - 1]
0x1b550:	mov	rbx, rbp
0x1b553:	lea	r12, [rbp + rax*8 + 8]
0x1b558:	nop	dword ptr [rax + rax]
0x1b560:	mov	rdi, qword ptr [rbx]
0x1b563:	add	rbx, 8
0x1b567:	call	0x18d10
0x1b56c:	cmp	r12, rbx
0x1b56f:	jne	0x1b560
0x1b571:	mov	rdi, rbp
0x1b574:	call	0x18d10
0x1b579:	add	rsp, 8
0x1b57d:	mov	rax, r13
0x1b580:	pop	rbx
0x1b581:	pop	rbp
0x1b582:	pop	r12
0x1b584:	pop	r13
0x1b586:	pop	r14
0x1b588:	pop	r15
0x1b58a:	ret	
0x1b58b:	nop	dword ptr [rax + rax]
0x1b590:	xor	r14d, r14d
0x1b593:	jmp	0x1b46f
0x1b598:	xor	r13d, r13d
0x1b59b:	jmp	0x1b579
0x1b59d:	mov	edi, 1
0x1b5a2:	call	0x1d670
0x1b5a7:	mov	r13, rax
0x1b5aa:	jmp	0x1b547
0x1b5ac:	nop	dword ptr [rax]
0x1b5b0:	endbr64	
0x1b5b4:	push	r15
0x1b5b6:	push	r14
0x1b5b8:	push	r13
0x1b5ba:	push	r12
0x1b5bc:	push	rbp
0x1b5bd:	push	rbx
0x1b5be:	mov	rbx, rdi
0x1b5c1:	sub	rsp, 0x88
0x1b5c8:	mov	qword ptr [rsp + 0x20], rdi
0x1b5cd:	mov	qword ptr [rsp + 0x30], rsi
0x1b5d2:	mov	rax, qword ptr fs:[0x28]
0x1b5db:	mov	qword ptr [rsp + 0x78], rax
0x1b5e0:	xor	eax, eax
0x1b5e2:	cmp	byte ptr [rip + 0xf204], 0
0x1b5e9:	je	0x1b656
0x1b5eb:	mov	edi, 0x100
0x1b5f0:	call	0x1d670
0x1b5f5:	mov	rbx, qword ptr [rsp + 0x20]
0x1b5fa:	mov	byte ptr [rax], 0
0x1b5fd:	mov	r15, rax
0x1b600:	mov	rdi, rbx
0x1b603:	call	0x49b0
0x1b608:	mov	dword ptr [rsp + 0xc], eax
0x1b60c:	mov	r12, rax
0x1b60f:	movzx	eax, byte ptr [rbx]
0x1b612:	cmp	al, byte ptr [rip + 0xf1d4]
0x1b618:	je	0x1c1e0
0x1b61e:	movzx	ebp, byte ptr [rip + 0xf1c8]
0x1b625:	mov	r13, qword ptr [rip + 0xf1c4]
0x1b62c:	lea	rbx, [rbx + 1]
0x1b630:	test	al, al
0x1b632:	jne	0x1b6c7
0x1b638:	nop	dword ptr [rax + rax]
0x1b640:	test	bpl, bpl
0x1b643:	je	0x1b6d8
0x1b649:	mov	rdi, r15
0x1b64c:	call	0x18d10
0x1b651:	mov	rbx, qword ptr [rsp + 0x20]
0x1b656:	mov	rdi, rbx
0x1b659:	call	0x49b0
0x1b65e:	lea	rdi, [rax + 1]
0x1b662:	call	0x1d670
0x1b667:	mov	rsi, rbx
0x1b66a:	mov	rdi, rax
0x1b66d:	call	0x48b0
0x1b672:	mov	rcx, qword ptr [rsp + 0x30]
0x1b677:	mov	qword ptr [rcx], rax
0x1b67a:	xor	eax, eax
0x1b67c:	mov	rdx, qword ptr [rsp + 0x78]
0x1b681:	sub	rdx, qword ptr fs:[0x28]
0x1b68a:	jne	0x1c487
0x1b690:	add	rsp, 0x88
0x1b697:	pop	rbx
0x1b698:	pop	rbp
0x1b699:	pop	r12
0x1b69b:	pop	r13
0x1b69d:	pop	r14
0x1b69f:	pop	r15
0x1b6a1:	ret	
0x1b6a2:	nop	word ptr [rax + rax]
0x1b6a8:	mov	rdi, r13
0x1b6ab:	call	0x4a00
0x1b6b0:	test	rax, rax
0x1b6b3:	je	0x1b6d8
0x1b6b5:	nop	dword ptr [rax]
0x1b6b8:	movzx	eax, byte ptr [rbx]
0x1b6bb:	add	rbx, 1
0x1b6bf:	test	al, al
0x1b6c1:	je	0x1b640
0x1b6c7:	movsx	esi, byte ptr [rbx]
0x1b6ca:	cmp	al, bpl
0x1b6cd:	jne	0x1b6b8
0x1b6cf:	test	esi, esi
0x1b6d1:	je	0x1b6b8
0x1b6d3:	jmp	0x1b6a8
0x1b6d5:	nop	dword ptr [rax]
0x1b6d8:	mov	rbp, qword ptr [rsp + 0x20]
0x1b6dd:	test	r12d, r12d
0x1b6e0:	jle	0x1c40a
0x1b6e6:	mov	dword ptr [rsp + 4], 0x100
0x1b6ee:	xor	r13d, r13d
0x1b6f1:	xor	ebx, ebx
0x1b6f3:	mov	dword ptr [rsp + 0x28], 0
0x1b6fb:	mov	dword ptr [rsp + 0x3c], 0
0x1b703:	mov	dword ptr [rsp + 8], 0
0x1b70b:	jmp	0x1b758
0x1b70d:	nop	dword ptr [rax]
0x1b710:	cmp	r12b, byte ptr [rip + 0xf0d6]
0x1b717:	je	0x1b7d0
0x1b71d:	cmp	r12b, 0xfd
0x1b721:	je	0x1b7d0
0x1b727:	cmp	r12b, 0x5c
0x1b72b:	je	0x1bde0
0x1b731:	cmp	ebx, dword ptr [rsp + 4]
0x1b735:	jge	0x1bfe0
0x1b73b:	lea	eax, [rbx + 1]
0x1b73e:	mov	byte ptr [r15 + rbx], r12b
0x1b742:	movsxd	rdx, eax
0x1b745:	movsxd	rbx, eax
0x1b748:	mov	byte ptr [r15 + rdx], 0
0x1b74d:	add	r13d, 1
0x1b751:	cmp	r13d, dword ptr [rsp + 0xc]
0x1b756:	jge	0x1b79d
0x1b758:	movsxd	r14, r13d
0x1b75b:	mov	r10d, dword ptr [rsp + 8]
0x1b760:	lea	rdx, [rbp + r14]
0x1b765:	movzx	r12d, byte ptr [rdx]
0x1b769:	test	r10d, r10d
0x1b76c:	je	0x1b710
0x1b76e:	cmp	ebx, dword ptr [rsp + 4]
0x1b772:	jge	0x1be10
0x1b778:	lea	eax, [rbx + 1]
0x1b77b:	mov	byte ptr [r15 + rbx], r12b
0x1b77f:	add	r13d, 1
0x1b783:	movsxd	rdx, eax
0x1b786:	mov	dword ptr [rsp + 8], 0
0x1b78e:	movsxd	rbx, eax
0x1b791:	mov	byte ptr [r15 + rdx], 0
0x1b796:	cmp	r13d, dword ptr [rsp + 0xc]
0x1b79b:	jl	0x1b758
0x1b79d:	mov	rax, qword ptr [rsp + 0x30]
0x1b7a2:	mov	qword ptr [rax], r15
0x1b7a5:	cmp	qword ptr [rsp + 0x20], rbp
0x1b7aa:	je	0x1b7b4
0x1b7ac:	mov	rdi, rbp
0x1b7af:	call	0x18d10
0x1b7b4:	mov	ecx, dword ptr [rsp + 0x28]
0x1b7b8:	test	ecx, ecx
0x1b7ba:	jne	0x1c35b
0x1b7c0:	mov	edx, dword ptr [rsp + 0x3c]
0x1b7c4:	xor	eax, eax
0x1b7c6:	test	edx, edx
0x1b7c8:	setne	al
0x1b7cb:	jmp	0x1b67c
0x1b7d0:	lea	rcx, [rbp + r14 + 1]
0x1b7d5:	mov	qword ptr [rsp + 0x10], rdx
0x1b7da:	movsx	esi, byte ptr [rcx]
0x1b7dd:	test	esi, esi
0x1b7df:	je	0x1b830
0x1b7e1:	mov	rdi, qword ptr [rip + 0xf008]
0x1b7e8:	mov	qword ptr [rsp + 0x18], rcx
0x1b7ed:	call	0x4a00
0x1b7f2:	mov	rcx, qword ptr [rsp + 0x18]
0x1b7f7:	test	rax, rax
0x1b7fa:	je	0x1b830
0x1b7fc:	cmp	ebx, dword ptr [rsp + 4]
0x1b800:	jl	0x1b73b
0x1b806:	add	dword ptr [rsp + 4], 0x40
0x1b80b:	movsxd	rsi, dword ptr [rsp + 4]
0x1b810:	mov	rdi, r15
0x1b813:	call	0x1d690
0x1b818:	mov	rdx, qword ptr [rsp + 0x10]
0x1b81d:	mov	r15, rax
0x1b820:	movzx	r12d, byte ptr [rdx]
0x1b824:	jmp	0x1b73b
0x1b829:	nop	dword ptr [rax]
0x1b830:	mov	edi, 0x80
0x1b835:	mov	qword ptr [rsp + 0x18], rcx
0x1b83a:	call	0x1d670
0x1b83f:	mov	rcx, qword ptr [rsp + 0x18]
0x1b844:	mov	dword ptr [rsp + 0x6c], r13d
0x1b849:	mov	qword ptr [rsp + 0x10], rax
0x1b84e:	movzx	r12d, byte ptr [rcx]
0x1b852:	test	r12b, r12b
0x1b855:	je	0x1be30
0x1b85b:	movsx	esi, r12b
0x1b85f:	lea	rdi, [rip + 0x6c11]
0x1b866:	call	0x4a00
0x1b86b:	test	rax, rax
0x1b86e:	je	0x1bfc0
0x1b874:	lea	eax, [r13 + 1]
0x1b878:	lea	rsi, [rsp + 0x70]
0x1b87d:	xor	edx, edx
0x1b87f:	mov	byte ptr [rsp + 0x77], 0
0x1b884:	mov	dword ptr [rsp + 0x6c], eax
0x1b888:	movzx	eax, byte ptr [rip + 0xef5e]
0x1b88f:	lea	rdi, [rsp + 0x75]
0x1b894:	mov	dword ptr [rsp + 0x70], 0
0x1b89c:	mov	byte ptr [rsp + 0x76], al
0x1b8a0:	mov	byte ptr [rsp + 0x75], al
0x1b8a4:	xor	eax, eax
0x1b8a6:	call	0x1ac70
0x1b8ab:	mov	r12d, dword ptr [rsp + 0x6c]
0x1b8b0:	mov	r14, rax
0x1b8b3:	test	r14, r14
0x1b8b6:	je	0x1c435
0x1b8bc:	movsxd	rax, r12d
0x1b8bf:	xor	esi, esi
0x1b8c1:	mov	edx, r12d
0x1b8c4:	movzx	eax, byte ptr [rbp + rax]
0x1b8c9:	cmp	al, 0x3a
0x1b8cb:	jne	0x1b8df
0x1b8cd:	lea	edx, [r12 + 1]
0x1b8d2:	mov	esi, 1
0x1b8d7:	movsxd	rax, edx
0x1b8da:	movzx	eax, byte ptr [rbp + rax]
0x1b8df:	cmp	al, 0x25
0x1b8e1:	je	0x1c010
0x1b8e7:	cmp	al, 0x2d
0x1b8e9:	je	0x1c100
0x1b8ef:	jg	0x1bd48
0x1b8f5:	cmp	al, 0x24
0x1b8f7:	je	0x1bf80
0x1b8fd:	cmp	al, 0x2a
0x1b8ff:	jne	0x1bd54
0x1b905:	add	edx, 1
0x1b908:	mov	esi, 0x24
0x1b90d:	mov	edi, 1
0x1b912:	xor	eax, eax
0x1b914:	mov	dword ptr [rsp + 0x6c], edx
0x1b918:	mov	rdx, r14
0x1b91b:	call	0x1b420
0x1b920:	mov	r13, rax
0x1b923:	test	rax, rax
0x1b926:	je	0x1c080
0x1b92c:	lea	rax, [rip + 0x101ed]
0x1b933:	cmp	r13, rax
0x1b936:	je	0x1bdae
0x1b93c:	mov	rdi, r13
0x1b93f:	call	0x49b0
0x1b944:	lea	rdi, [rax + 1]
0x1b948:	call	0x1d670
0x1b94d:	mov	rsi, r13
0x1b950:	mov	rdi, rax
0x1b953:	call	0x48b0
0x1b958:	mov	rdi, r13
0x1b95b:	mov	r14, rax
0x1b95e:	call	0x18d10
0x1b963:	movsxd	rcx, dword ptr [rsp + 0x6c]
0x1b968:	cmp	byte ptr [rbp + rcx], 0x3a
0x1b96d:	mov	dword ptr [rsp + 0x44], ecx
0x1b971:	jne	0x1c3d4
0x1b977:	mov	dword ptr [rsp + 0x18], 0
0x1b97f:	lea	r12, [rip + 0x6afe]
0x1b986:	mov	dword ptr [rsp + 0x38], 0
0x1b98e:	mov	dword ptr [rsp + 0x40], ebx
0x1b992:	mov	qword ptr [rsp + 0x28], r15
0x1b997:	mov	r15, r14
0x1b99a:	mov	r14d, ecx
0x1b99d:	nop	dword ptr [rax]
0x1b9a0:	movzx	eax, byte ptr [rbp + rcx + 1]
0x1b9a5:	cmp	al, 0x67
0x1b9a7:	jne	0x1b9bf
0x1b9a9:	add	r14d, 1
0x1b9ad:	mov	dword ptr [rsp + 0x18], 1
0x1b9b5:	mov	dword ptr [rsp + 0x6c], r14d
0x1b9ba:	movzx	eax, byte ptr [rbp + rcx + 2]
0x1b9bf:	cmp	al, 0x26
0x1b9c1:	je	0x1be70
0x1b9c7:	sub	eax, 0x65
0x1b9ca:	cmp	al, 0xf
0x1b9cc:	ja	0x1b9e0
0x1b9ce:	movzx	eax, al
0x1b9d1:	movsxd	rax, dword ptr [r12 + rax*4]
0x1b9d5:	add	rax, r12
0x1b9d8:	jmp	rax
0x1b9db:	 ----------
0x1b9df:	 ----------
0x1b9e0:	mov	esi, dword ptr [rsp + 0x6c]
0x1b9e4:	mov	r14, r15
0x1b9e7:	mov	r15, qword ptr [rsp + 0x28]
0x1b9ec:	mov	ecx, 3
0x1b9f1:	lea	edx, [rsi + 2]
0x1b9f4:	add	esi, 1
0x1b9f7:	mov	rdi, rbp
0x1b9fa:	xor	eax, eax
0x1b9fc:	call	0x19fe0
0x1ba01:	mov	rdi, qword ptr [rsp + 0x10]
0x1ba06:	mov	rbx, rax
0x1ba09:	call	0x18d10
0x1ba0e:	mov	rdi, r14
0x1ba11:	call	0x18d10
0x1ba16:	mov	rax, qword ptr [rsp + 0x30]
0x1ba1b:	mov	rdi, r15
0x1ba1e:	mov	qword ptr [rax], rbx
0x1ba21:	call	0x18d10
0x1ba26:	mov	eax, 0xffffffff
0x1ba2b:	cmp	qword ptr [rsp + 0x20], rbp
0x1ba30:	je	0x1b67c
0x1ba36:	mov	rdi, rbp
0x1ba39:	mov	dword ptr [rsp + 4], eax
0x1ba3d:	call	0x18d10
0x1ba42:	mov	eax, dword ptr [rsp + 4]
0x1ba46:	jmp	0x1b67c
0x1ba4b:	nop	dword ptr [rax + rax]
0x1ba50:	mov	esi, 0x2f
0x1ba55:	mov	rdi, r15
0x1ba58:	call	0x4a20
0x1ba5d:	lea	r13, [rax + 1]
0x1ba61:	test	rax, rax
0x1ba64:	je	0x1bb70
0x1ba6a:	mov	rdi, r13
0x1ba6d:	call	0x49b0
0x1ba72:	lea	rdi, [rax + 1]
0x1ba76:	call	0x1d670
0x1ba7b:	mov	rsi, r13
0x1ba7e:	mov	rdi, rax
0x1ba81:	call	0x48b0
0x1ba86:	mov	rdi, r15
0x1ba89:	mov	rbx, rax
0x1ba8c:	call	0x18d10
0x1ba91:	mov	eax, dword ptr [rsp + 0x6c]
0x1ba95:	mov	r15, rbx
0x1ba98:	lea	r14d, [rax + 2]
0x1ba9c:	nop	dword ptr [rax]
0x1baa0:	mov	dword ptr [rsp + 0x6c], r14d
0x1baa5:	movsxd	rcx, r14d
0x1baa8:	cmp	byte ptr [rbp + rcx], 0x3a
0x1baad:	je	0x1b9a0
0x1bab3:	xor	eax, eax
0x1bab5:	cmp	dword ptr [rsp + 0x38], 1
0x1baba:	mov	edx, r14d
0x1babd:	mov	r14, r15
0x1bac0:	sete	al
0x1bac3:	mov	r15, qword ptr [rsp + 0x28]
0x1bac8:	movsxd	rbx, dword ptr [rsp + 0x40]
0x1bacd:	mov	dword ptr [rsp + 0x28], eax
0x1bad1:	sub	edx, 1
0x1bad4:	mov	rdi, r14
0x1bad7:	mov	dword ptr [rsp + 0x6c], edx
0x1badb:	call	0x49b0
0x1bae0:	cmp	eax, 0x80
0x1bae5:	jg	0x1c269
0x1baeb:	mov	r12, qword ptr [rsp + 0x10]
0x1baf0:	mov	rsi, r14
0x1baf3:	mov	rdi, r12
0x1baf6:	call	0x48b0
0x1bafb:	mov	rdi, r14
0x1bafe:	call	0x18d10
0x1bb03:	add	dword ptr [rsp + 0x3c], 1
0x1bb08:	cmp	byte ptr [r12], 0
0x1bb0d:	mov	r13d, dword ptr [rsp + 0x6c]
0x1bb12:	jne	0x1c098
0x1bb18:	mov	rdi, qword ptr [rsp + 0x10]
0x1bb1d:	call	0x18d10
0x1bb22:	jmp	0x1b74d
0x1bb27:	nop	word ptr [rax + rax]
0x1bb30:	mov	esi, 0x2e
0x1bb35:	mov	rdi, r15
0x1bb38:	call	0x4a20
0x1bb3d:	test	rax, rax
0x1bb40:	je	0x1bb70
0x1bb42:	mov	byte ptr [rax], 0
0x1bb45:	mov	eax, dword ptr [rsp + 0x6c]
0x1bb49:	lea	r14d, [rax + 2]
0x1bb4d:	jmp	0x1baa0
0x1bb52:	nop	word ptr [rax + rax]
0x1bb58:	mov	esi, 0x2f
0x1bb5d:	mov	rdi, r15
0x1bb60:	call	0x4a20
0x1bb65:	test	rax, rax
0x1bb68:	jne	0x1bb42
0x1bb6a:	nop	word ptr [rax + rax]
0x1bb70:	mov	eax, dword ptr [rsp + 0x6c]
0x1bb74:	lea	r14d, [rax + 2]
0x1bb78:	jmp	0x1baa0
0x1bb7d:	nop	dword ptr [rax]
0x1bb80:	mov	esi, 0x2e
0x1bb85:	mov	rdi, r15
0x1bb88:	call	0x4a20
0x1bb8d:	mov	r13, rax
0x1bb90:	test	rax, rax
0x1bb93:	jne	0x1ba6a
0x1bb99:	jmp	0x1bb70
0x1bb9b:	nop	dword ptr [rax + rax]
0x1bba0:	mov	eax, dword ptr [rsp + 0x6c]
0x1bba4:	add	dword ptr [rsp + 0x38], 1
0x1bba9:	lea	r14d, [rax + 2]
0x1bbad:	jmp	0x1baa0
0x1bbb2:	nop	word ptr [rax + rax]
0x1bbb8:	mov	ebx, dword ptr [rsp + 0x6c]
0x1bbbc:	mov	rdi, rbp
0x1bbbf:	lea	r14d, [rbx + 2]
0x1bbc3:	call	0x49b0
0x1bbc8:	cmp	r14d, eax
0x1bbcb:	jge	0x1baa0
0x1bbd1:	movsxd	rax, ebx
0x1bbd4:	lea	r14, [rsp + 0x6c]
0x1bbd9:	add	ebx, 3
0x1bbdc:	xor	ecx, ecx
0x1bbde:	movsx	r13d, byte ptr [rbp + rax + 2]
0x1bbe4:	lea	r8, [rip + 0xff21]
0x1bbeb:	mov	rsi, r14
0x1bbee:	mov	rdi, rbp
0x1bbf1:	xor	eax, eax
0x1bbf3:	mov	dword ptr [rsp + 0x6c], ebx
0x1bbf7:	mov	edx, r13d
0x1bbfa:	call	0x19c70
0x1bbff:	mov	rbx, rax
0x1bc02:	test	rax, rax
0x1bc05:	je	0x1c387
0x1bc0b:	mov	rdi, qword ptr [rip + 0xff06]
0x1bc12:	test	rdi, rdi
0x1bc15:	je	0x1bc1c
0x1bc17:	call	0x18d10
0x1bc1c:	mov	qword ptr [rip + 0xfef5], rbx
0x1bc23:	mov	eax, dword ptr [rip + 0xfee3]
0x1bc29:	test	eax, eax
0x1bc2b:	je	0x1c400
0x1bc31:	mov	rdi, qword ptr [rip + 0xfed8]
0x1bc38:	test	rdi, rdi
0x1bc3b:	je	0x1bc42
0x1bc3d:	call	0x18d10
0x1bc42:	mov	rsi, r14
0x1bc45:	mov	rdi, rbp
0x1bc48:	xor	eax, eax
0x1bc4a:	mov	ecx, 1
0x1bc4f:	lea	r8, [rip + 0xfeb2]
0x1bc56:	mov	edx, r13d
0x1bc59:	call	0x19c70
0x1bc5e:	mov	esi, 0x26
0x1bc63:	mov	rdi, rax
0x1bc66:	mov	qword ptr [rip + 0xfea3], rax
0x1bc6d:	call	0x4a00
0x1bc72:	test	rax, rax
0x1bc75:	je	0x1be75
0x1bc7b:	mov	edx, dword ptr [rip + 0xfe8b]
0x1bc81:	add	edx, dword ptr [rip + 0xfe81]
0x1bc87:	movsxd	rdi, edx
0x1bc8a:	mov	dword ptr [rsp + 0x48], edx
0x1bc8e:	call	0x1d670
0x1bc93:	mov	r9d, dword ptr [rip + 0xfe6e]
0x1bc9a:	mov	r10, qword ptr [rip + 0xfe6f]
0x1bca1:	mov	r8, rax
0x1bca4:	test	r9d, r9d
0x1bca7:	jle	0x1c2d0
0x1bcad:	mov	qword ptr [rsp + 0x50], rbp
0x1bcb2:	xor	ebx, ebx
0x1bcb4:	xor	r13d, r13d
0x1bcb7:	mov	rbp, rax
0x1bcba:	mov	qword ptr [rsp + 0x58], r15
0x1bcbf:	mov	r15d, dword ptr [rsp + 0x48]
0x1bcc4:	jmp	0x1bd01
0x1bcc6:	nop	word ptr cs:[rax + rax]
0x1bcd0:	cmp	al, 0x5c
0x1bcd2:	je	0x1c300
0x1bcd8:	cmp	r15d, ebx
0x1bcdb:	jle	0x1c320
0x1bce1:	movzx	ecx, byte ptr [r10 + r14]
0x1bce6:	movsxd	rax, ebx
0x1bce9:	add	ebx, 1
0x1bcec:	mov	byte ptr [rbp + rax], cl
0x1bcf0:	add	r13d, 1
0x1bcf4:	cmp	r13d, dword ptr [rip + 0xfe0d]
0x1bcfb:	jge	0x1c36f
0x1bd01:	movsxd	r14, r13d
0x1bd04:	movzx	eax, byte ptr [r10 + r14]
0x1bd09:	cmp	al, 0x26
0x1bd0b:	jne	0x1bcd0
0x1bd0d:	mov	eax, dword ptr [rip + 0xfdf9]
0x1bd13:	lea	ecx, [rax + rbx]
0x1bd16:	cmp	ecx, r15d
0x1bd19:	jge	0x1c33d
0x1bd1f:	movsxd	rdi, ebx
0x1bd22:	mov	rsi, qword ptr [rip + 0xfdef]
0x1bd29:	mov	qword ptr [rsp + 0x48], r10
0x1bd2e:	add	rdi, rbp
0x1bd31:	call	0x48b0
0x1bd36:	mov	r10, qword ptr [rsp + 0x48]
0x1bd3b:	add	ebx, dword ptr [rip + 0xfdcb]
0x1bd41:	jmp	0x1bcf0
0x1bd43:	nop	dword ptr [rax + rax]
0x1bd48:	cmp	al, 0x39
0x1bd4a:	jg	0x1bd80
0x1bd4c:	cmp	al, 0x2f
0x1bd4e:	jg	0x1c150
0x1bd54:	mov	rdi, r14
0x1bd57:	call	0x49b0
0x1bd5c:	lea	rdi, [rax + 1]
0x1bd60:	call	0x1d670
0x1bd65:	mov	rsi, r14
0x1bd68:	mov	rdi, rax
0x1bd6b:	call	0x48b0
0x1bd70:	mov	r14, rax
0x1bd73:	jmp	0x1b963
0x1bd78:	nop	dword ptr [rax + rax]
0x1bd80:	cmp	al, 0x5e
0x1bd82:	jne	0x1bd54
0x1bd84:	add	edx, 1
0x1bd87:	mov	edi, 1
0x1bd8c:	mov	esi, 1
0x1bd91:	mov	dword ptr [rsp + 0x6c], edx
0x1bd95:	nop	dword ptr [rax]
0x1bd98:	mov	rdx, r14
0x1bd9b:	xor	eax, eax
0x1bd9d:	call	0x1b420
0x1bda2:	mov	r13, rax
0x1bda5:	test	rax, rax
0x1bda8:	jne	0x1b92c
0x1bdae:	mov	r8d, dword ptr [rsp + 0x6c]
0x1bdb3:	mov	ecx, 1
0x1bdb8:	mov	edx, r8d
0x1bdbb:	mov	esi, r12d
0x1bdbe:	mov	rdi, rbp
0x1bdc1:	xor	eax, eax
0x1bdc3:	call	0x19fe0
0x1bdc8:	mov	rdi, qword ptr [rsp + 0x10]
0x1bdcd:	mov	rbx, rax
0x1bdd0:	call	0x18d10
0x1bdd5:	jmp	0x1ba16
0x1bdda:	nop	word ptr [rax + rax]
0x1bde0:	cmp	ebx, dword ptr [rsp + 4]
0x1bde4:	jge	0x1bff0
0x1bdea:	lea	eax, [rbx + 1]
0x1bded:	mov	byte ptr [r15 + rbx], 0x5c
0x1bdf2:	movsxd	rdx, eax
0x1bdf5:	mov	dword ptr [rsp + 8], 1
0x1bdfd:	movsxd	rbx, eax
0x1be00:	mov	byte ptr [r15 + rdx], 0
0x1be05:	jmp	0x1b74d
0x1be0a:	nop	word ptr [rax + rax]
0x1be10:	add	dword ptr [rsp + 4], 0x40
0x1be15:	movsxd	rsi, dword ptr [rsp + 4]
0x1be1a:	mov	rdi, r15
0x1be1d:	call	0x1d690
0x1be22:	mov	r15, rax
0x1be25:	jmp	0x1b778
0x1be2a:	nop	word ptr [rax + rax]
0x1be30:	xor	edx, edx
0x1be32:	test	r13d, r13d
0x1be35:	je	0x1be4d
0x1be37:	movzx	eax, byte ptr [rbp + r14 - 1]
0x1be3d:	cmp	al, 0x27
0x1be3f:	je	0x1c078
0x1be45:	cmp	al, 0x22
0x1be47:	je	0x1c078
0x1be4d:	lea	rsi, [rsp + 0x6c]
0x1be52:	mov	rdi, rbp
0x1be55:	xor	eax, eax
0x1be57:	call	0x1ac70
0x1be5c:	mov	r12d, dword ptr [rsp + 0x6c]
0x1be61:	mov	r14, rax
0x1be64:	jmp	0x1b8b3
0x1be69:	nop	dword ptr [rax]
0x1be70:	add	dword ptr [rsp + 0x6c], 2
0x1be75:	mov	rdi, r15
0x1be78:	call	0x49b0
0x1be7d:	mov	r13d, dword ptr [rip + 0xfc88]
0x1be84:	cmp	eax, r13d
0x1be87:	jl	0x1c400
0x1be8d:	mov	qword ptr [rsp + 0x48], rbp
0x1be92:	xor	r14d, r14d
0x1be95:	mov	rbp, r15
0x1be98:	mov	r15d, eax
0x1be9b:	mov	dword ptr [rsp + 0x50], 1
0x1bea3:	jmp	0x1beba
0x1bea5:	nop	dword ptr [rax]
0x1bea8:	add	r14d, 1
0x1beac:	lea	eax, [r13 + r14]
0x1beb1:	cmp	eax, r15d
0x1beb4:	jg	0x1c050
0x1beba:	mov	rsi, qword ptr [rip + 0xfc57]
0x1bec1:	movsxd	rbx, r14d
0x1bec4:	lea	rdi, [rbp + rbx]
0x1bec9:	movzx	eax, byte ptr [rsi]
0x1becc:	cmp	byte ptr [rdi], al
0x1bece:	jne	0x1bea8
0x1bed0:	movsxd	rdx, r13d
0x1bed3:	call	0x4890
0x1bed8:	test	eax, eax
0x1beda:	jne	0x1bea8
0x1bedc:	mov	ecx, dword ptr [rip + 0xfc26]
0x1bee2:	add	ecx, r15d
0x1bee5:	sub	ecx, r13d
0x1bee8:	lea	edi, [rcx + 1]
0x1beeb:	mov	dword ptr [rsp + 0x50], ecx
0x1beef:	movsxd	rdi, edi
0x1bef2:	call	0x1d670
0x1bef7:	mov	rdx, rbx
0x1befa:	mov	rsi, rbp
0x1befd:	mov	rdi, rax
0x1bf00:	mov	r13, rax
0x1bf03:	call	0x4880
0x1bf08:	movsxd	rdx, dword ptr [rip + 0xfbf9]
0x1bf0f:	lea	rdi, [r13 + rbx]
0x1bf14:	mov	rsi, qword ptr [rip + 0xfbf5]
0x1bf1b:	call	0x4880
0x1bf20:	movsxd	rsi, dword ptr [rip + 0xfbe5]
0x1bf27:	movsxd	rdi, dword ptr [rip + 0xfbda]
0x1bf2e:	lea	edx, [rsi + r14]
0x1bf32:	add	rdi, rbx
0x1bf35:	add	rsi, rbx
0x1bf38:	sub	r15d, edx
0x1bf3b:	add	rsi, rbp
0x1bf3e:	add	rdi, r13
0x1bf41:	movsxd	rdx, r15d
0x1bf44:	call	0x4880
0x1bf49:	movsxd	rcx, dword ptr [rsp + 0x50]
0x1bf4e:	mov	rdi, rbp
0x1bf51:	mov	byte ptr [r13 + rcx], 0
0x1bf57:	call	0x18d10
0x1bf5c:	mov	edi, dword ptr [rsp + 0x18]
0x1bf60:	test	edi, edi
0x1bf62:	jne	0x1c1a8
0x1bf68:	mov	rbp, qword ptr [rsp + 0x48]
0x1bf6d:	mov	r14d, dword ptr [rsp + 0x6c]
0x1bf72:	mov	r15, r13
0x1bf75:	jmp	0x1baa5
0x1bf7a:	nop	word ptr [rax + rax]
0x1bf80:	add	edx, 1
0x1bf83:	mov	esi, 0x24
0x1bf88:	mov	edi, 0x24
0x1bf8d:	xor	eax, eax
0x1bf8f:	mov	dword ptr [rsp + 0x6c], edx
0x1bf93:	mov	rdx, r14
0x1bf96:	call	0x1b420
0x1bf9b:	mov	r13, rax
0x1bf9e:	lea	rax, [rip + 0xfb7b]
0x1bfa5:	cmp	r13, rax
0x1bfa8:	je	0x1bdae
0x1bfae:	test	r13, r13
0x1bfb1:	jne	0x1b93c
0x1bfb7:	jmp	0x1bd54
0x1bfbc:	nop	dword ptr [rax]
0x1bfc0:	cmp	r12b, 0x23
0x1bfc4:	jne	0x1be30
0x1bfca:	lea	r12d, [r13 + 2]
0x1bfce:	mov	r14, r15
0x1bfd1:	mov	dword ptr [rsp + 0x6c], r12d
0x1bfd6:	jmp	0x1b8b3
0x1bfdb:	nop	dword ptr [rax + rax]
0x1bfe0:	mov	qword ptr [rsp + 0x10], rdx
0x1bfe5:	jmp	0x1b806
0x1bfea:	nop	word ptr [rax + rax]
0x1bff0:	add	dword ptr [rsp + 4], 0x40
0x1bff5:	movsxd	rsi, dword ptr [rsp + 4]
0x1bffa:	mov	rdi, r15
0x1bffd:	call	0x1d690
0x1c002:	mov	r15, rax
0x1c005:	jmp	0x1bdea
0x1c00a:	nop	word ptr [rax + rax]
0x1c010:	mov	r13, qword ptr [rip + 0xfad9]
0x1c017:	add	edx, 1
0x1c01a:	mov	dword ptr [rsp + 0x6c], edx
0x1c01e:	test	r13, r13
0x1c021:	je	0x1c080
0x1c023:	mov	rdi, r13
0x1c026:	call	0x49b0
0x1c02b:	lea	rdi, [rax + 1]
0x1c02f:	call	0x1d670
0x1c034:	mov	rsi, r13
0x1c037:	mov	rdi, rax
0x1c03a:	call	0x48b0
0x1c03f:	mov	r13, rax
0x1c042:	jmp	0x1b92c
0x1c047:	nop	word ptr [rax + rax]
0x1c050:	cmp	dword ptr [rsp + 0x18], 1
0x1c055:	mov	r15, rbp
0x1c058:	mov	r14d, dword ptr [rsp + 0x6c]
0x1c05d:	mov	rbp, qword ptr [rsp + 0x48]
0x1c062:	jle	0x1c417
0x1c068:	mov	dword ptr [rsp + 0x18], 0
0x1c070:	jmp	0x1baa5
0x1c075:	nop	dword ptr [rax]
0x1c078:	movsx	edx, al
0x1c07b:	jmp	0x1be4d
0x1c080:	mov	edi, 1
0x1c085:	call	0x1d670
0x1c08a:	mov	byte ptr [rax], 0
0x1c08d:	mov	r13, rax
0x1c090:	jmp	0x1b92c
0x1c095:	nop	dword ptr [rax]
0x1c098:	mov	rdi, qword ptr [rsp + 0x10]
0x1c09d:	call	0x49b0
0x1c0a2:	lea	r12d, [rbx + rax]
0x1c0a6:	mov	eax, dword ptr [rsp + 4]
0x1c0aa:	cmp	r12d, eax
0x1c0ad:	jl	0x1c0e0
0x1c0af:	movsxd	r14, eax
0x1c0b2:	mov	rdi, r15
0x1c0b5:	mov	r15d, eax
0x1c0b8:	sub	r14, -0x80
0x1c0bc:	nop	dword ptr [rax]
0x1c0c0:	mov	rsi, r14
0x1c0c3:	sub	r15d, -0x80
0x1c0c7:	sub	r14, -0x80
0x1c0cb:	call	0x1d690
0x1c0d0:	mov	rdi, rax
0x1c0d3:	cmp	r12d, r15d
0x1c0d6:	jge	0x1c0c0
0x1c0d8:	mov	dword ptr [rsp + 4], r15d
0x1c0dd:	mov	r15, rax
0x1c0e0:	movsxd	rdi, ebx
0x1c0e3:	mov	rsi, qword ptr [rsp + 0x10]
0x1c0e8:	movsxd	rbx, r12d
0x1c0eb:	add	rdi, r15
0x1c0ee:	call	0x48b0
0x1c0f3:	jmp	0x1bb18
0x1c0f8:	nop	dword ptr [rax + rax]
0x1c100:	xor	edi, edi
0x1c102:	lea	r8d, [rdx + 1]
0x1c106:	movsxd	rax, r8d
0x1c109:	movzx	eax, byte ptr [rbp + rax]
0x1c10e:	lea	ecx, [rax - 0x30]
0x1c111:	cmp	cl, 9
0x1c114:	jbe	0x1c283
0x1c11a:	cmp	al, 0x24
0x1c11c:	je	0x1c3e5
0x1c122:	mov	dword ptr [rsp + 0x6c], r8d
0x1c127:	test	al, al
0x1c129:	je	0x1c3f6
0x1c12f:	cmp	al, 0x3a
0x1c131:	je	0x1c3f6
0x1c137:	test	edi, edi
0x1c139:	jne	0x1bdb3
0x1c13f:	xor	esi, esi
0x1c141:	jmp	0x1bd98
0x1c146:	nop	word ptr cs:[rax + rax]
0x1c150:	test	esi, esi
0x1c152:	je	0x1bd54
0x1c158:	add	edx, 1
0x1c15b:	xor	edi, edi
0x1c15d:	movsxd	rcx, edx
0x1c160:	sub	eax, 0x30
0x1c163:	lea	edx, [rdi + rdi*4]
0x1c166:	movsx	eax, al
0x1c169:	lea	edi, [rax + rdx*2]
0x1c16c:	movzx	eax, byte ptr [rbp + rcx]
0x1c171:	mov	edx, ecx
0x1c173:	add	rcx, 1
0x1c177:	lea	r8d, [rax - 0x30]
0x1c17b:	cmp	r8b, 9
0x1c17f:	jbe	0x1c160
0x1c181:	cmp	al, 0x5e
0x1c183:	je	0x1c478
0x1c189:	cmp	al, 0x2a
0x1c18b:	je	0x1c250
0x1c191:	cmp	al, 0x2d
0x1c193:	je	0x1c102
0x1c199:	mov	dword ptr [rsp + 0x6c], edx
0x1c19d:	mov	esi, edi
0x1c19f:	jmp	0x1bd98
0x1c1a4:	nop	dword ptr [rax]
0x1c1a8:	mov	rdi, r13
0x1c1ab:	mov	rbp, r13
0x1c1ae:	add	r14d, dword ptr [rip + 0xf953]
0x1c1b5:	call	0x49b0
0x1c1ba:	add	dword ptr [rsp + 0x18], 1
0x1c1bf:	mov	r13d, dword ptr [rip + 0xf946]
0x1c1c6:	mov	dword ptr [rsp + 0x50], 0
0x1c1ce:	mov	r15d, eax
0x1c1d1:	jmp	0x1bea8
0x1c1d6:	nop	word ptr cs:[rax + rax]
0x1c1e0:	lea	edi, [r12 + 5]
0x1c1e5:	movsxd	rdi, edi
0x1c1e8:	call	0x1d670
0x1c1ed:	mov	r11d, 0x733a
0x1c1f3:	mov	rsi, qword ptr [rsp + 0x20]
0x1c1f8:	mov	rbp, rax
0x1c1fb:	movzx	eax, byte ptr [rip + 0xe5eb]
0x1c202:	mov	word ptr [rbp + 2], r11w
0x1c207:	lea	rdi, [rbp + 4]
0x1c20b:	mov	byte ptr [rbp + 1], al
0x1c20e:	mov	byte ptr [rbp], al
0x1c211:	call	0x48b0
0x1c216:	lea	eax, [r12 + 4]
0x1c21b:	mov	dword ptr [rsp + 0xc], eax
0x1c21f:	test	eax, eax
0x1c221:	jg	0x1b6e6
0x1c227:	mov	rax, qword ptr [rsp + 0x30]
0x1c22c:	mov	qword ptr [rax], r15
0x1c22f:	cmp	qword ptr [rsp + 0x20], rbp
0x1c234:	je	0x1b67a
0x1c23a:	mov	rdi, rbp
0x1c23d:	call	0x18d10
0x1c242:	mov	dword ptr [rsp + 0x3c], 0
0x1c24a:	jmp	0x1b7c0
0x1c24f:	nop	
0x1c250:	cmp	al, 0x5e
0x1c252:	je	0x1c478
0x1c258:	add	edx, 1
0x1c25b:	mov	esi, 0x24
0x1c260:	mov	dword ptr [rsp + 0x6c], edx
0x1c264:	jmp	0x1bd98
0x1c269:	add	eax, 1
0x1c26c:	mov	rdi, qword ptr [rsp + 0x10]
0x1c271:	movsxd	rsi, eax
0x1c274:	call	0x1d690
0x1c279:	mov	qword ptr [rsp + 0x10], rax
0x1c27e:	jmp	0x1baeb
0x1c283:	add	edx, 2
0x1c286:	xor	esi, esi
0x1c288:	movsxd	rdx, edx
0x1c28b:	nop	dword ptr [rax + rax]
0x1c290:	sub	eax, 0x30
0x1c293:	lea	ecx, [rsi + rsi*4]
0x1c296:	mov	r8d, edx
0x1c299:	movsx	eax, al
0x1c29c:	lea	esi, [rax + rcx*2]
0x1c29f:	movzx	eax, byte ptr [rbp + rdx]
0x1c2a4:	add	rdx, 1
0x1c2a8:	lea	ecx, [rax - 0x30]
0x1c2ab:	cmp	cl, 9
0x1c2ae:	jbe	0x1c290
0x1c2b0:	cmp	esi, 0x24
0x1c2b3:	sete	al
0x1c2b6:	cmp	esi, edi
0x1c2b8:	setge	dl
0x1c2bb:	or	eax, edx
0x1c2bd:	mov	dword ptr [rsp + 0x6c], r8d
0x1c2c2:	test	al, al
0x1c2c4:	je	0x1bdb3
0x1c2ca:	jmp	0x1bd98
0x1c2cf:	nop	
0x1c2d0:	xor	ebx, ebx
0x1c2d2:	mov	byte ptr [rax], 0
0x1c2d5:	mov	rdi, r10
0x1c2d8:	mov	qword ptr [rsp + 0x48], r8
0x1c2dd:	call	0x18d10
0x1c2e2:	mov	r8, qword ptr [rsp + 0x48]
0x1c2e7:	mov	dword ptr [rip + 0xf81b], ebx
0x1c2ed:	mov	qword ptr [rip + 0xf81c], r8
0x1c2f4:	jmp	0x1be75
0x1c2f9:	nop	dword ptr [rax]
0x1c300:	cmp	byte ptr [r10 + r14 + 1], 0x26
0x1c306:	lea	rax, [r14 + 1]
0x1c30a:	jne	0x1bcd8
0x1c310:	add	r13d, 1
0x1c314:	mov	r14, rax
0x1c317:	jmp	0x1bcd8
0x1c31c:	nop	dword ptr [rax]
0x1c320:	add	r15d, r15d
0x1c323:	mov	rdi, rbp
0x1c326:	movsxd	rsi, r15d
0x1c329:	call	0x1d690
0x1c32e:	mov	r10, qword ptr [rip + 0xf7db]
0x1c335:	mov	rbp, rax
0x1c338:	jmp	0x1bce1
0x1c33d:	lea	r15d, [rax + r15*2]
0x1c341:	mov	rdi, rbp
0x1c344:	movsxd	rsi, r15d
0x1c347:	call	0x1d690
0x1c34c:	mov	r10, qword ptr [rip + 0xf7bd]
0x1c353:	mov	rbp, rax
0x1c356:	jmp	0x1bd1f
0x1c35b:	xor	eax, eax
0x1c35d:	mov	rdi, r15
0x1c360:	call	0x1a380
0x1c365:	mov	eax, 2
0x1c36a:	jmp	0x1b67c
0x1c36f:	mov	r8, rbp
0x1c372:	movsxd	rax, ebx
0x1c375:	mov	r15, qword ptr [rsp + 0x58]
0x1c37a:	mov	rbp, qword ptr [rsp + 0x50]
0x1c37f:	add	rax, r8
0x1c382:	jmp	0x1c2d2
0x1c387:	cmp	qword ptr [rip + 0xf789], 0
0x1c38f:	mov	eax, dword ptr [rip + 0xf777]
0x1c395:	jne	0x1bc29
0x1c39b:	mov	rbx, qword ptr [rip + 0xf74e]
0x1c3a2:	test	rbx, rbx
0x1c3a5:	je	0x1c3b0
0x1c3a7:	cmp	byte ptr [rbx], 0
0x1c3aa:	jne	0x1c442
0x1c3b0:	mov	dword ptr [rip + 0xf752], 0
0x1c3ba:	mov	r14, r15
0x1c3bd:	mov	r15, qword ptr [rsp + 0x28]
0x1c3c2:	mov	edx, dword ptr [rsp + 0x6c]
0x1c3c6:	mov	ecx, 2
0x1c3cb:	mov	esi, dword ptr [rsp + 0x44]
0x1c3cf:	jmp	0x1b9f7
0x1c3d4:	mov	dword ptr [rsp + 0x28], 0
0x1c3dc:	mov	edx, dword ptr [rsp + 0x44]
0x1c3e0:	jmp	0x1bad1
0x1c3e5:	add	edx, 2
0x1c3e8:	mov	esi, 0x24
0x1c3ed:	mov	dword ptr [rsp + 0x6c], edx
0x1c3f1:	jmp	0x1bd98
0x1c3f6:	mov	esi, 0xffffffff
0x1c3fb:	jmp	0x1bd98
0x1c400:	mov	r14, r15
0x1c403:	mov	r15, qword ptr [rsp + 0x28]
0x1c408:	jmp	0x1c3c2
0x1c40a:	mov	rax, qword ptr [rsp + 0x30]
0x1c40f:	mov	qword ptr [rax], r15
0x1c412:	jmp	0x1b67a
0x1c417:	mov	esi, dword ptr [rsp + 0x50]
0x1c41b:	test	esi, esi
0x1c41d:	je	0x1baa5
0x1c423:	mov	edx, r14d
0x1c426:	mov	ecx, 2
0x1c42b:	mov	r14, r15
0x1c42e:	mov	r15, qword ptr [rsp + 0x28]
0x1c433:	jmp	0x1c3cb
0x1c435:	xor	ecx, ecx
0x1c437:	mov	edx, r12d
0x1c43a:	mov	esi, r13d
0x1c43d:	jmp	0x1bdbe
0x1c442:	mov	rdi, rbx
0x1c445:	call	0x49b0
0x1c44a:	lea	rdi, [rax + 1]
0x1c44e:	call	0x1d670
0x1c453:	mov	rsi, rbx
0x1c456:	mov	rdi, rax
0x1c459:	call	0x48b0
0x1c45e:	mov	rdi, rax
0x1c461:	mov	qword ptr [rip + 0xf6b0], rax
0x1c468:	call	0x49b0
0x1c46d:	mov	dword ptr [rip + 0xf699], eax
0x1c473:	jmp	0x1bc29
0x1c478:	cmp	edi, 1
0x1c47b:	lea	r8d, [rdx + 1]
0x1c47f:	setle	al
0x1c482:	jmp	0x1c2bd
0x1c487:	call	0x49d0
0x1c48c:	nop	dword ptr [rax]
0x1c490:	endbr64	
0x1c494:	push	rbx
0x1c495:	mov	rbx, rdx
0x1c498:	add	rsp, -0x80
0x1c49c:	mov	rax, qword ptr fs:[0x28]
0x1c4a5:	mov	qword ptr [rsp + 0x78], rax
0x1c4aa:	xor	eax, eax
0x1c4ac:	mov	rsi, rsp
0x1c4af:	call	0x4cb0
0x1c4b4:	test	eax, eax
0x1c4b6:	js	0x1c514
0x1c4b8:	mov	rax, qword ptr [rsp + 8]
0x1c4bd:	test	rax, rax
0x1c4c0:	cmove	rax, qword ptr [rsp]
0x1c4c5:	mov	qword ptr [rbx], rax
0x1c4c8:	mov	rax, qword ptr [rsp + 0x10]
0x1c4cd:	mov	qword ptr [rbx + 8], rax
0x1c4d1:	mov	rax, qword ptr [rsp + 0x18]
0x1c4d6:	mov	qword ptr [rbx + 0x10], rax
0x1c4da:	mov	rax, qword ptr [rsp + 0x20]
0x1c4df:	mov	qword ptr [rbx + 0x18], rax
0x1c4e3:	shr	rax, 0x3f
0x1c4e7:	mov	byte ptr [rbx + 0x20], al
0x1c4ea:	mov	rax, qword ptr [rsp + 0x28]
0x1c4ef:	mov	qword ptr [rbx + 0x28], rax
0x1c4f3:	mov	rax, qword ptr [rsp + 0x30]
0x1c4f8:	mov	qword ptr [rbx + 0x30], rax
0x1c4fc:	xor	eax, eax
0x1c4fe:	mov	rdx, qword ptr [rsp + 0x78]
0x1c503:	sub	rdx, qword ptr fs:[0x28]
0x1c50c:	jne	0x1c51b
0x1c50e:	sub	rsp, -0x80
0x1c512:	pop	rbx
0x1c513:	ret	
0x1c514:	mov	eax, 0xffffffff
0x1c519:	jmp	0x1c4fe
0x1c51b:	call	0x49d0
0x1c520:	endbr64	
0x1c524:	push	r15
0x1c526:	push	r14
0x1c528:	push	r13
0x1c52a:	mov	r13, r8
0x1c52d:	push	r12
0x1c52f:	mov	r12, rcx
0x1c532:	push	rbp
0x1c533:	push	rbx
0x1c534:	mov	rbx, rdi
0x1c537:	sub	rsp, 0x98
0x1c53e:	mov	qword ptr [rsp], rsi
0x1c542:	mov	qword ptr [rsp + 0x18], r8
0x1c547:	mov	dword ptr [rsp + 0x48], edx
0x1c54b:	mov	rax, qword ptr fs:[0x28]
0x1c554:	mov	qword ptr [rsp + 0x88], rax
0x1c55c:	mov	eax, edx
0x1c55e:	and	edx, 0x20
0x1c561:	mov	dword ptr [rsp + 0x30], edx
0x1c565:	and	eax, 3
0x1c568:	cmp	edx, 1
0x1c56b:	mov	dword ptr [rsp + 0x10], eax
0x1c56f:	sbb	eax, eax
0x1c571:	and	eax, 0xffffffe8
0x1c574:	add	eax, 0x400
0x1c579:	mov	dword ptr [rsp + 0x34], eax
0x1c57d:	call	0x4900
0x1c582:	mov	r15, qword ptr [rax]
0x1c585:	mov	r14, rax
0x1c588:	mov	rdi, r15
0x1c58b:	call	0x49b0
0x1c590:	mov	rcx, qword ptr [r14 + 0x10]
0x1c594:	mov	r14, qword ptr [r14 + 8]
0x1c598:	mov	rbp, rax
0x1c59b:	sub	rax, 1
0x1c59f:	cmp	rax, 0x10
0x1c5a3:	mov	eax, 1
0x1c5a8:	mov	rdi, r14
0x1c5ab:	mov	qword ptr [rsp + 0x38], rcx
0x1c5b0:	cmovae	rbp, rax
0x1c5b4:	lea	rax, [rip + 0x5123]
0x1c5bb:	cmovae	r15, rax
0x1c5bf:	call	0x49b0
0x1c5c4:	cmp	rax, 0x10
0x1c5c8:	lea	rax, [rip + 0x5e16]
0x1c5cf:	cmova	r14, rax
0x1c5d3:	mov	rax, qword ptr [rsp]
0x1c5d7:	add	rax, 0x288
0x1c5dd:	mov	qword ptr [rsp + 8], rax
0x1c5e2:	cmp	r13, r12
0x1c5e5:	ja	0x1c740
0x1c5eb:	mov	rax, r12
0x1c5ee:	xor	edx, edx
0x1c5f0:	div	r13
0x1c5f3:	test	rdx, rdx
0x1c5f6:	jne	0x1c604
0x1c5f8:	mul	rbx
0x1c5fb:	mov	rcx, rax
0x1c5fe:	jno	0x1cb98
0x1c604:	mov	qword ptr [rsp + 0x20], r12
0x1c609:	fild	qword ptr [rsp + 0x20]
0x1c60d:	test	r12, r12
0x1c610:	js	0x1c928
0x1c616:	mov	rax, qword ptr [rsp + 0x18]
0x1c61b:	mov	qword ptr [rsp + 0x20], rax
0x1c620:	fild	qword ptr [rsp + 0x20]
0x1c624:	test	rax, rax
0x1c627:	js	0x1c908
0x1c62d:	mov	qword ptr [rsp + 0x20], rbx
0x1c632:	fdivp	st(1)
0x1c634:	fild	qword ptr [rsp + 0x20]
0x1c638:	test	rbx, rbx
0x1c63b:	js	0x1c8f0
0x1c641:	fmulp	st(1)
0x1c643:	test	byte ptr [rsp + 0x48], 0x10
0x1c648:	je	0x1c938
0x1c64e:	fild	dword ptr [rsp + 0x34]
0x1c652:	xor	ebx, ebx
0x1c654:	fld	st(0)
0x1c656:	jmp	0x1c664
0x1c658:	nop	dword ptr [rax + rax]
0x1c660:	fstp	st(1)
0x1c662:	fxch	st(2)
0x1c664:	fld	st(0)
0x1c666:	add	ebx, 1
0x1c669:	fmul	st(2)
0x1c66b:	fxch	st(3)
0x1c66d:	fcomi	st(3)
0x1c66f:	jb	0x1c680
0x1c671:	cmp	ebx, 8
0x1c674:	jne	0x1c660
0x1c676:	fstp	st(2)
0x1c678:	fstp	st(2)
0x1c67a:	jmp	0x1c684
0x1c67c:	nop	dword ptr [rax]
0x1c680:	fstp	st(2)
0x1c682:	fstp	st(2)
0x1c684:	lea	r15, [rbp + 1]
0x1c688:	fdivrp	st(1)
0x1c68a:	cmp	dword ptr [rsp + 0x30], 1
0x1c68f:	adc	rbp, 2
0x1c693:	cmp	dword ptr [rsp + 0x10], 1
0x1c698:	je	0x1cc70
0x1c69e:	fld	xword ptr [rip + 0x5e9c]
0x1c6a4:	fcomip	st(1)
0x1c6a6:	jbe	0x1cb10
0x1c6ac:	fld	dword ptr [rip + 0x5e7e]
0x1c6b2:	fxch	st(1)
0x1c6b4:	fcomi	st(1)
0x1c6b6:	jae	0x1ce00
0x1c6bc:	fstp	st(1)
0x1c6be:	fnstcw	word ptr [rsp + 0x4e]
0x1c6c2:	movzx	eax, word ptr [rsp + 0x4e]
0x1c6c7:	or	ah, 0xc
0x1c6ca:	mov	word ptr [rsp + 0x4c], ax
0x1c6cf:	fld	st(0)
0x1c6d1:	fldcw	word ptr [rsp + 0x4c]
0x1c6d5:	fistp	qword ptr [rsp + 0x20]
0x1c6d9:	fldcw	word ptr [rsp + 0x4e]
0x1c6dd:	mov	rax, qword ptr [rsp + 0x20]
0x1c6e2:	mov	qword ptr [rsp + 0x20], rax
0x1c6e7:	fild	qword ptr [rsp + 0x20]
0x1c6eb:	test	rax, rax
0x1c6ee:	jns	0x1c6f6
0x1c6f0:	fadd	dword ptr [rip + 0x5e36]
0x1c6f6:	mov	ecx, dword ptr [rsp + 0x10]
0x1c6fa:	test	ecx, ecx
0x1c6fc:	jne	0x1cb18
0x1c702:	fxch	st(1)
0x1c704:	fucomi	st(1)
0x1c706:	jp	0x1c712
0x1c708:	je	0x1cb20
0x1c70e:	fstp	st(1)
0x1c710:	jmp	0x1c718
0x1c712:	fstp	st(1)
0x1c714:	nop	dword ptr [rax]
0x1c718:	add	rax, 1
0x1c71c:	mov	qword ptr [rsp + 0x20], rax
0x1c721:	fild	qword ptr [rsp + 0x20]
0x1c725:	jns	0x1cb1c
0x1c72b:	fadd	dword ptr [rip + 0x5dfb]
0x1c731:	fxch	st(1)
0x1c733:	jmp	0x1cb20
0x1c738:	nop	dword ptr [rax + rax]
0x1c740:	test	r12, r12
0x1c743:	je	0x1c604
0x1c749:	mov	rax, qword ptr [rsp + 0x18]
0x1c74e:	xor	edx, edx
0x1c750:	div	r12
0x1c753:	mov	r8, rax
0x1c756:	test	rdx, rdx
0x1c759:	jne	0x1c604
0x1c75f:	mov	rax, rbx
0x1c762:	xor	edx, edx
0x1c764:	div	r8
0x1c767:	mov	rcx, rax
0x1c76a:	lea	rax, [rdx + rdx*4]
0x1c76e:	xor	edx, edx
0x1c770:	add	rax, rax
0x1c773:	div	r8
0x1c776:	add	rdx, rdx
0x1c779:	mov	edi, eax
0x1c77b:	cmp	r8, rdx
0x1c77e:	jbe	0x1cde8
0x1c784:	xor	esi, esi
0x1c786:	test	rdx, rdx
0x1c789:	setne	sil
0x1c78d:	mov	r10d, dword ptr [rsp + 0x48]
0x1c792:	and	r10d, 0x10
0x1c796:	je	0x1cbab
0x1c79c:	mov	r8d, dword ptr [rsp + 0x34]
0x1c7a1:	xor	ebx, ebx
0x1c7a3:	mov	r11, r8
0x1c7a6:	cmp	r8, rcx
0x1c7a9:	jbe	0x1cacf
0x1c7af:	cmp	dword ptr [rsp + 0x10], 1
0x1c7b4:	mov	r8, qword ptr [rsp + 8]
0x1c7b9:	je	0x1cdc0
0x1c7bf:	mov	r11d, dword ptr [rsp + 0x10]
0x1c7c4:	test	r11d, r11d
0x1c7c7:	jne	0x1c7e8
0x1c7c9:	add	esi, edi
0x1c7cb:	test	esi, esi
0x1c7cd:	jle	0x1c7e8
0x1c7cf:	add	rcx, 1
0x1c7d3:	test	r10d, r10d
0x1c7d6:	je	0x1c7e8
0x1c7d8:	mov	eax, dword ptr [rsp + 0x34]
0x1c7dc:	cmp	rax, rcx
0x1c7df:	je	0x1cec2
0x1c7e5:	nop	dword ptr [rax]
0x1c7e8:	movabs	rsi, 0xcccccccccccccccd
0x1c7f2:	mov	rbp, r8
0x1c7f5:	nop	dword ptr [rax]
0x1c7f8:	mov	rax, rcx
0x1c7fb:	sub	rbp, 1
0x1c7ff:	mul	rsi
0x1c802:	mov	rax, rcx
0x1c805:	shr	rdx, 3
0x1c809:	lea	rdi, [rdx + rdx*4]
0x1c80d:	add	rdi, rdi
0x1c810:	sub	rax, rdi
0x1c813:	add	eax, 0x30
0x1c816:	mov	byte ptr [rbp], al
0x1c819:	mov	rax, rcx
0x1c81c:	mov	rcx, rdx
0x1c81f:	cmp	rax, 9
0x1c823:	ja	0x1c7f8
0x1c825:	test	byte ptr [rsp + 0x48], 4
0x1c82a:	je	0x1ca2c
0x1c830:	mov	rdi, r14
0x1c833:	mov	r12, r8
0x1c836:	mov	qword ptr [rsp + 0x40], r8
0x1c83b:	mov	r13, -1
0x1c842:	call	0x49b0
0x1c847:	sub	r12, rbp
0x1c84a:	mov	rsi, rbp
0x1c84d:	mov	ecx, 0x29
0x1c852:	mov	r15, rax
0x1c855:	lea	rax, [rsp + 0x50]
0x1c85a:	mov	rdx, r12
0x1c85d:	mov	rdi, rax
0x1c860:	mov	qword ptr [rsp + 0x10], rax
0x1c865:	call	0x4b70
0x1c86a:	mov	dword ptr [rsp + 0x20], ebx
0x1c86e:	mov	rbp, qword ptr [rsp + 0x40]
0x1c873:	mov	rbx, r12
0x1c876:	mov	r12, qword ptr [rsp + 0x38]
0x1c87b:	jmp	0x1c8bb
0x1c87d:	nop	dword ptr [rax]
0x1c880:	cmp	r13, rbx
0x1c883:	mov	rax, qword ptr [rsp + 0x10]
0x1c888:	cmova	r13, rbx
0x1c88c:	sub	rbx, r13
0x1c88f:	lea	rsi, [rax + rbx]
0x1c893:	sub	rbp, r13
0x1c896:	mov	rdx, r13
0x1c899:	mov	rdi, rbp
0x1c89c:	call	0x4bb0
0x1c8a1:	test	rbx, rbx
0x1c8a4:	je	0x1caa0
0x1c8aa:	sub	rbp, r15
0x1c8ad:	mov	rdx, r15
0x1c8b0:	mov	rsi, r14
0x1c8b3:	mov	rdi, rbp
0x1c8b6:	call	0x4bb0
0x1c8bb:	movzx	eax, byte ptr [r12]
0x1c8c0:	test	al, al
0x1c8c2:	je	0x1c880
0x1c8c4:	cmp	al, 0x7e
0x1c8c6:	ja	0x1ca88
0x1c8cc:	cmp	rax, rbx
0x1c8cf:	cmova	rax, rbx
0x1c8d3:	sub	rbx, rax
0x1c8d6:	mov	r13, rax
0x1c8d9:	mov	rax, qword ptr [rsp + 0x10]
0x1c8de:	lea	rsi, [rax + rbx]
0x1c8e2:	add	r12, 1
0x1c8e6:	jmp	0x1c893
0x1c8e8:	nop	dword ptr [rax + rax]
0x1c8f0:	fadd	dword ptr [rip + 0x5c36]
0x1c8f6:	fmulp	st(1)
0x1c8f8:	test	byte ptr [rsp + 0x48], 0x10
0x1c8fd:	jne	0x1c64e
0x1c903:	jmp	0x1c938
0x1c905:	nop	dword ptr [rax]
0x1c908:	fadd	dword ptr [rip + 0x5c1e]
0x1c90e:	mov	qword ptr [rsp + 0x20], rbx
0x1c913:	fdivp	st(1)
0x1c915:	fild	qword ptr [rsp + 0x20]
0x1c919:	test	rbx, rbx
0x1c91c:	jns	0x1c641
0x1c922:	jmp	0x1c8f0
0x1c924:	nop	dword ptr [rax]
0x1c928:	fadd	dword ptr [rip + 0x5bfe]
0x1c92e:	jmp	0x1c616
0x1c933:	nop	dword ptr [rax + rax]
0x1c938:	cmp	dword ptr [rsp + 0x10], 1
0x1c93d:	je	0x1c9ca
0x1c943:	fld	xword ptr [rip + 0x5bf7]
0x1c949:	fcomip	st(1)
0x1c94b:	jbe	0x1c9ca
0x1c94d:	fld	dword ptr [rip + 0x5bdd]
0x1c953:	fxch	st(1)
0x1c955:	fcomi	st(1)
0x1c957:	jae	0x1ce60
0x1c95d:	fstp	st(1)
0x1c95f:	fnstcw	word ptr [rsp + 0x4e]
0x1c963:	movzx	eax, word ptr [rsp + 0x4e]
0x1c968:	or	ah, 0xc
0x1c96b:	mov	word ptr [rsp + 0x4c], ax
0x1c970:	fld	st(0)
0x1c972:	fldcw	word ptr [rsp + 0x4c]
0x1c976:	fistp	qword ptr [rsp + 0x20]
0x1c97a:	fldcw	word ptr [rsp + 0x4e]
0x1c97e:	mov	rax, qword ptr [rsp + 0x20]
0x1c983:	mov	qword ptr [rsp + 0x20], rax
0x1c988:	fild	qword ptr [rsp + 0x20]
0x1c98c:	test	rax, rax
0x1c98f:	jns	0x1c997
0x1c991:	fadd	dword ptr [rip + 0x5b95]
0x1c997:	mov	r8d, dword ptr [rsp + 0x10]
0x1c99c:	test	r8d, r8d
0x1c99f:	jne	0x1c9c8
0x1c9a1:	fxch	st(1)
0x1c9a3:	fucomip	st(1)
0x1c9a5:	jp	0x1c9ad
0x1c9a7:	je	0x1c9ca
0x1c9a9:	fstp	st(0)
0x1c9ab:	jmp	0x1c9af
0x1c9ad:	fstp	st(0)
0x1c9af:	add	rax, 1
0x1c9b3:	mov	qword ptr [rsp + 0x10], rax
0x1c9b8:	fild	qword ptr [rsp + 0x10]
0x1c9bc:	js	0x1cee7
0x1c9c2:	jmp	0x1c9ca
0x1c9c4:	nop	dword ptr [rax]
0x1c9c8:	fstp	st(1)
0x1c9ca:	sub	rsp, 0x10
0x1c9ce:	mov	rdx, -1
0x1c9d5:	mov	esi, 1
0x1c9da:	xor	eax, eax
0x1c9dc:	mov	rbx, qword ptr [rsp + 0x10]
0x1c9e1:	lea	rcx, [rip + 0x5adc]
0x1c9e8:	fstp	xword ptr [rsp]
0x1c9eb:	mov	rdi, rbx
0x1c9ee:	call	0x4f10
0x1c9f3:	mov	rdi, rbx
0x1c9f6:	mov	ebx, 0xffffffff
0x1c9fb:	call	0x49b0
0x1ca00:	pop	rsi
0x1ca01:	pop	rdi
0x1ca02:	mov	rdx, rax
0x1ca05:	mov	r12, rax
0x1ca08:	mov	rbp, qword ptr [rsp + 8]
0x1ca0d:	mov	rsi, qword ptr [rsp]
0x1ca11:	sub	rbp, rdx
0x1ca14:	mov	rdi, rbp
0x1ca17:	call	0x4d40
0x1ca1c:	lea	r8, [rbp + r12]
0x1ca21:	test	byte ptr [rsp + 0x48], 4
0x1ca26:	jne	0x1c830
0x1ca2c:	test	byte ptr [rsp + 0x48], 0x80
0x1ca31:	je	0x1ca4f
0x1ca33:	cmp	ebx, -1
0x1ca36:	je	0x1cbb8
0x1ca3c:	mov	eax, dword ptr [rsp + 0x48]
0x1ca40:	and	eax, 0x100
0x1ca45:	mov	esi, eax
0x1ca47:	or	esi, ebx
0x1ca49:	jne	0x1cd08
0x1ca4f:	mov	rax, qword ptr [rsp + 8]
0x1ca54:	mov	byte ptr [rax], 0
0x1ca57:	mov	rax, qword ptr [rsp + 0x88]
0x1ca5f:	sub	rax, qword ptr fs:[0x28]
0x1ca68:	jne	0x1d0eb
0x1ca6e:	add	rsp, 0x98
0x1ca75:	mov	rax, rbp
0x1ca78:	pop	rbx
0x1ca79:	pop	rbp
0x1ca7a:	pop	r12
0x1ca7c:	pop	r13
0x1ca7e:	pop	r14
0x1ca80:	pop	r15
0x1ca82:	ret	
0x1ca83:	nop	dword ptr [rax + rax]
0x1ca88:	mov	r13, rbx
0x1ca8b:	mov	rsi, qword ptr [rsp + 0x10]
0x1ca90:	xor	ebx, ebx
0x1ca92:	jmp	0x1c8e2
0x1ca97:	nop	word ptr [rax + rax]
0x1caa0:	mov	ebx, dword ptr [rsp + 0x20]
0x1caa4:	jmp	0x1ca2c
0x1caa6:	nop	word ptr cs:[rax + rax]
0x1cab0:	test	esi, esi
0x1cab2:	setne	sil
0x1cab6:	movzx	esi, sil
0x1caba:	add	ebx, 1
0x1cabd:	cmp	r8, r9
0x1cac0:	ja	0x1cf18
0x1cac6:	cmp	ebx, 8
0x1cac9:	je	0x1c7af
0x1cacf:	mov	rax, rcx
0x1cad2:	xor	edx, edx
0x1cad4:	mov	ecx, esi
0x1cad6:	div	r8
0x1cad9:	sar	ecx, 1
0x1cadb:	mov	r9, rax
0x1cade:	lea	eax, [rdx + rdx*4]
0x1cae1:	xor	edx, edx
0x1cae3:	lea	eax, [rdi + rax*2]
0x1cae6:	div	r11d
0x1cae9:	lea	edx, [rcx + rdx*2]
0x1caec:	mov	edi, eax
0x1caee:	mov	rcx, r9
0x1caf1:	add	esi, edx
0x1caf3:	cmp	r11d, edx
0x1caf6:	ja	0x1cab0
0x1caf8:	cmp	r11d, esi
0x1cafb:	setb	sil
0x1caff:	movzx	esi, sil
0x1cb03:	add	esi, 2
0x1cb06:	jmp	0x1caba
0x1cb08:	nop	dword ptr [rax + rax]
0x1cb10:	fld	st(0)
0x1cb12:	jmp	0x1cb20
0x1cb14:	nop	dword ptr [rax]
0x1cb18:	fxch	st(1)
0x1cb1a:	jmp	0x1cb20
0x1cb1c:	fxch	st(1)
0x1cb1e:	nop	
0x1cb20:	fstp	xword ptr [rsp + 0x20]
0x1cb24:	sub	rsp, 0x10
0x1cb28:	mov	esi, 1
0x1cb2d:	xor	eax, eax
0x1cb2f:	mov	r12, qword ptr [rsp + 0x10]
0x1cb34:	lea	rcx, [rip + 0x598f]
0x1cb3b:	mov	rdx, -1
0x1cb42:	mov	rdi, r12
0x1cb45:	fstp	xword ptr [rsp]
0x1cb48:	call	0x4f10
0x1cb4d:	mov	rdi, r12
0x1cb50:	call	0x49b0
0x1cb55:	mov	rdx, rax
0x1cb58:	pop	rax
0x1cb59:	pop	rcx
0x1cb5a:	fld	xword ptr [rsp + 0x20]
0x1cb5e:	cmp	rdx, rbp
0x1cb61:	ja	0x1cd20
0x1cb67:	test	byte ptr [rsp + 0x48], 8
0x1cb6c:	je	0x1cb88
0x1cb6e:	mov	rax, qword ptr [rsp]
0x1cb72:	cmp	byte ptr [rax + rdx - 1], 0x30
0x1cb77:	je	0x1ce40
0x1cb7d:	fstp	st(0)
0x1cb7f:	jmp	0x1cb8a
0x1cb81:	nop	dword ptr [rax]
0x1cb88:	fstp	st(0)
0x1cb8a:	mov	r12, rdx
0x1cb8d:	sub	r12, r15
0x1cb90:	jmp	0x1ca08
0x1cb95:	nop	dword ptr [rax]
0x1cb98:	mov	r10d, dword ptr [rsp + 0x48]
0x1cb9d:	xor	esi, esi
0x1cb9f:	xor	edi, edi
0x1cba1:	and	r10d, 0x10
0x1cba5:	jne	0x1c79c
0x1cbab:	mov	ebx, 0xffffffff
0x1cbb0:	jmp	0x1c7af
0x1cbb5:	nop	dword ptr [rax]
0x1cbb8:	mov	rcx, qword ptr [rsp + 0x18]
0x1cbbd:	cmp	rcx, 1
0x1cbc1:	jbe	0x1cfca
0x1cbc7:	mov	edx, dword ptr [rsp + 0x34]
0x1cbcb:	mov	ebx, 1
0x1cbd0:	mov	eax, 1
0x1cbd5:	nop	dword ptr [rax]
0x1cbd8:	imul	rax, rdx
0x1cbdc:	cmp	rcx, rax
0x1cbdf:	jbe	0x1cbe9
0x1cbe1:	add	ebx, 1
0x1cbe4:	cmp	ebx, 8
0x1cbe7:	jne	0x1cbd8
0x1cbe9:	mov	esi, dword ptr [rsp + 0x48]
0x1cbed:	mov	eax, esi
0x1cbef:	and	eax, 0x100
0x1cbf4:	and	esi, 0x40
0x1cbf7:	je	0x1cc18
0x1cbf9:	mov	rsi, qword ptr [rsp]
0x1cbfd:	lea	rdi, [rsi + 0x289]
0x1cc04:	mov	byte ptr [rsi + 0x288], 0x20
0x1cc0b:	mov	qword ptr [rsp + 8], rdi
0x1cc10:	test	ebx, ebx
0x1cc12:	je	0x1d105
0x1cc18:	mov	rsi, qword ptr [rsp + 8]
0x1cc1d:	mov	r9d, dword ptr [rsp + 0x30]
0x1cc22:	lea	rdx, [rsi + 1]
0x1cc26:	test	r9d, r9d
0x1cc29:	jne	0x1cc34
0x1cc2b:	cmp	ebx, 1
0x1cc2e:	je	0x1cf00
0x1cc34:	movsxd	rbx, ebx
0x1cc37:	lea	rcx, [rip + 0x58e2]
0x1cc3e:	movzx	ecx, byte ptr [rcx + rbx]
0x1cc42:	mov	byte ptr [rsi], cl
0x1cc44:	test	eax, eax
0x1cc46:	je	0x1cf0b
0x1cc4c:	mov	r8d, dword ptr [rsp + 0x30]
0x1cc51:	test	r8d, r8d
0x1cc54:	jne	0x1ce30
0x1cc5a:	lea	rax, [rdx + 1]
0x1cc5e:	mov	byte ptr [rdx], 0x42
0x1cc61:	mov	qword ptr [rsp + 8], rax
0x1cc66:	jmp	0x1ca4f
0x1cc6b:	nop	dword ptr [rax + rax]
0x1cc70:	sub	rsp, 0x10
0x1cc74:	mov	rdx, -1
0x1cc7b:	mov	esi, 1
0x1cc80:	xor	eax, eax
0x1cc82:	fld	st(0)
0x1cc84:	fstp	xword ptr [rsp]
0x1cc87:	mov	r12, qword ptr [rsp + 0x10]
0x1cc8c:	lea	rcx, [rip + 0x5837]
0x1cc93:	mov	rdi, r12
0x1cc96:	fstp	xword ptr [rsp + 0x30]
0x1cc9a:	call	0x4f10
0x1cc9f:	mov	rdi, r12
0x1cca2:	call	0x49b0
0x1cca7:	pop	rsi
0x1cca8:	pop	rdi
0x1cca9:	fld	xword ptr [rsp + 0x20]
0x1ccad:	cmp	rax, rbp
0x1ccb0:	mov	rdx, rax
0x1ccb3:	jbe	0x1cb67
0x1ccb9:	fld	dword ptr [rip + 0x5875]
0x1ccbf:	fmul	st(1), st(0)
0x1ccc1:	fdivp	st(1)
0x1ccc3:	sub	rsp, 0x10
0x1ccc7:	mov	rdx, -1
0x1ccce:	xor	eax, eax
0x1ccd0:	mov	r15, qword ptr [rsp + 0x10]
0x1ccd5:	lea	rcx, [rip + 0x57e8]
0x1ccdc:	mov	esi, 1
0x1cce1:	mov	rdi, r15
0x1cce4:	fstp	xword ptr [rsp]
0x1cce7:	call	0x4f10
0x1ccec:	mov	rdi, r15
0x1ccef:	call	0x49b0
0x1ccf4:	pop	r13
0x1ccf6:	pop	r15
0x1ccf8:	mov	rdx, rax
0x1ccfb:	mov	r12, rax
0x1ccfe:	jmp	0x1ca08
0x1cd03:	nop	dword ptr [rax + rax]
0x1cd08:	test	byte ptr [rsp + 0x48], 0x40
0x1cd0d:	je	0x1cc10
0x1cd13:	jmp	0x1cbf9
0x1cd18:	nop	dword ptr [rax + rax]
0x1cd20:	fld	dword ptr [rip + 0x580e]
0x1cd26:	fmul	st(1), st(0)
0x1cd28:	fld	xword ptr [rip + 0x5812]
0x1cd2e:	fcomip	st(2)
0x1cd30:	jbe	0x1ccc1
0x1cd32:	fld	dword ptr [rip + 0x57f8]
0x1cd38:	fxch	st(2)
0x1cd3a:	fcomi	st(2)
0x1cd3c:	jae	0x1ce90
0x1cd42:	fstp	st(2)
0x1cd44:	fxch	st(1)
0x1cd46:	fnstcw	word ptr [rsp + 0x4e]
0x1cd4a:	movzx	eax, word ptr [rsp + 0x4e]
0x1cd4f:	or	ah, 0xc
0x1cd52:	mov	word ptr [rsp + 0x4c], ax
0x1cd57:	fld	st(0)
0x1cd59:	fldcw	word ptr [rsp + 0x4c]
0x1cd5d:	fistp	qword ptr [rsp + 0x20]
0x1cd61:	fldcw	word ptr [rsp + 0x4e]
0x1cd65:	mov	rax, qword ptr [rsp + 0x20]
0x1cd6a:	mov	qword ptr [rsp + 0x20], rax
0x1cd6f:	fild	qword ptr [rsp + 0x20]
0x1cd73:	test	rax, rax
0x1cd76:	jns	0x1cd7e
0x1cd78:	fadd	dword ptr [rip + 0x57ae]
0x1cd7e:	mov	edx, dword ptr [rsp + 0x10]
0x1cd82:	test	edx, edx
0x1cd84:	jne	0x1cdb0
0x1cd86:	fucomi	st(1)
0x1cd88:	fstp	st(1)
0x1cd8a:	jp	0x1cd92
0x1cd8c:	je	0x1cdb2
0x1cd8e:	fstp	st(0)
0x1cd90:	jmp	0x1cd94
0x1cd92:	fstp	st(0)
0x1cd94:	add	rax, 1
0x1cd98:	mov	qword ptr [rsp + 0x10], rax
0x1cd9d:	fild	qword ptr [rsp + 0x10]
0x1cda1:	js	0x1cef2
0x1cda7:	jmp	0x1cdb2
0x1cda9:	nop	dword ptr [rax]
0x1cdb0:	fstp	st(1)
0x1cdb2:	fxch	st(1)
0x1cdb4:	jmp	0x1ccc1
0x1cdb9:	nop	dword ptr [rax]
0x1cdc0:	mov	rax, rcx
0x1cdc3:	movsxd	rsi, esi
0x1cdc6:	and	eax, 1
0x1cdc9:	add	rax, rsi
0x1cdcc:	setne	al
0x1cdcf:	movzx	eax, al
0x1cdd2:	add	eax, edi
0x1cdd4:	cmp	eax, 5
0x1cdd7:	jg	0x1c7cf
0x1cddd:	jmp	0x1c7e8
0x1cde2:	nop	word ptr [rax + rax]
0x1cde8:	mov	esi, 2
0x1cded:	mov	eax, 3
0x1cdf2:	cmovb	esi, eax
0x1cdf5:	jmp	0x1c78d
0x1cdfa:	nop	word ptr [rax + rax]
0x1ce00:	fnstcw	word ptr [rsp + 0x4e]
0x1ce04:	fsubr	st(1), st(0)
0x1ce06:	fxch	st(1)
0x1ce08:	movzx	eax, word ptr [rsp + 0x4e]
0x1ce0d:	or	ah, 0xc
0x1ce10:	mov	word ptr [rsp + 0x4c], ax
0x1ce15:	fldcw	word ptr [rsp + 0x4c]
0x1ce19:	fistp	qword ptr [rsp + 0x20]
0x1ce1d:	fldcw	word ptr [rsp + 0x4e]
0x1ce21:	mov	rax, qword ptr [rsp + 0x20]
0x1ce26:	btc	rax, 0x3f
0x1ce2b:	jmp	0x1c6e2
0x1ce30:	mov	byte ptr [rsi + 1], 0x69
0x1ce34:	lea	rdx, [rsi + 2]
0x1ce38:	jmp	0x1cc5a
0x1ce3d:	nop	dword ptr [rax]
0x1ce40:	fld	dword ptr [rip + 0x56ee]
0x1ce46:	cmp	dword ptr [rsp + 0x10], 1
0x1ce4b:	fmul	st(1), st(0)
0x1ce4d:	jne	0x1cd28
0x1ce53:	jmp	0x1ccc1
0x1ce58:	nop	dword ptr [rax + rax]
0x1ce60:	fnstcw	word ptr [rsp + 0x4e]
0x1ce64:	fsubr	st(1), st(0)
0x1ce66:	fxch	st(1)
0x1ce68:	movzx	eax, word ptr [rsp + 0x4e]
0x1ce6d:	or	ah, 0xc
0x1ce70:	mov	word ptr [rsp + 0x4c], ax
0x1ce75:	fldcw	word ptr [rsp + 0x4c]
0x1ce79:	fistp	qword ptr [rsp + 0x20]
0x1ce7d:	fldcw	word ptr [rsp + 0x4e]
0x1ce81:	mov	rax, qword ptr [rsp + 0x20]
0x1ce86:	btc	rax, 0x3f
0x1ce8b:	jmp	0x1c983
0x1ce90:	fnstcw	word ptr [rsp + 0x4e]
0x1ce94:	fsubr	st(2), st(0)
0x1ce96:	fxch	st(2)
0x1ce98:	movzx	eax, word ptr [rsp + 0x4e]
0x1ce9d:	or	ah, 0xc
0x1cea0:	mov	word ptr [rsp + 0x4c], ax
0x1cea5:	fldcw	word ptr [rsp + 0x4c]
0x1cea9:	fistp	qword ptr [rsp + 0x20]
0x1cead:	fldcw	word ptr [rsp + 0x4e]
0x1ceb1:	fxch	st(1)
0x1ceb3:	mov	rax, qword ptr [rsp + 0x20]
0x1ceb8:	btc	rax, 0x3f
0x1cebd:	jmp	0x1cd6a
0x1cec2:	cmp	ebx, 8
0x1cec5:	je	0x1c7e8
0x1cecb:	add	ebx, 1
0x1cece:	test	byte ptr [rsp + 0x48], 8
0x1ced3:	je	0x1d039
0x1ced9:	mov	byte ptr [r8 - 1], 0x31
0x1cede:	lea	rbp, [r8 - 1]
0x1cee2:	jmp	0x1ca21
0x1cee7:	fadd	dword ptr [rip + 0x563f]
0x1ceed:	jmp	0x1c9ca
0x1cef2:	fadd	dword ptr [rip + 0x5634]
0x1cef8:	fxch	st(1)
0x1cefa:	jmp	0x1ccc1
0x1ceff:	nop	
0x1cf00:	mov	byte ptr [rsi], 0x6b
0x1cf03:	test	eax, eax
0x1cf05:	jne	0x1cc5a
0x1cf0b:	mov	qword ptr [rsp + 8], rdx
0x1cf10:	jmp	0x1ca4f
0x1cf15:	nop	dword ptr [rax]
0x1cf18:	cmp	r9, 9
0x1cf1c:	ja	0x1c7af
0x1cf22:	cmp	dword ptr [rsp + 0x10], 1
0x1cf27:	je	0x1cfa0
0x1cf29:	mov	r12d, dword ptr [rsp + 0x10]
0x1cf2e:	test	r12d, r12d
0x1cf31:	jne	0x1cfac
0x1cf33:	test	esi, esi
0x1cf35:	je	0x1cfac
0x1cf37:	lea	edx, [rax + 1]
0x1cf3a:	cmp	eax, 9
0x1cf3d:	je	0x1d024
0x1cf43:	lea	eax, [rdx + 0x30]
0x1cf46:	mov	rdi, qword ptr [rsp]
0x1cf4a:	lea	r8, [rdi + 0x287]
0x1cf51:	mov	byte ptr [rdi + 0x287], al
0x1cf57:	mov	eax, ebp
0x1cf59:	sub	r8, rbp
0x1cf5c:	cmp	ebp, 8
0x1cf5f:	jae	0x1cfd1
0x1cf61:	test	bpl, 4
0x1cf65:	jne	0x1d0d6
0x1cf6b:	test	eax, eax
0x1cf6d:	je	0x1cf7a
0x1cf6f:	movzx	edx, byte ptr [r15]
0x1cf73:	mov	byte ptr [r8], dl
0x1cf76:	test	al, 2
0x1cf78:	jne	0x1cf8e
0x1cf7a:	xor	esi, esi
0x1cf7c:	xor	edi, edi
0x1cf7e:	cmp	dword ptr [rsp + 0x10], 1
0x1cf83:	jne	0x1c7bf
0x1cf89:	jmp	0x1c7e8
0x1cf8e:	movzx	edx, word ptr [r15 + rax - 2]
0x1cf94:	mov	word ptr [r8 + rax - 2], dx
0x1cf9a:	jmp	0x1cf7a
0x1cf9c:	nop	dword ptr [rax]
0x1cfa0:	mov	edx, eax
0x1cfa2:	and	edx, 1
0x1cfa5:	add	edx, esi
0x1cfa7:	cmp	edx, 2
0x1cfaa:	jg	0x1cf37
0x1cfac:	test	eax, eax
0x1cfae:	jne	0x1d117
0x1cfb4:	mov	r8, qword ptr [rsp + 8]
0x1cfb9:	test	byte ptr [rsp + 0x48], 8
0x1cfbe:	jne	0x1cf7c
0x1cfc0:	mov	eax, 0x30
0x1cfc5:	jmp	0x1cf46
0x1cfca:	xor	ebx, ebx
0x1cfcc:	jmp	0x1ca3c
0x1cfd1:	mov	rax, qword ptr [r15]
0x1cfd4:	lea	rsi, [r8 + 8]
0x1cfd8:	mov	rdi, r15
0x1cfdb:	and	rsi, 0xfffffffffffffff8
0x1cfdf:	mov	qword ptr [r8], rax
0x1cfe2:	mov	eax, ebp
0x1cfe4:	mov	rdx, qword ptr [r15 + rax - 8]
0x1cfe9:	mov	qword ptr [r8 + rax - 8], rdx
0x1cfee:	mov	rax, r8
0x1cff1:	sub	rax, rsi
0x1cff4:	sub	rdi, rax
0x1cff7:	add	eax, ebp
0x1cff9:	and	eax, 0xfffffff8
0x1cffc:	cmp	eax, 8
0x1cfff:	jb	0x1cf7a
0x1d005:	and	eax, 0xfffffff8
0x1d008:	mov	r9d, eax
0x1d00b:	xor	eax, eax
0x1d00d:	mov	edx, eax
0x1d00f:	add	eax, 8
0x1d012:	mov	r11, qword ptr [rdi + rdx]
0x1d016:	mov	qword ptr [rsi + rdx], r11
0x1d01a:	cmp	eax, r9d
0x1d01d:	jb	0x1d00d
0x1d01f:	jmp	0x1cf7a
0x1d024:	lea	rcx, [r9 + 1]
0x1d028:	cmp	r9, 9
0x1d02c:	je	0x1d0cc
0x1d032:	xor	esi, esi
0x1d034:	jmp	0x1cfb4
0x1d039:	mov	rax, rbp
0x1d03c:	mov	byte ptr [r8 - 1], 0x30
0x1d041:	not	rax
0x1d044:	add	r8, rax
0x1d047:	mov	eax, ebp
0x1d049:	cmp	ebp, 8
0x1d04c:	jae	0x1d080
0x1d04e:	and	ebp, 4
0x1d051:	jne	0x1d0f0
0x1d057:	test	eax, eax
0x1d059:	je	0x1ced9
0x1d05f:	movzx	edx, byte ptr [r15]
0x1d063:	mov	byte ptr [r8], dl
0x1d066:	test	al, 2
0x1d068:	je	0x1ced9
0x1d06e:	movzx	edx, word ptr [r15 + rax - 2]
0x1d074:	mov	word ptr [r8 + rax - 2], dx
0x1d07a:	jmp	0x1ced9
0x1d07f:	nop	
0x1d080:	mov	rax, qword ptr [r15]
0x1d083:	lea	rcx, [r8 + 8]
0x1d087:	and	rcx, 0xfffffffffffffff8
0x1d08b:	mov	qword ptr [r8], rax
0x1d08e:	mov	eax, ebp
0x1d090:	mov	rdx, qword ptr [r15 + rax - 8]
0x1d095:	mov	qword ptr [r8 + rax - 8], rdx
0x1d09a:	mov	rax, r8
0x1d09d:	sub	rax, rcx
0x1d0a0:	sub	r15, rax
0x1d0a3:	add	eax, ebp
0x1d0a5:	and	eax, 0xfffffff8
0x1d0a8:	cmp	eax, 8
0x1d0ab:	jb	0x1ced9
0x1d0b1:	and	eax, 0xfffffff8
0x1d0b4:	xor	edx, edx
0x1d0b6:	mov	esi, edx
0x1d0b8:	add	edx, 8
0x1d0bb:	mov	rdi, qword ptr [r15 + rsi]
0x1d0bf:	mov	qword ptr [rcx + rsi], rdi
0x1d0c3:	cmp	edx, eax
0x1d0c5:	jb	0x1d0b6
0x1d0c7:	jmp	0x1ced9
0x1d0cc:	mov	r8, qword ptr [rsp + 8]
0x1d0d1:	jmp	0x1cf7a
0x1d0d6:	mov	edx, dword ptr [r15]
0x1d0d9:	mov	dword ptr [r8], edx
0x1d0dc:	mov	edx, dword ptr [r15 + rax - 4]
0x1d0e1:	mov	dword ptr [r8 + rax - 4], edx
0x1d0e6:	jmp	0x1cf7a
0x1d0eb:	call	0x49d0
0x1d0f0:	mov	edx, dword ptr [r15]
0x1d0f3:	mov	dword ptr [r8], edx
0x1d0f6:	mov	edx, dword ptr [r15 + rax - 4]
0x1d0fb:	mov	dword ptr [r8 + rax - 4], edx
0x1d100:	jmp	0x1ced9
0x1d105:	mov	rdx, qword ptr [rsp + 8]
0x1d10a:	test	eax, eax
0x1d10c:	jne	0x1cc5a
0x1d112:	jmp	0x1ca4f
0x1d117:	add	eax, 0x30
0x1d11a:	jmp	0x1cf46
0x1d11f:	nop	
0x1d120:	endbr64	
0x1d124:	push	r14
0x1d126:	push	r13
0x1d128:	mov	r13, rsi
0x1d12b:	push	r12
0x1d12d:	push	rbp
0x1d12e:	mov	rbp, rdx
0x1d131:	push	rbx
0x1d132:	mov	rbx, rdi
0x1d135:	sub	rsp, 0x10
0x1d139:	mov	rax, qword ptr fs:[0x28]
0x1d142:	mov	qword ptr [rsp + 8], rax
0x1d147:	xor	eax, eax
0x1d149:	test	rdi, rdi
0x1d14c:	je	0x1d270
0x1d152:	xor	r12d, r12d
0x1d155:	cmp	byte ptr [rbx], 0x27
0x1d158:	jne	0x1d164
0x1d15a:	add	rbx, 1
0x1d15e:	mov	r12d, 4
0x1d164:	lea	r14, [rip + 0x53ad]
0x1d16b:	mov	ecx, 4
0x1d170:	lea	rsi, [rip + 0xb819]
0x1d177:	mov	rdi, rbx
0x1d17a:	mov	rdx, r14
0x1d17d:	call	0x1dc80
0x1d182:	test	eax, eax
0x1d184:	js	0x1d1c0
0x1d186:	cdqe	
0x1d188:	mov	qword ptr [rbp], 1
0x1d190:	or	r12d, dword ptr [r14 + rax*4]
0x1d194:	xor	eax, eax
0x1d196:	mov	dword ptr [r13], r12d
0x1d19a:	mov	rdx, qword ptr [rsp + 8]
0x1d19f:	sub	rdx, qword ptr fs:[0x28]
0x1d1a8:	jne	0x1d2fd
0x1d1ae:	add	rsp, 0x10
0x1d1b2:	pop	rbx
0x1d1b3:	pop	rbp
0x1d1b4:	pop	r12
0x1d1b6:	pop	r13
0x1d1b8:	pop	r14
0x1d1ba:	ret	
0x1d1bb:	nop	dword ptr [rax + rax]
0x1d1c0:	xor	edx, edx
0x1d1c2:	mov	rsi, rsp
0x1d1c5:	lea	r8, [rip + 0x5329]
0x1d1cc:	mov	rcx, rbp
0x1d1cf:	mov	rdi, rbx
0x1d1d2:	call	0x1d7e0
0x1d1d7:	test	eax, eax
0x1d1d9:	jne	0x1d228
0x1d1db:	movzx	ecx, byte ptr [rbx]
0x1d1de:	lea	edx, [rcx - 0x30]
0x1d1e1:	mov	rcx, qword ptr [rsp]
0x1d1e5:	cmp	dl, 9
0x1d1e8:	ja	0x1d200
0x1d1ea:	jmp	0x1d217
0x1d1ec:	nop	dword ptr [rax]
0x1d1f0:	movzx	edi, byte ptr [rbx + 1]
0x1d1f4:	add	rbx, 1
0x1d1f8:	lea	edx, [rdi - 0x30]
0x1d1fb:	cmp	dl, 9
0x1d1fe:	jbe	0x1d217
0x1d200:	cmp	rcx, rbx
0x1d203:	jne	0x1d1f0
0x1d205:	cmp	byte ptr [rcx - 1], 0x42
0x1d209:	je	0x1d2d0
0x1d20f:	or	r12b, 0x80
0x1d213:	or	r12d, 0x20
0x1d217:	mov	rdx, qword ptr [rbp]
0x1d21b:	mov	dword ptr [r13], r12d
0x1d21f:	jmp	0x1d234
0x1d221:	nop	dword ptr [rax]
0x1d228:	mov	dword ptr [r13], 0
0x1d230:	mov	rdx, qword ptr [rbp]
0x1d234:	test	rdx, rdx
0x1d237:	jne	0x1d19a
0x1d23d:	lea	rdi, [rip + 0x52a1]
0x1d244:	call	0x47e0
0x1d249:	cmp	rax, 1
0x1d24d:	sbb	rax, rax
0x1d250:	and	eax, 0x200
0x1d255:	add	rax, 0x200
0x1d25b:	mov	qword ptr [rbp], rax
0x1d25f:	mov	eax, 4
0x1d264:	jmp	0x1d19a
0x1d269:	nop	dword ptr [rax]
0x1d270:	lea	rdi, [rip + 0x5259]
0x1d277:	call	0x47e0
0x1d27c:	mov	rbx, rax
0x1d27f:	test	rax, rax
0x1d282:	jne	0x1d152
0x1d288:	lea	rdi, [rip + 0x524c]
0x1d28f:	call	0x47e0
0x1d294:	mov	rbx, rax
0x1d297:	test	rax, rax
0x1d29a:	jne	0x1d152
0x1d2a0:	lea	rdi, [rip + 0x523e]
0x1d2a7:	call	0x47e0
0x1d2ac:	test	rax, rax
0x1d2af:	je	0x1d2e6
0x1d2b1:	mov	qword ptr [rbp], 0x200
0x1d2b9:	xor	eax, eax
0x1d2bb:	mov	dword ptr [r13], 0
0x1d2c3:	jmp	0x1d19a
0x1d2c8:	nop	dword ptr [rax + rax]
0x1d2d0:	or	r12d, 0x180
0x1d2d7:	cmp	byte ptr [rcx - 2], 0x69
0x1d2db:	jne	0x1d217
0x1d2e1:	jmp	0x1d213
0x1d2e6:	mov	qword ptr [rbp], 0x400
0x1d2ee:	xor	eax, eax
0x1d2f0:	mov	dword ptr [r13], 0
0x1d2f8:	jmp	0x1d19a
0x1d2fd:	call	0x49d0
0x1d302:	nop	word ptr cs:[rax + rax]
0x1d30c:	nop	dword ptr [rax]
0x1d310:	endbr64	
0x1d314:	push	r12
0x1d316:	push	rbp
0x1d317:	mov	ebp, edi
0x1d319:	push	rbx
0x1d31a:	mov	rbx, qword ptr [rip + 0xe81f]
0x1d321:	test	rbx, rbx
0x1d324:	jne	0x1d339
0x1d326:	jmp	0x1d350
0x1d328:	nop	dword ptr [rax + rax]
0x1d330:	mov	rbx, qword ptr [rbx + 8]
0x1d334:	test	rbx, rbx
0x1d337:	je	0x1d350
0x1d339:	cmp	dword ptr [rbx], ebp
0x1d33b:	jne	0x1d330
0x1d33d:	xor	eax, eax
0x1d33f:	cmp	byte ptr [rbx + 0x10], 0
0x1d343:	je	0x1d349
0x1d345:	lea	rax, [rbx + 0x10]
0x1d349:	pop	rbx
0x1d34a:	pop	rbp
0x1d34b:	pop	r12
0x1d34d:	ret	
0x1d34e:	nop	
0x1d350:	mov	edi, ebp
0x1d352:	lea	r12, [rip + 0x508c]
0x1d359:	call	0x4970
0x1d35e:	mov	edi, 0x11
0x1d363:	test	rax, rax
0x1d366:	je	0x1d377
0x1d368:	mov	r12, qword ptr [rax]
0x1d36b:	mov	rdi, r12
0x1d36e:	call	0x49b0
0x1d373:	lea	rdi, [rax + 0x11]
0x1d377:	call	0x1d670
0x1d37c:	mov	rsi, r12
0x1d37f:	mov	dword ptr [rax], ebp
0x1d381:	lea	rdi, [rax + 0x10]
0x1d385:	mov	rbx, rax
0x1d388:	call	0x48b0
0x1d38d:	mov	rax, qword ptr [rip + 0xe7ac]
0x1d394:	mov	qword ptr [rip + 0xe7a5], rbx
0x1d39b:	mov	qword ptr [rbx + 8], rax
0x1d39f:	jmp	0x1d33d
0x1d3a1:	nop	word ptr cs:[rax + rax]
0x1d3ac:	nop	dword ptr [rax]
0x1d3b0:	endbr64	
0x1d3b4:	push	r12
0x1d3b6:	push	rbp
0x1d3b7:	mov	rbp, rdi
0x1d3ba:	push	rbx
0x1d3bb:	mov	rbx, qword ptr [rip + 0xe77e]
0x1d3c2:	test	rbx, rbx
0x1d3c5:	je	0x1d400
0x1d3c7:	movzx	r12d, byte ptr [rdi]
0x1d3cb:	jmp	0x1d3d9
0x1d3cd:	nop	dword ptr [rax]
0x1d3d0:	mov	rbx, qword ptr [rbx + 8]
0x1d3d4:	test	rbx, rbx
0x1d3d7:	je	0x1d400
0x1d3d9:	cmp	byte ptr [rbx + 0x10], r12b
0x1d3dd:	jne	0x1d3d0
0x1d3df:	lea	rdi, [rbx + 0x10]
0x1d3e3:	mov	rsi, rbp
0x1d3e6:	call	0x4b30
0x1d3eb:	test	eax, eax
0x1d3ed:	jne	0x1d3d0
0x1d3ef:	mov	r12, rbx
0x1d3f2:	pop	rbx
0x1d3f3:	pop	rbp
0x1d3f4:	mov	rax, r12
0x1d3f7:	pop	r12
0x1d3f9:	ret	
0x1d3fa:	nop	word ptr [rax + rax]
0x1d400:	mov	rbx, qword ptr [rip + 0xe731]
0x1d407:	test	rbx, rbx
0x1d40a:	je	0x1d448
0x1d40c:	movzx	r12d, byte ptr [rbp]
0x1d411:	jmp	0x1d421
0x1d413:	nop	dword ptr [rax + rax]
0x1d418:	mov	rbx, qword ptr [rbx + 8]
0x1d41c:	test	rbx, rbx
0x1d41f:	je	0x1d448
0x1d421:	cmp	byte ptr [rbx + 0x10], r12b
0x1d425:	jne	0x1d418
0x1d427:	lea	rdi, [rbx + 0x10]
0x1d42b:	mov	rsi, rbp
0x1d42e:	call	0x4b30
0x1d433:	test	eax, eax
0x1d435:	jne	0x1d418
0x1d437:	xor	r12d, r12d
0x1d43a:	pop	rbx
0x1d43b:	pop	rbp
0x1d43c:	mov	rax, r12
0x1d43f:	pop	r12
0x1d441:	ret	
0x1d442:	nop	word ptr [rax + rax]
0x1d448:	mov	rdi, rbp
0x1d44b:	call	0x4b60
0x1d450:	mov	rdi, rbp
0x1d453:	mov	r12, rax
0x1d456:	call	0x49b0
0x1d45b:	lea	rdi, [rax + 0x11]
0x1d45f:	call	0x1d670
0x1d464:	mov	rsi, rbp
0x1d467:	lea	rdi, [rax + 0x10]
0x1d46b:	mov	rbx, rax
0x1d46e:	call	0x48b0
0x1d473:	test	r12, r12
0x1d476:	je	0x1d4a0
0x1d478:	mov	eax, dword ptr [r12 + 0x10]
0x1d47d:	mov	dword ptr [rbx], eax
0x1d47f:	mov	rax, qword ptr [rip + 0xe6ba]
0x1d486:	mov	qword ptr [rip + 0xe6b3], rbx
0x1d48d:	mov	qword ptr [rbx + 8], rax
0x1d491:	jmp	0x1d3ef
0x1d496:	nop	word ptr cs:[rax + rax]
0x1d4a0:	mov	rax, qword ptr [rip + 0xe691]
0x1d4a7:	mov	qword ptr [rip + 0xe68a], rbx
0x1d4ae:	mov	qword ptr [rbx + 8], rax
0x1d4b2:	mov	rax, r12
0x1d4b5:	pop	rbx
0x1d4b6:	pop	rbp
0x1d4b7:	pop	r12
0x1d4b9:	ret	
0x1d4ba:	nop	word ptr [rax + rax]
0x1d4c0:	endbr64	
0x1d4c4:	push	r12
0x1d4c6:	push	rbp
0x1d4c7:	mov	ebp, edi
0x1d4c9:	push	rbx
0x1d4ca:	mov	rbx, qword ptr [rip + 0xe65f]
0x1d4d1:	test	rbx, rbx
0x1d4d4:	jne	0x1d4e9
0x1d4d6:	jmp	0x1d500
0x1d4d8:	nop	dword ptr [rax + rax]
0x1d4e0:	mov	rbx, qword ptr [rbx + 8]
0x1d4e4:	test	rbx, rbx
0x1d4e7:	je	0x1d500
0x1d4e9:	cmp	dword ptr [rbx], ebp
0x1d4eb:	jne	0x1d4e0
0x1d4ed:	xor	eax, eax
0x1d4ef:	cmp	byte ptr [rbx + 0x10], 0
0x1d4f3:	je	0x1d4f9
0x1d4f5:	lea	rax, [rbx + 0x10]
0x1d4f9:	pop	rbx
0x1d4fa:	pop	rbp
0x1d4fb:	pop	r12
0x1d4fd:	ret	
0x1d4fe:	nop	
0x1d500:	mov	edi, ebp
0x1d502:	lea	r12, [rip + 0x4edc]
0x1d509:	call	0x4a10
0x1d50e:	mov	edi, 0x11
0x1d513:	test	rax, rax
0x1d516:	je	0x1d527
0x1d518:	mov	r12, qword ptr [rax]
0x1d51b:	mov	rdi, r12
0x1d51e:	call	0x49b0
0x1d523:	lea	rdi, [rax + 0x11]
0x1d527:	call	0x1d670
0x1d52c:	mov	rsi, r12
0x1d52f:	mov	dword ptr [rax], ebp
0x1d531:	lea	rdi, [rax + 0x10]
0x1d535:	mov	rbx, rax
0x1d538:	call	0x48b0
0x1d53d:	mov	rax, qword ptr [rip + 0xe5ec]
0x1d544:	mov	qword ptr [rip + 0xe5e5], rbx
0x1d54b:	mov	qword ptr [rbx + 8], rax
0x1d54f:	jmp	0x1d4ed
0x1d551:	nop	word ptr cs:[rax + rax]
0x1d55c:	nop	dword ptr [rax]
0x1d560:	endbr64	
0x1d564:	push	r12
0x1d566:	push	rbp
0x1d567:	mov	rbp, rdi
0x1d56a:	push	rbx
0x1d56b:	mov	rbx, qword ptr [rip + 0xe5be]
0x1d572:	test	rbx, rbx
0x1d575:	je	0x1d5b0
0x1d577:	movzx	r12d, byte ptr [rdi]
0x1d57b:	jmp	0x1d589
0x1d57d:	nop	dword ptr [rax]
0x1d580:	mov	rbx, qword ptr [rbx + 8]
0x1d584:	test	rbx, rbx
0x1d587:	je	0x1d5b0
0x1d589:	cmp	byte ptr [rbx + 0x10], r12b
0x1d58d:	jne	0x1d580
0x1d58f:	lea	rdi, [rbx + 0x10]
0x1d593:	mov	rsi, rbp
0x1d596:	call	0x4b30
0x1d59b:	test	eax, eax
0x1d59d:	jne	0x1d580
0x1d59f:	mov	r12, rbx
0x1d5a2:	pop	rbx
0x1d5a3:	pop	rbp
0x1d5a4:	mov	rax, r12
0x1d5a7:	pop	r12
0x1d5a9:	ret	
0x1d5aa:	nop	word ptr [rax + rax]
0x1d5b0:	mov	rbx, qword ptr [rip + 0xe571]
0x1d5b7:	test	rbx, rbx
0x1d5ba:	je	0x1d5f8
0x1d5bc:	movzx	r12d, byte ptr [rbp]
0x1d5c1:	jmp	0x1d5d1
0x1d5c3:	nop	dword ptr [rax + rax]
0x1d5c8:	mov	rbx, qword ptr [rbx + 8]
0x1d5cc:	test	rbx, rbx
0x1d5cf:	je	0x1d5f8
0x1d5d1:	cmp	byte ptr [rbx + 0x10], r12b
0x1d5d5:	jne	0x1d5c8
0x1d5d7:	lea	rdi, [rbx + 0x10]
0x1d5db:	mov	rsi, rbp
0x1d5de:	call	0x4b30
0x1d5e3:	test	eax, eax
0x1d5e5:	jne	0x1d5c8
0x1d5e7:	xor	r12d, r12d
0x1d5ea:	pop	rbx
0x1d5eb:	pop	rbp
0x1d5ec:	mov	rax, r12
0x1d5ef:	pop	r12
0x1d5f1:	ret	
0x1d5f2:	nop	word ptr [rax + rax]
0x1d5f8:	mov	rdi, rbp
0x1d5fb:	call	0x4bc0
0x1d600:	mov	rdi, rbp
0x1d603:	mov	r12, rax
0x1d606:	call	0x49b0
0x1d60b:	lea	rdi, [rax + 0x11]
0x1d60f:	call	0x1d670
0x1d614:	mov	rsi, rbp
0x1d617:	lea	rdi, [rax + 0x10]
0x1d61b:	mov	rbx, rax
0x1d61e:	call	0x48b0
0x1d623:	test	r12, r12
0x1d626:	je	0x1d650
0x1d628:	mov	eax, dword ptr [r12 + 0x10]
0x1d62d:	mov	dword ptr [rbx], eax
0x1d62f:	mov	rax, qword ptr [rip + 0xe4fa]
0x1d636:	mov	qword ptr [rip + 0xe4f3], rbx
0x1d63d:	mov	qword ptr [rbx + 8], rax
0x1d641:	jmp	0x1d59f
0x1d646:	nop	word ptr cs:[rax + rax]
0x1d650:	mov	rax, qword ptr [rip + 0xe4d1]
0x1d657:	mov	qword ptr [rip + 0xe4ca], rbx
0x1d65e:	mov	qword ptr [rbx + 8], rax
0x1d662:	mov	rax, r12
0x1d665:	pop	rbx
0x1d666:	pop	rbp
0x1d667:	pop	r12
0x1d669:	ret	
0x1d66a:	nop	word ptr [rax + rax]
0x1d670:	endbr64	
0x1d674:	push	rbx
0x1d675:	mov	rbx, rdi
0x1d678:	call	0x4c20
0x1d67d:	test	rax, rax
0x1d680:	jne	0x1d687
0x1d682:	test	rbx, rbx
0x1d685:	jne	0x1d689
0x1d687:	pop	rbx
0x1d688:	ret	
0x1d689:	call	0x18cf0
0x1d68e:	nop	
0x1d690:	endbr64	
0x1d694:	push	rbx
0x1d695:	mov	rbx, rsi
0x1d698:	call	0x4ce0
0x1d69d:	test	rax, rax
0x1d6a0:	jne	0x1d6a7
0x1d6a2:	test	rbx, rbx
0x1d6a5:	jne	0x1d6a9
0x1d6a7:	pop	rbx
0x1d6a8:	ret	
0x1d6a9:	call	0x18cf0
0x1d6ae:	nop	
0x1d6b0:	endbr64	
0x1d6b4:	push	rbx
0x1d6b5:	mov	rax, rsi
0x1d6b8:	mov	rsi, qword ptr [rsi]
0x1d6bb:	test	rdi, rdi
0x1d6be:	je	0x1d6f0
0x1d6c0:	movabs	rdx, 0xaaaaaaaaaaaaaaa9
0x1d6ca:	cmp	rsi, rdx
0x1d6cd:	ja	0x1d701
0x1d6cf:	lea	rdx, [rsi + 1]
0x1d6d3:	shr	rdx, 1
0x1d6d6:	add	rsi, rdx
0x1d6d9:	setne	bl
0x1d6dc:	mov	qword ptr [rax], rsi
0x1d6df:	call	0x4ce0
0x1d6e4:	test	rax, rax
0x1d6e7:	jne	0x1d6ed
0x1d6e9:	test	bl, bl
0x1d6eb:	jne	0x1d701
0x1d6ed:	pop	rbx
0x1d6ee:	ret	
0x1d6ef:	nop	
0x1d6f0:	mov	ebx, 1
0x1d6f5:	test	rsi, rsi
0x1d6f8:	jne	0x1d6dc
0x1d6fa:	mov	esi, 0x40
0x1d6ff:	jmp	0x1d6dc
0x1d701:	call	0x18cf0
0x1d706:	nop	word ptr cs:[rax + rax]
0x1d710:	endbr64	
0x1d714:	push	rbx
0x1d715:	mov	esi, 1
0x1d71a:	mov	rbx, rdi
0x1d71d:	call	0x4b10
0x1d722:	test	rax, rax
0x1d725:	jne	0x1d72c
0x1d727:	test	rbx, rbx
0x1d72a:	jne	0x1d72e
0x1d72c:	pop	rbx
0x1d72d:	ret	
0x1d72e:	call	0x18cf0
0x1d733:	nop	word ptr cs:[rax + rax]
0x1d73e:	nop	
0x1d740:	endbr64	
0x1d744:	sub	rsp, 8
0x1d748:	call	0x4b10
0x1d74d:	test	rax, rax
0x1d750:	je	0x1d757
0x1d752:	add	rsp, 8
0x1d756:	ret	
0x1d757:	call	0x18cf0
0x1d75c:	nop	dword ptr [rax]
0x1d760:	endbr64	
0x1d764:	push	r12
0x1d766:	mov	r12, rsi
0x1d769:	push	rbp
0x1d76a:	mov	rbp, rdi
0x1d76d:	mov	rdi, rsi
0x1d770:	sub	rsp, 8
0x1d774:	call	0x4c20
0x1d779:	mov	rdi, rax
0x1d77c:	test	rax, rax
0x1d77f:	jne	0x1d786
0x1d781:	test	r12, r12
0x1d784:	jne	0x1d798
0x1d786:	add	rsp, 8
0x1d78a:	mov	rdx, r12
0x1d78d:	mov	rsi, rbp
0x1d790:	pop	rbp
0x1d791:	pop	r12
0x1d793:	jmp	0x4bb0
0x1d798:	call	0x18cf0
0x1d79d:	nop	dword ptr [rax]
0x1d7a0:	endbr64	
0x1d7a4:	push	r12
0x1d7a6:	push	rbp
0x1d7a7:	mov	rbp, rdi
0x1d7aa:	sub	rsp, 8
0x1d7ae:	call	0x49b0
0x1d7b3:	lea	r12, [rax + 1]
0x1d7b7:	mov	rdi, r12
0x1d7ba:	call	0x4c20
0x1d7bf:	test	rax, rax
0x1d7c2:	je	0x1d7d9
0x1d7c4:	add	rsp, 8
0x1d7c8:	mov	rdx, r12
0x1d7cb:	mov	rsi, rbp
0x1d7ce:	mov	rdi, rax
0x1d7d1:	pop	rbp
0x1d7d2:	pop	r12
0x1d7d4:	jmp	0x4bb0
0x1d7d9:	call	0x18cf0
0x1d7de:	nop	
0x1d7e0:	endbr64	
0x1d7e4:	push	r15
0x1d7e6:	mov	r15, rsi
0x1d7e9:	push	r14
0x1d7eb:	mov	r14, rcx
0x1d7ee:	push	r13
0x1d7f0:	mov	r13d, edx
0x1d7f3:	push	r12
0x1d7f5:	mov	r12, r8
0x1d7f8:	push	rbp
0x1d7f9:	mov	rbp, rdi
0x1d7fc:	push	rbx
0x1d7fd:	sub	rsp, 0x28
0x1d801:	movzx	ebx, byte ptr [rdi]
0x1d804:	mov	rax, qword ptr fs:[0x28]
0x1d80d:	mov	qword ptr [rsp + 0x18], rax
0x1d812:	xor	eax, eax
0x1d814:	lea	rax, [rsp + 0x10]
0x1d819:	test	rsi, rsi
0x1d81c:	cmove	r15, rax
0x1d820:	call	0x4f00
0x1d825:	mov	rcx, qword ptr [rax]
0x1d828:	mov	rax, rbp
0x1d82b:	jmp	0x1d838
0x1d82d:	nop	dword ptr [rax]
0x1d830:	movzx	ebx, byte ptr [rax + 1]
0x1d834:	add	rax, 1
0x1d838:	movzx	edx, bl
0x1d83b:	test	byte ptr [rcx + rdx*2 + 1], 0x20
0x1d840:	jne	0x1d830
0x1d842:	cmp	bl, 0x2d
0x1d845:	je	0x1d8ca
0x1d84b:	call	0x4860
0x1d850:	mov	edx, r13d
0x1d853:	mov	rsi, r15
0x1d856:	mov	rdi, rbp
0x1d859:	mov	dword ptr [rax], 0
0x1d85f:	mov	qword ptr [rsp + 8], rax
0x1d864:	call	0x4dd0
0x1d869:	mov	r13, qword ptr [r15]
0x1d86c:	mov	rcx, qword ptr [rsp + 8]
0x1d871:	mov	rbx, rax
0x1d874:	cmp	r13, rbp
0x1d877:	je	0x1d8d8
0x1d879:	mov	eax, dword ptr [rcx]
0x1d87b:	test	eax, eax
0x1d87d:	jne	0x1d8c0
0x1d87f:	xor	ebp, ebp
0x1d881:	test	r12, r12
0x1d884:	je	0x1d893
0x1d886:	movzx	edx, byte ptr [r13]
0x1d88b:	test	dl, dl
0x1d88d:	jne	0x1d958
0x1d893:	mov	qword ptr [r14], rbx
0x1d896:	mov	rax, qword ptr [rsp + 0x18]
0x1d89b:	sub	rax, qword ptr fs:[0x28]
0x1d8a4:	jne	0x1dbf9
0x1d8aa:	add	rsp, 0x28
0x1d8ae:	mov	eax, ebp
0x1d8b0:	pop	rbx
0x1d8b1:	pop	rbp
0x1d8b2:	pop	r12
0x1d8b4:	pop	r13
0x1d8b6:	pop	r14
0x1d8b8:	pop	r15
0x1d8ba:	ret	
0x1d8bb:	nop	dword ptr [rax + rax]
0x1d8c0:	mov	ebp, 1
0x1d8c5:	cmp	eax, 0x22
0x1d8c8:	je	0x1d881
0x1d8ca:	mov	ebp, 4
0x1d8cf:	jmp	0x1d896
0x1d8d1:	nop	dword ptr [rax]
0x1d8d8:	test	r12, r12
0x1d8db:	je	0x1d8ca
0x1d8dd:	movzx	edx, byte ptr [rbp]
0x1d8e1:	test	dl, dl
0x1d8e3:	je	0x1d8ca
0x1d8e5:	movsx	esi, dl
0x1d8e8:	mov	rdi, r12
0x1d8eb:	mov	byte ptr [rsp + 8], dl
0x1d8ef:	xor	ebp, ebp
0x1d8f1:	call	0x4a00
0x1d8f6:	mov	ebx, 1
0x1d8fb:	movzx	edx, byte ptr [rsp + 8]
0x1d900:	test	rax, rax
0x1d903:	je	0x1d8ca
0x1d905:	mov	esi, 0x30
0x1d90a:	mov	rdi, r12
0x1d90d:	mov	byte ptr [rsp + 8], dl
0x1d911:	call	0x4a00
0x1d916:	movzx	edx, byte ptr [rsp + 8]
0x1d91b:	test	rax, rax
0x1d91e:	je	0x1d97c
0x1d920:	movzx	eax, byte ptr [r13 + 1]
0x1d925:	cmp	al, 0x44
0x1d927:	je	0x1d9a2
0x1d929:	cmp	al, 0x69
0x1d92b:	je	0x1dbe0
0x1d931:	cmp	al, 0x42
0x1d933:	je	0x1d9a2
0x1d935:	sub	edx, 0x42
0x1d938:	cmp	dl, 0x35
0x1d93b:	ja	0x1d971
0x1d93d:	lea	rcx, [rip + 0x4c0c]
0x1d944:	movzx	edx, dl
0x1d947:	movsxd	rax, dword ptr [rcx + rdx*4]
0x1d94b:	add	rax, rcx
0x1d94e:	jmp	rax
0x1d951:	 ----------
0x1d957:	 ----------
0x1d958:	movsx	esi, dl
0x1d95b:	mov	rdi, r12
0x1d95e:	mov	byte ptr [rsp + 8], dl
0x1d962:	call	0x4a00
0x1d967:	movzx	edx, byte ptr [rsp + 8]
0x1d96c:	test	rax, rax
0x1d96f:	jne	0x1d905
0x1d971:	mov	qword ptr [r14], rbx
0x1d974:	or	ebp, 2
0x1d977:	jmp	0x1d896
0x1d97c:	mov	esi, 1
0x1d981:	mov	ecx, 0x400
0x1d986:	sub	edx, 0x42
0x1d989:	cmp	dl, 0x35
0x1d98c:	ja	0x1d971
0x1d98e:	lea	rdi, [rip + 0x4c93]
0x1d995:	movzx	edx, dl
0x1d998:	movsxd	rax, dword ptr [rdi + rdx*4]
0x1d99c:	add	rax, rdi
0x1d99f:	jmp	rax
0x1d9a2:	mov	esi, 2
0x1d9a7:	mov	ecx, 0x3e8
0x1d9ac:	jmp	0x1d986
0x1d9ae:	movsxd	rsi, esi
0x1d9b1:	mov	edi, 4
0x1d9b6:	xor	r8d, r8d
0x1d9b9:	nop	dword ptr [rax]
0x1d9c0:	mov	rax, rbx
0x1d9c3:	mul	rcx
0x1d9c6:	mov	rbx, rax
0x1d9c9:	jo	0x1dc0e
0x1d9cf:	sub	edi, 1
0x1d9d2:	jne	0x1d9c0
0x1d9d4:	or	ebp, r8d
0x1d9d7:	add	rsi, r13
0x1d9da:	mov	eax, ebp
0x1d9dc:	or	eax, 2
0x1d9df:	mov	qword ptr [r15], rsi
0x1d9e2:	cmp	byte ptr [rsi], 0
0x1d9e5:	cmovne	ebp, eax
0x1d9e8:	jmp	0x1d893
0x1d9ed:	movsxd	rsi, esi
0x1d9f0:	mov	rax, rbx
0x1d9f3:	mul	rcx
0x1d9f6:	jo	0x1da13
0x1d9f8:	mul	rcx
0x1d9fb:	jo	0x1da13
0x1d9fd:	mov	rbx, rax
0x1da00:	jmp	0x1d9d7
0x1da02:	movsxd	rdx, ecx
0x1da05:	movsxd	rsi, esi
0x1da08:	mov	rax, rbx
0x1da0b:	mul	rdx
0x1da0e:	mov	rbx, rax
0x1da11:	jno	0x1d9d7
0x1da13:	mov	ebp, 1
0x1da18:	or	rbx, 0xffffffffffffffff
0x1da1c:	jmp	0x1d9d7
0x1da1e:	nop	
0x1da20:	movsxd	rsi, esi
0x1da23:	mov	rax, rbx
0x1da26:	mul	rcx
0x1da29:	jo	0x1dbfe
0x1da2f:	mul	rcx
0x1da32:	jo	0x1dbfe
0x1da38:	mul	rcx
0x1da3b:	jo	0x1dbfe
0x1da41:	mov	rbx, rax
0x1da44:	xor	eax, eax
0x1da46:	or	ebp, eax
0x1da48:	jmp	0x1d9d7
0x1da4a:	movsxd	rsi, esi
0x1da4d:	mov	edi, 5
0x1da52:	xor	r8d, r8d
0x1da55:	nop	dword ptr [rax]
0x1da58:	mov	rax, rbx
0x1da5b:	mul	rcx
0x1da5e:	mov	rbx, rax
0x1da61:	jo	0x1dc1d
0x1da67:	sub	edi, 1
0x1da6a:	jne	0x1da58
0x1da6c:	jmp	0x1d9d4
0x1da71:	movsxd	rsi, esi
0x1da74:	mov	edi, 6
0x1da79:	xor	r8d, r8d
0x1da7c:	nop	dword ptr [rax]
0x1da80:	mov	rax, rbx
0x1da83:	mul	rcx
0x1da86:	mov	rbx, rax
0x1da89:	jo	0x1dc2c
0x1da8f:	sub	edi, 1
0x1da92:	jne	0x1da80
0x1da94:	jmp	0x1d9d4
0x1da99:	movsxd	rsi, esi
0x1da9c:	mov	rax, rbx
0x1da9f:	shr	rax, 0x36
0x1daa3:	jne	0x1da13
0x1daa9:	shl	rbx, 0xa
0x1daad:	jmp	0x1d9d7
0x1dab2:	movsxd	rsi, esi
0x1dab5:	mov	edi, 8
0x1daba:	xor	r8d, r8d
0x1dabd:	nop	dword ptr [rax]
0x1dac0:	mov	rax, rbx
0x1dac3:	mul	rcx
0x1dac6:	mov	rbx, rax
0x1dac9:	jo	0x1dc3b
0x1dacf:	sub	edi, 1
0x1dad2:	jne	0x1dac0
0x1dad4:	jmp	0x1d9d4
0x1dad9:	movsxd	rsi, esi
0x1dadc:	test	rbx, rbx
0x1dadf:	js	0x1da13
0x1dae5:	add	rbx, rbx
0x1dae8:	jmp	0x1d9d7
0x1daed:	movsxd	rsi, esi
0x1daf0:	mov	rax, rbx
0x1daf3:	shr	rax, 0x37
0x1daf7:	jne	0x1da13
0x1dafd:	shl	rbx, 9
0x1db01:	jmp	0x1d9d7
0x1db06:	movsxd	rsi, esi
0x1db09:	mov	edi, 7
0x1db0e:	xor	r8d, r8d
0x1db11:	nop	dword ptr [rax]
0x1db18:	mov	rax, rbx
0x1db1b:	mul	rcx
0x1db1e:	mov	rbx, rax
0x1db21:	jo	0x1dc4a
0x1db27:	sub	edi, 1
0x1db2a:	jne	0x1db18
0x1db2c:	jmp	0x1d9d4
0x1db31:	movsxd	rsi, esi
0x1db34:	jmp	0x1d9d7
0x1db39:	mov	esi, 1
0x1db3e:	mov	ecx, 0x400
0x1db43:	jmp	0x1d9b1
0x1db48:	mov	esi, 1
0x1db4d:	mov	ecx, 0x400
0x1db52:	jmp	0x1d9f0
0x1db57:	mov	esi, 1
0x1db5c:	mov	edx, 0x400
0x1db61:	jmp	0x1da08
0x1db66:	mov	esi, 1
0x1db6b:	mov	ecx, 0x400
0x1db70:	jmp	0x1da23
0x1db75:	mov	esi, 1
0x1db7a:	mov	ecx, 0x400
0x1db7f:	jmp	0x1dab5
0x1db84:	mov	esi, 1
0x1db89:	mov	ecx, 0x400
0x1db8e:	jmp	0x1da4d
0x1db93:	mov	esi, 1
0x1db98:	mov	ecx, 0x400
0x1db9d:	jmp	0x1da74
0x1dba2:	mov	esi, 1
0x1dba7:	jmp	0x1da9c
0x1dbac:	mov	esi, 1
0x1dbb1:	jmp	0x1dadc
0x1dbb6:	mov	esi, 1
0x1dbbb:	jmp	0x1d9d7
0x1dbc0:	mov	esi, 1
0x1dbc5:	jmp	0x1daf0
0x1dbca:	mov	esi, 1
0x1dbcf:	mov	ecx, 0x400
0x1dbd4:	jmp	0x1db09
0x1dbd9:	nop	dword ptr [rax]
0x1dbe0:	xor	esi, esi
0x1dbe2:	cmp	byte ptr [r13 + 2], 0x42
0x1dbe7:	mov	ecx, 0x400
0x1dbec:	sete	sil
0x1dbf0:	lea	esi, [rsi + rsi + 1]
0x1dbf4:	jmp	0x1d986
0x1dbf9:	call	0x49d0
0x1dbfe:	mov	eax, 1
0x1dc03:	or	rbx, 0xffffffffffffffff
0x1dc07:	or	ebp, eax
0x1dc09:	jmp	0x1d9d7
0x1dc0e:	mov	r8d, 1
0x1dc14:	or	rbx, 0xffffffffffffffff
0x1dc18:	jmp	0x1d9cf
0x1dc1d:	mov	r8d, 1
0x1dc23:	or	rbx, 0xffffffffffffffff
0x1dc27:	jmp	0x1da67
0x1dc2c:	mov	r8d, 1
0x1dc32:	or	rbx, 0xffffffffffffffff
0x1dc36:	jmp	0x1da8f
0x1dc3b:	mov	r8d, 1
0x1dc41:	or	rbx, 0xffffffffffffffff
0x1dc45:	jmp	0x1dacf
0x1dc4a:	mov	r8d, 1
0x1dc50:	or	rbx, 0xffffffffffffffff
0x1dc54:	jmp	0x1db27
0x1dc59:	nop	dword ptr [rax]
0x1dc60:	endbr64	
0x1dc64:	push	rax
0x1dc65:	pop	rax
0x1dc66:	sub	rsp, 8
0x1dc6a:	mov	edi, dword ptr [rip + 0xcb90]
0x1dc70:	call	0x4e20
0x1dc75:	nop	word ptr cs:[rax + rax]
0x1dc80:	endbr64	
0x1dc84:	push	r15
0x1dc86:	push	r14
0x1dc88:	mov	r14, rdi
0x1dc8b:	push	r13
0x1dc8d:	mov	r13, rcx
0x1dc90:	push	r12
0x1dc92:	push	rbp
0x1dc93:	mov	rbp, rdx
0x1dc96:	push	rbx
0x1dc97:	mov	rbx, rsi
0x1dc9a:	sub	rsp, 0x28
0x1dc9e:	mov	qword ptr [rsp + 8], rsi
0x1dca3:	mov	qword ptr [rsp + 0x18], rdx
0x1dca8:	call	0x49b0
0x1dcad:	mov	r15, qword ptr [rbx]
0x1dcb0:	test	r15, r15
0x1dcb3:	je	0x1dd86
0x1dcb9:	mov	byte ptr [rsp + 0x17], 0
0x1dcbe:	mov	r12, rax
0x1dcc1:	xor	ebx, ebx
0x1dcc3:	mov	qword ptr [rsp], -1
0x1dccb:	jmp	0x1dd18
0x1dccd:	nop	dword ptr [rax]
0x1dcd0:	mov	rax, qword ptr [rsp + 0x18]
0x1dcd5:	test	rax, rax
0x1dcd8:	je	0x1dd48
0x1dcda:	mov	rdi, qword ptr [rsp]
0x1dcde:	mov	rdx, r13
0x1dce1:	mov	rsi, rbp
0x1dce4:	imul	rdi, r13
0x1dce8:	add	rdi, rax
0x1dceb:	call	0x4af0
0x1dcf0:	mov	ecx, 1
0x1dcf5:	test	eax, eax
0x1dcf7:	movzx	eax, byte ptr [rsp + 0x17]
0x1dcfc:	cmovne	eax, ecx
0x1dcff:	mov	byte ptr [rsp + 0x17], al
0x1dd03:	mov	rax, qword ptr [rsp + 8]
0x1dd08:	add	rbx, 1
0x1dd0c:	add	rbp, r13
0x1dd0f:	mov	r15, qword ptr [rax + rbx*8]
0x1dd13:	test	r15, r15
0x1dd16:	je	0x1dd50
0x1dd18:	mov	rdx, r12
0x1dd1b:	mov	rsi, r14
0x1dd1e:	mov	rdi, r15
0x1dd21:	call	0x4890
0x1dd26:	test	eax, eax
0x1dd28:	jne	0x1dd03
0x1dd2a:	mov	rdi, r15
0x1dd2d:	call	0x49b0
0x1dd32:	cmp	rax, r12
0x1dd35:	je	0x1dd80
0x1dd37:	cmp	qword ptr [rsp], -1
0x1dd3c:	jne	0x1dcd0
0x1dd3e:	mov	qword ptr [rsp], rbx
0x1dd42:	jmp	0x1dd03
0x1dd44:	nop	dword ptr [rax]
0x1dd48:	mov	byte ptr [rsp + 0x17], 1
0x1dd4d:	jmp	0x1dd03
0x1dd4f:	nop	
0x1dd50:	cmp	byte ptr [rsp + 0x17], 0
0x1dd55:	mov	rax, -2
0x1dd5c:	cmove	rax, qword ptr [rsp]
0x1dd61:	mov	qword ptr [rsp], rax
0x1dd65:	mov	rax, qword ptr [rsp]
0x1dd69:	add	rsp, 0x28
0x1dd6d:	pop	rbx
0x1dd6e:	pop	rbp
0x1dd6f:	pop	r12
0x1dd71:	pop	r13
0x1dd73:	pop	r14
0x1dd75:	pop	r15
0x1dd77:	ret	
0x1dd78:	nop	dword ptr [rax + rax]
0x1dd80:	mov	qword ptr [rsp], rbx
0x1dd84:	jmp	0x1dd65
0x1dd86:	mov	qword ptr [rsp], -1
0x1dd8e:	jmp	0x1dd65
0x1dd90:	endbr64	
0x1dd94:	push	r13
0x1dd96:	cmp	rdx, -1
0x1dd9a:	mov	r13, rsi
0x1dd9d:	lea	rax, [rip + 0x4977]
0x1dda4:	push	r12
0x1dda6:	mov	rsi, rdi
0x1dda9:	lea	r12, [rip + 0x4950]
0x1ddb0:	mov	edi, 1
0x1ddb5:	push	rbx
0x1ddb6:	cmovne	r12, rax
0x1ddba:	call	0x1e000
0x1ddbf:	mov	rdx, r13
0x1ddc2:	mov	esi, 5
0x1ddc7:	xor	edi, edi
0x1ddc9:	mov	rbx, rax
0x1ddcc:	call	0x1ee20
0x1ddd1:	mov	r8, rbx
0x1ddd4:	mov	rdx, r12
0x1ddd7:	pop	rbx
0x1ddd8:	mov	rcx, rax
0x1dddb:	pop	r12
0x1dddd:	xor	esi, esi
0x1dddf:	xor	edi, edi
0x1dde1:	xor	eax, eax
0x1dde3:	pop	r13
0x1dde5:	jmp	0x4d50
0x1ddea:	nop	word ptr [rax + rax]
0x1ddf0:	endbr64	
0x1ddf4:	push	r15
0x1ddf6:	push	r14
0x1ddf8:	lea	r14, [rip + 0x494e]
0x1ddff:	push	r13
0x1de01:	xor	r13d, r13d
0x1de04:	push	r12
0x1de06:	mov	r12, rdx
0x1de09:	mov	edx, 0x14
0x1de0e:	push	rbp
0x1de0f:	mov	rbp, rsi
0x1de12:	mov	esi, 1
0x1de17:	push	rbx
0x1de18:	mov	rbx, rdi
0x1de1b:	sub	rsp, 0x18
0x1de1f:	mov	rcx, qword ptr [rip + 0xca5a]
0x1de26:	mov	qword ptr [rsp + 8], rdi
0x1de2b:	lea	rdi, [rip + 0x4906]
0x1de32:	call	0x4e40
0x1de37:	mov	r15, qword ptr [rbx]
0x1de3a:	xor	ebx, ebx
0x1de3c:	test	r15, r15
0x1de3f:	jne	0x1de75
0x1de41:	jmp	0x1dec0
0x1de43:	nop	dword ptr [rax + rax]
0x1de48:	mov	rcx, r15
0x1de4b:	mov	rdx, r14
0x1de4e:	mov	esi, 1
0x1de53:	mov	rdi, r8
0x1de56:	xor	eax, eax
0x1de58:	mov	r13, rbp
0x1de5b:	call	0x4e60
0x1de60:	mov	rax, qword ptr [rsp + 8]
0x1de65:	add	rbx, 1
0x1de69:	add	rbp, r12
0x1de6c:	mov	r15, qword ptr [rax + rbx*8]
0x1de70:	test	r15, r15
0x1de73:	je	0x1dec0
0x1de75:	mov	r8, qword ptr [rip + 0xca04]
0x1de7c:	test	rbx, rbx
0x1de7f:	je	0x1de48
0x1de81:	mov	rdx, r12
0x1de84:	mov	rsi, rbp
0x1de87:	mov	rdi, r13
0x1de8a:	mov	qword ptr [rsp], r8
0x1de8e:	call	0x4af0
0x1de93:	mov	r8, qword ptr [rsp]
0x1de97:	test	eax, eax
0x1de99:	jne	0x1de48
0x1de9b:	mov	rcx, r15
0x1de9e:	lea	rdx, [rip + 0x48b2]
0x1dea5:	mov	rdi, r8
0x1dea8:	xor	eax, eax
0x1deaa:	mov	esi, 1
0x1deaf:	call	0x4e60
0x1deb4:	jmp	0x1de60
0x1deb6:	nop	word ptr cs:[rax + rax]
0x1dec0:	mov	rsi, qword ptr [rip + 0xc9b9]
0x1dec7:	add	rsp, 0x18
0x1decb:	mov	edi, 0xa
0x1ded0:	pop	rbx
0x1ded1:	pop	rbp
0x1ded2:	pop	r12
0x1ded4:	pop	r13
0x1ded6:	pop	r14
0x1ded8:	pop	r15
0x1deda:	jmp	0x4b40
0x1dedf:	nop	
0x1dee0:	endbr64	
0x1dee4:	push	r15
0x1dee6:	mov	r15, rsi
0x1dee9:	push	r14
0x1deeb:	mov	r14, r8
0x1deee:	push	r13
0x1def0:	mov	r13, rdi
0x1def3:	mov	rdi, r15
0x1def6:	push	r12
0x1def8:	mov	r12, rcx
0x1defb:	mov	rcx, r8
0x1defe:	push	rbp
0x1deff:	mov	rbp, rdx
0x1df02:	mov	rdx, r12
0x1df05:	push	rbx
0x1df06:	mov	rsi, rbp
0x1df09:	mov	rbx, r9
0x1df0c:	sub	rsp, 0x18
0x1df10:	call	0x1dc80
0x1df15:	test	rax, rax
0x1df18:	js	0x1df30
0x1df1a:	add	rsp, 0x18
0x1df1e:	pop	rbx
0x1df1f:	pop	rbp
0x1df20:	pop	r12
0x1df22:	pop	r13
0x1df24:	pop	r14
0x1df26:	pop	r15
0x1df28:	ret	
0x1df29:	nop	dword ptr [rax]
0x1df30:	cmp	rax, -1
0x1df34:	lea	r9, [rip + 0x47c5]
0x1df3b:	mov	rsi, r13
0x1df3e:	mov	edi, 1
0x1df43:	lea	rax, [rip + 0x47d1]
0x1df4a:	cmovne	r9, rax
0x1df4e:	mov	qword ptr [rsp + 8], r9
0x1df53:	call	0x1e000
0x1df58:	mov	rdx, r15
0x1df5b:	mov	esi, 5
0x1df60:	xor	edi, edi
0x1df62:	mov	r13, rax
0x1df65:	call	0x1ee20
0x1df6a:	mov	rdx, qword ptr [rsp + 8]
0x1df6f:	mov	r8, r13
0x1df72:	xor	esi, esi
0x1df74:	mov	rcx, rax
0x1df77:	xor	edi, edi
0x1df79:	xor	eax, eax
0x1df7b:	call	0x4d50
0x1df80:	mov	rdx, r14
0x1df83:	mov	rsi, r12
0x1df86:	mov	rdi, rbp
0x1df89:	call	0x1ddf0
0x1df8e:	call	rbx
0x1df90:	mov	rax, -1
0x1df97:	jmp	0x1df1a
0x1df99:	nop	dword ptr [rax]
0x1dfa0:	endbr64	
0x1dfa4:	push	r14
0x1dfa6:	push	r13
0x1dfa8:	push	r12
0x1dfaa:	push	rbp
0x1dfab:	push	rbx
0x1dfac:	mov	r14, qword ptr [rsi]
0x1dfaf:	test	r14, r14
0x1dfb2:	je	0x1dfe9
0x1dfb4:	mov	r12, rdi
0x1dfb7:	mov	r13, rcx
0x1dfba:	lea	rbx, [rsi + 8]
0x1dfbe:	mov	rbp, rdx
0x1dfc1:	jmp	0x1dfd7
0x1dfc3:	nop	dword ptr [rax + rax]
0x1dfc8:	mov	r14, qword ptr [rbx]
0x1dfcb:	add	rbp, r13
0x1dfce:	add	rbx, 8
0x1dfd2:	test	r14, r14
0x1dfd5:	je	0x1dfe9
0x1dfd7:	mov	rdx, r13
0x1dfda:	mov	rsi, rbp
0x1dfdd:	mov	rdi, r12
0x1dfe0:	call	0x4af0
0x1dfe5:	test	eax, eax
0x1dfe7:	jne	0x1dfc8
0x1dfe9:	pop	rbx
0x1dfea:	mov	rax, r14
0x1dfed:	pop	rbp
0x1dfee:	pop	r12
0x1dff0:	pop	r13
0x1dff2:	pop	r14
0x1dff4:	ret	
0x1dff5:	nop	word ptr cs:[rax + rax]
0x1dfff:	nop	
0x1e000:	endbr64	
0x1e004:	mov	rdx, rsi
0x1e007:	mov	esi, 5
0x1e00c:	jmp	0x1ee20
0x1e011:	nop	word ptr cs:[rax + rax]
0x1e01c:	nop	dword ptr [rax]
0x1e020:	endbr64	
0x1e024:	mov	rdx, rdi
0x1e027:	mov	esi, 5
0x1e02c:	xor	edi, edi
0x1e02e:	jmp	0x1ee20
0x1e033:	nop	word ptr cs:[rax + rax]
0x1e03d:	nop	dword ptr [rax]
0x1e040:	push	r15
0x1e042:	push	r14
0x1e044:	push	r13
0x1e046:	mov	r13, rcx
0x1e049:	push	r12
0x1e04b:	push	rbp
0x1e04c:	push	rbx
0x1e04d:	mov	ebx, r8d
0x1e050:	sub	rsp, 0x88
0x1e057:	mov	qword ptr [rsp + 8], rdi
0x1e05c:	mov	qword ptr [rsp + 0x30], rsi
0x1e061:	mov	qword ptr [rsp + 0x20], rdx
0x1e066:	mov	dword ptr [rsp + 0x10], r8d
0x1e06b:	mov	qword ptr [rsp + 0x18], r9
0x1e070:	mov	rax, qword ptr fs:[0x28]
0x1e079:	mov	qword ptr [rsp + 0x78], rax
0x1e07e:	xor	eax, eax
0x1e080:	call	0x49a0
0x1e085:	cmp	ebx, 4
0x1e088:	mov	r11, qword ptr [rsp + 0x20]
0x1e08d:	mov	r10, qword ptr [rsp + 0x30]
0x1e092:	mov	qword ptr [rsp + 0x28], rax
0x1e097:	jne	0x1e832
0x1e09d:	mov	qword ptr [rsp + 0x20], 0
0x1e0a6:	mov	r8d, 1
0x1e0ac:	xor	r9d, r9d
0x1e0af:	nop	
0x1e0b0:	mov	rbx, r9
0x1e0b3:	xor	r12d, r12d
0x1e0b6:	nop	word ptr cs:[rax + rax]
0x1e0c0:	cmp	r13, r12
0x1e0c3:	setne	al
0x1e0c6:	cmp	r13, -1
0x1e0ca:	jne	0x1e0d4
0x1e0cc:	cmp	byte ptr [r11 + r12], 0
0x1e0d1:	setne	al
0x1e0d4:	test	al, al
0x1e0d6:	je	0x1e7ae
0x1e0dc:	lea	rsi, [r11 + r12]
0x1e0e0:	movzx	edx, byte ptr [rsi]
0x1e0e3:	test	r9, r9
0x1e0e6:	je	0x1e4b0
0x1e0ec:	test	r8b, r8b
0x1e0ef:	je	0x1e4b0
0x1e0f5:	lea	r14, [r12 + 1]
0x1e0fa:	mov	r15, r14
0x1e0fd:	cmp	r14, r13
0x1e100:	ja	0x1e120
0x1e102:	mov	rax, qword ptr [rsp + 0x20]
0x1e107:	cmp	byte ptr [rax], dl
0x1e109:	jne	0x1e120
0x1e10b:	cmp	rbx, r10
0x1e10e:	jae	0x1e11c
0x1e110:	mov	rax, qword ptr [rsp + 8]
0x1e115:	mov	byte ptr [rax + rbx], 0x5c
0x1e119:	movzx	edx, byte ptr [rsi]
0x1e11c:	add	rbx, 1
0x1e120:	mov	ebp, edx
0x1e122:	cmp	dl, 0x3f
0x1e125:	jg	0x1e458
0x1e12b:	test	dl, dl
0x1e12d:	js	0x1e240
0x1e133:	cmp	dl, 0x3f
0x1e136:	ja	0x1e240
0x1e13c:	lea	rcx, [rip + 0x464d]
0x1e143:	movzx	eax, dl
0x1e146:	movsxd	rax, dword ptr [rcx + rax*4]
0x1e14a:	add	rax, rcx
0x1e14d:	jmp	rax
0x1e150:	 ----------
0x1e1a3:	 ----------
0x1e1a4:	test	r8b, r8b
0x1e1a7:	je	0x1e9cf
0x1e1ad:	nop	dword ptr [rax]
0x1e1b0:	mov	edx, ebp
0x1e1b2:	mov	eax, 1
0x1e1b7:	mov	ecx, ebp
0x1e1b9:	mov	r12, r15
0x1e1bc:	shr	dl, 5
0x1e1bf:	shl	eax, cl
0x1e1c1:	movzx	edx, dl
0x1e1c4:	mov	rsi, qword ptr [rsp + 0x18]
0x1e1c9:	and	eax, dword ptr [rsi + rdx*4 + 4]
0x1e1cd:	je	0x1e1e1
0x1e1cf:	cmp	rbx, r10
0x1e1d2:	jae	0x1e1dd
0x1e1d4:	mov	rax, qword ptr [rsp + 8]
0x1e1d9:	mov	byte ptr [rax + rbx], 0x5c
0x1e1dd:	add	rbx, 1
0x1e1e1:	cmp	rbx, r10
0x1e1e4:	jae	0x1e1ef
0x1e1e6:	mov	rax, qword ptr [rsp + 8]
0x1e1eb:	mov	byte ptr [rax + rbx], bpl
0x1e1ef:	add	rbx, 1
0x1e1f3:	jmp	0x1e0c0
0x1e1f8:	cmp	dl, 0x7b
0x1e1fb:	je	0x1e72c
0x1e201:	cmp	dl, 0x7c
0x1e204:	jne	0x1e500
0x1e20a:	cmp	dword ptr [rsp + 0x10], 1
0x1e20f:	je	0x1e380
0x1e215:	lea	r15, [r12 + 1]
0x1e21a:	jmp	0x1e1a4
0x1e21c:	nop	dword ptr [rax]
0x1e220:	cmp	dl, 0x7d
0x1e223:	je	0x1e72c
0x1e229:	jle	0x1e727
0x1e22f:	cmp	dl, 0x7e
0x1e232:	je	0x1e365
0x1e238:	nop	dword ptr [rax + rax]
0x1e240:	cmp	qword ptr [rsp + 0x28], 1
0x1e246:	mov	byte ptr [rsp + 0x30], dl
0x1e24a:	jne	0x1e518
0x1e250:	mov	qword ptr [rsp + 0x50], r11
0x1e255:	mov	qword ptr [rsp + 0x48], r10
0x1e25a:	mov	byte ptr [rsp + 0x40], r8b
0x1e25f:	mov	qword ptr [rsp + 0x38], r9
0x1e264:	call	0x4f00
0x1e269:	movzx	edx, byte ptr [rsp + 0x30]
0x1e26e:	movzx	r8d, byte ptr [rsp + 0x40]
0x1e274:	mov	ecx, 1
0x1e279:	mov	rax, qword ptr [rax]
0x1e27c:	mov	r9, qword ptr [rsp + 0x38]
0x1e281:	mov	r10, qword ptr [rsp + 0x48]
0x1e286:	mov	r11, qword ptr [rsp + 0x50]
0x1e28b:	movzx	eax, word ptr [rax + rdx*2]
0x1e28f:	shr	ax, 0xe
0x1e293:	xor	eax, 1
0x1e296:	and	eax, r8d
0x1e299:	test	al, al
0x1e29b:	je	0x1e1a4
0x1e2a1:	mov	eax, r8d
0x1e2a4:	mov	rsi, qword ptr [rsp + 8]
0x1e2a9:	add	rcx, r12
0x1e2ac:	jmp	0x1e2c6
0x1e2ae:	nop	
0x1e2b0:	cmp	rbx, r10
0x1e2b3:	jae	0x1e2b9
0x1e2b5:	mov	byte ptr [rsi + rbx], bpl
0x1e2b9:	movzx	ebp, byte ptr [r11 + r14]
0x1e2be:	add	rbx, 1
0x1e2c2:	add	r14, 1
0x1e2c6:	test	al, al
0x1e2c8:	je	0x1e30a
0x1e2ca:	cmp	rbx, r10
0x1e2cd:	jae	0x1e2d3
0x1e2cf:	mov	byte ptr [rsi + rbx], 0x5c
0x1e2d3:	lea	rdx, [rbx + 1]
0x1e2d7:	cmp	r10, rdx
0x1e2da:	jbe	0x1e2e8
0x1e2dc:	mov	edx, ebp
0x1e2de:	shr	dl, 6
0x1e2e1:	add	edx, 0x30
0x1e2e4:	mov	byte ptr [rsi + rbx + 1], dl
0x1e2e8:	lea	rdx, [rbx + 2]
0x1e2ec:	cmp	r10, rdx
0x1e2ef:	jbe	0x1e300
0x1e2f1:	mov	edx, ebp
0x1e2f3:	shr	dl, 3
0x1e2f6:	and	edx, 7
0x1e2f9:	add	edx, 0x30
0x1e2fc:	mov	byte ptr [rsi + rbx + 2], dl
0x1e300:	and	ebp, 7
0x1e303:	add	rbx, 3
0x1e307:	add	ebp, 0x30
0x1e30a:	mov	r12, r14
0x1e30d:	cmp	r14, rcx
0x1e310:	jb	0x1e2b0
0x1e312:	jmp	0x1e1e1
0x1e317:	nop	word ptr [rax + rax]
0x1e320:	mov	eax, dword ptr [rsp + 0x10]
0x1e324:	cmp	eax, 1
0x1e327:	je	0x1e380
0x1e329:	cmp	eax, 3
0x1e32c:	je	0x1e760
0x1e332:	lea	r15, [r12 + 1]
0x1e337:	mov	ebp, 0x3f
0x1e33c:	jmp	0x1e1a4
0x1e341:	mov	ebp, 0x72
0x1e346:	cmp	dword ptr [rsp + 0x10], 1
0x1e34b:	je	0x1e380
0x1e34d:	mov	r12, r14
0x1e350:	jmp	0x1e1cf
0x1e355:	mov	ebp, 0x62
0x1e35a:	jmp	0x1e34d
0x1e35c:	nop	dword ptr [rax]
0x1e360:	mov	ebp, 0x23
0x1e365:	test	r12, r12
0x1e368:	jne	0x1e215
0x1e36e:	cmp	dword ptr [rsp + 0x10], 1
0x1e373:	jne	0x1e215
0x1e379:	nop	dword ptr [rax]
0x1e380:	mov	qword ptr [rsp + 0x20], r11
0x1e385:	mov	qword ptr [rsp + 0x10], r10
0x1e38a:	call	0x49a0
0x1e38f:	mov	r10, qword ptr [rsp + 0x10]
0x1e394:	mov	r11, qword ptr [rsp + 0x20]
0x1e399:	mov	qword ptr [rsp + 0x28], rax
0x1e39e:	lea	rax, [rip + 0x43b7]
0x1e3a5:	mov	dword ptr [rsp + 0x10], 2
0x1e3ad:	mov	r9d, 1
0x1e3b3:	xor	r8d, r8d
0x1e3b6:	mov	qword ptr [rsp + 0x20], rax
0x1e3bb:	test	r10, r10
0x1e3be:	je	0x1e0b0
0x1e3c4:	mov	rax, qword ptr [rsp + 8]
0x1e3c9:	mov	byte ptr [rax], 0x27
0x1e3cc:	jmp	0x1e0b0
0x1e3d1:	mov	ebp, 0x74
0x1e3d6:	jmp	0x1e346
0x1e3db:	mov	ebp, 0x66
0x1e3e0:	jmp	0x1e34d
0x1e3e5:	mov	r12, r14
0x1e3e8:	mov	ebp, 0x76
0x1e3ed:	jmp	0x1e1cf
0x1e3f2:	mov	r12, r14
0x1e3f5:	cmp	r10, rbx
0x1e3f8:	jbe	0x1e403
0x1e3fa:	mov	rax, qword ptr [rsp + 8]
0x1e3ff:	mov	byte ptr [rax + rbx], 0x5c
0x1e403:	lea	rax, [rbx + 1]
0x1e407:	cmp	r10, rax
0x1e40a:	jbe	0x1e416
0x1e40c:	mov	rax, qword ptr [rsp + 8]
0x1e411:	mov	byte ptr [rax + rbx + 1], 0x30
0x1e416:	lea	rax, [rbx + 2]
0x1e41a:	cmp	r10, rax
0x1e41d:	jbe	0x1e429
0x1e41f:	mov	rax, qword ptr [rsp + 8]
0x1e424:	mov	byte ptr [rax + rbx + 2], 0x30
0x1e429:	add	rbx, 3
0x1e42d:	mov	eax, 0x10000
0x1e432:	mov	edx, 1
0x1e437:	mov	ebp, 0x30
0x1e43c:	jmp	0x1e1c4
0x1e441:	mov	ebp, 0x61
0x1e446:	jmp	0x1e34d
0x1e44b:	mov	ebp, 0x6e
0x1e450:	jmp	0x1e346
0x1e455:	nop	dword ptr [rax]
0x1e458:	cmp	dl, 0x7a
0x1e45b:	jg	0x1e220
0x1e461:	cmp	dl, 0x40
0x1e464:	je	0x1e240
0x1e46a:	lea	ecx, [rbp - 0x41]
0x1e46d:	mov	eax, 1
0x1e472:	movabs	rdi, 0x3ffffff53ffffff
0x1e47c:	shl	rax, cl
0x1e47f:	test	rax, rdi
0x1e482:	jne	0x1e1b0
0x1e488:	test	eax, 0xa4000000
0x1e48d:	jne	0x1e20a
0x1e493:	cmp	bpl, 0x5c
0x1e497:	jne	0x1e240
0x1e49d:	cmp	dword ptr [rsp + 0x10], 1
0x1e4a2:	je	0x1e380
0x1e4a8:	jmp	0x1e34d
0x1e4ad:	nop	dword ptr [rax]
0x1e4b0:	mov	ebp, edx
0x1e4b2:	cmp	dl, 0x3f
0x1e4b5:	jg	0x1e6d8
0x1e4bb:	test	dl, dl
0x1e4bd:	js	0x1e500
0x1e4bf:	cmp	dl, 0x3f
0x1e4c2:	ja	0x1e500
0x1e4c4:	lea	rdi, [rip + 0x43c5]
0x1e4cb:	movzx	eax, dl
0x1e4ce:	movsxd	rax, dword ptr [rdi + rax*4]
0x1e4d2:	add	rax, rdi
0x1e4d5:	jmp	rax
0x1e4d8:	 ----------
0x1e4df:	 ----------
0x1e4e0:	cmp	dl, 0x7d
0x1e4e3:	je	0x1e72c
0x1e4e9:	jle	0x1e1f8
0x1e4ef:	cmp	dl, 0x7e
0x1e4f2:	je	0x1e365
0x1e4f8:	nop	dword ptr [rax + rax]
0x1e500:	lea	r14, [r12 + 1]
0x1e505:	cmp	qword ptr [rsp + 0x28], 1
0x1e50b:	mov	byte ptr [rsp + 0x30], dl
0x1e50f:	mov	r15, r14
0x1e512:	je	0x1e250
0x1e518:	mov	qword ptr [rsp + 0x70], 0
0x1e521:	lea	rcx, [rsp + 0x70]
0x1e526:	cmp	r13, -1
0x1e52a:	jne	0x1e574
0x1e52c:	mov	rdi, r11
0x1e52f:	mov	qword ptr [rsp + 0x58], r10
0x1e534:	mov	byte ptr [rsp + 0x50], r8b
0x1e539:	mov	qword ptr [rsp + 0x48], r9
0x1e53e:	mov	qword ptr [rsp + 0x40], rsi
0x1e543:	mov	qword ptr [rsp + 0x38], rcx
0x1e548:	mov	qword ptr [rsp + 0x30], r11
0x1e54d:	call	0x49b0
0x1e552:	mov	r10, qword ptr [rsp + 0x58]
0x1e557:	movzx	r8d, byte ptr [rsp + 0x50]
0x1e55d:	mov	r9, qword ptr [rsp + 0x48]
0x1e562:	mov	rsi, qword ptr [rsp + 0x40]
0x1e567:	mov	r13, rax
0x1e56a:	mov	rcx, qword ptr [rsp + 0x38]
0x1e56f:	mov	r11, qword ptr [rsp + 0x30]
0x1e574:	mov	rdx, r13
0x1e577:	lea	rdi, [rsp + 0x6c]
0x1e57c:	mov	qword ptr [rsp + 0x48], r11
0x1e581:	sub	rdx, r12
0x1e584:	mov	qword ptr [rsp + 0x40], r10
0x1e589:	mov	byte ptr [rsp + 0x38], r8b
0x1e58e:	mov	qword ptr [rsp + 0x30], r9
0x1e593:	mov	qword ptr [rsp + 0x58], rdx
0x1e598:	mov	qword ptr [rsp + 0x50], rsi
0x1e59d:	call	0x49f0
0x1e5a2:	mov	r9, qword ptr [rsp + 0x30]
0x1e5a7:	movzx	r8d, byte ptr [rsp + 0x38]
0x1e5ad:	test	rax, rax
0x1e5b0:	mov	r10, qword ptr [rsp + 0x40]
0x1e5b5:	mov	r11, qword ptr [rsp + 0x48]
0x1e5ba:	mov	rcx, rax
0x1e5bd:	je	0x1e1a4
0x1e5c3:	cmp	rax, -1
0x1e5c7:	je	0x1e828
0x1e5cd:	cmp	rax, -2
0x1e5d1:	mov	rsi, qword ptr [rsp + 0x50]
0x1e5d6:	mov	rdx, qword ptr [rsp + 0x58]
0x1e5db:	je	0x1e93b
0x1e5e1:	cmp	dword ptr [rsp + 0x10], 1
0x1e5e6:	je	0x1e95f
0x1e5ec:	mov	edi, dword ptr [rsp + 0x6c]
0x1e5f0:	mov	qword ptr [rsp + 0x50], r11
0x1e5f5:	mov	qword ptr [rsp + 0x48], r10
0x1e5fa:	mov	byte ptr [rsp + 0x40], r8b
0x1e5ff:	mov	qword ptr [rsp + 0x38], r9
0x1e604:	mov	qword ptr [rsp + 0x30], rcx
0x1e609:	call	0x4e80
0x1e60e:	movzx	r8d, byte ptr [rsp + 0x40]
0x1e614:	mov	rcx, qword ptr [rsp + 0x30]
0x1e619:	test	eax, eax
0x1e61b:	mov	r9, qword ptr [rsp + 0x38]
0x1e620:	mov	r10, qword ptr [rsp + 0x48]
0x1e625:	sete	al
0x1e628:	mov	r11, qword ptr [rsp + 0x50]
0x1e62d:	and	eax, r8d
0x1e630:	cmp	rcx, 1
0x1e634:	ja	0x1e2a4
0x1e63a:	jmp	0x1e299
0x1e63f:	mov	ebp, 0xc
0x1e644:	mov	eax, 0x66
0x1e649:	nop	dword ptr [rax]
0x1e650:	add	r12, 1
0x1e654:	test	r8b, r8b
0x1e657:	je	0x1e1e1
0x1e65d:	mov	ebp, eax
0x1e65f:	jmp	0x1e1cf
0x1e664:	nop	dword ptr [rax]
0x1e668:	mov	ebp, 0xb
0x1e66d:	mov	eax, 0x76
0x1e672:	jmp	0x1e650
0x1e674:	mov	ebp, 9
0x1e679:	mov	eax, 0x74
0x1e67e:	cmp	dword ptr [rsp + 0x10], 1
0x1e683:	jne	0x1e650
0x1e685:	jmp	0x1e380
0x1e68a:	nop	word ptr [rax + rax]
0x1e690:	add	r12, 1
0x1e694:	test	r8b, r8b
0x1e697:	jne	0x1e3f5
0x1e69d:	xor	ebp, ebp
0x1e69f:	jmp	0x1e1e1
0x1e6a4:	mov	ebp, 8
0x1e6a9:	mov	eax, 0x62
0x1e6ae:	jmp	0x1e650
0x1e6b0:	mov	ebp, 0xa
0x1e6b5:	mov	eax, 0x6e
0x1e6ba:	jmp	0x1e67e
0x1e6bc:	mov	ebp, 7
0x1e6c1:	mov	eax, 0x61
0x1e6c6:	jmp	0x1e650
0x1e6c8:	mov	ebp, 0xd
0x1e6cd:	mov	eax, 0x72
0x1e6d2:	jmp	0x1e67e
0x1e6d4:	nop	dword ptr [rax]
0x1e6d8:	cmp	dl, 0x7a
0x1e6db:	jg	0x1e4e0
0x1e6e1:	cmp	dl, 0x40
0x1e6e4:	je	0x1e500
0x1e6ea:	lea	ecx, [rbp - 0x41]
0x1e6ed:	mov	eax, 1
0x1e6f2:	movabs	rdi, 0x3ffffff53ffffff
0x1e6fc:	shl	rax, cl
0x1e6ff:	test	rax, rdi
0x1e702:	jne	0x1e215
0x1e708:	test	eax, 0xa4000000
0x1e70d:	jne	0x1e20a
0x1e713:	cmp	bpl, 0x5c
0x1e717:	jne	0x1e500
0x1e71d:	mov	eax, 0x5c
0x1e722:	jmp	0x1e67e
0x1e727:	cmp	dl, 0x7b
0x1e72a:	jne	0x1e750
0x1e72c:	cmp	r13, 1
0x1e730:	setne	al
0x1e733:	cmp	r13, -1
0x1e737:	jne	0x1e741
0x1e739:	cmp	byte ptr [r11 + 1], 0
0x1e73e:	setne	al
0x1e741:	test	al, al
0x1e743:	jne	0x1e215
0x1e749:	jmp	0x1e365
0x1e74e:	nop	
0x1e750:	cmp	dl, 0x7c
0x1e753:	je	0x1e20a
0x1e759:	jmp	0x1e240
0x1e75e:	nop	
0x1e760:	lea	rax, [r12 + 2]
0x1e765:	lea	r15, [r12 + 1]
0x1e76a:	mov	ebp, 0x3f
0x1e76f:	cmp	rax, r13
0x1e772:	jae	0x1e1a4
0x1e778:	cmp	byte ptr [r11 + r12 + 1], 0x3f
0x1e77e:	jne	0x1e1a4
0x1e784:	movzx	ebp, byte ptr [r11 + r12 + 2]
0x1e78a:	cmp	bpl, 0x3e
0x1e78e:	ja	0x1e7a4
0x1e790:	movabs	rax, 0x7000a38200000000
0x1e79a:	bt	rax, rbp
0x1e79e:	jb	0x1e8f9
0x1e7a4:	mov	ebp, 0x3f
0x1e7a9:	jmp	0x1e1a4
0x1e7ae:	test	r12, r12
0x1e7b1:	jne	0x1e7be
0x1e7b3:	cmp	dword ptr [rsp + 0x10], 1
0x1e7b8:	je	0x1e380
0x1e7be:	mov	rsi, qword ptr [rsp + 0x20]
0x1e7c3:	mov	rax, rbx
0x1e7c6:	test	rsi, rsi
0x1e7c9:	je	0x1e7f4
0x1e7cb:	movzx	edx, byte ptr [rsi]
0x1e7ce:	test	dl, dl
0x1e7d0:	je	0x1e7f4
0x1e7d2:	sub	rsi, rbx
0x1e7d5:	mov	rcx, rsi
0x1e7d8:	mov	rsi, qword ptr [rsp + 8]
0x1e7dd:	nop	dword ptr [rax]
0x1e7e0:	cmp	r10, rax
0x1e7e3:	jbe	0x1e7e8
0x1e7e5:	mov	byte ptr [rsi + rax], dl
0x1e7e8:	add	rax, 1
0x1e7ec:	movzx	edx, byte ptr [rcx + rax]
0x1e7f0:	test	dl, dl
0x1e7f2:	jne	0x1e7e0
0x1e7f4:	cmp	rax, r10
0x1e7f7:	jae	0x1e802
0x1e7f9:	mov	rsi, qword ptr [rsp + 8]
0x1e7fe:	mov	byte ptr [rsi + rax], 0
0x1e802:	mov	rdx, qword ptr [rsp + 0x78]
0x1e807:	sub	rdx, qword ptr fs:[0x28]
0x1e810:	jne	0x1e9ca
0x1e816:	add	rsp, 0x88
0x1e81d:	pop	rbx
0x1e81e:	pop	rbp
0x1e81f:	pop	r12
0x1e821:	pop	r13
0x1e823:	pop	r14
0x1e825:	pop	r15
0x1e827:	ret	
0x1e828:	mov	eax, r8d
0x1e82b:	xor	ecx, ecx
0x1e82d:	jmp	0x1e299
0x1e832:	mov	eax, dword ptr [rsp + 0x10]
0x1e836:	jbe	0x1e88a
0x1e838:	sub	eax, 5
0x1e83b:	cmp	eax, 1
0x1e83e:	ja	0x1e8c8
0x1e844:	cmp	dword ptr [rsp + 0x10], 6
0x1e849:	mov	edx, 0x60
0x1e84e:	mov	eax, 0x22
0x1e853:	cmovne	eax, edx
0x1e856:	lea	rcx, [rip + 0x2a3b]
0x1e85d:	lea	rdx, [rip + 0x3ef8]
0x1e864:	cmove	rdx, rcx
0x1e868:	mov	qword ptr [rsp + 0x20], rdx
0x1e86d:	test	r10, r10
0x1e870:	je	0x1e879
0x1e872:	mov	rsi, qword ptr [rsp + 8]
0x1e877:	mov	byte ptr [rsi], al
0x1e879:	mov	r8d, 1
0x1e87f:	mov	r9d, 1
0x1e885:	jmp	0x1e0b0
0x1e88a:	cmp	eax, 2
0x1e88d:	je	0x1e39e
0x1e893:	cmp	eax, 3
0x1e896:	jne	0x1e8c8
0x1e898:	test	r10, r10
0x1e89b:	je	0x1e8dc
0x1e89d:	mov	rax, qword ptr [rsp + 8]
0x1e8a2:	mov	r8d, 1
0x1e8a8:	mov	r9d, 1
0x1e8ae:	mov	byte ptr [rax], 0x22
0x1e8b1:	lea	rax, [rip + 0x29e0]
0x1e8b8:	mov	qword ptr [rsp + 0x20], rax
0x1e8bd:	jmp	0x1e0b0
0x1e8c2:	nop	word ptr [rax + rax]
0x1e8c8:	mov	qword ptr [rsp + 0x20], 0
0x1e8d1:	xor	r8d, r8d
0x1e8d4:	xor	r9d, r9d
0x1e8d7:	jmp	0x1e0b0
0x1e8dc:	lea	rax, [rip + 0x29b5]
0x1e8e3:	mov	r8d, 1
0x1e8e9:	mov	r9d, 1
0x1e8ef:	mov	qword ptr [rsp + 0x20], rax
0x1e8f4:	jmp	0x1e0b0
0x1e8f9:	cmp	r10, rbx
0x1e8fc:	jbe	0x1e907
0x1e8fe:	mov	rax, qword ptr [rsp + 8]
0x1e903:	mov	byte ptr [rax + rbx], 0x3f
0x1e907:	lea	rax, [rbx + 1]
0x1e90b:	cmp	r10, rax
0x1e90e:	jbe	0x1e91a
0x1e910:	mov	rax, qword ptr [rsp + 8]
0x1e915:	mov	byte ptr [rax + rbx + 1], 0x5c
0x1e91a:	lea	rax, [rbx + 2]
0x1e91e:	cmp	r10, rax
0x1e921:	jbe	0x1e92d
0x1e923:	mov	rax, qword ptr [rsp + 8]
0x1e928:	mov	byte ptr [rax + rbx + 2], 0x3f
0x1e92d:	add	rbx, 3
0x1e931:	lea	r15, [r12 + 3]
0x1e936:	jmp	0x1e1a4
0x1e93b:	xor	ecx, ecx
0x1e93d:	cmp	r13, r12
0x1e940:	ja	0x1e951
0x1e942:	jmp	0x1e9c2
0x1e944:	nop	dword ptr [rax]
0x1e948:	add	rcx, 1
0x1e94c:	cmp	rdx, rcx
0x1e94f:	je	0x1e957
0x1e951:	cmp	byte ptr [rsi + rcx], 0
0x1e955:	jne	0x1e948
0x1e957:	mov	eax, r8d
0x1e95a:	jmp	0x1e630
0x1e95f:	cmp	rax, 1
0x1e963:	je	0x1e5ec
0x1e969:	lea	rdx, [r11 + r14]
0x1e96d:	add	rsi, rax
0x1e970:	jmp	0x1e985
0x1e972:	nop	word ptr [rax + rax]
0x1e978:	add	rdx, 1
0x1e97c:	cmp	rsi, rdx
0x1e97f:	je	0x1e5ec
0x1e985:	movzx	eax, byte ptr [rdx]
0x1e988:	sub	eax, 0x5b
0x1e98b:	cmp	al, 0x21
0x1e98d:	ja	0x1e978
0x1e98f:	movabs	rdi, 0x20000002b
0x1e999:	bt	rdi, rax
0x1e99d:	jae	0x1e978
0x1e99f:	mov	qword ptr [rsp + 0x20], r10
0x1e9a4:	mov	qword ptr [rsp + 0x10], r11
0x1e9a9:	call	0x49a0
0x1e9ae:	mov	r11, qword ptr [rsp + 0x10]
0x1e9b3:	mov	r10, qword ptr [rsp + 0x20]
0x1e9b8:	mov	qword ptr [rsp + 0x28], rax
0x1e9bd:	jmp	0x1e39e
0x1e9c2:	mov	eax, r8d
0x1e9c5:	jmp	0x1e299
0x1e9ca:	call	0x49d0
0x1e9cf:	mov	r12, r15
0x1e9d2:	jmp	0x1e1e1
0x1e9d7:	nop	word ptr [rax + rax]
0x1e9e0:	push	r15
0x1e9e2:	mov	r15d, edi
0x1e9e5:	push	r14
0x1e9e7:	push	r13
0x1e9e9:	mov	r13, rdx
0x1e9ec:	push	r12
0x1e9ee:	mov	r12, rsi
0x1e9f1:	push	rbp
0x1e9f2:	mov	rbp, rcx
0x1e9f5:	push	rbx
0x1e9f6:	sub	rsp, 0x28
0x1e9fa:	call	0x4860
0x1e9ff:	mov	r14, qword ptr [rip + 0xbe0a]
0x1ea06:	mov	rbx, rax
0x1ea09:	mov	eax, dword ptr [rax]
0x1ea0b:	mov	dword ptr [rsp + 0xc], eax
0x1ea0f:	test	r15d, r15d
0x1ea12:	js	0x4f2a
0x1ea18:	cmp	dword ptr [rip + 0xbde5], r15d
0x1ea1f:	mov	r10d, dword ptr [rsp + 0xc]
0x1ea24:	ja	0x1ea89
0x1ea26:	lea	edx, [r15 + 1]
0x1ea2a:	lea	rax, [rip + 0xbdef]
0x1ea31:	mov	rsi, rdx
0x1ea34:	mov	dword ptr [rsp + 0x10], edx
0x1ea38:	shl	rsi, 4
0x1ea3c:	cmp	r14, rax
0x1ea3f:	je	0x1eb40
0x1ea45:	mov	rdi, r14
0x1ea48:	mov	qword ptr [rsp + 0x18], rdx
0x1ea4d:	call	0x1d690
0x1ea52:	mov	rdx, qword ptr [rsp + 0x18]
0x1ea57:	mov	qword ptr [rip + 0xbdb2], rax
0x1ea5e:	mov	r14, rax
0x1ea61:	mov	edi, dword ptr [rip + 0xbd9d]
0x1ea67:	xor	esi, esi
0x1ea69:	sub	rdx, rdi
0x1ea6c:	shl	rdi, 4
0x1ea70:	shl	rdx, 4
0x1ea74:	add	rdi, r14
0x1ea77:	call	0x4a50
0x1ea7c:	mov	eax, dword ptr [rsp + 0x10]
0x1ea80:	mov	r10d, dword ptr [rbx]
0x1ea83:	mov	dword ptr [rip + 0xbd7b], eax
0x1ea89:	movsxd	r8, r15d
0x1ea8c:	mov	r9, rbp
0x1ea8f:	mov	rcx, r13
0x1ea92:	mov	rdx, r12
0x1ea95:	shl	r8, 4
0x1ea99:	mov	dword ptr [rsp + 0x18], r10d
0x1ea9e:	lea	r15, [r14 + r8]
0x1eaa2:	mov	r8d, dword ptr [rbp]
0x1eaa6:	mov	r14, qword ptr [r15 + 8]
0x1eaaa:	mov	rsi, qword ptr [r15]
0x1eaad:	mov	rdi, r14
0x1eab0:	mov	qword ptr [rsp + 0x10], rsi
0x1eab5:	call	0x1e040
0x1eaba:	mov	r10d, dword ptr [rsp + 0x18]
0x1eabf:	mov	rsi, qword ptr [rsp + 0x10]
0x1eac4:	mov	dword ptr [rbx], r10d
0x1eac7:	cmp	rax, rsi
0x1eaca:	jb	0x1eb1f
0x1eacc:	lea	rsi, [rax + 1]
0x1ead0:	lea	rax, [rip + 0xd089]
0x1ead7:	mov	qword ptr [r15], rsi
0x1eada:	cmp	r14, rax
0x1eadd:	je	0x1eaf1
0x1eadf:	mov	rdi, r14
0x1eae2:	mov	qword ptr [rsp + 0x10], rsi
0x1eae7:	call	0x4800
0x1eaec:	mov	rsi, qword ptr [rsp + 0x10]
0x1eaf1:	mov	rdi, rsi
0x1eaf4:	mov	qword ptr [rsp + 0x10], rsi
0x1eaf9:	call	0x1d670
0x1eafe:	mov	r8d, dword ptr [rbp]
0x1eb02:	mov	r9, rbp
0x1eb05:	mov	rcx, r13
0x1eb08:	mov	qword ptr [r15 + 8], rax
0x1eb0c:	mov	rsi, qword ptr [rsp + 0x10]
0x1eb11:	mov	rdx, r12
0x1eb14:	mov	rdi, rax
0x1eb17:	mov	r14, rax
0x1eb1a:	call	0x1e040
0x1eb1f:	mov	eax, dword ptr [rsp + 0xc]
0x1eb23:	mov	dword ptr [rbx], eax
0x1eb25:	add	rsp, 0x28
0x1eb29:	mov	rax, r14
0x1eb2c:	pop	rbx
0x1eb2d:	pop	rbp
0x1eb2e:	pop	r12
0x1eb30:	pop	r13
0x1eb32:	pop	r14
0x1eb34:	pop	r15
0x1eb36:	ret	
0x1eb37:	nop	word ptr [rax + rax]
0x1eb40:	xor	edi, edi
0x1eb42:	mov	qword ptr [rsp + 0x18], rdx
0x1eb47:	call	0x1d690
0x1eb4c:	movdqa	xmm0, xmmword ptr [rip + 0xbccc]
0x1eb54:	mov	rdx, qword ptr [rsp + 0x18]
0x1eb59:	mov	qword ptr [rip + 0xbcb0], rax
0x1eb60:	mov	r14, rax
0x1eb63:	movups	xmmword ptr [rax], xmm0
0x1eb66:	jmp	0x1ea61
0x1eb6b:	nop	dword ptr [rax + rax]
0x1eb70:	endbr64	
0x1eb74:	push	r12
0x1eb76:	push	rbp
0x1eb77:	mov	rbp, rdi
0x1eb7a:	push	rbx
0x1eb7b:	call	0x4860
0x1eb80:	test	rbp, rbp
0x1eb83:	mov	esi, 0x24
0x1eb88:	mov	r12d, dword ptr [rax]
0x1eb8b:	mov	rbx, rax
0x1eb8e:	lea	rax, [rip + 0xd0cb]
0x1eb95:	cmove	rbp, rax
0x1eb99:	mov	rdi, rbp
0x1eb9c:	call	0x1d760
0x1eba1:	mov	dword ptr [rbx], r12d
0x1eba4:	pop	rbx
0x1eba5:	pop	rbp
0x1eba6:	pop	r12
0x1eba8:	ret	
0x1eba9:	nop	dword ptr [rax]
0x1ebb0:	endbr64	
0x1ebb4:	test	rdi, rdi
0x1ebb7:	lea	rax, [rip + 0xd0a2]
0x1ebbe:	cmove	rdi, rax
0x1ebc2:	mov	eax, dword ptr [rdi]
0x1ebc4:	ret	
0x1ebc5:	nop	word ptr cs:[rax + rax]
0x1ebd0:	endbr64	
0x1ebd4:	test	rdi, rdi
0x1ebd7:	lea	rax, [rip + 0xd082]
0x1ebde:	cmove	rdi, rax
0x1ebe2:	mov	dword ptr [rdi], esi
0x1ebe4:	ret	
0x1ebe5:	nop	word ptr cs:[rax + rax]
0x1ebf0:	endbr64	
0x1ebf4:	test	rdi, rdi
0x1ebf7:	lea	rax, [rip + 0xd062]
0x1ebfe:	mov	ecx, esi
0x1ec00:	cmove	rdi, rax
0x1ec04:	mov	eax, esi
0x1ec06:	and	ecx, 0x1f
0x1ec09:	shr	al, 5
0x1ec0c:	movzx	eax, al
0x1ec0f:	lea	rsi, [rdi + rax*4 + 4]
0x1ec14:	mov	edi, dword ptr [rsi]
0x1ec16:	mov	eax, edi
0x1ec18:	shr	eax, cl
0x1ec1a:	xor	edx, eax
0x1ec1c:	and	eax, 1
0x1ec1f:	and	edx, 1
0x1ec22:	shl	edx, cl
0x1ec24:	xor	edx, edi
0x1ec26:	mov	dword ptr [rsi], edx
0x1ec28:	ret	
0x1ec29:	nop	dword ptr [rax]
0x1ec30:	endbr64	
0x1ec34:	push	r15
0x1ec36:	lea	rax, [rip + 0xd023]
0x1ec3d:	push	r14
0x1ec3f:	mov	r14, rdx
0x1ec42:	push	r13
0x1ec44:	mov	r13, rsi
0x1ec47:	push	r12
0x1ec49:	mov	r12, rdi
0x1ec4c:	push	rbp
0x1ec4d:	push	rbx
0x1ec4e:	mov	rbx, r8
0x1ec51:	sub	rsp, 0x18
0x1ec55:	test	r8, r8
0x1ec58:	cmove	rbx, rax
0x1ec5c:	mov	qword ptr [rsp + 8], rcx
0x1ec61:	call	0x4860
0x1ec66:	mov	rcx, qword ptr [rsp + 8]
0x1ec6b:	mov	rdx, r14
0x1ec6e:	mov	rsi, r13
0x1ec71:	mov	r15d, dword ptr [rax]
0x1ec74:	mov	r8d, dword ptr [rbx]
0x1ec77:	mov	rbp, rax
0x1ec7a:	mov	r9, rbx
0x1ec7d:	mov	rdi, r12
0x1ec80:	call	0x1e040
0x1ec85:	mov	dword ptr [rbp], r15d
0x1ec89:	add	rsp, 0x18
0x1ec8d:	pop	rbx
0x1ec8e:	pop	rbp
0x1ec8f:	pop	r12
0x1ec91:	pop	r13
0x1ec93:	pop	r14
0x1ec95:	pop	r15
0x1ec97:	ret	
0x1ec98:	nop	dword ptr [rax + rax]
0x1eca0:	endbr64	
0x1eca4:	push	r15
0x1eca6:	mov	r15, rdi
0x1eca9:	push	r14
0x1ecab:	mov	r14, rsi
0x1ecae:	push	r13
0x1ecb0:	push	r12
0x1ecb2:	push	rbp
0x1ecb3:	push	rbx
0x1ecb4:	mov	rbx, rdx
0x1ecb7:	sub	rsp, 0x18
0x1ecbb:	call	0x4860
0x1ecc0:	test	rbx, rbx
0x1ecc3:	mov	rcx, r14
0x1ecc6:	mov	rdx, r15
0x1ecc9:	mov	r12d, dword ptr [rax]
0x1eccc:	mov	rbp, rax
0x1eccf:	lea	rax, [rip + 0xcf8a]
0x1ecd6:	cmove	rbx, rax
0x1ecda:	xor	esi, esi
0x1ecdc:	xor	edi, edi
0x1ecde:	mov	r8d, dword ptr [rbx]
0x1ece1:	mov	r9, rbx
0x1ece4:	call	0x1e040
0x1ece9:	mov	dword ptr [rbp], r12d
0x1eced:	lea	r13, [rax + 1]
0x1ecf1:	mov	dword ptr [rsp + 0xc], r12d
0x1ecf6:	mov	rdi, r13
0x1ecf9:	call	0x1d670
0x1ecfe:	mov	r8d, dword ptr [rbx]
0x1ed01:	mov	r9, rbx
0x1ed04:	mov	rcx, r14
0x1ed07:	mov	rdx, r15
0x1ed0a:	mov	rsi, r13
0x1ed0d:	mov	rdi, rax
0x1ed10:	mov	r12, rax
0x1ed13:	call	0x1e040
0x1ed18:	mov	eax, dword ptr [rsp + 0xc]
0x1ed1c:	mov	dword ptr [rbp], eax
0x1ed1f:	add	rsp, 0x18
0x1ed23:	mov	rax, r12
0x1ed26:	pop	rbx
0x1ed27:	pop	rbp
0x1ed28:	pop	r12
0x1ed2a:	pop	r13
0x1ed2c:	pop	r14
0x1ed2e:	pop	r15
0x1ed30:	ret	
0x1ed31:	nop	word ptr cs:[rax + rax]
0x1ed3c:	nop	dword ptr [rax]
0x1ed40:	endbr64	
0x1ed44:	mov	eax, dword ptr [rip + 0xbaba]
0x1ed4a:	push	r12
0x1ed4c:	mov	r12, qword ptr [rip + 0xbabd]
0x1ed53:	push	rbp
0x1ed54:	push	rbx
0x1ed55:	cmp	eax, 1
0x1ed58:	jbe	0x1ed81
0x1ed5a:	sub	eax, 2
0x1ed5d:	lea	rbx, [r12 + 0x18]
0x1ed62:	shl	rax, 4
0x1ed66:	lea	rbp, [r12 + rax + 0x28]
0x1ed6b:	nop	dword ptr [rax + rax]
0x1ed70:	mov	rdi, qword ptr [rbx]
0x1ed73:	add	rbx, 0x10
0x1ed77:	call	0x4800
0x1ed7c:	cmp	rbx, rbp
0x1ed7f:	jne	0x1ed70
0x1ed81:	mov	rdi, qword ptr [r12 + 8]
0x1ed86:	lea	rbx, [rip + 0xcdd3]
0x1ed8d:	cmp	rdi, rbx
0x1ed90:	je	0x1eda9
0x1ed92:	call	0x4800
0x1ed97:	mov	qword ptr [rip + 0xba8a], rbx
0x1ed9e:	mov	qword ptr [rip + 0xba77], 0x100
0x1eda9:	lea	rbx, [rip + 0xba70]
0x1edb0:	cmp	r12, rbx
0x1edb3:	je	0x1edc4
0x1edb5:	mov	rdi, r12
0x1edb8:	call	0x4800
0x1edbd:	mov	qword ptr [rip + 0xba4c], rbx
0x1edc4:	mov	dword ptr [rip + 0xba36], 1
0x1edce:	pop	rbx
0x1edcf:	pop	rbp
0x1edd0:	pop	r12
0x1edd2:	ret	
0x1edd3:	nop	word ptr cs:[rax + rax]
0x1edde:	nop	
0x1ede0:	endbr64	
0x1ede4:	lea	rcx, [rip + 0xce75]
0x1edeb:	mov	rdx, -1
0x1edf2:	jmp	0x1e9e0
0x1edf7:	nop	word ptr [rax + rax]
0x1ee00:	endbr64	
0x1ee04:	mov	rsi, rdi
0x1ee07:	lea	rcx, [rip + 0xce52]
0x1ee0e:	mov	rdx, -1
0x1ee15:	xor	edi, edi
0x1ee17:	jmp	0x1e9e0
0x1ee1c:	nop	dword ptr [rax]
0x1ee20:	endbr64	
0x1ee24:	sub	rsp, 0x68
0x1ee28:	mov	r8d, esi
0x1ee2b:	pxor	xmm0, xmm0
0x1ee2f:	mov	rsi, rdx
0x1ee32:	mov	rax, qword ptr fs:[0x28]
0x1ee3b:	mov	qword ptr [rsp + 0x58], rax
0x1ee40:	xor	eax, eax
0x1ee42:	movups	xmmword ptr [rsp + 0x34], xmm0
0x1ee47:	mov	rdx, -1
0x1ee4e:	mov	rcx, rsp
0x1ee51:	movups	xmmword ptr [rsp + 0x44], xmm0
0x1ee56:	movdqa	xmm2, xmmword ptr [rsp + 0x40]
0x1ee5c:	mov	eax, dword ptr [rsp + 0x50]
0x1ee60:	mov	dword ptr [rsp + 0x30], r8d
0x1ee65:	movdqa	xmm1, xmmword ptr [rsp + 0x30]
0x1ee6b:	mov	dword ptr [rsp + 0x20], eax
0x1ee6f:	movaps	xmmword ptr [rsp], xmm1
0x1ee73:	movaps	xmmword ptr [rsp + 0x10], xmm2
0x1ee78:	call	0x1e9e0
0x1ee7d:	mov	rdx, qword ptr [rsp + 0x58]
0x1ee82:	sub	rdx, qword ptr fs:[0x28]
0x1ee8b:	jne	0x1ee92
0x1ee8d:	add	rsp, 0x68
0x1ee91:	ret	
0x1ee92:	call	0x49d0
0x1ee97:	nop	word ptr [rax + rax]
0x1eea0:	endbr64	
0x1eea4:	sub	rsp, 0x68
0x1eea8:	mov	r8d, esi
0x1eeab:	pxor	xmm0, xmm0
0x1eeaf:	mov	rsi, rdx
0x1eeb2:	mov	rax, qword ptr fs:[0x28]
0x1eebb:	mov	qword ptr [rsp + 0x58], rax
0x1eec0:	xor	eax, eax
0x1eec2:	movups	xmmword ptr [rsp + 0x34], xmm0
0x1eec7:	mov	rdx, rcx
0x1eeca:	mov	rcx, rsp
0x1eecd:	movups	xmmword ptr [rsp + 0x44], xmm0
0x1eed2:	movdqa	xmm2, xmmword ptr [rsp + 0x40]
0x1eed8:	mov	eax, dword ptr [rsp + 0x50]
0x1eedc:	mov	dword ptr [rsp + 0x30], r8d
0x1eee1:	movdqa	xmm1, xmmword ptr [rsp + 0x30]
0x1eee7:	mov	dword ptr [rsp + 0x20], eax
0x1eeeb:	movaps	xmmword ptr [rsp], xmm1
0x1eeef:	movaps	xmmword ptr [rsp + 0x10], xmm2
0x1eef4:	call	0x1e9e0
0x1eef9:	mov	rdx, qword ptr [rsp + 0x58]
0x1eefe:	sub	rdx, qword ptr fs:[0x28]
0x1ef07:	jne	0x1ef0e
0x1ef09:	add	rsp, 0x68
0x1ef0d:	ret	
0x1ef0e:	call	0x49d0
0x1ef13:	nop	word ptr cs:[rax + rax]
0x1ef1e:	nop	
0x1ef20:	endbr64	
0x1ef24:	sub	rsp, 0x68
0x1ef28:	pxor	xmm0, xmm0
0x1ef2c:	mov	rdx, -1
0x1ef33:	mov	rax, qword ptr fs:[0x28]
0x1ef3c:	mov	qword ptr [rsp + 0x58], rax
0x1ef41:	xor	eax, eax
0x1ef43:	mov	dword ptr [rsp + 0x30], edi
0x1ef47:	mov	rcx, rsp
0x1ef4a:	xor	edi, edi
0x1ef4c:	movups	xmmword ptr [rsp + 0x34], xmm0
0x1ef51:	movdqa	xmm1, xmmword ptr [rsp + 0x30]
0x1ef57:	movups	xmmword ptr [rsp + 0x44], xmm0
0x1ef5c:	movdqa	xmm2, xmmword ptr [rsp + 0x40]
0x1ef62:	mov	eax, dword ptr [rsp + 0x50]
0x1ef66:	movaps	xmmword ptr [rsp], xmm1
0x1ef6a:	mov	dword ptr [rsp + 0x20], eax
0x1ef6e:	movaps	xmmword ptr [rsp + 0x10], xmm2
0x1ef73:	call	0x1e9e0
0x1ef78:	mov	rdx, qword ptr [rsp + 0x58]
0x1ef7d:	sub	rdx, qword ptr fs:[0x28]
0x1ef86:	jne	0x1ef8d
0x1ef88:	add	rsp, 0x68
0x1ef8c:	ret	
0x1ef8d:	call	0x49d0
0x1ef92:	nop	word ptr cs:[rax + rax]
0x1ef9d:	nop	dword ptr [rax]
0x1efa0:	endbr64	
0x1efa4:	sub	rsp, 0x38
0x1efa8:	movdqa	xmm0, xmmword ptr [rip + 0xccb0]
0x1efb0:	movdqa	xmm1, xmmword ptr [rip + 0xccb8]
0x1efb8:	mov	ecx, esi
0x1efba:	mov	rax, qword ptr fs:[0x28]
0x1efc3:	mov	qword ptr [rsp + 0x28], rax
0x1efc8:	xor	eax, eax
0x1efca:	mov	eax, dword ptr [rip + 0xccb0]
0x1efd0:	and	ecx, 0x1f
0x1efd3:	mov	r9, rsp
0x1efd6:	movaps	xmmword ptr [rsp], xmm0
0x1efda:	mov	dword ptr [rsp + 0x20], eax
0x1efde:	mov	eax, esi
0x1efe0:	shr	al, 5
0x1efe3:	movaps	xmmword ptr [rsp + 0x10], xmm1
0x1efe8:	movzx	eax, al
0x1efeb:	lea	rdx, [rsp + rax*4 + 4]
0x1eff0:	mov	esi, dword ptr [rdx]
0x1eff2:	mov	eax, esi
0x1eff4:	shr	eax, cl
0x1eff6:	not	eax
0x1eff8:	and	eax, 1
0x1effb:	shl	eax, cl
0x1effd:	mov	rcx, r9
0x1f000:	xor	eax, esi
0x1f002:	mov	rsi, rdi
0x1f005:	xor	edi, edi
0x1f007:	mov	dword ptr [rdx], eax
0x1f009:	mov	rdx, -1
0x1f010:	call	0x1e9e0
0x1f015:	mov	rdx, qword ptr [rsp + 0x28]
0x1f01a:	sub	rdx, qword ptr fs:[0x28]
0x1f023:	jne	0x1f02a
0x1f025:	add	rsp, 0x38
0x1f029:	ret	
0x1f02a:	call	0x49d0
0x1f02f:	nop	
0x1f030:	endbr64	
0x1f034:	mov	esi, 0x3a
0x1f039:	jmp	0x1efa0
