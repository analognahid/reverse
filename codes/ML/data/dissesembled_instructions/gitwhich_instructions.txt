endbr64 ;xor ebp, ebp;mov r9, rdx;pop rsi;mov rdx, rsp;and rsp, 0xfffffffffffffff0;push rax;push rsp;xor r8d, r8d;xor ecx, ecx;lea rdi, [rip + 0x21f];call qword ptr [rip + 0x2e13];
endbr64 ;push rbp;mov rbp, rsp;sub rsp, 0x10;mov qword ptr [rbp - 8], rdi;mov qword ptr [rbp - 8], 0;mov edi, 1;call 0x1190;endbr64 ;push rbp;mov rbp, rsp;push rbx;sub rsp, 0x38;mov qword ptr [rbp - 0x38], rdi;mov qword ptr [rbp - 0x40], rsi;mov dword ptr [rbp - 0x28], 0;mov rax, qword ptr [rbp - 0x40];mov qword ptr [rbp - 0x20], rax;jmp 0x13c0;mov dword ptr [rbp - 0x24], 0;jmp 0x12e6;add dword ptr [rbp - 0x24], 1;add qword ptr [rbp - 0x20], 1;mov rax, qword ptr [rbp - 0x20];movzx eax, byte ptr [rax];cmp al, 0x3a;je 0x12fc;mov rax, qword ptr [rbp - 0x20];movzx eax, byte ptr [rax];test al, al;jne 0x12dd;mov rax, qword ptr [rbp - 0x20];movzx eax, byte ptr [rax];mov byte ptr [rbp - 0x29], al;mov rax, qword ptr [rbp - 0x20];mov byte ptr [rax], 0;mov eax, dword ptr [rbp - 0x24];cdqe ;neg rax;mov rdx, rax;mov rax, qword ptr [rbp - 0x20];add rax, rdx;mov rdi, rax;call 0x1120;mov rbx, rax;mov rax, qword ptr [rbp - 0x38];mov rdi, rax;call 0x1120;add rax, rbx;add rax, 2;mov rdi, rax;call 0x14a0;mov qword ptr [rbp - 0x18], rax;mov eax, dword ptr [rbp - 0x24];cdqe ;neg rax;mov rdx, rax;mov rax, qword ptr [rbp - 0x20];lea rsi, [rdx + rax];mov rdx, qword ptr [rbp - 0x38];mov rax, qword ptr [rbp - 0x18];mov rcx, rdx;mov rdx, rsi;lea rsi, [rip + 0xc93];mov rdi, rax;mov eax, 0;call 0x1180;mov rax, qword ptr [rbp - 0x20];movzx edx, byte ptr [rbp - 0x29];mov byte ptr [rax], dl;mov rax, qword ptr [rbp - 0x20];movzx eax, byte ptr [rax];test al, al;je 0x1398;add qword ptr [rbp - 0x20], 1;mov rax, qword ptr [rbp - 0x18];mov esi, 1;mov rdi, rax;call 0x1170;test eax, eax;sete al;movzx eax, al;mov dword ptr [rbp - 0x28], eax;mov rax, qword ptr [rbp - 0x18];mov rdi, rax;call 0x1467;mov rax, qword ptr [rbp - 0x20];movzx eax, byte ptr [rax];test al, al;je 0x13d5;cmp dword ptr [rbp - 0x28], 0;je 0x12d4;mov eax, dword ptr [rbp - 0x28];mov rbx, qword ptr [rbp - 8];leave ;
endbr64 ;push rbp;mov rbp, rsp;sub rsp, 0x20;mov dword ptr [rbp - 0x14], edi;mov qword ptr [rbp - 0x20], rsi;lea rax, [rip + 0xc12];mov rdi, rax;call 0x10f0;mov qword ptr [rbp - 8], rax;sub dword ptr [rbp - 0x14], 1;add qword ptr [rbp - 0x20], 8;jmp 0x143e;mov rax, qword ptr [rbp - 0x20];mov rax, qword ptr [rax];mov rdx, qword ptr [rbp - 8];mov rsi, rdx;mov rdi, rax;mov eax, 0;call 0x12ab;test eax, eax;je 0x1435;mov eax, 0;jmp 0x1449;sub dword ptr [rbp - 0x14], 1;add qword ptr [rbp - 0x20], 8;cmp dword ptr [rbp - 0x14], 0;jne 0x140f;mov eax, 1;leave ;
endbr64 ;push rbp;mov rbp, rsp;lea rax, [rip + 0xbb5];mov rdi, rax;call 0x1289;call 0x1110;endbr64 ;push rbp;mov rbp, rsp;sub rsp, 0x10;mov qword ptr [rbp - 8], rdi;cmp qword ptr [rbp - 8], 0;je 0x148c;mov rax, qword ptr [rbp - 8];mov rdi, rax;call 0x1100;jmp 0x149b;lea rax, [rip + 0xb95];mov rdi, rax;call 0x1289;nop ;leave ;
nop ;endbr64 ;push rbx;mov rbx, rdi;call 0x1150;test rax, rax;jne 0x14b7;test rbx, rbx;jne 0x14b9;pop rbx;ret ;call 0x144b;nop ;endbr64 ;push rbx;mov rbx, rsi;call 0x1160;test rax, rax;jne 0x14d7;test rbx, rbx;jne 0x14d9;pop rbx;ret ;call 0x144b;nop ;endbr64 ;push rbx;mov rax, rsi;mov rsi, qword ptr [rsi];test rdi, rdi;je 0x1520;movabs rdx, 0xaaaaaaaaaaaaaaa9;cmp rsi, rdx;ja 0x1531;lea rdx, [rsi + 1];shr rdx, 1;add rsi, rdx;setne bl;mov qword ptr [rax], rsi;call 0x1160;test rax, rax;jne 0x151d;test bl, bl;jne 0x1531;pop rbx;ret ;
mov ebx, 1;test rsi, rsi;jne 0x150c;mov esi, 0x40;jmp 0x150c;call 0x144b;nop word ptr cs:[rax + rax];endbr64 ;push rbx;mov esi, 1;mov rbx, rdi;call 0x1130;test rax, rax;jne 0x155c;test rbx, rbx;jne 0x155e;pop rbx;ret ;call 0x144b;nop word ptr cs:[rax + rax];nop ;endbr64 ;sub rsp, 8;call 0x1130;test rax, rax;je 0x1587;add rsp, 8;ret ;call 0x144b;nop dword ptr [rax];endbr64 ;push r12;mov r12, rsi;push rbp;mov rbp, rdi;mov rdi, rsi;sub rsp, 8;call 0x1150;mov rdi, rax;test rax, rax;jne 0x15b6;test r12, r12;jne 0x15c8;add rsp, 8;mov rdx, r12;mov rsi, rbp;pop rbp;pop r12;jmp 0x1140;call 0x144b;nop dword ptr [rax];endbr64 ;push r12;push rbp;mov rbp, rdi;sub rsp, 8;call 0x1120;lea r12, [rax + 1];mov rdi, r12;call 0x1150;test rax, rax;je 0x1609;add rsp, 8;mov rdx, r12;mov rsi, rbp;mov rdi, rax;pop rbp;pop r12;jmp 0x1140;call 0x144b;add byte ptr [rax], al;endbr64 ;sub rsp, 8;add rsp, 8;ret ;